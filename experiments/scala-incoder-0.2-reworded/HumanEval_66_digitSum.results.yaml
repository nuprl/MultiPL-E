language: scala
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\n\
    \        {\n            sum += s.charAt(i).toInt\n            i += 1\n       \
    \ }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpurex_nb9.scala:32)\n\tat Problem.main(tmpurex_nb9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val d = c.toInt\n            sum += d\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpama7ki5f.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += d\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjm8ubukp.scala:29)\n\tat Problem.main(tmpjm8ubukp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= 'A' && c <= 'Z') {\n\
    \                sum += c - 'A' + 1\n            }\n            i += 1\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprz6luax_.scala:34)\n\tat Problem.main(tmprz6luax_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c.toLong\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqivt120z.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += c.toLong\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toChar.asDigit\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvgxib8s1.scala:28)\n\tat Problem.main(tmpvgxib8s1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0L\n        for(i <- 0 until s.length)\n     \
    \       if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxlxxm5d4.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpxlxxm5d4.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer.empty[Long]\n        for\
    \ (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <=\
    \ 'Z')\n                result += s.charAt(i) - 'A' + 1\n        return result.toList.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph9yksv22.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795056
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= 'A' && c <= 'Z') {\n\
    \                sum += c - 'A' + 1\n            }\n            i += 1\n     \
    \   }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprz6luax_.scala:34)\n\tat Problem.main(tmprz6luax_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val digit = c.toInt\n            sum\
    \ += digit\n        }\n        sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) ==\
    \ (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz0pcinqf.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw_5ca4xp.scala:29)\n\tat Problem.main(tmpw_5ca4xp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var lastChar = s.charAt(s.length -\
    \ 1)\n        var lastCharCode = lastChar.toInt\n        var lastCharCode = lastCharCode\
    \ + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n   \
    \     var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastCharCode\n\
    \        var lastCharCode = lastCharCode + lastCharCode\n        var lastCharCode\
    \ = lastCharCode + lastCharCode\n        var lastCharCode = lastCharCode + lastChar\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplw6e146n.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplw6e146n.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplw6e146n.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplw6e146n.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + lastCharCode\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlastCharCode is already defined as \e[33mvariable\e[0m \e\
    [35mlastCharCode\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplw6e146n.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastCharCode\
    \ + last"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toChar.asDigit\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvgxib8s1.scala:28)\n\tat Problem.main(tmpvgxib8s1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr9cnjnz9.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp741pdakf.scala:34)\n\tat Problem.main(tmp741pdakf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        var sum = 0\n \
    \       for (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z')\n                sum += s.charAt(i) - 'A' + 1\n            else\n  \
    \              sum += s.charAt(i)\n        result += sum\n        result\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqsp2tefj.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpygt60lea.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw_5ca4xp.scala:29)\n\tat Problem.main(tmpw_5ca4xp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n    \
    \        sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgsyzqjae.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp741pdakf.scala:34)\n\tat Problem.main(tmp741pdakf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr9cnjnz9.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr9cnjnz9.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer.empty[Long]\n        for\
    \ (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <=\
    \ 'Z')\n                result += s.charAt(i) - 'A'\n        result.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyepu0o6b.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu549rhko.scala:28)\n\tat Problem.main(tmpu549rhko.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjm8ubukp.scala:29)\n\tat Problem.main(tmpjm8ubukp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu549rhko.scala:28)\n\tat Problem.main(tmpu549rhko.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val code = c.toInt\n            sum +=\
    \ code\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmznvfu3z.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += code\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp741pdakf.scala:34)\n\tat Problem.main(tmp741pdakf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        var sum = 0\n \
    \       for (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z')\n                sum += s.charAt(i) - 'A' + 1\n            else\n  \
    \              sum += s.charAt(i)\n        result += (sum % 10)\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjxlbsdj4.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795064
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toChar.asDigit\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpghhwhtlo.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toChar.asDigit\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).toChar.asDigit\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf7w7c28w.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toChar.asDigit\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795066
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjm8ubukp.scala:29)\n\tat Problem.main(tmpjm8ubukp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s(i) >= 'A' && s(i) <= 'Z')\n                result\
    \ += s(i) - 'A'\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ixli9xk.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length)\n            if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n      \
    \          result += s.charAt(i) - 'A'\n        return result.toLong\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6205xlzy.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795066
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp741pdakf.scala:34)\n\tat Problem.main(tmp741pdakf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            val digit = c.toInt\n      \
    \      sum += digit\n            i += 1\n        }\n        sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprmy3jcyk.scala:33)\n\tat Problem.main(tmprmy3jcyk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795068
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu549rhko.scala:28)\n\tat Problem.main(tmpu549rhko.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\n\
    \            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum\
    \ += s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \            i += 1\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpba4cetg0.scala:33)\n\tat Problem.main(tmpba4cetg0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length){\n\
    \            val c = s.charAt(i)\n            if (c >= '0' && c <= '9'){\n   \
    \             sum += c - '0'\n            }\n            i += 1\n        }\n \
    \       sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvp7plo11.scala:34)\n\tat Problem.main(tmpvp7plo11.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795068
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0L\n        for (i <- 0 until s.length)\n    \
    \        if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfjofnuj9.scala:31)\n\tat Problem.main(tmpfjofnuj9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n     \
    \           result += s.charAt(i)\n        return result.toLong\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpspy8ygpn.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      sum += s.charAt(i).asDigit\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpk7dtc6v5.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).asDigit\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i)\n        sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp810563om.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu549rhko.scala:28)\n\tat Problem.main(tmpu549rhko.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length)\n            if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n      \
    \          result += s.charAt(i) - 'A' + 1\n        return result\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0zta6z_2.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795066
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val digit = c.toInt\n            sum\
    \ += digit\n        }\n        sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) ==\
    \ (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz0pcinqf.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyzo80107.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var lastChar = s.charAt(s.length -\
    \ 1)\n        var lastCharCode = lastChar.codePoint\n        for(i <- 0 until\
    \ s.length){\n            val c = s.charAt(i)\n            val cCode = c.codePoint\n\
    \            if(cCode > lastCharCode){\n                sum += cCode - lastCharCode\n\
    \                lastChar = c\n                lastCharCode = cCode\n        \
    \    }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6o23l4fw.scala:23:36 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mvar\e[0m \e[36mlastCharCode\e[0m = lastChar.codePoint\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                           value codePoint is not a member of Char\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6o23l4fw.scala:26:26 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mval\e[0m \e[36mcCode\e[0m = c.codePoint\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        value codePoint is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val code = c.toInt\n            val upper\
    \ = code - 32\n            sum += upper\n        }\n        sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyq4uj5ic.scala:26:16 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            sum += upper\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            if(c >= 'A' && c <= 'Z'){\n         \
    \       sum += c - 'A' + 1\n            }\n        }\n        sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n \
    \   assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcwlmovm8.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                sum += c - \e[31m'A'\e[0m + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \         value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer[Long]()\n        for (i\
    \ <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \                result += s.charAt(i) - 'A'\n        return result.toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjpl28azr.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795066
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i)\n            else\n                sum += 'a'\n        sum\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbh7xz_kt.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpbh7xz_kt.scala:26:20 ------------------------\e[0m\e[0m\n\e[31m26 |\e\
    [0m                sum += \e[31m'a'\e[0m\n\e[31m\e[31m   |\e[0m              \
    \  ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member of Int\
    \ - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += (s.charAt(i) - 'A' + 1)\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2ebgkmtv.scala:28)\n\tat Problem.main(tmp2ebgkmtv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7jvzmhge.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c.isUpper) {\n         \
    \       sum += c.toInt\n            }\n            i += 1\n        }\n       \
    \ sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795070
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = new mutable.HashMap[Char, Long]()\n       \
    \ for (c <- s.toCharArray) {\n            if (result.contains(c)) {\n        \
    \        result(c) += 1\n            } else {\n                result.put(c, 1L)\n\
    \            }\n        }\n        result.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjqlm_495.scala:21:25 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw_5ca4xp.scala:29)\n\tat Problem.main(tmpw_5ca4xp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum += s.charAt(i)\
    \ - 'a'\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5sq8ug98.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7jvzmhge.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length){\n            val c = s.charAt(i)\n            val sum = c.toString.toLong\n\
    \            result += (sum % 10)\n        }\n        result.toLong\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppl2fxs3e.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795072
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0L\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c - '0'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq026odfc.scala:34)\n\tat Problem.main(tmpq026odfc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795074
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length){\n            val c = s.charAt(i)\n            if(c == 'A' || c ==\
    \ 'a'){\n                result += c.toLong\n            }\n        }\n      \
    \  result\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5zk1ag4x.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for(i <- 0 until\
    \ s.length){\n            val c = s.charAt(i)\n            result += (c.toInt\
    \ + (c.toInt.toLong % 26))\n        }\n        result.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjkrxoqt1.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyzo80107.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n     \
    \           result += s.charAt(i) - 'a'\n        return result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6k7g_vj7.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer[Long]()\n        var sum\
    \ = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A'\
    \ && s.charAt(i) <= 'Z')\n                sum += s.charAt(i) - 'A' + 1\n     \
    \       else\n                sum += s.charAt(i)\n        result.add(sum)\n  \
    \      result.sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3nu9virk.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        var sum = 0\n \
    \       for (i <- 0 until s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z')\n                sum += s.charAt(i) - 'A' + 1\n            else\n  \
    \              sum += s.charAt(i)\n        result += sum\n        result\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqsp2tefj.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyzo80107.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n    \
    \        if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyn710twj.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpyn710twj.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0L\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c.toLong\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpozbq7vdf.scala:34)\n\tat Problem.main(tmpozbq7vdf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= '0' && c <= '9') {\n\
    \                sum += c.toLong\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqivt120z.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += c.toLong\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length)\n      \
    \      if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum += s.charAt(i)\
    \ - 'A' + 1\n            else\n                sum += s.charAt(i)\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\")) ==\
    \ (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4m7fph27.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0L\n        for (i <- 0 until s.length)\n    \
    \        if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyn710twj.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpyn710twj.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Long - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val d = c.toInt\n            sum += d\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpama7ki5f.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += d\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer[Long]()\n        for (c\
    \ <- s.toCharArray) {\n            if (c.isUpper) {\n                result +=\
    \ c.toLong\n            }\n        }\n        val sum = result.reduce((x, y) =>\
    \ x + y)\n        sum.toLong\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxur1aykl.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7jvzmhge.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjm8ubukp.scala:29)\n\tat Problem.main(tmpjm8ubukp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toString.toInt\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7jvzmhge.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toString.toInt\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795070
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer.empty[Long]\n        for(i\
    \ <- 0 until s.length){\n            val c = s.charAt(i)\n            if(c >=\
    \ 'a' && c <= 'z'){\n                result += c.toLong\n            }\n     \
    \   }\n        result.toList.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n\
    \    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"helloE\"\
    )) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps_adkuuu.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n     \
    \           result += s.charAt(i) - 'A' + 1\n        return result\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdru5wsza.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for(i <- 0 until s.length){\n     \
    \       val c = s.charAt(i)\n            val digit = c.toInt\n            sum\
    \ += digit\n        }\n        sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\")) ==\
    \ (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz0pcinqf.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            sum += digit\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = new mutable.HashMap[Char, Long]()\n       \
    \ for (c <- s) {\n            val code = c.toInt\n            if (code < 48 ||\
    \ code > 57) {\n                result.put(c, 0L)\n            } else {\n    \
    \            result.put(c, result.getOrElse(c, 0L) + code)\n            }\n  \
    \      }\n        val sum = result.toSeq.sum\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpup5lga4_.scala:21:25 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw_5ca4xp.scala:29)\n\tat Problem.main(tmpw_5ca4xp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.ListBuffer[Long]()\n        for(i <-\
    \ 0 until s.length)\n        {\n            val c = s.charAt(i)\n            val\
    \ sum = c.toChar.toInt\n            val digit = sum % 10\n            result +=\
    \ (digit * Math.pow(10, result.length))\n        }\n        result.toList.reduceLeft(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"\
    )) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8antov9.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\n\
    \        {\n            val c = s.charAt(i)\n            val d = c.toInt\n   \
    \         sum += d\n            i += 1\n        }\n        sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprmh77xvg.scala:34)\n\tat Problem.main(tmprmh77xvg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n     \
    \           result += s.charAt(i) - 'A' + 1\n        return result\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdru5wsza.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n\
    \                sum += c - 'a'\n            }\n            i += 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8k5fliel.scala:34)\n\tat Problem.main(tmp8k5fliel.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795076
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0L\n        for(i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpohj9zdn5.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Long - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val result = mutable.Long.empty\n        for (i <- 0 until\
    \ s.length)\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n     \
    \           result += s.charAt(i) - 'A' + 1\n        return result\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n\
    \    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"abcCd\"))\
    \ == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdru5wsza.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Long.empty\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659795075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpygt60lea.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795058
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'A'\e[0m +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Int - did you mean sum.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp1iwkt7wf.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n            else\n                sum += s.charAt(i)\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwar52gax.scala:31)\n\tat Problem.main(tmpwar52gax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n                sum +=\
    \ s.charAt(i) - 'a'\n            else\n                sum += s.charAt(i)\n  \
    \      sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb17tvmt_.scala:24:20 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                sum += s.charAt(i) - \e[31m'a'\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpb17tvmt_.scala:26:20 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                sum += s.charAt(i)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659795059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toChar.asDigit\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"\
    abAB\")) == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvgxib8s1.scala:28)\n\tat Problem.main(tmpvgxib8s1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        val sum = 0\n        for (i <- 0 until s.length)\n     \
    \       sum += s.charAt(i).toInt\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyzo80107.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            sum += s.charAt(i).toInt\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a\
    \ member of Int - did you mean sum.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659795069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        var i = 0\n        while (i < s.length)\
    \ {\n            val c = s.charAt(i)\n            if (c.toInt > 47 && c.toInt\
    \ < 58) {\n                sum += c.toInt\n            }\n            i += 1\n\
    \        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\
    \")) == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
    abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
    woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
    \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\"))\
    \ == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe09vtnt6.scala:34)\n\tat Problem.main(tmpe09vtnt6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795076
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Task\n    // Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n\
    \    // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n \
    \   // (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
    helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n\
    \    // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String)\
    \ : Long = {\n        var sum = 0\n        for (i <- 0 until s.length)\n     \
    \       if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n                sum +=\
    \ s.charAt(i) - 'A' + 1\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(digitSum((\"\")) == (0l));\n    assert(digitSum((\"abAB\"))\
    \ == (131l));\n    assert(digitSum((\"abcCd\")) == (67l));\n    assert(digitSum((\"\
    helloE\")) == (69l));\n    assert(digitSum((\"woArBld\")) == (131l));\n    assert(digitSum((\"\
    aAaaaXa\")) == (153l));\n    assert(digitSum((\" How are yOu?\")) == (151l));\n\
    \    assert(digitSum((\"You arE Very Smart\")) == (327l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjm8ubukp.scala:29)\n\tat Problem.main(tmpjm8ubukp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659795059

language: scala
name: HumanEval_45_triangle_area
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_jx0qrz_.scala:12)\n\tat Problem.main(tmp_jx0qrz_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        val area = area * side\n        val area = area * side\n     \
    \   val area = area * side\n        area\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1xk7t1u1.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * side\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1xk7t1u1.scala:11:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m\
    \ \e[36marea\e[0m = area * side\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1xk7t1u1.scala:12:12 ---------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * side\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea is already defined\
    \ as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp19x5bwny.scala:12)\n\tat Problem.main(tmp19x5bwny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val area = area\
    \ * Math.sqrt(a * a)\n        area\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph_rdo_q5.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * Math.sqrt(a\
    \ * a)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * 0.5\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp911wjgw2.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaSquareRoot = math.sqrt(areaSquare)\n        areaSquareRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl3p70m5x.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        areaSquareRoot\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (areaSquareRoot\
    \ : Double)\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaSquareRoot = math.sqrt(areaSquare)\n        areaSquareRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl3p70m5x.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        areaSquareRoot\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (areaSquareRoot\
    \ : Double)\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = 2 *\
    \ a + h\n        val area = area / perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_01vd8lq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * area\n        val areaCube = area * area * area\n        val areaSqrt = math.sqrt(areaSquare)\n\
    \        val areaCubeRoot = math.sqrt(areaCube)\n        areaCubeRoot / areaSqrt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpauz_zp41.scala:13:8\
    \ ---------------------\e[0m\e[0m\n\e[31m13 |\e[0m        areaCubeRoot / areaSqrt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \     Found:    Double\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * area\n        val areaCube = area * area * area\n        val areaSqrt = math.sqrt(areaSquare)\n\
    \        val areaCubeSqrt = math.sqrt(areaCube)\n        areaSqrt / areaCubeSqrt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx47l63j6.scala:13:8\
    \ ---------------------\e[0m\e[0m\n\e[31m13 |\e[0m        areaSqrt / areaCubeSqrt\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \     Found:    Double\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val area = area / 2\n\
    \        val area = area + a * a\n        area\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl4u3siba.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl4u3siba.scala:10:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m\
    \ \e[36marea\e[0m = area + a * a\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = a +\
    \ a + h\n        val area = area / perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpafidp4pc.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * 0.5\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp911wjgw2.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * 0.5\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp911wjgw2.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2) * (area\
    \ / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp88fvf5yr.scala:12)\n\tat Problem.main(tmp88fvf5yr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = 2 *\
    \ a + h\n        val area = area / perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_01vd8lq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaSquareRoot = math.sqrt(areaSquare)\n        areaSquareRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl3p70m5x.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        areaSquareRoot\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (areaSquareRoot\
    \ : Double)\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_jx0qrz_.scala:12)\n\tat Problem.main(tmp_jx0qrz_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * Math.sqrt(3)\
    \ / 2\n        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpnnlxl08r.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * Math.sqrt(\e\
    [31m3\e[0m) / \e[31m2\e[0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpahl8ogee.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_jx0qrz_.scala:12)\n\tat Problem.main(tmp_jx0qrz_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val area = area\
    \ / Math.sqrt(a * a)\n        area\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwbg7a80.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / Math.sqrt(a\
    \ * a)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo8arnb6g.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp19x5bwny.scala:12)\n\tat Problem.main(tmp19x5bwny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 3.14159265358979323846\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj2u_8_v7.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m3.14159265358979323846\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = 2 *\
    \ a + h\n        val area = area / perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_01vd8lq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp19x5bwny.scala:12)\n\tat Problem.main(tmp19x5bwny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val area = area\
    \ * Math.sqrt(a * a)\n        area\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph_rdo_q5.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * Math.sqrt(a\
    \ * a)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppi3a5tko.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val side = math.sqrt(a\
    \ * a)\n        val area = side * side\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7kb_5ghq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = side * side\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val area = area\
    \ * Math.sqrt(a * a / 2)\n        area\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvdq28r4v.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * Math.sqrt(a\
    \ * a / \e[31m2\e[0m)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area / 2\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxlbrngur.scala:12)\n\tat Problem.main(tmpxlbrngur.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * 0.5f\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794388
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_jx0qrz_.scala:12)\n\tat Problem.main(tmp_jx0qrz_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp19x5bwny.scala:12)\n\tat Problem.main(tmp19x5bwny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val area = area / 2\n\
    \        val area = area + a * a\n        area\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl4u3siba.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpl4u3siba.scala:10:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m\
    \ \e[36marea\e[0m = area + a * a\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n2 errors found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5tlsiji9.scala:12)\n\tat Problem.main(tmp5tlsiji9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a\n        val area2 = h * h\n\
    \        val area3 = h * h * h\n        val area4 = h * h * h * h\n        val\
    \ area5 = h * h * h * h * h\n        val area6 = h * h * h * h * h * h\n     \
    \   val area7 = h * h * h * h * h * h * h\n        val area8 = h * h * h * h *\
    \ h * h * h * h\n        val area9 = h * h * h * h * h * h * h * h * h\n     \
    \   val area10 = h * h * h * h * h * h * h * h * h * h * h\n        val area11\
    \ = h * h * h * h * h * h * h * h * h * h * h * h * h\n        val area12 = h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h\n        val area13 = h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n        val area14\
    \ = h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n  \
    \      val area15 = h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h\n        val area16 = h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h\n        val area17 = h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n\
    \        val area18 = h * h * h * h * h * h * h * h * h * h * h * h * h * h *\
    \ h * h * h * h * h * h * h * h * h * h\n        val area19 = h * h * h * h *\
    \ h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h *\
    \ h * h * h\n        val area20 = h * h * h * h * h * h * h * h * h * h * h *\
    \ h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n        val area21\
    \ = h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h\n        val area22 = h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h\n        val area23 = h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n  \
    \      val area24 = h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h\n        val area25 = h\
    \ * h * h * h * h * h * h * h * h * \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmppagf_l83.scala:32:56 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36marea25\e[0m = h * h * h\
    \ * h * h * h * h * h * h * \n\e[31m\e[31m   |\e[0m                          \
    \                              ^\e[0m\n\e[31m   |\e[0m                       \
    \                expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppagf_l83.scala:33:5 ---------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Float\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        val area = area / side\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpen53hf4_.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / side\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2\n        val area = area\
    \ / Math.sqrt(a * a)\n        area\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjwbg7a80.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / Math.sqrt(a\
    \ * a)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0marea is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m\
    \  |\e[0m\n\e[31m  |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794386
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2l).toFloat\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwb5imbtw.scala:12)\n\tat Problem.main(tmpwb5imbtw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdcu83aqr.scala:12)\n\tat Problem.main(tmpdcu83aqr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_jx0qrz_.scala:12)\n\tat Problem.main(tmp_jx0qrz_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaSquareRoot = math.sqrt(areaSquare)\n        areaSquareRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl3p70m5x.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        areaSquareRoot\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (areaSquareRoot\
    \ : Double)\n\e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * (a.toFloat / 2)\n        area\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794388
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2l) * Math.sqrt(3l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7dv9oi2c.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        (area / \e[31m2l\e[0m) * Math.sqrt(\e[31m3l\e\
    [0m)\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m        Found:    Double\n\e[31m  |\e[0m        Required: Float\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaCube = area * a * a\n        val areaSquareRoot = math.sqrt(areaSquare)\n\
    \        val areaCubeRoot = math.sqrt(areaCube)\n        areaSquareRoot * areaCubeRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnidov2bq.scala:13:8\
    \ ---------------------\e[0m\e[0m\n\e[31m13 |\e[0m        areaSquareRoot * areaCubeRoot\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Found:    Double\n\e[31m   |\e[0m        Required: Float\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpc333ebwk.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = 2 *\
    \ a + h\n        val area = area / perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_01vd8lq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area2 = a * h *\
    \ h\n        val area3 = a * h * h * h\n        val area4 = a * h * h * h * h\n\
    \        val area5 = a * h * h * h * h * h\n        val area6 = a * h * h * h\
    \ * h * h * h\n        val area7 = a * h * h * h * h * h * h * h\n        val\
    \ area8 = a * h * h * h * h * h * h * h * h\n        val area9 = a * h * h * h\
    \ * h * h * h * h * h * h * h\n        val area10 = a * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h\n        val area11 = a * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h\n        val area12 = a * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h\n        val area13 = a * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\n      \
    \  val area14 = a * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h\n        val area15 = a * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h\
    \ * h * h * h * h * h * h * h * \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl3k3rmtj.scala:24:0 ----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) = {\n\e[31m\e[31m   |\e[0m^^^\e[0m\n\e[31m\
    \   |\e[0m'}' expected, but 'end of statement' found\nException in thread \"main\"\
    \ java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1521)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:739)\n\
    \tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:739)\n\
    \tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\t\
    at dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:739)\n\
    \tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\
    \tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\
    \tat dotty.too"
  stdout: 'java.lang.StackOverflowError while compiling /tmp/tmpl3k3rmtj.scala

    '
  timestamp: 1659794386
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2).toFloat\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpukqxuxo7.scala:12)\n\tat Problem.main(tmpukqxuxo7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * 0.5f\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpost5a24w.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * \e[31m0.5f\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794382
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val perimeter = 2 *\
    \ a + h\n        val area = area + perimeter\n        area / 2\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpkfe79vkq.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area + perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794387
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h / 2.0\n        val perimeter\
    \ = a + h\n        val area = area + perimeter\n        area\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuadhptn7.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area + perimeter\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuadhptn7.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        area\n\e[31m\e[31m \
    \  |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0m        Found:    (area : Double)\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fmxqmay.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * (a.toFloat / 2)\n        area\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794388
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        area / 2\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1d3gtvkr.scala:12)\n\tat Problem.main(tmp1d3gtvkr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * h\n        val side = math.sqrt(a\
    \ * a)\n        area / side\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa5oxs8jm.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area * h\n\
    \        val area = area * h\n        val area = area * h\n        val area =\
    \ area * h\n        val area = area * h\n        val area = area * h\n       \
    \ val area = area * h\n        val area = area * h\n        val area = area *\
    \ h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        val area = area\
    \ * h\n        val area = area * h\n        val area = area * h\n        val area\
    \ = area * h\n        val area = area * h\n        val area = area * h\n     \
    \   val area = area * h\n        val area = area * h\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n\
    \    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * h\n\e\
    [31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea is already\
    \ defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m  |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * h\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea is already\
    \ defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * h\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea is already\
    \ defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * h\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea is already\
    \ defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area * h\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0marea is already\
    \ defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmkvrj_yz.scala:14:12 ---------------"
  stdout: ''
  timestamp: 1659794388
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2l).toFloat\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwb5imbtw.scala:12)\n\tat Problem.main(tmpwb5imbtw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * (a.toFloat / 2)\n        area\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794388
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj64kwdb3.scala:12)\n\tat Problem.main(tmpj64kwdb3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * h\n        area\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp19x5bwny.scala:12)\n\tat Problem.main(tmp19x5bwny.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * (a * h) / 2\n        area\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7yuhf9qj.scala:12)\n\tat Problem.main(tmp7yuhf9qj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794389
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = (a * h) / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl08afvne.scala:12)\n\tat Problem.main(tmpl08afvne.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * a / 2\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpccxfhpk7.scala:12)\n\tat Problem.main(tmpccxfhpk7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val areaSquare = area\
    \ * a\n        val areaCube = area * h * h\n        val areaSquareRoot = math.sqrt(areaSquare)\n\
    \        val areaCubeRoot = math.sqrt(areaCube)\n        areaSquareRoot / areaCubeRoot\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqfbog6ke.scala:13:8\
    \ ---------------------\e[0m\e[0m\n\e[31m13 |\e[0m        areaSquareRoot / areaCubeRoot\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Found:    Double\n\e[31m   |\e[0m        Required: Float\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659794389
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val side = math.sqrt(a\
    \ * a + h * h)\n        area / side\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(triangleArea((5l), (3l)) == (7.5f));\n    assert(triangleArea((2l),\
    \ (2l)) == (2.0f));\n    assert(triangleArea((10l), (8l)) == (40.0f));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp57ihmryy.scala:10:8\
    \ ---------------------\e[0m\e[0m\n\e[31m10 |\e[0m        area / side\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Double\n\
    \e[31m   |\e[0m        Required: Float\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        val area = area / 2\n\
    \        area\n    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l),\
    \ (3l)) == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp71z0umvg.scala:9:12 ----------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36marea\e[0m = area / \e[31m2\e\
    [0m\n\e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0marea\
    \ is already defined as \e[33mvalue\e[0m \e[35marea\e[0m\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659794383
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h / 2.0\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvbt200qv.scala:9:8 ----------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        area\n\e[31m\e[31m  |\e[0m        ^^^^\e[0m\n\e\
    [31m  |\e[0m        Found:    (area : Double)\n\e[31m  |\e[0m        Required:\
    \ Float\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794384
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = a * h\n        (area / 2l).ceil.toFloat\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l))\
    \ == (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphxoxoi5p.scala:9:20 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        (area / \e[31m2l\e[0m).ceil.toFloat\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        value ceil is\
    \ not a member of Long.\n\e[31m  |\e[0m        An extension method was tried,\
    \ but could not be fully constructed:\n\e[31m  |\e[0m\n\e[31m  |\e[0m        \
    \    floatWrapper(area./(\e[31m2L\e[0m))\n1 error found\n"
  stdout: ''
  timestamp: 1659794389
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given length of a side and high return area for a triangle.\n    //\
    \ >>> triangleArea((5l), (3l))\n    // (7.5f)\n    def triangleArea(a : Long,\
    \ h : Long) : Float = {\n        val area = h * a * 0.5f\n        area\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(triangleArea((5l), (3l)) ==\
    \ (7.5f));\n    assert(triangleArea((2l), (2l)) == (2.0f));\n    assert(triangleArea((10l),\
    \ (8l)) == (40.0f));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794388

{
  "language": "scala",
  "name": "HumanEval_162_string_to_md5",
  "results": [
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(_ => Integer.toHexString(_)).mkString\n        Option(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpum5qo4jq.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_ => Integer.toHexString(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpum5qo4jq.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnx3g_xl7.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqzgpy5vg.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3vtx9uqq.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).map(_.toString))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Hex = digest.map(\"%02x\".format(_)).mkString\n            Some(md5Hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp71vlmvcb.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\" format _).mkString\n        Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp_v_hj5xg.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m format _).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_v_hj5xg.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpmqnwi56v.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmqnwi56v.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuvovh7qs.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgdb6nry1.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hex = digest.map(\"%02x\".format(_)).mkString\n        Option(hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvi_q78z6.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        Option(hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpak9ac0gz.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2jkqzbgq.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fb4nfif.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpovmayfeo.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpovmayfeo.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fb4nfif.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphp9fblr0.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7gvjf1_v.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798860
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n        Option(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphz7ehuiu.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphz7ehuiu.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuvovh7qs.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxo9hyp87.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo9hyp87.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxo9hyp87.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo9hyp87.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_heprv2.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n        Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpvn6pzmxv.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvn6pzmxv.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: MessageDigest\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Hex = digest.map(_.toHexString).mkString\n            Some(md5Hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6edz05o4.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwv51kcs3.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2jkqzbgq.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n        Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmptz_v8ad_.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmptz_v8ad_.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxo9hyp87.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo9hyp87.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpokkszisi.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpokkszisi.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphp9fblr0.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7gvjf1_v.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798860
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        hexString.toUpperCase\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2lmet54u.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.digest(bytes)\n        val hexString = java.util.Arrays.toString(md5)\n        hexString.toUpperCase\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp57ukpvy_.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = md5.digest(bytes)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57ukpvy_.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798859
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyt8vra6q.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(text.map(_.toByte).map(_.md5).mkString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppb3kd4a0.scala:10:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(text.map(_.toByte).map(_.md5).mkString)\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value md5 is not a member of Byte\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnx3g_xl7.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmprwbsf5m2.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprf_c52nt.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798862
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqjjgbq_g.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).digest)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4dye9fmh.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).digest)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798863
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpokkszisi.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpokkszisi.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpmqnwi56v.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmqnwi56v.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpmqnwi56v.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmqnwi56v.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.digest(bytes)\n        val hex = Array[String](md5.take(32).map(_.toHexString).mkString, md5.take(32).mkString)\n        Some(hex(0))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp05kupnk7.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = md5.digest(bytes)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp05kupnk7.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: MessageDigest\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpmqnwi56v.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmqnwi56v.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val buffer = new Array[Byte](128)\n        val digest = md5.digest(text.getBytes)\n        digest.foreach(buffer += _)\n        val hex = digest.map(x => Integer.toHexString(x)).foldLeft(\"\")((x,y) => x + y)\n        hex.take(32).mkString\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmprektukbx.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798860
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprf_c52nt.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798862
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        Option(hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpak9ac0gz.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5String = new String(digest)\n        val md5Hash = md5String.substring(0, 8)\n        Option(md5Hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpy94hvi9g.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798860
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp21npm6lx.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hex)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798864
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5String = new String(digest)\n        val md5Hash = md5String.substring(0, 8)\n        Some(md5Hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp62bsfyhm.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798860
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hex = digest.map(\"%02x\".format(_)).mkString\n        Option(hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvi_q78z6.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val hash = md5.digest(bytes)\n        val hexString = hash.toString(\"hex\")\n        Some(hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0rx9ye7s.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(x => Integer.toHexString(0xFF & x)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpc46cet_x.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798864
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqzgpy5vg.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwv51kcs3.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798861
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(text.md5())\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjc64byy8.scala:10:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(text.md5())\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value md5 is not a member of String\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyt8vra6q.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        hexString.toUpperCase\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2lmet54u.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes\n        val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n        md5.update(bytes)\n        val md5Hash = md5.digest()\n        val md5HashString = Array.ofDim[Byte](md5.digestSize)\n        md5.update(md5Hash, 0, md5Hash.length)\n        md5.doFinal(md5HashString, 0, md5HashString.length)\n        Option(md5HashString.mkString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpk3v_39_m.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = java.security.MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk3v_39_m.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9m36ts9j.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpovmayfeo.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpovmayfeo.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hex = digest.map(\"%02x\".format(_)).mkString\n        Option(hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpehz5noj0.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphp9fblr0.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fb4nfif.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798850
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpf9vjycgh.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val bytes = text.getBytes(\"UTF-8\")\n            val digest = md5.digest(bytes)\n            val md5 = digest.map(_ & 0xFF).map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpcan378d9.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_ & \u001b[31m0xFF\u001b[0m).map(\u001b[31m\"%02x\"\u001b[0m.format(_)).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcan378d9.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2jkqzbgq.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2jkqzbgq.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp21npm6lx.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hex)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798864
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = text.getBytes(\"UTF-8\")\n            val hash = md5.digest(bytes)\n            val hex = hash.toString(\"hex\")\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnx3iq3jd.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgdb6nry1.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxo9hyp87.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo9hyp87.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(text.map(_.toByte).map(_.md5).map(_.toString).mkString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt2qif7cf.scala:10:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(text.map(_.toByte).map(_.md5).map(_.toString).mkString)\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value md5 is not a member of Byte\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqzgpy5vg.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(text.map(_.hashCode).map(_.toString).mkString(\"-\"))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbyr0hbe_.scala:13)\n\tat Problem.main(tmpbyr0hbe_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.digest(bytes)\n        val md5String = Array[Byte]().withDefaultValue(0) ++ md5.toArray\n        val md5HexString = md5String.map(_.toHexString).mkString\n        Option(md5HexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpv1w8if2x.scala:11:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = md5.digest(bytes)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv1w8if2x.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv1w8if2x.scala:12:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5String\u001b[0m = Array[\u001b[35mByte\u001b[0m]().withDefaultValue(\u001b[31m0\u001b[0m) ++ md5.toArray\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value withDefaultValue is not a member of Array[Byte]\n3 errors found\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        Option(hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpf8xukvvs.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hex = digest.map(\"%02x\".format(_)).mkString\n        hex.takeWhile(c => c != '0')\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuuekscce.scala:9:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: MessageDigest\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String = new String(digest)\n            Some(md5String)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpyc7qvwou.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(x => Integer.toHexString(x))\n            Some(md5(0))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphfwkjxs2.scala:13:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(\u001b[36mx\u001b[0m => Integer.toHexString(x))\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmphfwkjxs2.scala:11:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiefcjzi6.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgnxyxp2h.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hex)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(md5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: md5\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val buffer = new Array[Byte](1024)\n        val digest = md5.digest(text.getBytes)\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = digest.clone\n        val md5 = \n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpu8wok5vq.scala:71:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpu8wok5vq.scala:12:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.clone\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpu8wok5vq.scala:13:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.clone\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpu8wok5vq.scala:14:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.clone\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpu8wok5vq.scala:15:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.clone\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpu8wok5vq.scala:16:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n        hexString.toUpperCase\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2xuzzrlt.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqzgpy5vg.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.md5(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3skb4igl.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798868
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyt8vra6q.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = MessageDigest.getInstance(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: MessageDigest\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798858
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp21npm6lx.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hex)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798864
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuvmqbapc.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_ & 0xff).mkString\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3sgexhw6.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_ & \u001b[31m0xff\u001b[0m).mkString\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3sgexhw6.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798867
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprf_c52nt.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798862
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n            Some(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpxo9hyp87.scala:14:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = digest.map(_.toHexString)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmd5 is already defined as \u001b[33mvalue\u001b[0m \u001b[35mmd5\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo9hyp87.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798857
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplr53jg51.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text).hexString)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798853
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxxa__1gg.scala:12:26 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m   |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m   |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798851
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbmd2bk_n.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.hashString(text).hexValue)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(text.map(_.toByte).map(_.md5).map(_.toHexString).mkString(\"-\"))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ewmibd1.scala:10:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(text.map(_.toByte).map(_.md5).map(_.toHexString).mkString(\u001b[31m\"-\"\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value md5 is not a member of Byte\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ewmibd1.scala:10:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(text.map(_.toByte).map(_.md5).map(_.toHexString).mkString(\u001b[31m\"-\"\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m   value toHexString is not a member of Any - did you mean _$3.toString?\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659798869
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu_cn6zyt.scala:10:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.Md5.digest(text.getBytes))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of util\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n        val hex = digest.map(\"%02x\".format(_)).mkString\n        Option(hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpehz5noj0.scala:9:22 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmd5\u001b[0m = \u001b[33mnew\u001b[0m java.security.MessageDigest(\u001b[31m\"MD5\"\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mnone of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest from module class Problem$.\n\u001b[31m  |\u001b[0m Access to protected \u001b[33mconstructor\u001b[0m \u001b[35mMessageDigest\u001b[0m not permitted because enclosing \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m\n\u001b[31m  |\u001b[0m is not a subclass of \u001b[33mclass\u001b[0m \u001b[35mMessageDigest\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mjava.security\u001b[0m where target is defined\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798865
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a string 'text', return its md5 hash equivalent string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String) : Option[String] = {\n        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocr5dpc8.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33melse\u001b[0m Some(scala.util.hashing.Md5.hashString(text))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value Md5 is not a member of scala.util.hashing\n1 error found\n",
      "stdout": "",
      "timestamp": 1659798854
    }
  ]
}
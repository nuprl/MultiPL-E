name: HumanEval_92_any_int
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that takes 3 numbers.\n    // Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    // Returns false in any other cases.\n    // Examples\n    // >>> anyInt(5l,\
  \ 2l, 7l)\n    // (true)\n    // >>> anyInt(3l, 2l, 2l)\n    // (false)\n    //\
  \ >>> anyInt(3l, -2l, 1l)\n    // (true)\n    // >>> anyInt((3.6f), (-2.2f), 2l)\n\
  \    // (false)\n    def anyInt(x : Float, y : Float, z : Float) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(anyInt(2l, 3l, 1l)\
  \ == (true));\n    assert(anyInt((2.5f), 2l, 3l) == (false));\n    assert(anyInt((1.5f),\
  \ 5l, (3.5f)) == (false));\n    assert(anyInt(2l, 6l, 2l) == (false));\n    assert(anyInt(4l,\
  \ 2l, 2l) == (true));\n    assert(anyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
  \    assert(anyInt(-4l, 6l, 2l) == (true));\n    assert(anyInt(2l, 1l, 1l) == (true));\n\
  \    assert(anyInt(3l, 4l, 7l) == (true));\n    assert(anyInt((3.0f), 4l, 7l) ==\
  \ (false));\n    }\n\n}\n"
completions: ["        val xs = List(x, y, z)\n        val ys = xs.sum\n        xs.forall(x\
    \ => x == ys)", "        val sum = x + y + z\n        val isInteger = sum % 1\
    \ == 0\n        val isSum = sum == x + y + z\n        val isAllInteger = isInteger\
    \ && isSum\n        val isAllInteger = isAllInteger && isInteger\n        isAllInteger",
  "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n     \
    \   val isSum = sum.toString.toDouble\n        val isSumOfAll = sum == isSum\n\
    \        val isAllInteger = isInteger.toString.toInt\n        val isAllSum = isSum.toString.toDouble\n\
    \        val isAllSumOfAll = isSum == isAllSum\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAllInteger\n        val isAllIntegersAndAllSumOfAll = isAllInteger.toString.toInt\
    \ == isAllSum.toString.toInt && isAllSumOfAll == isAllInteger\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAllInteger\n        val isAllIntegersAndAllSumOfAll = isAllInteger.toString.toInt\
    \ == isAllSum.toString.toInt && isAllSumOfAll == isAllInteger\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAllInteger\n        val isAllIntegersAndAllSumOfAll = isAllInteger.toString.toInt\
    \ == isAllSum.toString.toInt && isAllSumOfAll == isAllInteger\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAllInteger\n        val isAllIntegersAndAllSumOfAll = isAllInteger.toString.toInt\
    \ == isAllSum.toString.toInt && isAllSumOfAll == isAllInteger\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAllInteger\n        val isAllIntegersAndAllSumOfAll = isAllInteger.toString.toInt\
    \ == isAllSum.toString.toInt && isAllSumOfAll == isAllInteger\n        val isAllIntegersAndAllSumOfAll\
    \ = isAllInteger.toString.toInt == isAllSum.toString.toInt && isAllSumOfAll ==\
    \ isAll", "        val sum = x + y + z\n        val isInteger = (sum.toInt % 1\
    \ == 0)\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        isAllInteger", "        val sum = x + y + z\n        val\
    \ isInt = sum.toInt == sum\n        val isInt = isInt && x.toInt == x.toInt &&\
    \ y.toInt == y.toInt && z.toInt == z.toInt\n        isInt", "        val sum =\
    \ x + y + z\n        if (sum == 0) true\n        else false", "        val sum\
    \ = x + y + z\n        val intSum = math.round(sum)\n        val intSum2 = math.round(sum\
    \ * 2)\n        val intSum3 = math.round(sum * 3)\n        val intSum4 = math.round(sum\
    \ * 4)\n        val intSum5 = math.round(sum * 5)\n        val intSum6 = math.round(sum\
    \ * 6)\n        val intSum7 = math.round(sum * 7)\n        val intSum8 = math.round(sum\
    \ * 8)\n        val intSum9 = math.round(sum * 9)\n        val intSum10 = math.round(sum\
    \ * 10)\n        val intSum11 = math.round(sum * 11)\n        val intSum12 = math.round(sum\
    \ * 12)\n        val intSum13 = math.round(sum * 13)\n        val intSum14 = math.round(sum\
    \ * 14)\n        val intSum15 = math.round(sum * 15)\n        val intSum16 = math.round(sum\
    \ * 16)\n        val intSum17 = math.round(sum * 17)\n        val intSum18 = math.round(sum\
    \ * 18)\n        val intSum19 = math.round(sum * 19)\n        val intSum20 = math.round(sum\
    \ * 20)\n        val intSum21 = math.round(sum * 21)\n        val intSum22 = math.round(sum\
    \ * 22)\n        val intSum23 = math.round(sum * 23)\n        val intSum24 = math.round(sum\
    \ * 24)\n        val intSum25 = math.round(sum * 25)\n        val intSum26 = math.round(sum\
    \ * 26)\n        val intSum27 = math.round(sum * 27)\n        val intSum28 = math.round(sum\
    \ * 28)\n        val intSum29 = math.round(sum * 29)\n        val intSum30 = math.round(sum\
    \ * 30)\n        val intSum31 = math.round(sum * 31)\n        val intSum32 = math.round(sum\
    \ * 32)\n        val intSum33 = math.round(sum * 33)\n        val intSum34 = math.round(sum\
    \ * 34)\n        val intSum35 = math.round(sum * 35)\n        val intSum36 = math.round(sum\
    \ * 36)\n        val intSum37 = math.round(sum * 37)\n        val intSum38 = math.round(sum\
    \ * 38)\n        val intSum39 = math.round(sum * 39)\n        val intSum40 = math.round(sum\
    \ * 40)\n        val intSum41 = math.round(sum * 41)\n        val intSum42 = math.round(sum\
    \ * 42)", "        val sum = x + y + z\n        val isInt = sum.toInt % 1 == 0\n\
    \        val isAllInt = x.toInt == y.toInt == z.toInt\n        isInt && isAllInt",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (x % 1 == 0) || (y % 1 == 0)\
    \ || (z % 1 == 0)\n        isInteger && isSum && isAllInteger", "        val sum\
    \ = x + y + z\n        val isInteger = sum % 1 == 0\n        val isEqual = sum\
    \ == x + y + z\n        isInteger && isEqual", "        val sum = x + y + z\n\
    \        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n    \
    \    val isAllIntegers = (x % 1 == 0) &&\n                           (y % 1 ==\
    \ 0) &&\n                           (z % 1 == 0)\n        isInteger || isSum ||\
    \ isAllIntegers", "        val sum = x + y + z\n        val isInteger = (sum.toInt).toFloat\
    \ == sum\n        val isEqual = sum == x + y + z\n        val isAllInteger = (x\
    \ % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n        isInteger && isEqual && isAllInteger",
  '        (x == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x ==
    (x - z) && x == (y - z))', "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt % 1 == 0)\n        val isSum = (sum == x)\n        val isAllIntegers\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSum = (isInteger && isSum)\n\
    \        val isAllIntegersAndAllSumAndNotEqualToZero = (isInteger && isSum)\n\
    \        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOne = (isInteger\
    \ && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwo\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThree\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFour\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFive\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSix\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSeven\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSevenAndNotEqualToEight\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSevenAndNotEqualToEightAndNotEqualToNine\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualTo", '        (x
    == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) &&
    x == (y - z))', "        val xs = List(x, y, z)\n        xs.forall(_.toString.toInt)",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSumOfTwo = (sum == (x + y))\n        val isAllIntegers = (x % 1 == 0) || (y\
    \ % 1 == 0) || (z % 1 == 0)\n        isInteger && isSumOfTwo && isAllIntegers",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n     \
    \   val isSum = (sum == x + y + z)\n        val isEqual = (x == y + z)\n     \
    \   val isEqual2 = (y == z)\n        val isEqual3 = (x == y)\n        val isEqual4\
    \ = (x == z)\n        val isEqual5 = (y == z)\n        val isEqual6 = (x == y)\n\
    \        val isEqual7 = (y == x)\n        val isEqual8 = (x == z)\n        val\
    \ isEqual9 = (y == z)\n        val isEqual10 = (x == y)\n        val isEqual11\
    \ = (y == x)\n        val isEqual12 = (x == z)\n        val isEqual13 = (y ==\
    \ z)\n        val isEqual14 = (x == y)\n        val isEqual15 = (y == x)\n   \
    \     val isEqual16 = (x == z)\n        val isEqual17 = (y == z)\n        val\
    \ isEqual18 = (x == y)\n        val isEqual19 = (y == x)\n        val isEqual20\
    \ = (x == z)\n        val isEqual21 = (y == z)\n        val isEqual22 = (x ==\
    \ y)\n        val isEqual23 = (y == x)\n        val isEqual24 = (x == z)\n   \
    \     val isEqual25 = (y == z)\n        val isEqual26 = (x == y)\n        val\
    \ isEqual27 = (y == x)\n        val isEqual28 = (x == z)\n        val isEqual29\
    \ = (y == z)\n        val isEqual30 = (x == y)\n        val isEqual31 = (y ==\
    \ x)\n        val isEqual32 = (x == z)\n        val isEqual33 = (y == z)\n   \
    \     val isEqual34 = (x == y)\n        val isEqual35 = (y == x)\n        val\
    \ isEqual36 = (x == z)\n        val isEqual37 = (y == z)\n        val isEqual38\
    \ = (x == y)\n        val isEqual39 = (y == x)\n        val isEqual40 = (x ==\
    \ z)\n        val isEqual41 = (y == z)\n        val isEqual42 = (x == y)\n   \
    \     val isEqual43 = (y == x)\n        val isEqual44 = (x == z)\n        val\
    \ isEqual45 = (y == z)\n        val isEqual46 = (x == y)\n        val isEqual47\
    \ = (y == x)\n        val isEqual48 = (x == z)\n        val isEqual49 = (y ==\
    \ z)\n        val isEqual50 = (x == y)\n        val isEqual51 = (y == x)\n   \
    \     val isEqual52 = (x == z)\n        val isEqual53 = (y == z)", "        val\
    \ sum = x + y + z\n        val isInteger = sum.toInt % 1 == 0\n        val isSum\
    \ = sum == x + y + z\n        isInteger && isSum", "        val sum = x + y +\
    \ z\n        val intSum = math.round(sum)\n        val isInt = intSum.toInt ==\
    \ sum\n        val isAllInt = intSum == math.round(sum)\n        val isAllInts\
    \ = intSum == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n\
    \        val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = intSum\
    \ == math.round(sum)\n        val isAllInts = intSum == math.round(sum)\n    \
    \    val isAllInts = intSum == math.round(sum)\n        val isAllInts = int",
  "        val sum = x + y + z\n        val isInteger = sum.asInstanceOf[Int] == sum\n\
    \        val isEqual = sum == x + y + z\n        val isAllIntegers = isInteger\
    \ && isEqual\n        isAllIntegers", "        val sum = x + y + z\n        val\
    \ isInteger = (sum.toInt % 1 == 0)\n        val isEqual = sum == x + y + z\n \
    \       val isAllInteger = (isInteger && isEqual)\n        isAllInteger", "  \
    \      val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x + y + z)\n        val isEqual = (x == y + z)\n        isInteger\
    \ && isSum && isEqual", "        val sum = x + y + z\n        val isInteger =\
    \ (sum.toInt % 1 == 0)\n        val isSum = (sum == (x + y + z).toInt)\n     \
    \   isInteger && isSum", "        val xx = x.toInt\n        val yy = y.toInt\n\
    \        val zz = z.toInt\n        (xx + yy + zz) == (xx + yy)", "        val\
    \ sum = x + y + z\n        val isInteger = sum.toString.toInt\n        val isEqual\
    \ = sum == isInteger\n        val isAllInteger = isInteger.toString.toInt == 3\n\
    \        isEqual && isAllInteger", "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isSum = (sum == x)\n        val isAllInteger =\
    \ (isInteger && isSum)\n        val isAllInteger = (isAllInteger && isInteger)\n\
    \        isAllInteger", "        val sum = x + y + z\n        val isInteger =\
    \ sum % 1 == 0\n        val isEqual = sum == x + y + z\n        val isAllInteger\
    \ = isInteger && isEqual\n        !isAllInteger", "        val sum = (x + y +\
    \ z).toInt\n        val sum2 = (x * y * z).toInt\n        val sum3 = ((x * y)\
    \ * z).toInt\n        val sum4 = (x * y * z * x).toInt\n        val sum5 = (x\
    \ * y * z * x * y).toInt\n        val sum6 = (x * y * z * x * y * z).toInt\n \
    \       val sum7 = (x * y * z * x * y * z * x).toInt\n        val sum8 = (x *\
    \ y * z * x * y * z * x * y).toInt\n        val sum9 = (x * y * z * x * y * z\
    \ * x * y * z).toInt\n        val sum10 = (x * y * z * x * y * z * x * y * z *\
    \ x).toInt\n        val sum11 = (x * y * z * x * y * z * x * y * z * x * y).toInt\n\
    \        val sum12 = (x * y * z * x * y * z * x * y * z * x * y * z).toInt\n \
    \       val sum13 = (x * y * z * x * y * z * x * y * z * x * y * z * x).toInt\n\
    \        val sum14 = (x * y * z * x * y * z * x * y * z * x * y * z * x * y).toInt\n\
    \        val sum15 = (x * y * z * x * y * z * x * y * z * x * y * z * x * y *\
    \ z).toInt\n        val sum16 = (x * y * z * x * y * z * x * y * z * x * y * z\
    \ * x * y * z * x).toInt\n        val sum17 = (x * y * z * x * y * z * x * y *\
    \ z * x * y * z * x * y * z * x * y).toInt\n        val sum18 = (x * y * z * x\
    \ * y * z * x * y * z * x * y * z * x * y * z * x * y * z).toInt\n        val\
    \ sum19 = (x * y * z * x * y * z * x * y * z * x * y * z * x * y * z * x * y *\
    \ z * x).toInt\n        val sum20 = (x * y * z * x * y * z * x * y * z * x * y\
    \ * z * x * y * z * x * y * z * x * y).toInt\n        val sum21 = (x * y * z *\
    \ x * y * z * x * y * z * x * y * z * x * y * z * x * y * z * x * y * z).toInt\n\
    \        val sum22 = (x * y * z * x * y * z * x * y * z * x * y * z * x * y *\
    \ z * x * y * z * x * y * z * x).toInt\n        val sum23 = (x * y * z * ", '        (x
    == (x + y) && y == (x + z) && z == (x + y))', "        val sum = x + y + z\n \
    \       val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n     \
    \   val isAllInteger = (x % 1 == 0) || (y % 1 == 0) || (z % 1 == 0)\n        isInteger\
    \ && isSum && isAllInteger", "        val sum = x + y + z\n        val isInteger\
    \ = sum % 1 == 0\n        val isEqual = sum == x + y + z\n        val isAllInteger\
    \ = isInteger && isEqual\n        isAllInteger", "        val sum = x + y + z\n\
    \        val isInteger = math.floor(sum) == sum\n        val isEqual = math.abs(x\
    \ - sum) == math.abs(y - sum) == math.abs(z - sum)\n        isInteger && isEqual",
  "        val sum = x + y + z\n        val isInteger = sum.asInstanceOf[Int] == sum\n\
    \        val isEqual = sum == x + y + z\n        val isAllIntegers = x.asInstanceOf[Int]\
    \ == x && y.asInstanceOf[Int] == y && z.asInstanceOf[Int] == z\n        val isAllEqual\
    \ = sum == x + y + z\n        isInteger || isEqual || isAllIntegers || isAllEqual",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt).toDouble == sum\n\
    \        val isEqual = x + y == z\n        val isAllInteger = (x.toInt == y.toInt)\
    \ && (y.toInt == z.toInt)\n        isInteger && isEqual && isAllInteger", "  \
    \      val sum = x + y + z\n        val isInteger = sum.toString.toInt\n     \
    \   val isEqual = sum == isInteger\n        val isAllInteger = isInteger.toString.toInt\
    \ == 3\n        val isAllEqual = isEqual\n        isEqual && isAllInteger && isAllEqual",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSumOfTwo = (sum == (x + y))\n        val isAllIntegers = (x % 1 == 0) && (y\
    \ % 1 == 0) && (z % 1 == 0)\n        isInteger || isSumOfTwo || isAllIntegers",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = sum == (x + y + z)\n        val isEqual = x != y && y != z && z != x\n\
    \        val isEqualOrInteger = isEqual || isInteger\n        val isAllInteger\
    \ = isInteger && isSum\n        val isAllEqual = isEqual && isInteger\n      \
    \  val isAllEqualOrInteger = isEqualOrInteger && isAllInteger\n        val isAllAllInteger\
    \ = isAllInteger && isAllEqual\n        val isAllAllEqual = isAllEqual && isAllInteger\n\
    \        val isAllAllEqualOrInteger = isAllEqualOrInteger && isAllAllInteger\n\
    \        val isAllAllAllInteger = isAllAllInteger && isAllAllEqual\n        val\
    \ isAllAllAllEqual = isAllAllEqual && isAllAllInteger\n        val isAllAllAllEqualOrInteger\
    \ = isAllAllEqualOrInteger && isAllAllAllInteger\n        val isAllAllAllAllInteger\
    \ = isAllAllAllInteger && isAllAllAllEqual\n        val isAllAllAllAllEqual =\
    \ isAllAllAllEqual && isAllAllAllInteger\n        val isAllAllAllAllEqualOrInteger\
    \ = isAllAllAllEqualOrInteger && isAllAllAllAllInteger\n        val isAllAllAllAllAllInteger\
    \ = isAllAllAllAllInteger && isAllAllAllAllEqual\n        val isAllAllAllAllEqual\
    \ = isAllAllAllAllEqual && isAllAllAllAllInteger\n        val isAllAllAllAllAllEqualOrInteger\
    \ = isAllAllAllAllEqualOrInteger && isAllAllAllAllAllInteger\n        val isAllAllAllAllAllInteger\
    \ = isAllAllAllAllInteger && isAllAllAllAllEqual\n        val isAllAllAllAllAllEqual\
    \ = isAllAllAllAllEqual && isAllAllAllAllInteger\n        val isAllAllAllAllAllEqualOrInteger\
    \ = isAllAllAllAllEqualOrInteger && isAllAllAllAllAllInteger\n        val isAllAllAllAllAllInteger\
    \ = isAllAllAllAllInteger && isAllAllAllAllEqual\n        val isAllAllAllAllAllEqualOrInteger\
    \ = isAllAllAllAllEqualOrInteger && isAllAllAllAllAllInteger\n        val isAllAllAllAllAllInteger\
    \ = isAllAllAllAllInteger && isAllAllAllAllEqual\n        val isAll", "      \
    \  val sum = x + y + z\n        val isInteger = sum.toString.toInt\n        val\
    \ isSum = sum.toString.toDouble\n        val isSumOfThree = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOne = sum.toString.toDouble\n        val isSumOfThreeAndTwo\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndThree = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFour = sum.toString.toDouble\n        val isSumOfThreeAndFive\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndSix = sum.toString.toDouble\n\
    \        val isSumOfThreeAndSeven = sum.toString.toDouble\n        val isSumOfThreeAndEight\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndNine = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTen = sum.toString.toDouble\n        val isSumOfThreeAndEleven\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwelve = sum.toString.toDouble\n\
    \        val isSumOfThreeAndThirteen = sum.toString.toDouble\n        val isSumOfThreeAndFourteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFifteen = sum.toString.toDouble\n\
    \        val isSumOfThreeAndSixteen = sum.toString.toDouble\n        val isSumOfThreeAndSeventeen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndEighteen = sum.toString.toDouble\n\
    \        val isSumOfThreeAndNineteen = sum.toString.toDouble\n        val isSumOfThreeAndTwenty\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwentyOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentyTwo = sum.toString.toDouble\n        val isSumOfThreeAndTwentyThree\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwentyFour = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentyFive = sum.toString.toDouble\n        val isSumOfThreeAndTwentySix\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwentySeven = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentyEight = sum.toString.toDouble\n        val is",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSumOfTwo = (sum - x) % 1 == 0\n        val isSumOfThree = (sum - y) % 1 ==\
    \ 0\n        val isSumOfFour = (sum - z) % 1 == 0\n        isInteger && isSumOfTwo\
    \ && isSumOfThree && isSumOfFour", "        val sum = x + y + z\n        val intSum\
    \ = math.round(sum)\n        intSum == sum", "        val sum = x + y + z\n  \
    \      val isInteger = sum.asInstanceOf[Int] == sum\n        val isAllInteger\
    \ = isInteger && x.asInstanceOf[Int] == x && y.asInstanceOf[Int] == y && z.asInstanceOf[Int]\
    \ == z\n        isAllInteger", "        val sum = x + y + z\n        val isInteger\
    \ = sum.toString.toInt\n        val isSum = sum.toString.toDouble\n        val\
    \ isSumOfTwo = sum.toString.toDouble == sum.toString.toDouble\n        val isSumOfThree\
    \ = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\n \
    \       val isSumOfFour = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble\n        val isSumOfFive = sum.toString.toDouble ==\
    \ sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\n\
    \        val isSumOfSix = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\n  \
    \      val isSumOfSeven = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\n\
    \        val isSumOfEight = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble\n        val isSumOfNine = sum.toString.toDouble ==\
    \ sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\n\
    \        val isSumOfTen = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.toDouble\n  \
    \      val isSumOfEleven = sum.toString.toDouble == sum.toString.toDouble + sum.toString.toDouble\
    \ + sum.toString.toDouble + sum.toString.toDouble + sum.toString.to", "      \
    \  val sum = x + y + z\n        if (sum == 0) return true\n        if (sum < 0)\
    \ return false\n        if (sum > 0) return true\n        if (sum == 1) return\
    \ true\n        if (sum == 2) return true\n        if (sum == 3) return true\n\
    \        if (sum == 4) return true\n        if (sum == 5) return true\n      \
    \  if (sum == 6) return true\n        if (sum == 7) return true\n        if (sum\
    \ == 8) return true\n        if (sum == 9) return true\n        if (sum == 10)\
    \ return true\n        if (sum == 11) return true\n        if (sum == 12) return\
    \ true\n        if (sum == 13) return true\n        if (sum == 14) return true\n\
    \        if (sum == 15) return true\n        if (sum == 16) return true\n    \
    \    if (sum == 17) return true\n        if (sum == 18) return true\n        if\
    \ (sum == 19) return true\n        if (sum == 20) return true\n        if (sum\
    \ == 21) return true\n        if (sum == 22) return true\n        if (sum == 23)\
    \ return true\n        if (sum == 24) return true\n        if (sum == 25) return\
    \ true\n        if (sum == 26) return true\n        if (sum == 27) return true\n\
    \        if (sum == 28) return true\n        if (sum == 29) return true\n    \
    \    if (sum == 30) return true\n        if (sum == 31) return true\n        if\
    \ (sum == 32) return true\n        if (sum == 33) return true\n        if (sum\
    \ == 34) return true\n        if (sum == 35) return true\n        if (sum == 36)\
    \ return true\n        if (sum == 37) return true\n        if (sum == 38) return\
    \ true\n        if (sum == 39) return true\n        if (sum == 40) return true\n\
    \        if (sum == 41) return true\n        if (sum == 42) return true\n    \
    \    if (sum == 43) return true\n        if (sum == 44) return true\n        if\
    \ (sum == 45) return true\n        if (sum == 46) return true\n        if (sum\
    \ == 47) return true\n        if (sum == 48) return true\n        if (sum == 49)\
    \ return true\n        if (sum == 50) return true\n        if (sum == 51) return\
    \ true\n        if (sum == 52) return true\n        if (sum == 53) return true\n\
    \        if (sum == 54) return true\n        if (sum == 55) return true\n    \
    \    if (sum == 56) return true\n        if (sum == 57) return true\n        if\
    \ (sum == 58) return true\n        if (sum == 59) return true\n        if (sum\
    \ == 60) return true\n        if (sum == 61) return true\n        if (sum == 62)\
    \ return true\n        if (sum == 63) return true\n        if (sum == 64) return\
    \ true\n        if (sum == 65) return true\n        if (sum == 66) return true\n\
    \        if (sum == 67) return true\n        if (sum == 68) return true\n    \
    \    if (sum == 69) return true\n        if (sum == 70) return true\n        if\
    \ (sum == 71) return true\n        if (sum", "        val sum = x + y + z\n  \
    \      val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n      \
    \  val isAllInteger = (isInteger && isSum)\n        isAllInteger", "        val\
    \ sum = x + y + z\n        val isInteger = sum.toString.toInt\n        val isSum\
    \ = sum.toString.toDouble\n        val isSumOfTwo = sum.toString.toDouble\n  \
    \      val isSumOfThree = sum.toString.toDouble\n        val isSumOfThreeAndFour\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFive = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFourAndFiveAndSix = sum.toString.toDouble\n      \
    \  val isSumOfThreeAndFourAndFiveAndSixAndSeven = sum.toString.toDouble\n    \
    \    val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEight = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNine = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTen = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndEleven\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelve\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteenAndFourteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteenAndFourteenAndFifteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndElevenAndTwelveAndThirteenAndFourteenAndFifteenAndSixteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourAndFiveAndSixAndSevenAndEightAndNineAndTenAndEleven",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  val isAllIntegerOrZero = (isInteger && isAllInteger)\n        val isAllIntegerOrZeroOrNegative\
    \ = (isInteger && isAllIntegerOrZero)\n        val isAllIntegerOrZeroOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrZeroOrNegative)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZero)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegative)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZero)\n      \
    \  val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero = (isInteger\
    \ && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative)\n        val\
    \ isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative)\n\
    \        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative)\n\
    \        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative)\n\
    \        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative)\n\
    \        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrZeroOrNegativeOr", "        val sum = x + y +\
    \ z\n        if (sum == 0) true\n        else false", "        val sum = x + y\
    \ + z\n        val isInteger = math.ceil(sum) == sum\n        val isEqual = math.abs(x\
    \ - sum) == math.abs(y - sum) == math.abs(z - sum)\n        isInteger && isEqual",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n     \
    \   val isSum = (sum == x + y + z)\n        val isEqual = (x == y + z)\n     \
    \   val isEqualOrInteger = (isInteger || isEqual)\n        val isEqualOrSum =\
    \ (isEqualOrInteger || isSum)\n        isEqualOrSum", "        val sum = x + y\
    \ + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        isAllInteger", "   \
    \     val sum = x + y + z\n        if (sum != z && sum != y && sum != x && sum.isInstanceOf[Int])\
    \ {\n            return true\n        }\n        false", "        val sum = x\
    \ + y + z\n        val intSum = math.round(sum)\n        val intSum2 = math.round(sum\
    \ * 2)\n        val intSum3 = math.round(sum * 3)\n        val intSum4 = math.round(sum\
    \ * 4)\n        val intSum5 = math.round(sum * 5)\n        val intSum6 = math.round(sum\
    \ * 6)\n        val intSum7 = math.round(sum * 7)\n        val intSum8 = math.round(sum\
    \ * 8)\n        val intSum9 = math.round(sum * 9)\n        val intSum10 = math.round(sum\
    \ * 10)\n        val intSum11 = math.round(sum * 11)\n        val intSum12 = math.round(sum\
    \ * 12)\n        val intSum13 = math.round(sum * 13)\n        val intSum14 = math.round(sum\
    \ * 14)\n        val intSum15 = math.round(sum * 15)\n        val intSum16 = math.round(sum\
    \ * 16)\n        val intSum17 = math.round(sum * 17)\n        val intSum18 = math.round(sum\
    \ * 18)\n        val intSum19 = math.round(sum * 19)\n        val intSum20 = math.round(sum\
    \ * 20)\n        val intSum21 = math.round(sum * 21)\n        val intSum22 = math.round(sum\
    \ * 22)\n        val intSum23 = math.round(sum * 23)\n        val intSum24 = math.round(sum\
    \ * 24)\n        val intSum25 = math.round(sum * 25)\n        val intSum26 = math.round(sum\
    \ * 26)\n        val intSum27 = math.round(sum * 27)\n        val intSum28 = math.round(sum\
    \ * 28)\n        val intSum29 = math.round(sum * 29)\n        val intSum30 = math.round(sum\
    \ * 30)\n        val intSum31 = math.round(sum * 31)\n        val intSum32 = math.round(sum\
    \ * 32)\n        val intSum33 = math.round(sum * 33)\n        val intSum34 = math.round(sum\
    \ * 34)\n        val intSum35 = math.round(sum * 35)\n        val intSum36 = math.round(sum\
    \ * 36)\n        val intSum37 = math.round(sum * 37)\n        val intSum38 = math.round(sum\
    \ * 38)\n        val intSum39 = math.round(sum * 39)\n        val intSum40 = math.round(sum\
    \ * 40)\n        val intSum41 = math.round(sum * 41)\n        val intSum42 = math.round(sum\
    \ * 42)", "        val sum = x + y + z\n        val isInt = sum.toInt == sum\n\
    \        val isInteger = isInt && sum.toInt == sum\n        val isInt = isInt\
    \ && sum.toInt == sum\n        isInteger || isInt", "        val sum = x + y +\
    \ z\n        val isInteger = (sum.toInt).isInstanceOf[Int]\n        val isSum\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isEqual = sum == (x + y + z)\n\
    \        val isEqual2 = sum == (x + y + z.toInt)\n        val isEqual3 = sum ==\
    \ (x + y + z.toLong)\n        val isEqual4 = sum == (x + y + z.toDouble)\n   \
    \     val isEqual5 = sum == (x + y + z.toFloat)\n        val isEqual6 = sum ==\
    \ (x + y + z.toShort)\n        val isEqual7 = sum == (x + y + z.toByte)\n    \
    \    val isEqual8 = sum == (x + y + z.toChar)\n        val isEqual9 = sum == (x\
    \ + y + z.toBoolean)\n        val isEqual10 = sum == (x + y + z.toByte)\n    \
    \    val isEqual11 = sum == (x + y + z.toShort)\n        val isEqual12 = sum ==\
    \ (x + y + z.toInt)\n        val isEqual13 = sum == (x + y + z.toLong)\n     \
    \   val isEqual14 = sum == (x + y + z.toDouble)\n        val isEqual15 = sum ==\
    \ (x + y + z.toFloat)\n        val isEqual16 = sum == (x + y + z.toChar)\n   \
    \     val isEqual17 = sum == (x + y + z.toBoolean)\n        val isEqual18 = sum\
    \ == (x + y + z.toByte)\n        val isEqual19 = sum == (x + y + z.toShort)\n\
    \        val isEqual20 = sum == (x + y + z.toInt)\n        val isEqual21 = sum\
    \ == (x + y + z.toLong)\n        val isEqual22 = sum == (x + y + z.toDouble)\n\
    \        val isEqual23 = sum == (x + y + z.toFloat)\n        val isEqual24 = sum\
    \ == (x + y + z.toChar)\n        val isEqual25 = sum == (x + y + z.toBoolean)\n\
    \        val isEqual26 = sum == (x + y + z.toByte)\n        val isEqual27 = sum\
    \ == (x + y + z.toShort)\n        val isEqual28 = sum == (x + y + z.toInt)\n \
    \       val isEqual29 = sum == (x + y + z.toLong)\n        val isEqual30 = sum\
    \ == (x + y + z.toDouble)\n        val isEqual31 = sum", "        val sum = x\
    \ + y + z\n        val isInteger = (sum.toInt == sum)\n        val isSum = (sum\
    \ == x)\n        val isDifferent = (x != y)\n        val isDifferentOrInteger\
    \ = (isDifferent || isInteger)\n        val isDifferentOrSum = (isDifferent ||\
    \ isSum)\n        val isDifferentOrSumOrInteger = (isDifferentOrSum || isInteger)\n\
    \        val isDifferentOrSumOrIntegerOrDifferent = (isDifferentOrSumOrInteger\
    \ || isDifferent)\n        val isDifferentOrSumOrIntegerOrDifferentOrInteger =\
    \ (isDifferentOrSumOrIntegerOrDifferent || isInteger)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSum\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrInteger || isSum)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrInteger\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSum || isInteger)\n      \
    \  val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferent\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrInteger || isDifferent)\n\
    \        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrInteger\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferent ||\
    \ isInteger)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSum\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrInteger\
    \ || isSum)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSumOrInteger\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSumOrInteger\
    \ || isInteger)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferent\
    \ = (isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrInteger\
    \ || isDifferent)\n        val isDifferentOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOrIntegerOrSumOrIntegerOrDifferentOr",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt % 1 == 0)\n   \
    \     val isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n\
    \        isAllInteger", "        val sum = x + y + z\n        val isInteger =\
    \ (sum % 1) == 0\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        val isAllIntegersOrZero = (isAllInteger || sum == 0)\n  \
    \      isAllIntegersOrZero", "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt % 1 == 0)\n        val isSum = (sum == x)\n        val isAllInteger\
    \ = (isInteger && isSum)\n        val isAllIntegerAndNotEqual = (isInteger &&\
    \ !isSum)\n        val isAllIntegerAndNotEqual2 = (isInteger && !isAllInteger)\n\
    \        val isAllIntegerAndNotEqual3 = (isInteger && !isAllIntegerAndNotEqual)\n\
    \        val isAllIntegerAndNotEqual4 = (isInteger && !isAllIntegerAndNotEqual2)\n\
    \        val isAllIntegerAndNotEqual5 = (isInteger && !isAllIntegerAndNotEqual3)\n\
    \        val isAllIntegerAndNotEqual6 = (isInteger && !isAllIntegerAndNotEqual4)\n\
    \        val isAllIntegerAndNotEqual7 = (isInteger && !isAllIntegerAndNotEqual5)\n\
    \        val isAllIntegerAndNotEqual8 = (isInteger && !isAllIntegerAndNotEqual6)\n\
    \        val isAllIntegerAndNotEqual9 = (isInteger && !isAllIntegerAndNotEqual7)\n\
    \        val isAllIntegerAndNotEqual10 = (isInteger && !isAllIntegerAndNotEqual8)\n\
    \        val isAllIntegerAndNotEqual11 = (isInteger && !isAllIntegerAndNotEqual9)\n\
    \        val isAllIntegerAndNotEqual12 = (isInteger && !isAllIntegerAndNotEqual10)\n\
    \        val isAllIntegerAndNotEqual13 = (isInteger && !isAllIntegerAndNotEqual11)\n\
    \        val isAllIntegerAndNotEqual14 = (isInteger && !isAllIntegerAndNotEqual12)\n\
    \        val isAllIntegerAndNotEqual15 = (isInteger && !isAllIntegerAndNotEqual13)\n\
    \        val isAllIntegerAndNotEqual16 = (isInteger && !isAllIntegerAndNotEqual14)\n\
    \        val isAllIntegerAndNotEqual17 = (isInteger && !isAllIntegerAndNotEqual15)\n\
    \        val isAllIntegerAndNotEqual18 = (isInteger && !isAllIntegerAndNotEqual16)\n\
    \        val isAllIntegerAndNotEqual19 = (isInteger && !isAllIntegerAndNotEqual17)\n\
    \        val isAllIntegerAndNotEqual20 = (isInteger && !isAllIntegerAndNotEqual18)\n\
    \        val isAllIntegerAndNotEqual21 = (isInteger && !isAllIntegerAndNotEqual19)\n\
    \        val isAllIntegerAndNotEqual22 = (isInteger && !isAllIntegerAndNotEqual20)\n\
    \        val isAllIntegerAndNotEqual23 = (isInteger && !is", "        val sum\
    \ = x + y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum\
    \ == x)\n        val isAllInteger = (isInteger && isSum)\n        val isAllIntegerAndNotEqual\
    \ = (isInteger && !isSum)\n        isAllInteger || isAllIntegerAndNotEqual", " \
    \       val sum = (x + y + z).toInt\n        val sum2 = sum * sum\n        val\
    \ sum3 = sum2 * sum\n        val sum4 = sum3 * sum\n        val sum5 = sum4 *\
    \ sum\n        val sum6 = sum5 * sum\n        val sum7 = sum6 * sum\n        val\
    \ sum8 = sum7 * sum\n        val sum9 = sum8 * sum\n        val sum10 = sum9 *\
    \ sum\n        val sum11 = sum10 * sum\n        val sum12 = sum11 * sum\n    \
    \    val sum13 = sum12 * sum\n        val sum14 = sum13 * sum\n        val sum15\
    \ = sum14 * sum\n        val sum16 = sum15 * sum\n        val sum17 = sum16 *\
    \ sum\n        val sum18 = sum17 * sum\n        val sum19 = sum18 * sum\n    \
    \    val sum20 = sum19 * sum\n        val sum21 = sum20 * sum\n        val sum22\
    \ = sum21 * sum\n        val sum23 = sum22 * sum\n        val sum24 = sum23 *\
    \ sum\n        val sum25 = sum24 * sum\n        val sum26 = sum25 * sum\n    \
    \    val sum27 = sum26 * sum\n        val sum28 = sum27 * sum\n        val sum29\
    \ = sum28 * sum\n        val sum30 = sum29 * sum\n        val sum31 = sum30 *\
    \ sum\n        val sum32 = sum31 * sum\n        val sum33 = sum32 * sum\n    \
    \    val sum34 = sum33 * sum\n        val sum35 = sum34 * sum\n        val sum36\
    \ = sum35 * sum\n        val sum37 = sum36 * sum\n        val sum38 = sum37 *\
    \ sum\n        val sum39 = sum38 * sum\n        val sum40 = sum39 * sum\n    \
    \    val sum41 = sum40 * sum\n        val sum42 = sum41 * sum\n        val sum43\
    \ = sum42 * sum\n        val sum44 = sum43 * sum\n        val sum45 = sum44 *\
    \ sum\n        val sum46 = sum45 * sum\n        val sum47 = sum46 * sum\n    \
    \    val sum48 = sum47 * sum\n        val sum49 = sum48 * sum\n        val sum50\
    \ = sum49 * sum\n        val sum51 = sum50 * sum\n        val sum52 = sum51 *\
    \ sum\n        val sum53 = sum52 * sum\n", "        val sum = x + y + z\n    \
    \    val isInteger = math.floor(sum) == sum\n        val isAllInteger = math.floor(sum)\
    \ == math.ceil(sum)\n        isInteger && isAllInteger", "        val sum = x\
    \ + y + z\n        val isInteger = sum % 1 == 0\n        val isEqual = sum ==\
    \ x + y + z\n        isInteger && isEqual", "        val sum = x + y + z\n   \
    \     val isInteger = (sum.toInt == sum)\n        val isAllIntegers = (x.toInt\
    \ == x) && (y.toInt == y) && (z.toInt == z)\n        isInteger && isAllIntegers",
  "        val xs = List(x, y, z)\n        val ys = xs.map(_.toInt)\n        val zs\
    \ = xs.map(_.toInt)\n        val sum = ys.sum + zs.sum\n        val xIsInt = xs.forall(_.toInt\
    \ == sum)\n        val yIsInt = ys.forall(_.toInt == sum)\n        val zIsInt\
    \ = zs.forall(_.toInt == sum)\n        xIsInt && yIsInt && zIsInt", '        (x
    == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) &&
    x == (y - z))', "        val sum = x + y + z\n        val isInteger = (sum % 1)\
    \ == 0\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        isAllInteger", "        val sum = x + y + z\n        val\
    \ isInteger = math.ceil(sum) == sum\n        val isSum = math.abs(x - y) + math.abs(y\
    \ - z) + math.abs(z - x) == math.abs(sum)\n        isInteger && isSum", "    \
    \    val sum = x + y + z\n        val isInteger = sum.asInstanceOf[Int] == sum\n\
    \        val isEqual = sum == x + y + z\n        val isEqual2 = sum == x + y\n\
    \        val isEqual3 = sum == x\n        val isEqual4 = sum == y\n        val\
    \ isEqual5 = sum == z\n        val isEqual6 = sum == x + y + z\n        val isEqual7\
    \ = sum == x + y\n        val isEqual8 = sum == x\n        val isEqual9 = sum\
    \ == y\n        val isEqual10 = sum == z\n        val isEqual11 = sum == x + y\
    \ + z\n        val isEqual12 = sum == x + y\n        val isEqual13 = sum == x\n\
    \        val isEqual14 = sum == y\n        val isEqual15 = sum == z\n        val\
    \ isEqual16 = sum == x + y + z\n        val isEqual17 = sum == x + y\n       \
    \ val isEqual18 = sum == x\n        val isEqual19 = sum == y\n        val isEqual20\
    \ = sum == z\n        val isEqual21 = sum == x + y + z\n        val isEqual22\
    \ = sum == x + y\n        val isEqual23 = sum == x\n        val isEqual24 = sum\
    \ == y\n        val isEqual25 = sum == z\n        val isEqual26 = sum == x + y\
    \ + z\n        val isEqual27 = sum == x + y\n        val isEqual28 = sum == x\n\
    \        val isEqual29 = sum == y\n        val isEqual30 = sum == z\n        val\
    \ isEqual31 = sum == x + y + z\n        val isEqual32 = sum == x + y\n       \
    \ val isEqual33 = sum == x\n        val isEqual34 = sum == y\n        val isEqual35\
    \ = sum == z\n        val isEqual36 = sum == x + y + z\n        val isEqual37\
    \ = sum == x + y\n        val isEqual38 = sum == x\n        val isEqual39 = sum\
    \ == y\n        val isEqual40 = sum == z\n        val isEqual41 = sum == x + y\
    \ + z\n        val isEqual42 = sum == x + y\n        val isEqual43 = sum == x\n\
    \        val isEqual44 = sum == y\n        val isEqual45 = sum == z\n        val\
    \ isEqual46 = sum == x + y + z\n        val isEqual47 = sum == x + y\n       \
    \ val ", "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n\
    \        val isEqual = sum == isInteger\n        val isAllInteger = isInteger.toString.toInt\
    \ == 3\n        isEqual && isAllInteger", "        val sum = x + y + z\n     \
    \   val isInteger = sum.toInt % 1 == 0\n        val isSum = sum == x + y + z\n\
    \        val isAllInteger = isInteger && isSum\n        val isAllIntegerAndNotEqualToZero\
    \ = sum != 0\n        isAllInteger && isAllIntegerAndNotEqualToZero", "      \
    \  val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val isSum\
    \ = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n        val isAllInteger\
    \ = (isAllInteger && isInteger)\n        isAllInteger", "        val sum = x +\
    \ y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        isAllInteger", "   \
    \     val sum = x + y + z\n        val intSum = math.round(sum)\n        val intSumInt\
    \ = math.round(intSum)\n        intSumInt == sum", "        val sum = (x + y +\
    \ z).toInt\n        val num = (x + y + z).toInt\n        val num2 = (x * y * z).toInt\n\
    \        val num3 = (x * y * z).toInt\n        val num4 = (x * y * z).toInt\n\
    \        val num5 = (x * y * z).toInt\n        val num6 = (x * y * z).toInt\n\
    \        val num7 = (x * y * z).toInt\n        val num8 = (x * y * z).toInt\n\
    \        val num9 = (x * y * z).toInt\n        val num10 = (x * y * z).toInt\n\
    \        val num11 = (x * y * z).toInt\n        val num12 = (x * y * z).toInt\n\
    \        val num13 = (x * y * z).toInt\n        val num14 = (x * y * z).toInt\n\
    \        val num15 = (x * y * z).toInt\n        val num16 = (x * y * z).toInt\n\
    \        val num17 = (x * y * z).toInt\n        val num18 = (x * y * z).toInt\n\
    \        val num19 = (x * y * z).toInt\n        val num20 = (x * y * z).toInt\n\
    \        val num21 = (x * y * z).toInt\n        val num22 = (x * y * z).toInt\n\
    \        val num23 = (x * y * z).toInt\n        val num24 = (x * y * z).toInt\n\
    \        val num25 = (x * y * z).toInt\n        val num26 = (x * y * z).toInt\n\
    \        val num27 = (x * y * z).toInt\n        val num28 = (x * y * z).toInt\n\
    \        val num29 = (x * y * z).toInt\n        val num30 = (x * y * z).toInt\n\
    \        val num31 = (x * y * z).toInt\n        val num32 = (x * y * z).toInt\n\
    \        val num33 = (x * y * z).toInt\n        val num34 = (x * y * z).toInt\n\
    \        val num35 = (x * y * z).toInt\n        val num36 = (x * y * z).toInt\n\
    \        val num37 = (x * y * z).toInt\n        val num38 = (x * y * z).toInt\n\
    \        val num39 = (x * y * z).toInt\n        val num40 = (x * y * z).toInt\n\
    \        val num41 = (x * y * z).toInt\n        val num42 = (x * y * z).toInt\n\
    \        val num43 = (x * y * z).toInt\n        val num44 = (x * y * z).toInt\n\
    \        val num45 = (x * y * z).toInt\n        val num46", "        val xs =\
    \ List(x, y, z)\n        val ys = xs.map(_.toInt)\n        val zs = xs.map(_.toInt)\n\
    \        val sums = ys.zip(zs).map(x => x._1 + x._2)\n        sums.contains(xs.sum)",
  "        val sum = x + y + z\n        if (sum == 0) true\n        else false", " \
    \       val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n    \
    \    val isSum = (sum == x + y + z)\n        val isAllIntegers = (isInteger &&\
    \ isSum)\n        val isAllIntegersAndAllSums = (isInteger && isSum)\n       \
    \ isAllIntegers && isAllIntegersAndAllSums", "        val sum = x + y + z\n  \
    \      val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n      \
    \  val isAllIntegers = (isInteger && isSum)\n        val isAllIntegersAndAllSum\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZero\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOne\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwo\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThree\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFour\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFive\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSix\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSeven\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSevenAndNotEqualToEight\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAndNotEqualToOneAndNotEqualToTwoAndNotEqualToThreeAndNotEqualToFourAndNotEqualToFiveAndNotEqualToSixAndNotEqualToSevenAndNotEqualToEightAndNotEqualToNine\
    \ = isInteger && isSum\n        val isAllIntegersAndAllSumAndNotEqualToZeroAnd",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n     \
    \   val isSum = (sum == sum.toInt)\n        val isEqual = (x == y && y == z)\n\
    \        val isEqualOrInteger = (isEqual || isInteger)\n        val isEqualOrSum\
    \ = (isEqual || isSum)\n        val isEqualOrAll = (isEqual || isInteger)\n  \
    \      val isEqualOrAllOrInteger = (isEqual || isInteger)\n        val isEqualOrAllOrSum\
    \ = (isEqual || isSum)\n        val isEqualOrAllOrAll = (isEqual || isInteger)\n\
    \        val isEqualOrAllOrAllOrInteger = (isEqual || isInteger)\n        val\
    \ isEqualOrAllOrAllOrSum = (isEqual || isSum)\n        val isEqualOrAllOrAllOrAll\
    \ = (isEqual || isInteger)\n        val isEqualOrAllOrAllOrAllOrInteger = (isEqual\
    \ || isInteger)\n        val isEqualOrAllOrAllOrAllOrSum = (isEqual || isSum)\n\
    \        val isEqualOrAllOrAllOrAllOrAll = (isEqual || isInteger)\n        val\
    \ isEqualOrAllOrAllOrAllOrAllOrInteger = (isEqual || isInteger)\n        val isEqualOrAllOrAllOrAllOrAllOrSum\
    \ = (isEqual || isSum)\n        val isEqualOrAllOrAllOrAllOrAllOrAll = (isEqual\
    \ || isInteger)\n        val isEqualOrAllOrAllOrAllOrAllOrAllOrInteger = (isEqual\
    \ || isInteger)\n        val isEqualOrAllOrAllOrAllOrAllOrAllOrSum = (isEqual\
    \ || isSum)\n        val isEqualOrAllOrAllOrAllOrAllOrAllOrAll = (isEqual || isInteger)\n\
    \        val isEqualOrAllOrAllOrAllOrAllOrAllOrAllOrInteger = (isEqual || isInteger)\n\
    \        val isEqualOrAllOrAllOrAllOrAllOrAllOrAllOrSum = (isEqual || isSum)\n\
    \        val isEqualOrAllOrAllOrAllOrAllOrAllOrAllOrAll = (isEqual || isInteger)\n\
    \        val isEqualOrAllOrAllOrAllOrAllOrAllOrAllOrAllOrInteger = (isEqual ||\
    \ isInteger)\n        val isEqualOrAllOrAllOrAllOrAllOr", "        val sum = x\
    \ + y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum ==\
    \ x)\n        val isAllIntegers = (x % 1 == 0) &&\n                          \
    \ (y % 1 == 0) &&\n                           (z % 1 == 0)\n        isInteger\
    \ || isSum || isAllIntegers", "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isSum = sum == x + y + z\n        val isEqual\
    \ = sum == (x + y + z)\n        val isEqual2 = sum == (x + y + z) == (x + y +\
    \ z)\n        val isEqual3 = sum == (x + y + z) == (x + y + z) == (x + y + z)\n\
    \        val isEqual4 = sum == (x + y + z) == (x + y + z) == (x + y + z) == (x\
    \ + y + z)\n        val isEqual5 = sum == (x + y + z) == (x + y + z) == (x + y\
    \ + z) == (x + y + z) == (x + y + z)\n        val isEqual6 = sum == (x + y + z)\
    \ == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z)\n\
    \        val isEqual7 = sum == (x + y + z) == (x + y + z) == (x + y + z) == (x\
    \ + y + z) == (x + y + z) == (x + y + z) == (x + y + z)\n        val isEqual8\
    \ = sum == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y\
    \ + z) == (x + y + z) == (x + y + z) == (x + y + z)\n        val isEqual9 = sum\
    \ == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) ==\
    \ (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z)\n        val isEqual10\
    \ = sum == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y\
    \ + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y +\
    \ z)\n        val isEqual11 = sum == (x + y + z) == (x + y + z) == (x + y + z)\
    \ == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) ==\
    \ (x + y + z) == (x + y + z) == (x + y + z)\n        val isEqual12 = sum == (x\
    \ + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x +\
    \ y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y + z) == (x + y\
    \ + z) == (x + y + z)\n        val isEqual13 = sum == (", "        val sum = x\
    \ + y + z\n        val isInteger = sum.toString.toInt\n        val isSum = sum.toString.toDouble\
    \ == sum\n        val isEqual = sum.toString.toDouble == sum\n        val isEqual2\
    \ = sum.toString.toDouble == sum\n        val isEqual3 = sum.toString.toDouble\
    \ == sum\n        val isEqual4 = sum.toString.toDouble == sum\n        val isEqual5\
    \ = sum.toString.toDouble == sum\n        val isEqual6 = sum.toString.toDouble\
    \ == sum\n        val isEqual7 = sum.toString.toDouble == sum\n        val isEqual8\
    \ = sum.toString.toDouble == sum\n        val isEqual9 = sum.toString.toDouble\
    \ == sum\n        val isEqual10 = sum.toString.toDouble == sum\n        val isEqual11\
    \ = sum.toString.toDouble == sum\n        val isEqual12 = sum.toString.toDouble\
    \ == sum\n        val isEqual13 = sum.toString.toDouble == sum\n        val isEqual14\
    \ = sum.toString.toDouble == sum\n        val isEqual15 = sum.toString.toDouble\
    \ == sum\n        val isEqual16 = sum.toString.toDouble == sum\n        val isEqual17\
    \ = sum.toString.toDouble == sum\n        val isEqual18 = sum.toString.toDouble\
    \ == sum\n        val isEqual19 = sum.toString.toDouble == sum\n        val isEqual20\
    \ = sum.toString.toDouble == sum\n        val isEqual21 = sum.toString.toDouble\
    \ == sum\n        val isEqual22 = sum.toString.toDouble == sum\n        val isEqual23\
    \ = sum.toString.toDouble == sum\n        val isEqual24 = sum.toString.toDouble\
    \ == sum\n        val isEqual25 = sum.toString.toDouble == sum\n        val isEqual26\
    \ = sum.toString.toDouble == sum\n        val isEqual27 = sum.toString.toDouble\
    \ == sum\n        val isEqual28 = sum.toString.toDouble == sum\n        val isEqual29\
    \ = sum.toString.toDouble == sum\n        val isEqual30 = sum.toString.toDouble\
    \ == sum\n        val isEqual31 = sum.toString.toDouble == sum\n        val isEqual32\
    \ = sum.toString.toDouble == sum\n        val isEqual33 = sum.toString.toDouble ",
  "        val sum = x + y + z\n        val isInteger = (sum % 1 == 0)\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  isAllInteger", "        val sum = x + y + z\n        val isInteger = (sum.toInt\
    \ % 1 == 0)\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        val isAllIntegerOrZero = (isAllInteger || (x == 0))\n   \
    \     isAllIntegerOrZero", "        val sum = x + y + z\n        val isInteger\
    \ = sum.toString.toInt\n        val isSum = sum == sum.toInt\n        val isAllInteger\
    \ = isInteger && isSum\n        val isAllInteger = isAllInteger && x.toString.toInt\
    \ == x.toString.toInt\n        val isAllInteger = isAllInteger && y.toString.toInt\
    \ == y.toString.toInt\n        val isAllInteger = isAllInteger && z.toString.toInt\
    \ == z.toString.toInt\n        isAllInteger", "        val sum = (x + y + z).asInstanceOf[Int]\n\
    \        val sum2 = (x * y * z).asInstanceOf[Int]\n        sum == sum2", "   \
    \     val sum = x + y + z\n        val isInteger = (sum.toInt % 1 == 0)\n    \
    \    val isSum = (sum == (x + y + z).toInt)\n        val isEqual = (isInteger\
    \ && isSum)\n        val isNotEqual = !isEqual\n        isEqual", "        val\
    \ sum = x + y + z\n        val isInteger = sum.toInt == sum\n        val isSum\
    \ = x + y == sum\n        val isAllInteger = isInteger && isSum\n        val isAllInteger\
    \ = isAllInteger && x.toInt == x.toInt && y.toInt == y.toInt && z.toInt == z.toInt\n\
    \        isAllInteger", "        val sum = x + y + z\n        val isInteger =\
    \ (sum.toInt % 1 == 0)\n        val isSum = (sum == (x + y + z))\n        val\
    \ isAllInteger = (isInteger && isSum)\n        isAllInteger", '        (x == (x
    + y) && x == (x + z) && x == (y + z))', "        val sum = x + y + z\n       \
    \ val isInteger = sum.asInstanceOf[Int] == sum\n        val isEqual = x + y ==\
    \ z\n        val isSum = x + y == sum\n        val isSumOfTwo = x + y == sum *\
    \ 2\n        val isSumOfThree = x + y == sum * 3\n        val isSumOfFour = x\
    \ + y == sum * 4\n        val isSumOfFive = x + y == sum * 5\n        val isSumOfSix\
    \ = x + y == sum * 6\n        val isSumOfSeven = x + y == sum * 7\n        val\
    \ isSumOfEight = x + y == sum * 8\n        val isSumOfNine = x + y == sum * 9\n\
    \        val isSumOfTen = x + y == sum * 10\n        val isSumOfEleven = x + y\
    \ == sum * 11\n        val isSumOfTwelve = x + y == sum * 12\n        val isSumOfThirteen\
    \ = x + y == sum * 13\n        val isSumOfFourteen = x + y == sum * 14\n     \
    \   val isSumOfFifteen = x + y == sum * 15\n        val isSumOfSixteen = x + y\
    \ == sum * 16\n        val isSumOfSeventeen = x + y == sum * 17\n        val isSumOfEighteen\
    \ = x + y == sum * 18\n        val isSumOfNineteen = x + y == sum * 19\n     \
    \   val isSumOfTwenty = x + y == sum * 20\n        val isSumOfTwentyOne = x +\
    \ y == sum * 21\n        val isSumOfTwentyTwo = x + y == sum * 22\n        val\
    \ isSumOfTwentyThree = x + y == sum * 23\n        val isSumOfTwentyFour = x +\
    \ y == sum * 24\n        val isSumOfTwentyFive = x + y == sum * 25\n        val\
    \ isSumOfTwentySix = x + y == sum * 26\n        val isSumOfTwentySeven = x + y\
    \ == sum * 27\n        val isSumOfTwentyEight = x + y == sum * 28\n        val\
    \ isSumOfTwentyNine = x + y == sum * 29\n        val isSumOfTwentyTen = x + y\
    \ == sum * 30\n        val isSumOfTwentyEleven = x + y == sum * 31\n        val\
    \ isSumOfTwentyTwelve = x + y == sum * 32\n        val isSumOfTwent", "      \
    \  val sum = x + y + z\n        val intSum = math.round(sum)\n        val intSum2\
    \ = math.round(sum * 2)\n        val intSum3 = math.round(sum * 3)\n        val\
    \ intSum4 = math.round(sum * 4)\n        val intSum5 = math.round(sum * 5)\n \
    \       val intSum6 = math.round(sum * 6)\n        val intSum7 = math.round(sum\
    \ * 7)\n        val intSum8 = math.round(sum * 8)\n        val intSum9 = math.round(sum\
    \ * 9)\n        val intSum10 = math.round(sum * 10)\n        val intSum11 = math.round(sum\
    \ * 11)\n        val intSum12 = math.round(sum * 12)\n        val intSum13 = math.round(sum\
    \ * 13)\n        val intSum14 = math.round(sum * 14)\n        val intSum15 = math.round(sum\
    \ * 15)\n        val intSum16 = math.round(sum * 16)\n        val intSum17 = math.round(sum\
    \ * 17)\n        val intSum18 = math.round(sum * 18)\n        val intSum19 = math.round(sum\
    \ * 19)\n        val intSum20 = math.round(sum * 20)\n        val intSum21 = math.round(sum\
    \ * 21)\n        val intSum22 = math.round(sum * 22)\n        val intSum23 = math.round(sum\
    \ * 23)\n        val intSum24 = math.round(sum * 24)\n        val intSum25 = math.round(sum\
    \ * 25)\n        val intSum26 = math.round(sum * 26)\n        val intSum27 = math.round(sum\
    \ * 27)\n        val intSum28 = math.round(sum * 28)\n        val intSum29 = math.round(sum\
    \ * 29)\n        val intSum30 = math.round(sum * 30)\n        val intSum31 = math.round(sum\
    \ * 31)\n        val intSum32 = math.round(sum * 32)\n        val intSum33 = math.round(sum\
    \ * 33)\n        val intSum34 = math.round(sum * 34)\n        val intSum35 = math.round(sum\
    \ * 35)\n        val intSum36 = math.round(sum * 36)\n        val intSum37 = math.round(sum\
    \ * 37)\n        val intSum38 = math.round(sum * 38)\n        val intSum39 = math.round(sum\
    \ * 39)\n        val intSum40 = math.round(sum * 40)\n        val intSum41 = math.round(sum\
    \ * 41)\n        val intSum42 = math.round(sum * 42)", "        val sum = x +\
    \ y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        isAllInteger", "   \
    \     val sum = x + y + z\n        val isInteger = sum.toInt == sum\n        val\
    \ isEqual = sum == x + y + z\n        val isAllInteger = isInteger && isEqual\n\
    \        isAllInteger", "        val sum = x + y + z\n        val isInteger =\
    \ sum.toInt % 1 == 0\n        val isSum = sum == x + y + z\n        val isAllInteger\
    \ = isInteger && isSum\n        val isAllIntegerOrZero = sum == 0 || sum == x\
    \ + y || sum == x + z || sum == y + z\n        isAllInteger || isAllIntegerOrZero",
  "        val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  val isAllIntegerOrZero = (isInteger && isAllInteger) || (isInteger && z ==\
    \ 0)\n        val isAllIntegerOrNegative = (isInteger && isAllIntegerOrZero) ||\
    \ (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZero = (isInteger\
    \ && isAllIntegerOrNegative) || (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZero) || (isInteger && z < 0)\n    \
    \    val isAllIntegerOrNegativeOrZeroOrZeroOrZero = (isInteger && isAllIntegerOrNegativeOrZeroOrZero)\
    \ || (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZeroOrZeroOrZero) || (isInteger && z\
    \ < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZero = (isInteger\
    \ && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZero) || (isInteger && z < 0)\n\
    \        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZero = (isInteger\
    \ && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZero) || (isInteger && z\
    \ < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZero)\
    \ || (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero)\
    \ || (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero)\
    \ || (isInteger && z < 0)\n        val isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero\
    \ = (isInteger && isAllIntegerOrNegativeOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZeroOrZero)\
    \ || (isInteger && z < 0)\n        ", "        val sum = x + y + z\n        val\
    \ isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n        val isAllInteger\
    \ = (isInteger && isSum)\n        val isAllIntegerAndNotEqualToZero = (isAllInteger\
    \ && z != 0)\n        isAllIntegerAndNotEqualToZero", "        val sum = x + y\
    \ + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        isAllInteger", "   \
    \     val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x + y + z)\n        val isAllInteger = (x % 1 == 0 && y % 1\
    \ == 0 && z % 1 == 0)\n        isInteger || isSum || isAllInteger", "        val\
    \ sum = x + y + z\n        val intSum = math.round(sum)\n        val intSumInt\
    \ = math.round(intSum)\n        intSumInt == sum", '        (x == x + y && x ==
    x + z) || (x == y + z && x == y + x)', "        val sum = x + y + z\n        val\
    \ isInteger = (sum.toInt % 1 == 0)\n        val isSum = (sum == x)\n        val\
    \ isAllIntegers = (isInteger && isSum)\n        isAllIntegers", "        val sum\
    \ = x + y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum\
    \ == x)\n        val isAllInteger = (isInteger && isSum)\n        val isAllIntegerOrZero\
    \ = (isInteger && isSum) || (isInteger && x == 0)\n        isAllInteger || isAllIntegerOrZero",
  '        (x == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x ==
    (x - z) && x == (y - z))', "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isEqual = sum == x + y + z\n        val isAllInteger\
    \ = (x % 1 == 0) || (y % 1 == 0) || (z % 1 == 0)\n        isInteger && isEqual\
    \ && isAllInteger", "        val sum = x + y + z\n        val isInteger = (sum\
    \ % 1) == 0\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        val isAllIntegerOrZero = (isInteger && isSum) || (isInteger\
    \ && x == 0)\n        isAllInteger || isAllIntegerOrZero", "        val sum =\
    \ x + y + z\n        val isInteger = sum.toInt == sum\n        val isEqual = sum\
    \ == x + y + z\n        val isEqual2 = sum == x + y\n        val isEqual3 = sum\
    \ == x\n        val isEqual4 = sum == y\n        val isEqual5 = sum == z\n   \
    \     isInteger || isEqual || isEqual2 || isEqual3 || isEqual4 || isEqual5", " \
    \       val sum = x + y + z\n        if (sum == 0) true\n        else false",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n     \
    \   val isSum = (sum == x)\n        val isAll = (x == y) && (y == z)\n       \
    \ isInteger && isSum && isAll", "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isSum = (sum == x)\n        val isAllInteger =\
    \ (isInteger && isSum)\n        isAllInteger", "        val sum = x + y + z\n\
    \        val isInteger = sum.toString.toInt\n        val isSum = sum == sum.toString.toInt\n\
    \        val isAllInteger = isInteger && isSum\n        val isAllInteger = isAllInteger\
    \ && x.toString.toInt == x.toString.toInt && y.toString.toInt == y.toString.toInt\
    \ && z.toString.toInt == z.toString.toInt\n        isAllInteger", "        val\
    \ sum = x + y + z\n        val isInteger = sum.toInt % 1 == 0\n        val isEqual\
    \ = sum == x + y + z\n        isEqual && isInteger", "        val sum = x + y\
    \ + z\n        val isInteger = (sum.toInt == sum)\n        val isAllInteger =\
    \ (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n        val isAllIntegerAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum)\n        val isAllIntegerAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum)\n   \
    \     val isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum = (x %\
    \ 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum != sum)\n\
    \        val isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum\
    \ != sum && sum != sum)\n        val isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum\
    \ != sum && sum != sum && sum != sum)\n        val isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum\
    \ != sum && sum != sum && sum != sum && sum != sum)\n        val isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum\
    \ != sum && sum != sum && sum != sum && sum != sum && sum != sum)\n        val\
    \ isAllIntegerAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSumAndNotEqualToSum\
    \ = (x % 1 != 0 && y % 1 != 0 && z % 1 != 0 && sum != sum && sum != sum && sum\
    \ != sum && sum != sum && sum != sum && sum != sum && sum != sum && sum", "  \
    \      val sum = x + y + z\n        val isInteger = sum.toInt == sum\n       \
    \ val isEqual = x + y == z\n        val isAllInteger = isInteger && isEqual\n\
    \        isAllInteger", "        val xx = x.toInt\n        val yy = y.toInt\n\
    \        val zz = z.toInt\n        (xx + yy + zz) == (xx + yy + zz)", "      \
    \  val sum = x + y + z\n        val isInteger = (sum.toInt % 1 == 0)\n       \
    \ val isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n  \
    \      val isAllInteger = (isAllInteger && isInteger)\n        isAllInteger",
  "        val sum = x + y + z\n        val intSum = math.round(sum)\n        val\
    \ intSum2 = math.round(sum * 2)\n        val intSum3 = math.round(sum * 3)\n \
    \       val intSum4 = math.round(sum * 4)\n        val intSum5 = math.round(sum\
    \ * 5)\n        val intSum6 = math.round(sum * 6)\n        val intSum7 = math.round(sum\
    \ * 7)\n        val intSum8 = math.round(sum * 8)\n        val intSum9 = math.round(sum\
    \ * 9)\n        val intSum10 = math.round(sum * 10)\n        val intSum11 = math.round(sum\
    \ * 11)\n        val intSum12 = math.round(sum * 12)\n        val intSum13 = math.round(sum\
    \ * 13)\n        val intSum14 = math.round(sum * 14)\n        val intSum15 = math.round(sum\
    \ * 15)\n        val intSum16 = math.round(sum * 16)\n        val intSum17 = math.round(sum\
    \ * 17)\n        val intSum18 = math.round(sum * 18)\n        val intSum19 = math.round(sum\
    \ * 19)\n        val intSum20 = math.round(sum * 20)\n        val intSum21 = math.round(sum\
    \ * 21)\n        val intSum22 = math.round(sum * 22)\n        val intSum23 = math.round(sum\
    \ * 23)\n        val intSum24 = math.round(sum * 24)\n        val intSum25 = math.round(sum\
    \ * 25)\n        val intSum26 = math.round(sum * 26)\n        val intSum27 = math.round(sum\
    \ * 27)\n        val intSum28 = math.round(sum * 28)\n        val intSum29 = math.round(sum\
    \ * 29)\n        val intSum30 = math.round(sum * 30)\n        val intSum31 = math.round(sum\
    \ * 31)\n        val intSum32 = math.round(sum * 32)\n        val intSum33 = math.round(sum\
    \ * 33)\n        val intSum34 = math.round(sum * 34)\n        val intSum35 = math.round(sum\
    \ * 35)\n        val intSum36 = math.round(sum * 36)\n        val intSum37 = math.round(sum\
    \ * 37)\n        val intSum38 = math.round(sum * 38)\n        val intSum39 = math.round(sum\
    \ * 39)\n        val intSum40 = math.round(sum * 40)\n        val intSum41 = math.round(sum\
    \ * 41)\n        val intSum42 = math.round(sum * 42)", "        val sum = x +\
    \ y + z\n        val isInteger = sum.toInt % 1 == 0\n        val isSum = sum ==\
    \ x + y + z\n        val isAllInteger = isInteger && isSum\n        val isAllInteger\
    \ = isAllInteger && isInteger\n        isAllInteger", "        val sum = x + y\
    \ + z\n        val isInteger = (sum.toInt == sum)\n        val isSum = (sum ==\
    \ sum.toInt)\n        val isEqual = (x == y && y == z && z == sum)\n        val\
    \ isEqual2 = (x == y && y == z && z == sum.toInt)\n        val isEqual3 = (x ==\
    \ y && y == z && z == sum.toFloat)\n        val isEqual4 = (x == y && y == z &&\
    \ z == sum.toDouble)\n        val isEqual5 = (x == y && y == z && z == sum.toLong)\n\
    \        val isEqual6 = (x == y && y == z && z == sum.toShort)\n        val isEqual7\
    \ = (x == y && y == z && z == sum.toByte)\n        val isEqual8 = (x == y && y\
    \ == z && z == sum.toChar)\n        val isEqual9 = (x == y && y == z && z == sum.toBoolean)\n\
    \        val isEqual10 = (x == y && y == z && z == sum.toShort)\n        val isEqual11\
    \ = (x == y && y == z && z == sum.toByte)\n        val isEqual12 = (x == y &&\
    \ y == z && z == sum.toChar)\n        val isEqual13 = (x == y && y == z && z ==\
    \ sum.toBoolean)\n        val isEqual14 = (x == y && y == z && z == sum.toShort)\n\
    \        val isEqual15 = (x == y && y == z && z == sum.toByte)\n        val isEqual16\
    \ = (x == y && y == z && z == sum.toChar)\n        val isEqual17 = (x == y &&\
    \ y == z && z == sum.toBoolean)\n        val isEqual18 = (x == y && y == z &&\
    \ z == sum.toShort)\n        val isEqual19 = (x == y && y == z && z == sum.toByte)\n\
    \        val isEqual20 = (x == y && y == z && z == sum.toChar)\n        val isEqual21\
    \ = (x == y && y == z && z == sum.toBoolean)\n        val isEqual22 = (x == y\
    \ && y == z && z == sum.toShort)\n        val isEqual23 = (x == y && y == z &&\
    \ z == sum.toByte)\n        val isEqual24 = (x == y && y == z && z == sum.toChar)\n\
    \        val isEqual25 = (x == y && y == z && z == sum.toBoolean)\n        val\
    \ isEqual26 = (x == ", "        val sum = x + y + z\n        val isInteger = (sum\
    \ % 1) == 0\n        val isSum = (sum == x)\n        val isAllIntegers = (isInteger\
    \ && isSum)\n        val isAllIntegersAndAllNegatives = (isInteger && isSum &&\
    \ (x < 0 || y < 0 || z < 0))\n        val isAllIntegersAndAllPositives = (isInteger\
    \ && isSum && (x >= 0 || y >= 0 || z >= 0))\n        isAllIntegers && isAllIntegersAndAllNegatives\
    \ && isAllIntegersAndAllPositives", "        val sum = x + y + z\n        val\
    \ isInteger = (sum.toInt == sum)\n        val isAllIntegers = (x % 1 == 0 && y\
    \ % 1 == 0 && z % 1 == 0)\n        isInteger && isAllIntegers", "        val xs\
    \ = List(x, y, z)\n        val ys = xs.filter(_ != 0)\n        val zs = xs.filter(_\
    \ != 0)\n        val xy = xs.filter(_ != 0)\n        val yz = ys.filter(_ != 0)\n\
    \        val zx = zs.filter(_ != 0)\n        val xz = xs.filter(_ != 0)\n    \
    \    val yx = ys.filter(_ != 0)\n        val zy = zs.filter(_ != 0)\n        val\
    \ xx = xs.filter(_ != 0)\n        val yy = ys.filter(_ != 0)\n        val zz =\
    \ zs.filter(_ != 0)\n        val xy = xs.filter(_ != 0)\n        val yz = ys.filter(_\
    \ != 0)\n        val zx = zs.filter(_ != 0)\n        val xz = xs.filter(_ != 0)\n\
    \        val yx = ys.filter(_ != 0)\n        val zy = zs.filter(_ != 0)\n    \
    \    val xx = xs.filter(_ != 0)\n        val yy = ys.filter(_ != 0)\n        val\
    \ zz = zs.filter(_ != 0)\n        val xy = xs.filter(_ != 0)\n        val yz =\
    \ ys.filter(_ != 0)\n        val zx = zs.filter(_ != 0)\n        val xz = xs.filter(_\
    \ != 0)\n        val yx = ys.filter(_ != 0)\n        val zy = zs.filter(_ != 0)\n\
    \        val xx = xs.filter(_ != 0)\n        val yy = ys.filter(_ != 0)\n    \
    \    val zz = zs.filter(_ != 0)\n        val xy = xs.filter(_ != 0)\n        val\
    \ yz = ys.filter(_ != 0)\n        val zx = zs.filter(_ != 0)\n        val xz =\
    \ xs.filter(_ != 0)\n        val yx = ys.filter(_ != 0)\n        val zy = zs.filter(_\
    \ != 0)\n        val xx = xs.filter(_ != 0)\n        val yy = ys.filter(_ != 0)\n\
    \        val zz = zs.filter(_ != 0)\n        val xy = xs.filter(_ != 0)\n    \
    \    val yz = ys.filter(_ != 0)\n        val zx = zs.filter(_ != 0)\n        val\
    \ xz = xs.filter(_ != 0)\n        val yx = ys.filter(_ != 0)\n        val zy =\
    \ zs.filter(_ != 0)\n        val xx = xs.filter(_ != 0)\n        val yy = ys.filter(_\
    \ != ", "        val sum = x + y + z\n        val isInteger = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSum = (sum.toInt).isInstanceOf[Int]\n        val isEqual = (sum\
    \ == (x + y + z))\n        val isEqual2 = (sum == (x + y + z.toInt))\n       \
    \ val isEqual3 = (sum == (x + y + z.toInt))\n        val isEqual4 = (sum == (x\
    \ + y + z.toInt))\n        val isEqual5 = (sum == (x + y + z.toInt))\n       \
    \ val isEqual6 = (sum == (x + y + z.toInt))\n        val isEqual7 = (sum == (x\
    \ + y + z.toInt))\n        val isEqual8 = (sum == (x + y + z.toInt))\n       \
    \ val isEqual9 = (sum == (x + y + z.toInt))\n        val isEqual10 = (sum == (x\
    \ + y + z.toInt))\n        val isEqual11 = (sum == (x + y + z.toInt))\n      \
    \  val isEqual12 = (sum == (x + y + z.toInt))\n        val isEqual13 = (sum ==\
    \ (x + y + z.toInt))\n        val isEqual14 = (sum == (x + y + z.toInt))\n   \
    \     val isEqual15 = (sum == (x + y + z.toInt))\n        val isEqual16 = (sum\
    \ == (x + y + z.toInt))\n        val isEqual17 = (sum == (x + y + z.toInt))\n\
    \        val isEqual18 = (sum == (x + y + z.toInt))\n        val isEqual19 = (sum\
    \ == (x + y + z.toInt))\n        val isEqual20 = (sum == (x + y + z.toInt))\n\
    \        val isEqual21 = (sum == (x + y + z.toInt))\n        val isEqual22 = (sum\
    \ == (x + y + z.toInt))\n        val isEqual23 = (sum == (x + y + z.toInt))\n\
    \        val isEqual24 = (sum == (x + y + z.toInt))\n        val isEqual25 = (sum\
    \ == (x + y + z.toInt))\n        val isEqual26 = (sum == (x + y + z.toInt))\n\
    \        val isEqual27 = (sum == (x + y + z.toInt))\n        val isEqual28 = (sum\
    \ == (x + y + z.toInt))\n        val isEqual29 = (sum == (x + y + z.toInt))\n\
    \        val isEqual30 = (sum == (x + y + z", "        val sum = (x + y + z).asInstanceOf[Int]\n\
    \        (x == sum || y == sum || z == sum)", "        val sum = x + y + z\n \
    \       val isInteger = sum.toString.toInt\n        val isSum = sum.toString.toDouble\n\
    \        val isSumOfTwo = sum.toString.toDouble == sum.toString.toDouble * 2\n\
    \        val isSumOfThree = sum.toString.toDouble == sum.toString.toDouble * 3\n\
    \        val isSumOfFour = sum.toString.toDouble == sum.toString.toDouble * 4\n\
    \        val isSumOfFive = sum.toString.toDouble == sum.toString.toDouble * 5\n\
    \        val isSumOfSix = sum.toString.toDouble == sum.toString.toDouble * 6\n\
    \        val isSumOfSeven = sum.toString.toDouble == sum.toString.toDouble * 7\n\
    \        val isSumOfEight = sum.toString.toDouble == sum.toString.toDouble * 8\n\
    \        val isSumOfNine = sum.toString.toDouble == sum.toString.toDouble * 9\n\
    \        val isSumOfTen = sum.toString.toDouble == sum.toString.toDouble * 10\n\
    \        val isSumOfEleven = sum.toString.toDouble == sum.toString.toDouble *\
    \ 11\n        val isSumOfTwelve = sum.toString.toDouble == sum.toString.toDouble\
    \ * 12\n        val isSumOfThirteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 13\n        val isSumOfFourteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 14\n        val isSumOfFifteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 15\n        val isSumOfSixteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 16\n        val isSumOfSeventeen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 17\n        val isSumOfEighteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 18\n        val isSumOfNineteen = sum.toString.toDouble == sum.toString.toDouble\
    \ * 19\n        val isSumOfTwenty = sum.toString.toDouble == sum.toString.toDouble\
    \ * 20\n        val isSumOfTwentyOne = sum.toString.toDouble == sum.toString.toDouble\
    \ * 21\n", "        val sum = x + y + z\n        val isInteger = (sum.toInt ==\
    \ sum)\n        val isSum = (sum == sum.toInt)\n        val isEqual = (x == y\
    \ && y == z)\n        val isEqual2 = (x.toInt == y.toInt && y.toInt == z.toInt)\n\
    \        val isEqual3 = (x.toInt == y.toInt && y.toInt == z.toInt && z.toInt ==\
    \ sum.toInt)\n        val isEqual4 = (x.toInt == y.toInt && y.toInt == z.toInt\
    \ && z.toInt == sum.toInt && x.toInt == sum.toInt)\n        val isEqual5 = (x.toInt\
    \ == y.toInt && y.toInt == z.toInt && z.toInt == sum.toInt && x.toInt == sum.toInt\
    \ && y.toInt == sum.toInt)\n        val isEqual6 = (x.toInt == y.toInt && y.toInt\
    \ == z.toInt && z.toInt == sum.toInt && x.toInt == sum.toInt && y.toInt == sum.toInt\
    \ && z.toInt == sum.toInt)\n        val isEqual7 = (x.toInt == y.toInt && y.toInt\
    \ == z.toInt && z.toInt == sum.toInt && x.toInt == sum.toInt && y.toInt == sum.toInt\
    \ && z.toInt == sum.toInt && x.toInt == sum.toInt && y.toInt == sum.toInt && z.toInt\
    \ == sum.toInt)\n        val isEqual8 = (x.toInt == y.toInt && y.toInt == z.toInt\
    \ && z.toInt == sum.toInt && x.toInt == sum.toInt && y.toInt == sum.toInt && z.toInt\
    \ == sum.toInt && x.toInt == sum.toInt && y.toInt == sum.toInt && z.toInt == sum.toInt\
    \ && x.toInt == sum.toInt && y.toInt == sum.toInt && z.toInt == sum.toInt && x.toInt\
    \ == sum.toInt && y.toInt == sum.toInt && z.toInt == sum.toInt)\n        val isEqual9\
    \ = (x.toInt == y.toInt && y.toInt == z.toInt && z.toInt == sum.toInt && x.toInt\
    \ == sum.toInt && y.toInt == sum.toInt && z.toInt == sum.toInt && x.toInt == sum.toInt\
    \ && y.toInt == sum.toInt ", "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt == sum)\n        val isSum = (sum == sum)\n        val isEqual\
    \ = (x == y && y == z)\n        val isEqual2 = (y == z && x == z)\n        val\
    \ isEqual3 = (y == z && x == z)\n        val isEqual4 = (y == z && x == z)\n \
    \       val isEqual5 = (y == z && x == z)\n        val isEqual6 = (y == z && x\
    \ == z)\n        val isEqual7 = (y == z && x == z)\n        val isEqual8 = (y\
    \ == z && x == z)\n        val isEqual9 = (y == z && x == z)\n        val isEqual10\
    \ = (y == z && x == z)\n        val isEqual11 = (y == z && x == z)\n        val\
    \ isEqual12 = (y == z && x == z)\n        val isEqual13 = (y == z && x == z)\n\
    \        val isEqual14 = (y == z && x == z)\n        val isEqual15 = (y == z &&\
    \ x == z)\n        val isEqual16 = (y == z && x == z)\n        val isEqual17 =\
    \ (y == z && x == z)\n        val isEqual18 = (y == z && x == z)\n        val\
    \ isEqual19 = (y == z && x == z)\n        val isEqual20 = (y == z && x == z)\n\
    \        val isEqual21 = (y == z && x == z)\n        val isEqual22 = (y == z &&\
    \ x == z)\n        val isEqual23 = (y == z && x == z)\n        val isEqual24 =\
    \ (y == z && x == z)\n        val isEqual25 = (y == z && x == z)\n        val\
    \ isEqual26 = (y == z && x == z)\n        val isEqual27 = (y == z && x == z)\n\
    \        val isEqual28 = (y == z && x == z)\n        val isEqual29 = (y == z &&\
    \ x == z)\n        val isEqual30 = (y == z && x == z)\n        val isEqual31 =\
    \ (y == z && x == z)\n        val isEqual32 = (y == z && x == z)\n        val\
    \ isEqual33 = (y == z && x == z)\n        val isEqual34 = (y == z && x == z)\n\
    \        val isEqual35 = (y == z && x == z)\n        val isEqual36 = (y == z &&\
    \ x == z)\n        val isEqual37 = (y == z && x == z)\n        val isEqual38 =\
    \ (y == z && x == z)\n        val isEqual39 = (y == z && x == z)\n        val\
    \ isEqual40 = (y == z && x == z)\n        val ", "        val sum = x + y + z\n\
    \        val isInteger = sum.toString.toInt\n        val isEqual = sum == isInteger\n\
    \        val isAllIntegers = isInteger == x.toString.toInt && isInteger == y.toString.toInt\
    \ && isInteger == z.toString.toInt\n        isEqual && isAllIntegers", "     \
    \   val sum = x + y + z\n        val isInt = sum.asInstanceOf[Int] == sum\n  \
    \      val isInt = isInt && x.asInstanceOf[Int] == x && y.asInstanceOf[Int] ==\
    \ y && z.asInstanceOf[Int] == z\n        isInt", "        val sum = x + y + z\n\
    \        val isInt = sum.toInt % 1 == 0\n        val isAllInt = x.toInt == y.toInt\
    \ == z.toInt\n        isInt && isAllInt", "        val sum = x + y + z\n     \
    \   val isInteger = sum.toString.toInt\n        val isSum = sum.toString.toDouble\n\
    \        val isSumOfTwo = sum.toString.toDouble == (x + y + z).toString.toDouble\n\
    \        val isSumOfThree = sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble\n        val isSumOfFour\
    \ = sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\n\
    \        val isSumOfFive = sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\n\
    \        val isSumOfSix = sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble\n        val isSumOfSeven\
    \ = sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble\n        val isSumOfEight = sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).toString.toDouble && sum.toString.toDouble\
    \ == (x + y + z).toString.toDouble && sum.toString.toDouble == (x + y + z).toString.toDouble\
    \ && sum.toString.toDouble == (x + y + z).to", "        val sum = x + y + z\n\
    \        val isInt = sum.toInt == sum\n        val isInt = isInt && (x.toInt ==\
    \ x && y.toInt == y && z.toInt == z)\n        isInt", "        val sum = x + y\
    \ + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        isAllInteger", "   \
    \     val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isEqual = sum == x + y + z\n        val isAllInteger = (x % 1) == 0f && (y %\
    \ 1) == 0f && (z % 1) == 0f\n        isInteger || isEqual || isAllInteger", " \
    \       val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  val isAllIntegerOrZero = (isInteger && isAllInteger)\n        val isAllIntegerOrNegative\
    \ = (isInteger && isAllIntegerOrZero)\n        val isAllIntegerOrNegativeOrZero\
    \ = (isInteger && isAllIntegerOrNegative)\n        isAllIntegerOrNegativeOrZero",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt == sum)\n     \
    \   val isEqual = (x == sum) || (y == sum) || (z == sum)\n        isInteger &&\
    \ isEqual", "        val sum = x + y + z\n        val isInteger = (sum % 1) ==\
    \ 0\n        val isSum = (sum == x)\n        val isAllIntegers = (isInteger &&\
    \ isSum)\n        val isAllIntegersAndAllSum = (isInteger && isSum)\n        val\
    \ isAllIntegersAndAllSumAndNotEqual = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqual\
    \ = (isInteger && isSum)\n        val isAllIntegersAndAllSumAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAndNotEqualAnd",
  "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n     \
    \   val isSum = sum.toString.toDouble\n        val isSumOfTwo = sum.toString.toDouble\n\
    \        val isSumOfThree = sum.toString.toDouble\n        val isSumOfFour = sum.toString.toDouble\n\
    \        val isSumOfFive = sum.toString.toDouble\n        val isSumOfSix = sum.toString.toDouble\n\
    \        val isSumOfSeven = sum.toString.toDouble\n        val isSumOfEight =\
    \ sum.toString.toDouble\n        val isSumOfNine = sum.toString.toDouble\n   \
    \     val isSumOfTen = sum.toString.toDouble\n        val isSumOfEleven = sum.toString.toDouble\n\
    \        val isSumOfTwelve = sum.toString.toDouble\n        val isSumOfThirteen\
    \ = sum.toString.toDouble\n        val isSumOfFourteen = sum.toString.toDouble\n\
    \        val isSumOfFifteen = sum.toString.toDouble\n        val isSumOfSixteen\
    \ = sum.toString.toDouble\n        val isSumOfSeventeen = sum.toString.toDouble\n\
    \        val isSumOfEighteen = sum.toString.toDouble\n        val isSumOfNineteen\
    \ = sum.toString.toDouble\n        val isSumOfTwenty = sum.toString.toDouble\n\
    \        val isSumOfTwentyOne = sum.toString.toDouble\n        val isSumOfTwentyTwo\
    \ = sum.toString.toDouble\n        val isSumOfTwentyThree = sum.toString.toDouble\n\
    \        val isSumOfTwentyFour = sum.toString.toDouble\n        val isSumOfTwentyFive\
    \ = sum.toString.toDouble\n        val isSumOfTwentySix = sum.toString.toDouble\n\
    \        val isSumOfTwentySeven = sum.toString.toDouble\n        val isSumOfTwentyEight\
    \ = sum.toString.toDouble\n        val isSumOfTwentyNine = sum.toString.toDouble\n\
    \        val isSumOfTwentyTen = sum.toString.toDouble\n        val isSumOfTwentyEleven\
    \ = sum.toString.toDouble\n        val isSumOfTwentyTwelve = sum.toString.toDouble\n\
    \        val isSumOfTwentyThirteen = sum.toString.toDouble\n", "        val sum\
    \ = x + y + z\n        val intSum = math.round(sum)\n        val intSum2 = math.round(sum\
    \ * 2)\n        val intSum3 = math.round(sum * 3)\n        val intSum4 = math.round(sum\
    \ * 4)\n        val intSum5 = math.round(sum * 5)\n        val intSum6 = math.round(sum\
    \ * 6)\n        val intSum7 = math.round(sum * 7)\n        val intSum8 = math.round(sum\
    \ * 8)\n        val intSum9 = math.round(sum * 9)\n        val intSum10 = math.round(sum\
    \ * 10)\n        val intSum11 = math.round(sum * 11)\n        val intSum12 = math.round(sum\
    \ * 12)\n        val intSum13 = math.round(sum * 13)\n        val intSum14 = math.round(sum\
    \ * 14)\n        val intSum15 = math.round(sum * 15)\n        val intSum16 = math.round(sum\
    \ * 16)\n        val intSum17 = math.round(sum * 17)\n        val intSum18 = math.round(sum\
    \ * 18)\n        val intSum19 = math.round(sum * 19)\n        val intSum20 = math.round(sum\
    \ * 20)\n        val intSum21 = math.round(sum * 21)\n        val intSum22 = math.round(sum\
    \ * 22)\n        val intSum23 = math.round(sum * 23)\n        val intSum24 = math.round(sum\
    \ * 24)\n        val intSum25 = math.round(sum * 25)\n        val intSum26 = math.round(sum\
    \ * 26)\n        val intSum27 = math.round(sum * 27)\n        val intSum28 = math.round(sum\
    \ * 28)\n        val intSum29 = math.round(sum * 29)\n        val intSum30 = math.round(sum\
    \ * 30)\n        val intSum31 = math.round(sum * 31)\n        val intSum32 = math.round(sum\
    \ * 32)\n        val intSum33 = math.round(sum * 33)\n        val intSum34 = math.round(sum\
    \ * 34)\n        val intSum35 = math.round(sum * 35)\n        val intSum36 = math.round(sum\
    \ * 36)\n        val intSum37 = math.round(sum * 37)\n        val intSum38 = math.round(sum\
    \ * 38)\n        val intSum39 = math.round(sum * 39)\n        val intSum40 = math.round(sum\
    \ * 40)\n        val intSum41 = math.round(sum * 41)\n        val intSum42 = math.round(sum\
    \ * 42)", "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n\
    \        val isSum = sum.toString.toDouble\n        val isSumOfTwo = sum.toString.toDouble\n\
    \        val isSumOfThree = sum.toString.toDouble\n        val isSumOfFour = sum.toString.toDouble\n\
    \        val isSumOfFive = sum.toString.toDouble\n        val isSumOfSix = sum.toString.toDouble\n\
    \        val isSumOfSeven = sum.toString.toDouble\n        val isSumOfEight =\
    \ sum.toString.toDouble\n        val isSumOfNine = sum.toString.toDouble\n   \
    \     val isSumOfTen = sum.toString.toDouble\n        val isSumOfEleven = sum.toString.toDouble\n\
    \        val isSumOfTwelve = sum.toString.toDouble\n        val isSumOfThirteen\
    \ = sum.toString.toDouble\n        val isSumOfFourteen = sum.toString.toDouble\n\
    \        val isSumOfFifteen = sum.toString.toDouble\n        val isSumOfSixteen\
    \ = sum.toString.toDouble\n        val isSumOfSeventeen = sum.toString.toDouble\n\
    \        val isSumOfEighteen = sum.toString.toDouble\n        val isSumOfNineteen\
    \ = sum.toString.toDouble\n        val isSumOfTwenty = sum.toString.toDouble\n\
    \        val isSumOfTwentyOne = sum.toString.toDouble\n        val isSumOfTwentyTwo\
    \ = sum.toString.toDouble\n        val isSumOfTwentyThree = sum.toString.toDouble\n\
    \        val isSumOfTwentyFour = sum.toString.toDouble\n        val isSumOfTwentyFive\
    \ = sum.toString.toDouble\n        val isSumOfTwentySix = sum.toString.toDouble\n\
    \        val isSumOfTwentySeven = sum.toString.toDouble\n        val isSumOfTwentyEight\
    \ = sum.toString.toDouble\n        val isSumOfTwentyNine = sum.toString.toDouble\n\
    \        val isSumOfTwentyTen = sum.toString.toDouble\n        val isSumOfTwentyEleven\
    \ = sum.toString.toDouble\n        val isSumOfTwentyTwelve = sum.toString.toDouble\n\
    \        val isSumOfTwentyThirteen = sum.toString.toDouble\n", "        val sum\
    \ = x + y + z\n        val isInteger = math.floor(sum) == sum\n        val isSum\
    \ = math.abs(sum - x) < 0.001 && math.abs(sum - y) < 0.001 && math.abs(sum - z)\
    \ < 0.001\n        isInteger && isSum", "        val sum = x + y + z\n       \
    \ val isInteger = sum.asInstanceOf[Int] == sum\n        val isEqual = x + y ==\
    \ z\n        val isAllInteger = isInteger && isEqual\n        val isAllFloat =\
    \ isInteger && isEqual\n        isAllFloat || isAllInteger", "        val sum\
    \ = x + y + z\n        val isInteger = (sum.toInt % 1 == 0)\n        val isSum\
    \ = (sum == x)\n        val isAll = (x == y) || (x == z) || (y == z)\n       \
    \ isInteger && isSum && isAll", "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt % 1 == 0)\n        val isEqual = sum == x + y + z\n        val\
    \ isSumOfTwo = sum == x + y\n        val isAllInteger = (isInteger && isEqual\
    \ && isSumOfTwo)\n        isAllInteger", "        val sum = x + y + z\n      \
    \  val isInteger = sum.toString.toInt\n        val isEqual = sum == isInteger\n\
    \        val isAllIntegers = isInteger.toString.toInt == 3\n        val isAllEqual\
    \ = isEqual\n        isEqual && isAllIntegers && isAllEqual", '        (x == (x
    + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) && x ==
    (y - z))', "        val sum = x + y + z\n        val isInteger = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSum = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTwo = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfThree = (sum.toInt).isInstanceOf[Int]\n        val isSumOfFour\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfFive = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfSix = (sum.toInt).isInstanceOf[Int]\n        val isSumOfSeven\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfEight = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfNine = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTen\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfEleven = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfTwelve = (sum.toInt).isInstanceOf[Int]\n        val isSumOfThirteen\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfFourteen = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfFifteen = (sum.toInt).isInstanceOf[Int]\n        val isSumOfSixteen\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfSeventeen = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfEighteen = (sum.toInt).isInstanceOf[Int]\n        val isSumOfNineteen\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTwenty = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfTwentyOne = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTwentyTwo\
    \ = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTwentyThree = (sum.toInt).isInstanceOf[Int]\n\
    \        val isSumOfTwentyFour = (sum.toInt).isInstanceOf[Int]\n        val isSumOfTwentyFive\
    \ = (sum.toInt).isInstanceOf[Int]\n        val ", "        val sum = x + y + z\n\
    \        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n    \
    \    val isAllInteger = (isInteger && isSum)\n        isAllInteger", "       \
    \ val sum = x + y + z\n        val intSum = math.round(sum)\n        val intSum2\
    \ = math.round(sum * 2)\n        val intSum3 = math.round(sum * 3)\n        val\
    \ intSum4 = math.round(sum * 4)\n        val intSum5 = math.round(sum * 5)\n \
    \       val intSum6 = math.round(sum * 6)\n        val intSum7 = math.round(sum\
    \ * 7)\n        val intSum8 = math.round(sum * 8)\n        val intSum9 = math.round(sum\
    \ * 9)\n        val intSum10 = math.round(sum * 10)\n        val intSum11 = math.round(sum\
    \ * 11)\n        val intSum12 = math.round(sum * 12)\n        val intSum13 = math.round(sum\
    \ * 13)\n        val intSum14 = math.round(sum * 14)\n        val intSum15 = math.round(sum\
    \ * 15)\n        val intSum16 = math.round(sum * 16)\n        val intSum17 = math.round(sum\
    \ * 17)\n        val intSum18 = math.round(sum * 18)\n        val intSum19 = math.round(sum\
    \ * 19)\n        val intSum20 = math.round(sum * 20)\n        val intSum21 = math.round(sum\
    \ * 21)\n        val intSum22 = math.round(sum * 22)\n        val intSum23 = math.round(sum\
    \ * 23)\n        val intSum24 = math.round(sum * 24)\n        val intSum25 = math.round(sum\
    \ * 25)\n        val intSum26 = math.round(sum * 26)\n        val intSum27 = math.round(sum\
    \ * 27)\n        val intSum28 = math.round(sum * 28)\n        val intSum29 = math.round(sum\
    \ * 29)\n        val intSum30 = math.round(sum * 30)\n        val intSum31 = math.round(sum\
    \ * 31)\n        val intSum32 = math.round(sum * 32)\n        val intSum33 = math.round(sum\
    \ * 33)\n        val intSum34 = math.round(sum * 34)\n        val intSum35 = math.round(sum\
    \ * 35)\n        val intSum36 = math.round(sum * 36)\n        val intSum37 = math.round(sum\
    \ * 37)\n        val intSum38 = math.round(sum * 38)\n        val intSum39 = math.round(sum\
    \ * 39)\n        val intSum40 = math.round(sum * 40)\n        val intSum41 = math.round(sum\
    \ * 41)\n        val intSum42 = math.round(sum * 42)", "        val sum = x +\
    \ y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllInteger = (isInteger && isSum)\n        val isAllIntegersOrZero\
    \ = (isAllInteger || (x == 0))\n        val isAllIntegersOrNegative = (isAllInteger\
    \ || (x < 0))\n        val isAllIntegersOrNegativeOrZero = (isAllIntegersOrNegative\
    \ || (x == 0))\n        val isAllIntegersOrNegativeOrZeroOrZero = (isAllIntegersOrNegativeOrZero\
    \ || (x == 0))\n        isAllIntegersOrNegativeOrZeroOrZero", "        val sum\
    \ = x + y + z\n        val isInteger = sum.toString.toInt\n        val isSum =\
    \ sum.toString.toDouble\n        val isSumOfThree = sum.toString.toDouble\n  \
    \      val isSumOfThreeAndOne = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOne = sum.toString.toDouble\n  \
    \      val isSumOfThreeAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne",
  "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n     \
    \   val isSum = sum.toString.toDouble\n        val isSumOfThree = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOne = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOne = sum.toString.toDouble\n  \
    \      val isSumOfThreeAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne = sum.toString.toDouble\n\
    \        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOneAndOne",
  "        val xx = x.toInt\n        val yy = y.toInt\n        val zz = z.toInt\n\
    \        (xx + yy + zz) == (xx + yy + zz)", "        val sum = x + y + z\n   \
    \     val isInteger = sum.toString.toInt\n        val isEqual = sum == isInteger\n\
    \        val isAllInteger = isInteger.toString.toInt == 3\n        isEqual &&\
    \ isAllInteger", "        val sum = x + y + z\n        val isInteger = sum.asInstanceOf[Int]\
    \ == sum\n        val isEqual = x + y == z\n        val isSum = x + y == sum\n\
    \        val isSumOfTwo = x + y == 2 * sum\n        val isSumOfThree = x + y ==\
    \ 3 * sum\n        val isSumOfFour = x + y == 4 * sum\n        val isSumOfFive\
    \ = x + y == 5 * sum\n        val isSumOfSix = x + y == 6 * sum\n        val isSumOfSeven\
    \ = x + y == 7 * sum\n        val isSumOfEight = x + y == 8 * sum\n        val\
    \ isSumOfNine = x + y == 9 * sum\n        val isSumOfTen = x + y == 10 * sum\n\
    \        val isSumOfEleven = x + y == 11 * sum\n        val isSumOfTwelve = x\
    \ + y == 12 * sum\n        val isSumOfThirteen = x + y == 13 * sum\n        val\
    \ isSumOfFourteen = x + y == 14 * sum\n        val isSumOfFifteen = x + y == 15\
    \ * sum\n        val isSumOfSixteen = x + y == 16 * sum\n        val isSumOfSeventeen\
    \ = x + y == 17 * sum\n        val isSumOfEighteen = x + y == 18 * sum\n     \
    \   val isSumOfNineteen = x + y == 19 * sum\n        val isSumOfTwenty = x + y\
    \ == 20 * sum\n        val isSumOfTwentyOne = x + y == 21 * sum\n        val isSumOfTwentyTwo\
    \ = x + y == 22 * sum\n        val isSumOfTwentyThree = x + y == 23 * sum\n  \
    \      val isSumOfTwentyFour = x + y == 24 * sum\n        val isSumOfTwentyFive\
    \ = x + y == 25 * sum\n        val isSumOfTwentySix = x + y == 26 * sum\n    \
    \    val isSumOfTwentySeven = x + y == 27 * sum\n        val isSumOfTwentyEight\
    \ = x + y == 28 * sum\n        val isSumOfTwentyNine = x + y == 29 * sum\n   \
    \     val isSumOfTwentyTen = x + y == 30 * sum\n        val isSumOfTwentyEleven\
    \ = x + y == 31 * sum\n        val isSumOfTwentyTwelve = x + y == 32 * sum\n \
    \       val isSumOfTwentyThirteen = x + ", '        (x == (x + y) && x == (x +
    z) && x == (y + z)) || (x == (x - y) && x == (x - z) && x == (y - z))', "    \
    \    val sum = x + y + z\n        val isInteger = math.floor(sum) == sum\n   \
    \     val isAllInteger = math.floor(sum) == math.floor(sum)\n        val isEqual\
    \ = math.floor(sum) == math.floor(sum)\n        isInteger && isAllInteger && isEqual",
  "        val sum = x + y + z\n        val isInt = sum.toInt == sum\n        val\
    \ isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt && sum.toInt\
    \ == sum\n        val isInteger = isInt && sum.toInt == sum\n        val isInteger\
    \ = isInt && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n\
    \        val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteger = isInt && sum.toInt == sum\n        val isInteger = isInt\
    \ && sum.toInt == sum\n        val isInteger = isInt && sum.toInt == sum\n   \
    \     val isInteg", "        val sum = x + y + z\n        val isInteger = sum\
    \ % 1 == 0\n        val isEqual = sum == x + y + z\n        isInteger && isEqual",
  "        val sum = x + y + z\n        val isInteger = math.floor(sum) == sum\n \
    \       val isSum = math.abs(sum - x) <= math.abs(sum - y) <= math.abs(sum - z)\n\
    \        isInteger && isSum", "        val sum = x + y + z\n        val isInteger\
    \ = sum.toInt == sum\n        val isSum = x + y + z == sum\n        val isEqual\
    \ = x + y + z == sum\n        val isEqualOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSum = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n\
    \        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger\
    \ = x + y + z == sum.toInt\n        val isEqualOrSumOrInteger = x + y + z == sum.toInt\n",
  '        (x == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x ==
    (x - z) && x == (y - z))', "        val sum = x + y + z\n        val isInteger\
    \ = sum.asInstanceOf[Int] == sum\n        val isEqual = x + y == z\n        val\
    \ isAllInteger = isInteger && isEqual\n        isAllInteger", "        val sum\
    \ = x + y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum\
    \ == x)\n        val isAllInteger = (isInteger && isSum)\n        val isAllIntegerAndNotSum\
    \ = (isInteger && !isSum)\n        isAllInteger || isAllIntegerAndNotSum", '        (x
    == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) &&
    x == (y - z))', "        val sum = x + y + z\n        val isInteger = (sum.toInt\
    \ % 1 == 0)\n        val isSum = (sum == x)\n        val isAllInteger = (isInteger\
    \ && isSum)\n        isAllInteger", "        val sum = x + y + z\n        val\
    \ isInt = sum.asInstanceOf[Int] == sum\n        val isInteger = isInt && isInt\
    \ == sum\n        val isFloat = sum.asInstanceOf[Float] == sum\n        val isFloatOrInt\
    \ = isFloat || isInt\n        val isFloatOrInteger = isFloat || isInteger\n  \
    \      val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = isFloat || isInteger\n        val isFloatOrInteger\
    \ = isFloat || isInteger\n        val isFloatOrInteger = isFloat || isInteger\n\
    \        val isFloatOrInteger = ", '        (x == (x + y) && x == (x + z) && x
    == (y + z)) || (x == (x - y) && x == (x - z) && x == (y - z))', "        val sum\
    \ = x + y + z\n        val isInteger = sum.asInstanceOf[Int] == sum\n        val\
    \ isEqual = x + y == z\n        val isSum = x + y + z == sum\n        val isSumOfTwo\
    \ = x + y == z + z\n        val isSumOfThree = x + y == z + z + z\n        val\
    \ isSumOfFour = x + y == z + z + z + z\n        val isSumOfFive = x + y == z +\
    \ z + z + z + z + z\n        val isSumOfSix = x + y == z + z + z + z + z + z +\
    \ z + z\n        val isSumOfSeven = x + y == z + z + z + z + z + z + z + z + z\
    \ + z\n        val isSumOfEight = x + y == z + z + z + z + z + z + z + z + z +\
    \ z + z + z + z\n        val isSumOfNine = x + y == z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z\n        val isSumOfTen = x + y == z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z", "        val sum\
    \ = x + y + z\n        val intSum = sum.toInt\n        val intSum2 = intSum *\
    \ intSum\n        val intSum3 = intSum * intSum2\n        val intSum4 = intSum3\
    \ * intSum\n        val intSum5 = intSum4 * intSum\n        val intSum6 = intSum5\
    \ * intSum\n        val intSum7 = intSum6 * intSum\n        val intSum8 = intSum7\
    \ * intSum\n        val intSum9 = intSum8 * intSum\n        val intSum10 = intSum9\
    \ * intSum\n        val intSum11 = intSum10 * intSum\n        val intSum12 = intSum11\
    \ * intSum\n        val intSum13 = intSum12 * intSum\n        val intSum14 = intSum13\
    \ * intSum\n        val intSum15 = intSum14 * intSum\n        val intSum16 = intSum15\
    \ * intSum\n        val intSum17 = intSum16 * intSum\n        val intSum18 = intSum17\
    \ * intSum\n        val intSum19 = intSum18 * intSum\n        val intSum20 = intSum19\
    \ * intSum\n        val intSum21 = intSum20 * intSum\n        val intSum22 = intSum21\
    \ * intSum\n        val intSum23 = intSum22 * intSum\n        val intSum24 = intSum23\
    \ * intSum\n        val intSum25 = intSum24 * intSum\n        val intSum26 = intSum25\
    \ * intSum\n        val intSum27 = intSum26 * intSum\n        val intSum28 = intSum27\
    \ * intSum\n        val intSum29 = intSum28 * intSum\n        val intSum30 = intSum29\
    \ * intSum\n        val intSum31 = intSum30 * intSum\n        val intSum32 = intSum31\
    \ * intSum\n        val intSum33 = intSum32 * intSum\n        val intSum34 = intSum33\
    \ * intSum\n        val intSum35 = intSum34 * intSum\n        val intSum36 = intSum35\
    \ * intSum\n        val intSum37 = intSum36 * intSum\n        val intSum38 = intSum37\
    \ * intSum\n        val intSum39 = intSum38 * intSum\n        val intSum40 = intSum39\
    \ * intSum\n        val intSum41 = ", '        (x == (x + y) && x == (x + z) &&
    x == (y + z)) || (x == (x - y) && x == (x - z) && x == (y - z))', "        val\
    \ xSum = x + y\n        val ySum = y + z\n        val zSum = z + x\n        (xSum\
    \ == zSum) || (ySum == zSum)", "        val sum = x + y + z\n        val isInteger\
    \ = sum.asInstanceOf[Int] == sum\n        val isSum = x + y + z == sum\n     \
    \   val isEqual = x + y + z == sum\n        isInteger || isSum || isEqual", " \
    \       val sum = x + y + z\n        val intSum = math.round(sum)\n        val\
    \ intSum2 = math.round(sum * 2)\n        val intSum3 = math.round(sum * 3)\n \
    \       val intSum4 = math.round(sum * 4)\n        val intSum5 = math.round(sum\
    \ * 5)\n        val intSum6 = math.round(sum * 6)\n        val intSum7 = math.round(sum\
    \ * 7)\n        val intSum8 = math.round(sum * 8)\n        val intSum9 = math.round(sum\
    \ * 9)\n        val intSum10 = math.round(sum * 10)\n        val intSum11 = math.round(sum\
    \ * 11)\n        val intSum12 = math.round(sum * 12)\n        val intSum13 = math.round(sum\
    \ * 13)\n        val intSum14 = math.round(sum * 14)\n        val intSum15 = math.round(sum\
    \ * 15)\n        val intSum16 = math.round(sum * 16)\n        val intSum17 = math.round(sum\
    \ * 17)\n        val intSum18 = math.round(sum * 18)\n        val intSum19 = math.round(sum\
    \ * 19)\n        val intSum20 = math.round(sum * 20)\n        val intSum21 = math.round(sum\
    \ * 21)\n        val intSum22 = math.round(sum * 22)\n        val intSum23 = math.round(sum\
    \ * 23)\n        val intSum24 = math.round(sum * 24)\n        val intSum25 = math.round(sum\
    \ * 25)\n        val intSum26 = math.round(sum * 26)\n        val intSum27 = math.round(sum\
    \ * 27)\n        val intSum28 = math.round(sum * 28)\n        val intSum29 = math.round(sum\
    \ * 29)\n        val intSum30 = math.round(sum * 30)\n        val intSum31 = math.round(sum\
    \ * 31)\n        val intSum32 = math.round(sum * 32)\n        val intSum33 = math.round(sum\
    \ * 33)\n        val intSum34 = math.round(sum * 34)\n        val intSum35 = math.round(sum\
    \ * 35)\n        val intSum36 = math.round(sum * 36)\n        val intSum37 = math.round(sum\
    \ * 37)\n        val intSum38 = math.round(sum * 38)\n        val intSum39 = math.round(sum\
    \ * 39)\n        val intSum40 = math.round(sum * 40)\n        val intSum41 = math.round(sum\
    \ * 41)\n        val intSum42 = math.round(sum * 42)", "        val sum = x +\
    \ y + z\n        val isInteger = (sum % 1) == 0\n        val isSum = (sum == x)\n\
    \        val isAllIntegers = (x % 1 == 0) &&\n                           (y %\
    \ 1 == 0) &&\n                           (z % 1 == 0)\n        isInteger || isSum\
    \ || isAllIntegers", '        (x == (x + y) && x == (x + z) && x == (y + z)) ||
    (x == (x - y) && x == (x - z) && x == (y - z))', "        val sum = x + y + z\n\
    \        val isInteger = sum.toInt == sum\n        val isEqual = x + y == z\n\
    \        val isSum = x + y == sum\n        val isSumOfTwo = x + y == x + y\n \
    \       val isSumOfThree = x + y == x + y + z\n        val isSumOfFour = x + y\
    \ == x + y + z + z\n        val isSumOfFive = x + y == x + y + z + z + z\n   \
    \     val isSumOfSix = x + y == x + y + z + z + z + z\n        val isSumOfSeven\
    \ = x + y == x + y + z + z + z + z + z\n        val isSumOfEight = x + y == x\
    \ + y + z + z + z + z + z + z\n        val isSumOfNine = x + y == x + y + z +\
    \ z + z + z + z + z + z\n        val isSumOfTen = x + y == x + y + z + z + z +\
    \ z + z + z + z + z + z\n        val isSumOfEleven = x + y == x + y + z + z +\
    \ z + z + z + z + z + z + z + z\n        val isSumOfTwelve = x + y == x + y +\
    \ z + z + z + z + z + z + z + z + z + z + z + z\n        val isSumOfThirteen =\
    \ x + y == x + y + z + z + z + z + z + z + z + z + z + z + z + z + z + z\n   \
    \     val isSumOfFourteen = x + y == x + y + z + z + z + z + z + z + z + z + z\
    \ + z + z + z + z + z + z + z\n        val isSumOfFifteen = x + y == x + y + z\
    \ + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z\n\
    \        val isSumOfSixteen = x + y == x + y + z + z + z + z + z + z + z + z +\
    \ z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z + z +\
    \ z + z + z + z + z + z + z + z + z + z + z + z + z", "        val sum = x + y\
    \ + z\n        val isInteger = (sum.toInt == sum)\n        val isAllInteger =\
    \ (x.toInt == x) && (y.toInt == y) && (z.toInt == z)\n        isInteger && isAllInteger",
  '        (x == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x ==
    (x - z) && x == (y - z))', "        val sum = x + y + z\n        val isInteger\
    \ = sum % 1 == 0\n        val isEqual = sum == x + y + z\n        val isAllInteger\
    \ = isInteger && isEqual\n        val isAllIntegerOrZero = isInteger && isEqual\
    \ && isAllInteger\n        isAllIntegerOrZero", "        val sum = x + y + z\n\
    \        val isInteger = sum.toString.toInt\n        val isSum = sum == sum.toInt\n\
    \        val isEqual = sum == sum.toInt\n        val isEqual2 = sum == sum.toInt\n\
    \        val isEqual3 = sum == sum.toInt\n        val isEqual4 = sum == sum.toInt\n\
    \        val isEqual5 = sum == sum.toInt\n        val isEqual6 = sum == sum.toInt\n\
    \        val isEqual7 = sum == sum.toInt\n        val isEqual8 = sum == sum.toInt\n\
    \        val isEqual9 = sum == sum.toInt\n        val isEqual10 = sum == sum.toInt\n\
    \        val isEqual11 = sum == sum.toInt\n        val isEqual12 = sum == sum.toInt\n\
    \        val isEqual13 = sum == sum.toInt\n        val isEqual14 = sum == sum.toInt\n\
    \        val isEqual15 = sum == sum.toInt\n        val isEqual16 = sum == sum.toInt\n\
    \        val isEqual17 = sum == sum.toInt\n        val isEqual18 = sum == sum.toInt\n\
    \        val isEqual19 = sum == sum.toInt\n        val isEqual20 = sum == sum.toInt\n\
    \        val isEqual21 = sum == sum.toInt\n        val isEqual22 = sum == sum.toInt\n\
    \        val isEqual23 = sum == sum.toInt\n        val isEqual24 = sum == sum.toInt\n\
    \        val isEqual25 = sum == sum.toInt\n        val isEqual26 = sum == sum.toInt\n\
    \        val isEqual27 = sum == sum.toInt\n        val isEqual28 = sum == sum.toInt\n\
    \        val isEqual29 = sum == sum.toInt\n        val isEqual30 = sum == sum.toInt\n\
    \        val isEqual31 = sum == sum.toInt\n        val isEqual32 = sum == sum.toInt\n\
    \        val isEqual33 = sum == sum.toInt\n        val isEqual34 = sum == sum.toInt\n\
    \        val isEqual35 = sum == sum.toInt\n        val isEqual36 = sum == sum.toInt\n\
    \        val isEqual37 = sum == sum.toInt\n        val isEqual38 = sum == sum.toInt\n\
    \        val isEqual39 = sum == sum.toInt\n        val isEqual40 = sum == sum.toInt\n\
    \        val isEqual41 = sum == sum.toInt\n        val is", '        (x == (x
    + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) && x ==
    (y - z))', "        val sum = x + y + z\n        val isInteger = sum.asInstanceOf[Int]\
    \ == sum\n        val isEqual = sum == x + y + z\n        val isLessThan = sum\
    \ < x + y + z\n        val isLessThanOrEqual = sum <= x + y + z\n        val isGreaterThan\
    \ = sum > x + y + z\n        val isGreaterThanOrEqual = sum >= x + y + z\n   \
    \     isInteger || isEqual || isLessThan || isLessThanOrEqual || isGreaterThan\
    \ || isGreaterThanOrEqual", "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1) == 0\n        val isSumOfTwo = (sum == x + y)\n        val isAllIntegers\
    \ = (x % 1 == 0 && y % 1 == 0 && z % 1 == 0)\n        isInteger && isSumOfTwo\
    \ && isAllIntegers", "        val sum = (x + y + z).asInstanceOf[Int]\n      \
    \  val isInteger = (sum == (x + y + z).asInstanceOf[Int])\n        val isSum =\
    \ (x + y == sum)\n        val isAllIntegers = (x.toInt == x.toInt) && (y.toInt\
    \ == y.toInt) && (z.toInt == z.toInt)\n        isInteger || isSum || isAllIntegers",
  "        val sum = x + y + z\n        val isInteger = sum.toInt == sum\n       \
    \ val isAllIntegers = isInteger && x.toInt == x && y.toInt == y && z.toInt ==\
    \ z\n        isAllIntegers", '        (x == (x + y) && x == (x + z) && x == (y
    + z)) || (x == (x - y) && x == (x - z) && x == (y - z))', "        val sum = x\
    \ + y + z\n        val isInteger = sum.toString.toInt\n        val isEqual = sum\
    \ == isInteger\n        val isAllIntegers = isInteger.toString == sum.toString\n\
    \        isEqual && isAllIntegers", "        val sum = x + y + z\n        val\
    \ isInteger = (sum.toInt % 1 == 0)\n        val isSum = (sum == x)\n        val\
    \ isAllInteger = (isInteger && isSum)\n        val isAllIntegersInteger = (isInteger\
    \ && isAllInteger)\n        val isAllIntegersSum = (isAllInteger && isSum)\n \
    \       val isAllIntegersSumAndInteger = (isAllInteger && isAllIntegersInteger)\n\
    \        val isAllIntegersSumAndAllIntegersInteger = (isAllInteger && isAllIntegersSumAndInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndInteger = (isAllInteger && isAllIntegersSumAndAllIntegersInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersInteger = (isAllInteger\
    \ && isAllIntegersSumAndAllIntegersSumAndInteger)\n        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersInteger)\n\
    \        val isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersInteger\
    \ = (isAllInteger && isAllIntegersSumAndAllIntegersSumAndAllIntegersSumAndAllIntegersSum",
  "        val sum = x + y + z\n        val isInteger = sum.toString.toInt\n     \
    \   val isSum = sum == sum.toString.toInt\n        val isEqual = sum == sum.toString.toInt\n\
    \        val isEqual2 = sum == sum.toString.toInt\n        val isEqual3 = sum\
    \ == sum.toString.toInt\n        val isEqual4 = sum == sum.toString.toInt\n  \
    \      val isEqual5 = sum == sum.toString.toInt\n        val isEqual6 = sum ==\
    \ sum.toString.toInt\n        val isEqual7 = sum == sum.toString.toInt\n     \
    \   val isEqual8 = sum == sum.toString.toInt\n        val isEqual9 = sum == sum.toString.toInt\n\
    \        val isEqual10 = sum == sum.toString.toInt\n        val isEqual11 = sum\
    \ == sum.toString.toInt\n        val isEqual12 = sum == sum.toString.toInt\n \
    \       val isEqual13 = sum == sum.toString.toInt\n        val isEqual14 = sum\
    \ == sum.toString.toInt\n        val isEqual15 = sum == sum.toString.toInt\n \
    \       val isEqual16 = sum == sum.toString.toInt\n        val isEqual17 = sum\
    \ == sum.toString.toInt\n        val isEqual18 = sum == sum.toString.toInt\n \
    \       val isEqual19 = sum == sum.toString.toInt\n        val isEqual20 = sum\
    \ == sum.toString.toInt\n        val isEqual21 = sum == sum.toString.toInt\n \
    \       val isEqual22 = sum == sum.toString.toInt\n        val isEqual23 = sum\
    \ == sum.toString.toInt\n        val isEqual24 = sum == sum.toString.toInt\n \
    \       val isEqual25 = sum == sum.toString.toInt\n        val isEqual26 = sum\
    \ == sum.toString.toInt\n        val isEqual27 = sum == sum.toString.toInt\n \
    \       val isEqual28 = sum == sum.toString.toInt\n        val isEqual29 = sum\
    \ == sum.toString.toInt\n        val isEqual30 = sum == sum.toString.toInt\n \
    \       val isEqual31 = sum == sum.toString.toInt\n        val isEqual32 = sum\
    \ == sum.toString.toInt\n        val isEqual33 = sum == sum.toString.toInt\n \
    \       val isEqual34 = sum == sum.toString.toInt\n        val isEqual35 = sum\
    \ == sum.toString.toInt\n        val is", "        val sum = x + y + z\n     \
    \   val isInteger = sum.toString.toInt\n        val isSum = sum.toString.toDouble\n\
    \        val isSumOfThree = sum.toString.toDouble\n        val isSumOfThreeAndOne\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwo = sum.toString.toDouble\n\
    \        val isSumOfThreeAndThree = sum.toString.toDouble\n        val isSumOfThreeAndFour\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFive = sum.toString.toDouble\n\
    \        val isSumOfThreeAndSix = sum.toString.toDouble\n        val isSumOfThreeAndSeven\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndEight = sum.toString.toDouble\n\
    \        val isSumOfThreeAndNine = sum.toString.toDouble\n        val isSumOfThreeAndTen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndEleven = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwelve = sum.toString.toDouble\n        val isSumOfThreeAndThirteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndFourteen = sum.toString.toDouble\n\
    \        val isSumOfThreeAndFifteen = sum.toString.toDouble\n        val isSumOfThreeAndSixteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndSeventeen = sum.toString.toDouble\n\
    \        val isSumOfThreeAndEighteen = sum.toString.toDouble\n        val isSumOfThreeAndNineteen\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwenty = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentyOne = sum.toString.toDouble\n        val isSumOfThreeAndTwentyTwo\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwentyThree = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentyFour = sum.toString.toDouble\n        val isSumOfThreeAndTwentyFive\
    \ = sum.toString.toDouble\n        val isSumOfThreeAndTwentySix = sum.toString.toDouble\n\
    \        val isSumOfThreeAndTwentySeven = sum.toString.toDouble\n        val isSumOfThreeAndTwentyEight\
    \ = sum.toString.toDouble\n        val is", '        (x == (x + y) && x == (x
    + z) && x == (y + z)) || (x == (x - y) && x == (x - z) && x == (y - z))', '        (x
    == (x + y) && x == (x + z) && x == (y + z)) || (x == (x - y) && x == (x - z) &&
    x == (y - z))', "        val xs = List(x, y, z)\n        val ys = xs.map(_.toInt)\n\
    \        val zs = xs.map(_.toInt)\n        (xs.sum == ys.sum && xs.sum == zs.sum\
    \ && xs.forall(_.toInt == _))", "        val sum = x + y + z\n        val isInteger\
    \ = (sum.toInt).toDouble == sum\n        isInteger && isInteger.toInt", "    \
    \    val sum = x + y + z\n        val isInteger = (sum % 1) == 0\n        val\
    \ isSum = (sum == x)\n        val isAllInteger = (isInteger && isSum)\n      \
    \  val isAllIntegerAndNotEqualToZ = (isInteger && isAllInteger)\n        val isAllIntegerAndNotEqualToY\
    \ = (isAllInteger && isNotEqualToZ(z, y))\n        val isAllIntegerAndNotEqualToX\
    \ = (isAllIntegerAndNotEqualToZ && isNotEqualToY(y, x))\n        val isAllIntegerAndNotEqualToAll\
    \ = (isAllIntegerAndNotEqualToY && isAllIntegerAndNotEqualToX)\n        isAllIntegerAndNotEqualToAll",
  "        val sum = x + y + z\n        val isInteger = (sum.toInt % 1 == 0)\n   \
    \     val isSum = (sum == x)\n        val isAll = (isInteger && isSum)\n     \
    \   isAll", "        val sum = (x + y + z).toInt\n        val sum2 = (x * y *\
    \ z).toInt\n        sum == sum2", "        val sum = x + y + z\n        val isInteger\
    \ = (sum % 1 == 0)\n        val isSum = (sum == x)\n        val isAllInteger =\
    \ (isInteger && isSum)\n        val isAllIntegerOrZero = (isInteger && isSum)\
    \ || (isInteger && x == 0)\n        val isAllIntegerOrZeroOrNegative = (isInteger\
    \ && isSum) || (isInteger && x == 0) || (isInteger && x < 0)\n        val isAllIntegerOrZeroOrNegativeOrZero\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegative = (isInteger\
    \ && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger &&\
    \ x == 0) || (isInteger && x < 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0) || (isInteger && x < 0) || (isInteger && x == 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0) || (isInteger && x < 0) || (isInteger && x == 0) || (isInteger &&\
    \ x < 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0) || (isInteger && x < 0) || (isInteger && x == 0) || (isInteger &&\
    \ x < 0) || (isInteger && x == 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegative\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0) || (isInteger && x < 0) || (isInteger && x == 0) || (isInteger &&\
    \ x < 0) || (isInteger && x == 0) || (isInteger && x < 0)\n        val isAllIntegerOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZeroOrNegativeOrZero\
    \ = (isInteger && isSum) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger\
    \ && x == 0) || (isInteger && x < 0) || (isInteger && x == 0) || (isInteger &&\
    \ x < 0) || (isInteger && x == 0) || (isInteger && x < 0) || (isInteger && x ==\
    \ 0)\n        val is"]
stop_tokens:
- "\n    }\n"

name: HumanEval_134_check_if_last_char_is_a_letter
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that returns true if the last character\n    // of a given\
  \ string is an alphabetical character and is not\n    // a part of a word, and false\
  \ otherwise.\n    // Note: \"word\" is a group of characters separated by space.\n\
  \    // Examples:\n    // >>> checkIfLastCharIsALetter((\"apple pie\"))\n    //\
  \ (false)\n    // >>> checkIfLastCharIsALetter((\"apple pi e\"))\n    // (true)\n\
  \    // >>> checkIfLastCharIsALetter((\"apple pi e \"))\n    // (false)\n    //\
  \ >>> checkIfLastCharIsALetter((\"\"))\n    // (false)\n    def checkIfLastCharIsALetter(txt\
  \ : String) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(checkIfLastCharIsALetter((\"\
  apple\")) == (false));\n    assert(checkIfLastCharIsALetter((\"apple pi e\")) ==\
  \ (true));\n    assert(checkIfLastCharIsALetter((\"eeeee\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  A\")) == (true));\n    assert(checkIfLastCharIsALetter((\"Pumpkin pie \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"Pumpkin pie 1\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  \")) == (false));\n    assert(checkIfLastCharIsALetter((\"eeeee e \")) == (false));\n\
  \    assert(checkIfLastCharIsALetter((\"apple pie\")) == (false));\n    assert(checkIfLastCharIsALetter((\"\
  apple pi e \")) == (false));\n    }\n\n}\n"
completions: ["        var lastChar = txt.last\n        var isLastCharALetter = true\n\
    \        var isLastCharNotALetter = false\n        for(i <- 0 until txt.length){\n\
    \            if(txt(i) == lastChar){\n                lastChar = txt.last\n  \
    \              isLastCharALetter = true\n                isLastCharNotALetter\
    \ = false\n            }\n            else{\n                isLastCharALetter\
    \ = false\n                isLastCharNotALetter = true\n            }\n      \
    \  }\n        return isLastCharALetter", "        val words = txt.split(\" \"\
    )\n        val lastChar = words(txt.length-1)\n        val isALetter = lastChar.matches(\"\
    [a-zA-Z]+\")\n        !isALetter", "        val lastChar = txt.last\n        val\
    \ isLastCharALetter = lastChar.isLetter\n        val isLastCharNotALetter = lastChar.matches(\"\
    \\\\W\")\n        isLastCharALetter && !isLastCharNotALetter", "        val lastChar\
    \ = txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n \
    \       val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n        val isLastCharNotAlpha\
    \ = !isLastCharNotWord\n        val isLastCharNotSpace = lastChar.matches(\"\\\
    \\s\")\n        val isLastCharNotUpper = lastChar.matches(\"\\\\p{Upper}\")\n\
    \        val isLastCharNotLower = lastChar.matches(\"\\\\p{Lower}\")\n       \
    \ val isLastCharNotDigit = lastChar.matches(\"\\\\p{Digit}\")\n        val isLastCharNotPunct\
    \ = lastChar.matches(\"\\\\p{Punct}\")\n        val isLastCharNotCntrl = lastChar.matches(\"\
    \\\\p{Cntrl}\")\n        val isLastCharNotUpper = lastChar.matches(\"\\\\p{Upper}\"\
    )\n        val isLastCharNotLower = lastChar.matches(\"\\\\p{Lower}\")\n     \
    \   val isLastCharNotDigit = lastChar.matches(\"\\\\p{Digit}\")\n        val isLastCharNotPunct\
    \ = lastChar.matches(\"\\\\p{Punct}\")\n        val isLastCharNotCntrl = lastChar.matches(\"\
    \\\\p{Cntrl}\")\n        val isLastCharNotUpper = lastChar.matches(\"\\\\p{Upper}\"\
    )\n        val isLastCharNotLower = lastChar.matches(\"\\\\p{Lower}\")\n     \
    \   val isLastCharNotDigit = lastChar.matches(\"\\\\p{Digit}\")\n        val isLastCharNotPunct\
    \ = lastChar.matches(\"\\\\p{Punct}\")\n        val isLastCharNotCntrl = lastChar.matches(\"\
    \\\\p{Cntrl}\")\n        val isLastCharNotUpper = lastChar.matches(\"\\\\p{Upper}\"\
    )\n        val isLastCharNotLower = lastChar.matches(\"\\\\p{Lower}\")\n     \
    \   val isLastCharNotDigit = lastChar.matches(\"\\\\p{Digit}\")\n        val isLastCharNotPunct\
    \ = lastChar.matches(\"\\\\p{Punct}\")\n        val isLastCharNotCntrl = lastChar.matches(\"\
    \\\\p{Cntrl}\")\n        val isLastCharNotUpper = lastChar.matches(\"\\\\p{Upper}\"\
    )\n        val isLastCharNotLower = last", "        val lastChar = txt.last\n\
    \        val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n        lastCharIsALetter\
    \ && !lastCharIsNotALetter", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotAlpha = !lastChar.matches(\"\
    [a-zA-Z ]\")\n        isLastCharAlpha && !isLastCharNotAlpha", "        val lastChar\
    \ = txt.last\n        val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n     \
    \   lastCharIsALetter && !lastCharIsNotALetter", "        val lastChar = txt.last\n\
    \        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isALetter && !isNotWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"[a-zA-Z0-9 ]\"\
    )\n        val isLastCharNotAlpha = !isLastCharNotWord\n        isLastCharAlpha\
    \ && !isLastCharNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharAlpha = lastChar.toString.isLetter\n\
    \        val isNotLastCharAlpha = !lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        val isNotLastCharNotWord = !words.last.contains(lastChar)\n\
    \        val isLastCharNotWordOrNotLastChar = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)\n        val isLastCharNotWordOrNotLastCharOrNotLastChar\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n\
    \        val isLastCharNotWordOrNotLastCharOrNotLastCharOrNotLastChar = words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n\
    \        val isLastCharNotWordOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastChar\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n      \
    \  val isLastCharNotWordOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastChar\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n\
    \        val isLastCharNotWordOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastChar\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar)\n        val isLastCharNotWordOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastCharOrNotLastChar\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar) && !words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar) && !words.last.contains(lastChar)\n      \
    \  val isLastCharNotWordOrNotLastCharOr", "        var lastChar = txt.last\n \
    \       var isLastCharAlpha = true\n        var isLastCharAlpha = true\n     \
    \   var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter",
  "        val words = txt.split(\" \").toList\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isNotLastCharALetter\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter2 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter3 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter4\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter5 = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter6 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter7 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter8\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter9 = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter10 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter11 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter12\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter13 = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter14 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter15 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter16\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter17 = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter18 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter19 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter20\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter21 = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetter22 = lastChar.toString.isNotLetter\n        val\
    \ isLastCharNotALetter23 = lastChar.toString.isNotLetter\n        val isLastCharNotALetter24\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetter25 = lastChar.toString.isNotLetter",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotWord\
    \ = lastChar.isNotWord\n        val lastCharIsNotWordOrALetter = lastChar.isNotWord\
    \ && lastCharIsALetter\n        val lastCharIsWord = lastChar.isWord\n       \
    \ val lastCharIsWordOrALetter = lastChar.isWord && lastCharIsALetter\n       \
    \ val lastCharIsWordOrNotALetter = lastChar.isWord && lastCharIsNotALetter\n \
    \       val lastCharIsWordOrNotWord = lastChar.isWord && lastCharIsNotWord\n \
    \       val lastCharIsWordOrNotWordOrALetter = lastChar.isWord && lastCharIsNotWord\
    \ && lastCharIsALetter\n        val lastCharIsWordOrNotWordOrNotALetter = lastChar.isWord\
    \ && lastCharIsNotWord && lastCharIsNotALetter\n        val lastCharIsWordOrNotWordOrNotWord\
    \ = lastChar.isWord && lastCharIsNotWord && lastCharIsNotWord\n        val lastCharIsWordOrNotWordOrNotWordOrALetter\
    \ = lastChar.isWord && lastCharIsNotWord && lastCharIsNotWord && lastCharIsALetter\n\
    \        val lastCharIsWordOrNotWordOrNotWordOrNotALetter = lastChar.isWord &&\
    \ lastCharIsNotWord && lastCharIsNotWord && lastCharIsNotALetter\n        val\
    \ lastCharIsWordOrNotWordOrNotWordOrNotWord = lastChar.isWord && lastCharIsNotWord\
    \ && lastCharIsNotWord && lastCharIsNotWord\n        val lastCharIsWordOrNotWordOrNotWordOrNotWordOrALetter\
    \ = lastChar.isWord && lastCharIsNotWord && lastCharIsNotWord && lastCharIsNotWord\
    \ && lastCharIsALetter\n        val lastCharIsWordOrNotWordOrNotWordOrNotWordOrNotALetter\
    \ = lastChar.isWord && lastCharIsNotWord && lastCharIsNotWord && lastCharIsNotWord\
    \ && lastCharIsNotALetter\n        val lastCharIsWordOrNotWordOrNotWordOrNotWordOr",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.toString.isLetter\n\
    \        val isLastCharNotAlpha = !lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = txt.last.trim.toString.isWord\n        val isLastCharNotWordAlpha = !isLastCharNotWord\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastChar", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isLastCharNotWord = words.last.contains(lastChar)\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"[a-zA-Z]\"\
    )\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWordAlpha = !isLastCharNot", "        val\
    \ lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n   \
    \     val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterButNotWord\
    \ = lastChar.isNotLetter && !txt.split(\" \").contains(lastChar)\n        val\
    \ lastCharIsALetterButNotWord = lastChar.isLetter && !txt.split(\" \").contains(lastChar)\n\
    \        val lastCharIsALetterAndNotWord = lastChar.isLetter && txt.split(\" \"\
    ).contains(lastChar)\n        val lastCharIsALetterAndNotWordButNotLastChar =\
    \ lastChar.isLetter && !txt.split(\" \").contains(lastChar)\n        val lastCharIsALetterAndNotWordButNotLastCharButNotWord\
    \ = lastChar.isLetter && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar)\n        val lastCharIsALetterAndNotWordButNotLastCharButNotWordButNotLastChar\
    \ = lastChar.isLetter && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar)\n        val\
    \ lastCharIsALetterAndNotWordButNotLastCharButNotWordButNotLastCharButNotWord\
    \ = lastChar.isLetter && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar)\n        val lastCharIsALetterAndNotWordButNotLastCharButNotWordButNotLastCharButNotWordButNotLastChar\
    \ = lastChar.isLetter && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar)\n        val\
    \ lastCharIsALetterAndNotWordButNotLastCharButNotWordButNotLastCharButNotWordButNotLastCharButNotWord\
    \ = lastChar.isLetter && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar) && !txt.split(\" \").contains(lastChar) && !txt.split(\"\
    \ \").contains(lastChar)\n        val lastCharIsALetterAndNotWord", "        val\
    \ lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n     \
    \   val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.matches(\"\\\\w+$\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val ", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.toString.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.toString.isLetter\n        val isLastCharNotWord = lastChar.toString.isWord\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWord\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha\n        val\
    \ isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\n\
    \        val isLastCharNotWordNotAlpha = !isLastCharNotWord && !isLastCharAlpha\
    \ && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha &&\
    \ !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha\
    \ = !isLastCharNotWord && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha && !isLastCharNotWordNotAlpha\
    \ && !isLastCharNotWordNotAlpha\n        val isLastCharNotWordNotAlpha = !isLastCharNotWord\
    \ && !isLastCharAlpha && !isLastCharNotAlpha && !is", "        val lastChar =\
    \ txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n   \
    \     val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z ]\")\n        isLastCharAlpha\
    \ && !isLastCharNotAlpha", "        val lastChar = txt.last\n        val lastCharIsALetter\
    \ = lastChar.isLetter\n        val lastCharIsNotALetter = lastChar.isNotLetter\n\
    \        val lastCharIsNotALetterOrSpace = lastChar.isNotLetter || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isNotLetter || lastChar.isSpace\
    \ || lastChar.isWord\n        val lastCharIsALetterOrSpaceOrWord = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord\n        val lastCharIsALetterOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter ||\
    \ lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord ||\
    \ lastChar.isWord\n        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isWord || lastChar.isWord\n        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isWord || lastChar.isWord || lastChar.isWord\n\
    \        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter ||\
    \ lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord ||\
    \ lastChar.isWord || lastChar.isWord || lastChar.isWord\n        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isWord || lastChar.isWord || lastChar.isWord\n\
    \        val lastCharIsALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter ||\
    \ lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord ||\
    \ lastChar.isWord || lastChar.isWord || lastChar.isWord\n        val lastCharIsALet",
  "        val lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isAlpha && !isNotWord", "        val words = txt.split(\" \")\n     \
    \   val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = words.last.contains(lastChar)\n \
    \       val isLastCharNotWordAlpha = !isLastCharNotWord && lastChar.matches(\"\
    [a-zA-Z]\")\n        isLastCharAlpha && !isLastCharNotWordAlpha", "        val\
    \ lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n     \
    \   val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.last.forall(x => !x.isLetter)\n        isLastCharAlpha && isLastCharNotAlpha\
    \ && isLastCharNotWord", "        var lastChar = txt.last\n        var isLastCharALetter\
    \ = true\n        val words = txt.split(\" \").filter(_.nonEmpty)\n        val\
    \ wordSet = words.toSet\n        val wordSetSize = wordSet.size\n        val charSet\
    \ = lastChar.toSet\n        val charSetSize = charSet.size\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize == wordSetSize)\n        val isLastCharALetter = (charSetSize\
    \ == wordSetSize)\n        val isLastCharALetter = (charSetSize == wordSetSize)\n\
    \        val isLastCharALetter = (charSetSize == wordSetSize)\n        val isLastCharALetter\
    \ = (charSetSize ", "        val lastChar = txt.last\n        val isALetter =\
    \ lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).last.contains(lastChar)\n        isALetter && !isNotWord", "        val words\
    \ = txt.split(\" \")\n        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar.toString.toLowerCase == lastChar)\n        val isLastCharNotALetter\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase == words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != words.last)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.to", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = txt.last.split(\" \").forall(_.isLetter)\n   \
    \     isLastCharAlpha && isLastCharNotAlpha && isLastCharNotWord", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a' && lastChar\
    \ <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = txt.last != lastChar\n        isLastCharALetter && !isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter",
  "        var lastChar = txt.last\n        var isLastCharALetter = true\n       \
    \ var isLastCharNotALetter = false\n        while(lastChar != \" \") {\n     \
    \       if(!Character.isLetter(lastChar)) {\n                isLastCharNotALetter\
    \ = true\n            }\n            else {\n                isLastCharALetter\
    \ = true\n            }\n            lastChar = txt.last\n        }\n        return\
    \ isLastCharALetter && !isLastCharNotALetter", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n\
    \        val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.last.split(\" \").contains(lastChar)\n        isLastCharAlpha && isLastCharNotAlpha\
    \ && isLastCharNotWord", "        val lastChar = txt.last\n        val words =\
    \ txt.split(\" \").map(_.toLowerCase)\n        val wordSet = words.toSet\n   \
    \     val isLastCharALetter = lastChar != ' ' && wordSet.contains(lastChar)\n\
    \        !isLastCharALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(x\
    \ => x.isLetter)\n        val isLastCharNotAlpha = !lastChar.forall(x => x.isLetter)\n\
    \        isLastCharAlpha && !isLastCharNotAlpha", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = lastChar.matches(\"\\\\W\")\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.dropRight(1).forall(_.isLetter)\n      \
    \  !isAlpha && !isNotWord", "        val lastChar = txt.last\n        val lastCharIsALetter\
    \ = lastChar.isLetter\n        val lastCharIsNotALetter = lastChar.isNotLetter\n\
    \        val lastCharIsNotALetterAndNotWord = lastChar.isNotLetter && !lastChar.isWord\n\
    \        val lastCharIsWord = lastChar.isWord\n        val lastCharIsNotWord =\
    \ lastChar.isNotWord\n        val lastCharIsNotWordAndNotLetter = lastChar.isNotWord\
    \ && !lastChar.isLetter\n        val lastCharIsNotWordAndNotLetterAndNotSpace\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace\n        val\
    \ lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpper = lastChar.isNotWord &&\
    \ !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\n        val lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpperAndNotUpper\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\
    \ && !lastChar.isUpper\n        val lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\
    \ && !lastChar.isUpper && !lastChar.isUpper\n        val lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper\n        val\
    \ lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper\n\
    \        val lastCharIsNotWordAndNotLetterAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar.isNotWord && !lastChar.isLetter && !lastChar.isSpace && !lastChar.isUpper\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper ", "        val\
    \ lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n   \
    \     val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        !isLastCharALetter", "        val lastChar = txt.last\n        val isLetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).lastOption.exists(_.equals(lastChar))\n        isLetter && !isNotWord", "  \
    \      val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n\
    \        val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.last.nonEmpty && !txt.last.split(\" \").contains(lastChar)\n        isLastCharAlpha\
    \ && isLastCharNotAlpha && isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").lastOption.exists(_.equals(lastChar))\n        isLetter &&\
    \ !isNotWord", "        val lastChar = txt.last\n        val lastCharIsALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotALetter = lastChar\
    \ != 'a' && lastChar != 'z'\n        lastCharIsALetter && lastCharIsNotALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toChar == 'A') && !(lastChar.toString.toChar\
    \ == 'a') && !(lastChar.toString.toChar == 'B') && !(lastChar.toString.toChar\
    \ == 'b') && !(lastChar.toString.toChar == 'C') && !(lastChar.toString.toChar\
    \ == 'c') && !(lastChar.toString.toChar == 'D') && !(lastChar.toString.toChar\
    \ == 'd') && !(lastChar.toString.toChar == 'E') && !(lastChar.toString.toChar\
    \ == 'e') && !(lastChar.toString.toChar == 'F') && !(lastChar.toString.toChar\
    \ == 'f') && !(lastChar.toString.toChar == 'G') && !(lastChar.toString.toChar\
    \ == 'g') && !(lastChar.toString.toChar == 'H') && !(lastChar.toString.toChar\
    \ == 'h') && !(lastChar.toString.toChar == 'I') && !(lastChar.toString.toChar\
    \ == 'i') && !(lastChar.toString.toChar == 'J') && !(lastChar.toString.toChar\
    \ == 'j') && !(lastChar.toString.toChar == 'K') && !(lastChar.toString.toChar\
    \ == 'k') && !(lastChar.toString.toChar == 'L') && !(lastChar.toString.toChar\
    \ == 'l') && !(lastChar.toString.toChar == 'M') && !(lastChar.toString.toChar\
    \ == 'm') && !(lastChar.toString.toChar == 'N') && !(lastChar.toString.toChar\
    \ == 'n') && !(lastChar.toString.toChar == 'O') && !(lastChar.toString.toChar\
    \ == 'o') && !(lastChar.toString.toChar == 'P') && !(lastChar.toString.toChar\
    \ == 'p') && !(lastChar.toString.toChar == 'Q') && !(lastChar.toString.toChar\
    \ == 'q') && !(lastChar.toString.toChar == 'R') && !(lastChar.toString.toChar\
    \ == 'r') && !(lastChar.toString.toChar == 'S') && !(lastChar.toString.toChar\
    \ == 's') && !(lastChar.toString.toChar == 'T') && !(lastChar.toString.toChar\
    \ == 't') && !(lastChar.toString.toChar == 'U') && !(lastChar.toString.toChar\
    \ == 'u') && !(lastChar.toString.toChar == 'V') && !(lastChar.toString.toChar\
    \ == 'v') && !(lastChar.to", "        val lastChar = txt.last\n        val lastCharIsALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val lastCharIsNotALetter = lastChar\
    \ != 'a' && lastChar != 'z'\n        val lastCharIsNotALetterButNotWord = lastCharIsALetter\
    \ && lastCharIsNotALetter\n        val lastCharIsALetterButNotWord = lastCharIsALetter\
    \ && !lastCharIsNotALetter\n        val lastCharIsALetterButNotWordButNotSpace\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord\n\
    \        val lastCharIsALetterButNotWordButNotSpaceButNotLastChar = lastCharIsALetter\
    \ && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord && !lastCharIsNotALetterButNotWord\
    \ && !lastCharIsALetterButNotWordButNotSpace\n        val lastCharIsALetterButNotWordButNotSpaceButNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord\
    \ && !lastCharIsNotALetterButNotWord && !lastCharIsALetterButNotWordButNotSpace\n\
    \        val lastCharIsALetterButNotWordButNotSpaceButNotLastChar = lastCharIsALetter\
    \ && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord && !lastCharIsNotALetterButNotWord\
    \ && !lastCharIsALetterButNotWordButNotSpace\n        val lastCharIsALetterButNotWordButNotSpaceButNotLastChar\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord\
    \ && !lastCharIsNotALetterButNotWord && !lastCharIsALetterButNotWordButNotSpace\n\
    \        val lastCharIsALetterButNotWordButNotSpaceButNotLastChar = lastCharIsALetter\
    \ && !lastCharIsNotALetter && !lastCharIsNotALetterButNotWord && !lastCharIsNotALetterButNotWord\
    \ && !lastCharIsALetterButNotWordButNotSpace\n        val lastCharIsALet", " \
    \       val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.toString.toChar.isLetter\n        val\
    \ isLastCharNotALetter = lastChar.toString.toChar.isLetterOrDigit\n        val\
    \ isLastCharNotALetterOrSpace = lastChar.toString.toChar.isLetterOrDigit && !lastChar.toString.toChar.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrEmpty = lastChar.toString.toChar.isLetterOrDigit\
    \ && !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isEmpty\n\
    \        val isLastCharNotALetterOrSpaceOrEmptyOrSpace = lastChar.toString.toChar.isLetterOrDigit\
    \ && !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isEmpty &&\
    \ !lastChar.toString.toChar.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpace\
    \ = lastChar.toString.toChar.isLetterOrDigit && !lastChar.toString.toChar.isSpace\
    \ && !lastChar.toString.toChar.isEmpty && !lastChar.toString.toChar.isSpace &&\
    \ !lastChar.toString.toChar.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpace\
    \ = lastChar.toString.toChar.isLetterOrDigit && !lastChar.toString.toChar.isSpace\
    \ && !lastChar.toString.toChar.isEmpty && !lastChar.toString.toChar.isSpace &&\
    \ !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isSpace\n   \
    \     val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace = lastChar.toString.toChar.isLetterOrDigit\
    \ && !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isEmpty &&\
    \ !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isSpace\
    \ && !lastChar.toString.toChar.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace\
    \ = lastChar.toString.toChar.isLetterOrDigit && !lastChar.toString.toChar.isSpace\
    \ && !lastChar.toString.toChar.isEmpty && !lastChar.toString.toChar.isSpace &&\
    \ !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.isSpace && !lastChar.toString.toChar.is",
  "        val lastChar = txt.last\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]\") && !lastChar.contains(\" \")\n        return isLastCharALetter", " \
    \       val lastChar = txt.last\n        val lastCharIsALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotALetter = lastChar != 'a' && lastChar\
    \ != 'z'\n        val lastCharIsNotALetterAndNotWord = lastCharIsALetter && !lastCharIsNotALetter\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpace = lastCharIsALetter &&\
    \ !lastCharIsNotALetter && !lastChar.isSpace\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewline\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUpper\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\
    \ && !lastChar.isUpper\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUpperAndNotUpper\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\
    \ && !lastChar.isUpper && !lastChar.isUpper\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUpperAndNotUpperAndNotUpper\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper\n        val\
    \ lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUpperAndNotUpperAndNotUpper\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewline\
    \ && !lastChar.isUpper && !lastChar.isUpper && !lastChar.isUpper && !", "    \
    \    val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        return isLastCharALetter && !isLastCharNotALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetter\
    \ = lastChar.forall(!_.isLetter)\n        val lastCharIsNotALetterAndNotWord =\
    \ lastChar.forall(!_.isLetter && !_.isLetterOrDigit)\n        val lastCharIsNotALetterAndNotWordAndNotSpace\
    \ = lastChar.forall(!_.isLetter && !_.isLetterOrDigit && !_.isSpace)\n       \
    \ val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewline = lastChar.forall(!_.isLetter\
    \ && !_.isLetterOrDigit && !_.isSpace && !_.isNewline)\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUppercase\
    \ = lastChar.forall(!_.isLetter && !_.isLetterOrDigit && !_.isSpace && !_.isNewline\
    \ && !_.isUppercase)\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUppercaseAndNotUppercase\
    \ = lastChar.forall(!_.isLetter && !_.isLetterOrDigit && !_.isSpace && !_.isNewline\
    \ && !_.isUppercase && !_.isUppercase)\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUppercaseAndNotUppercaseAndNotUppercase\
    \ = lastChar.forall(!_.isLetter && !_.isLetterOrDigit && !_.isSpace && !_.isNewline\
    \ && !_.isUppercase && !_.isUppercase && !_.isUppercase)\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUppercaseAndNotUppercaseAndNotUppercaseAndNotUppercase\
    \ = lastChar.forall(!_.isLetter && !_.isLetterOrDigit && !_.isSpace && !_.isNewline\
    \ && !_.isUppercase && !_.isUppercase && !_.isUppercase && !_.isUppercase)\n \
    \       val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewlineAndNotUppercaseAndNotUppercaseAndNotUppercaseAndNotUppercaseAndNotUppercase\
    \ = lastChar.forall(!_.isLetter && !_.isLetter", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val lastCharIsALetter\
    \ = (lastChar.toString.toChar == 'a') && !(lastChar.isDigit)\n        return lastCharIsALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlphabetic = lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotWordOrEmpty = words.last.contains(lastChar)\
    \ && txt.length>0\n        val isLastCharNotWordOrEmptyOrNotLetter = words.last.contains(lastChar)\
    \ && !lastChar.toString.isLetter\n        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetter\
    \ = words.last.contains(lastChar) && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n\
    \        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetterOrNotLetter = words.last.contains(lastChar)\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter\n        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = words.last.contains(lastChar) && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n\
    \        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = words.last.contains(lastChar) && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter\n        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = words.last.contains(lastChar) && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n        val isLastCharNotWordOrEmptyOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = words.last.contains(lastChar) && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.is", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\
    \\\\W\")\n        isLastCharAlpha && !isLastCharNotWord", "        val lastChar\
    \ = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.isLetter\n        val isLastCharNotWord = txt.lastIndexOfAny(\"\
    \ \") != txt.length - 1\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLastCharNotAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWord\
    \ && isLast", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = !(isLastCharALetter)\n        isLastCharNotALetter",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isLetterOrDigit\n        val lastCharIsNotALetterOrDigit\
    \ = lastChar.isLetterOrDigitOrUnderscore\n        val lastCharIsNotALetterOrDigitOrUnderscore\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.isLetterOrDigitOrUnderscoreOrSpace\n        val lastCharIsNotALetterOrDigitOrUnderscoreOrSpace\
    \ = lastChar.is", "        val words = txt.split(\" \")\n        val lastWord\
    \ = words(words.length-1)\n        val lastChar = lastWord.last\n        val isLastCharALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar\
    \ != 'a' && lastChar != 'z'\n        isLastCharALetter && !isLastCharNotALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]+\")\n        val\
    \ isLastCharNotALetter = lastChar.matches(\"[a-zA-Z]+$\")\n        val isLastCharNotALetterOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmpty\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\")\n        val\
    \ isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace = lastChar.matches(\"\
    [a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\"\
    )\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\
    \\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\
    \\s+$\\\\s+$\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s+$|^$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\\s+$\\\
    \\s+$\\\\s+$\\\\s+$\\\\s+$\")\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOr",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val words = txt.split(\" \").map(_.toLowerCase)\n        words.contains(lastChar)\
    \ && words.last.forall(_.isLetter)", "        val lastChar = txt.last\n      \
    \  val isALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord =\
    \ txt.split(\" \").map(_.last).contains(lastChar)\n        isALetter && !isNotWord",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]+\")\n        val isLastCharNotWord = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord2 = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord3 = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord4\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\")\n        val isLastCharNotWord5 = lastChar.matches(\"[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n    \
    \    val isLastCharNotWord6 = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord7\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord8\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n      \
    \  val isLastCharNotWord9 = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\")\n        val isLastCharNotWord10 = lastChar.matches(\"[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord11\
    \ = lastChar.matches(\"[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\\
    s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\s[a-zA-Z]+\\\\s[a-zA-Z]+\")\n        val isLastCharNotWord12 = lastChar.matches(\"\
    [a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\\s[a-zA-Z]+\\\
    \\", "        val lastChar = txt.last\n        val isLastCharALetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isLastCharNotALetter = lastChar != 'a'\
    \ && lastChar != 'z'\n        isLastCharALetter && !isLastCharNotALetter", " \
    \       val lastChar = txt.last\n        val isLastCharALetter = lastChar.isLetter\n\
    \        val isLastCharNotALetter = lastChar != lastChar.toLowerCase\n       \
    \ val isLastCharNotALetterAndNotWord = lastChar != lastChar.toLowerCase() && lastChar\
    \ != lastChar.toUpperCase()\n        val isLastCharNotALetterAndNotWordAndNotSpace\
    \ = lastChar != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() &&\
    \ lastChar != lastChar.trim\n        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpper\
    \ = lastChar != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() &&\
    \ lastChar != lastChar.trim && lastChar != lastChar.toUpperCase.trim\n       \
    \ val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpper = lastChar\
    \ != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() && lastChar\
    \ != lastChar.trim && lastChar != lastChar.toUpperCase.trim && lastChar != lastChar.toUpperCase.toUpperCase.trim\n\
    \        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() &&\
    \ lastChar != lastChar.trim && lastChar != lastChar.toUpperCase.trim && lastChar\
    \ != lastChar.toUpperCase.toUpperCase.trim && lastChar != lastChar.toUpperCase.toUpperCase.toUpperCase.trim\n\
    \        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() &&\
    \ lastChar != lastChar.trim && lastChar != lastChar.toUpperCase.trim && lastChar\
    \ != lastChar.toUpperCase.toUpperCase.trim && lastChar != lastChar.toUpperCase.toUpperCase.toUpperCase.trim\
    \ && lastChar != lastChar.toUpperCase.toUpperCase.toUpperCase.toUpperCase.trim\n\
    \        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar != lastChar.toLowerCase() && lastChar != lastChar.toUpperCase() &&\
    \ lastChar != lastChar.trim && lastChar != lastChar.toUpperCase.trim && lastChar\
    \ != lastChar.toUpperCase.toUpperCase.trim && lastChar != lastChar.toUpperCase.toUpperCase",
  "        val lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.dropRight(1).forall(_.isLetter)\n      \
    \  isAlpha && !isNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar != \" \" && lastChar\
    \ != \"-\"\n        val isLastCharNotAlpha = !isLastCharNotWord\n        isLastCharAlpha\
    \ && !isLastCharNotWord", "        val words = txt.split(\" \")\n        val lastChar\
    \ = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(_.isLetter)\n\
    \        val isLastCharNotAlpha = !lastChar.forall(_.isLetter)\n        val isLastCharNotWord\
    \ = words.last.forall(_.forall(_.isLetter))\n        isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n \
    \       val isLastCharNotWord = txt.last.split(\" \").exists(!_.isLetter)\n  \
    \      isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord", "      \
    \  val lastChar = txt.last\n        val lastCharIsALetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isLetter\n        val lastCharIsNotALetterOrSpace\
    \ = lastChar.isLetter || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuation\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpace = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation || lastChar.isNumber\
    \ || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWordOrPunctuation\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWordOrPunctuationOrNumber\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWordOrPunctuationOrNumberOrSpace\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace || lastChar.isWord || lastChar.isPunctuation\
    \ || lastChar.isNumber || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWordOrPunctuationOrNumberOrSpaceOrWord\
    \ = last", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == lastChar)\n\
    \        val isLastCharNotALetter = (lastChar.toString.toLowerCase != lastChar)\n\
    \        val isLastCharNotALetterWord = words.lastOption.exists(word => word.contains(lastChar))\n\
    \        val isLastCharNotALetterWordOrEmpty = words.lastOption.exists(word =>\
    \ word.contains(lastChar) && word != \"\")\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetter\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar) && word != lastChar)\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetter\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar) && word != lastChar && word.contains(lastChar))\n  \
    \      val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar) && word != lastChar && word.contains(lastChar) && word\
    \ != lastChar)\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetter\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar) && word != lastChar && word.contains(lastChar) && word\
    \ != lastChar && word.contains(lastChar))\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALetterWordOrLastCharNotALetterWord\
    \ = words.lastOption.exists(word => word.contains(lastChar) && word != \"\" &&\
    \ word.contains(lastChar) && word != lastChar && word.contains(lastChar) && word\
    \ != lastChar && word.contains(lastChar) && word != lastChar)\n        val isLastCharNotALetterWordOrEmptyOrLastCharNotALetterWordOrLastCharNotALet",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     val isLastCharNotAlpha = !isLastCharNotWord\n        val isLastCharNotSpace\
    \ = lastChar.matches(\"\\\\s\")\n        isLastCharAlpha && !isLastCharNotSpace\
    \ && !isLastCharNotAlpha", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).last.contains(lastChar)\n        isALetter && !isNotWord", "        val lastChar\
    \ = txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n \
    \       val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z ]\")\n        isLastCharAlpha\
    \ && !isLastCharNotAlpha", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).lastOption match {\n            case None => false\n            case Some(word)\
    \ => !word.contains(lastChar)\n        }\n        isALetter && !isNotWord", " \
    \       var lastChar = txt.last\n        var isLastCharALetter = true\n      \
    \  var isLastCharNotALetter = false\n        for(i <- 0 until txt.length) {\n\
    \            val c = txt(i)\n            if(c == ' ') {\n                isLastCharNotALetter\
    \ = true\n            } else {\n                isLastCharNotALetter = false\n\
    \            }\n            if(lastChar == c) {\n                isLastCharALetter\
    \ = true\n            } else {\n                isLastCharALetter = false\n  \
    \          }\n            lastChar = c\n        }\n        return isLastCharALetter",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"[a-zA-Z ]+\")\n\
    \        isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isLastCharNotALetter\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetterOrSpace = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace\n        val isLastCharNotALetterOrSpaceOrWord\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrSpace = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWord = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isSpace\
    \ || lastChar.toString.isWord || lastChar.toString.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isWord\
    \ || lastChar.toString.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isSpace\
    \ || lastChar.toString.isWord || lastChar.toString.isWord || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isSpace\
    \ || lastChar.toString.isWord || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isWord\
    \ || lastChar.toString.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.toString.isNot", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.toString.matches(\"[a-zA-Z]\")\n        val isLastCharNotAlpha =\
    \ !lastChar.toString.matches(\"[a-zA-Z ]\")\n        isLastCharAlpha && !isLastCharNotAlpha",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !(isLastCharALetter)\n        return isLastCharALetter && !isLastCharNotALetter",
  "        var lastChar = txt.last\n        var isLastCharALetter = true\n       \
    \ while (lastChar != \" \") {\n            if (lastChar.isLetter) {\n        \
    \        isLastCharALetter = false\n            }\n            lastChar = txt.last\n\
    \        }\n        return isLastCharALetter", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar\
    \ >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter", "        val lastChar\
    \ = txt.last\n        val lastCharIsALetter = (lastChar >= 'a' && lastChar <=\
    \ 'z')\n        val lastCharIsNotALetter = (lastChar != 'a' && lastChar != 'z')\n\
    \        lastCharIsALetter && !lastCharIsNotALetter", "        val lastChar =\
    \ txt.last\n        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n      \
    \  val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n        isLetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar.toString.isLetter\n        val isLastCharNotALetter = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetterOrSpace = lastChar.toString.isNotLetter || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrEmpty = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isEmpty\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isEmpty\
    \ || lastChar.toString.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isEmpty\
    \ || lastChar.toString.isSpace || lastChar.toString.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isEmpty\
    \ || lastChar.toString.isSpace || lastChar.toString.isSpace || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isEmpty || lastChar.toString.isSpace\
    \ || lastChar.toString.isSpace || lastChar.toString.isSpace || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpace = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isEmpty || lastChar.toString.isSpace\
    \ || lastChar.toString.isSpace || lastChar.toString.isSpace || lastChar.toString.isSpace\
    \ || lastChar.toString.isSpace\n        val isLastCharNotALetterOrSpaceOrEmptyOrSpaceOrSpaceOrSpaceOrSpace\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isEmpty\
    \ || lastChar.toString.isSpace || lastChar.toString.isSpace || lastChar.toString.isSpace\
    \ || lastChar.toString.isSpace || last", "        val lastChar = txt.last\n  \
    \      val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isAlpha && !isNotWord",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar >= 'a'\
    \ && lastChar <= 'z'\n        val lastCharIsNotALetter = lastChar != 'a' && lastChar\
    \ != 'z'\n        lastCharIsALetter && !lastCharIsNotALetter", "        val words\
    \ = txt.split(\" \")\n        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar.toChar.isLetter\n        val isLastCharNotALetter = words.last.last.isLetter\n\
    \        val isLastCharNotALetterOrWord = words.last.last.isLetter || words.last.last\
    \ == lastChar\n        val isLastCharNotALetterOrWordOrEmpty = words.last.last.isLetter\
    \ || words.last.last == lastChar || words.last == \"\"\n        val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetter\
    \ = words.last.last.isLetter || words.last.last == lastChar || words.last == \"\
    \" || words.last.last != lastChar\n        val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWord\
    \ = words.last.last.isLetter || words.last.last == lastChar || words.last == \"\
    \" || words.last.last != lastChar || words.last.last == words.last.last\n    \
    \    val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWordOrEmpty =\
    \ words.last.last.isLetter || words.last.last == lastChar || words.last == \"\"\
    \ || words.last.last != lastChar || words.last.last == words.last.last || words.last\
    \ == \"\"\n        val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWordOrEmptyOrLastCharNotALetter\
    \ = words.last.last.isLetter || words.last.last == lastChar || words.last == \"\
    \" || words.last.last != lastChar || words.last.last == words.last.last || words.last\
    \ == \"\" || words.last.last != lastChar\n        val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWord\
    \ = words.last.last.isLetter || words.last.last == lastChar || words.last == \"\
    \" || words.last.last != lastChar || words.last.last == words.last.last || words.last\
    \ == \"\" || words.last.last != lastChar || words.last.last == words.last.last\n\
    \        val isLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOrWordOrEmptyOrLastCharNotALetterOr",
  "        val lastChar = txt.last\n        val isALetter = (lastChar >= 'a' && lastChar\
    \ <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isALetter", "    \
    \    val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isNotLastCharALetter\
    \ = lastChar.toString.isNotLetter\n        val isNotLastCharALetterInWord = words.contains(lastChar)\n\
    \        val isNotLastCharALetterInWordButNotALetter = words.contains(lastChar)\
    \ && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter\
    \ = lastChar.toString.isLetter && !words.contains(lastChar)\n        val isLastCharALetterInWordButNotALetter2\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter3\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter4\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter5\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter6\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter7\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter8\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter9\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter10\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter11\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter12\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter13\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter14\
    \ = words.contains(lastChar) && !lastChar.toString.isLetter\n        val isLastCharALetterInWordButNotALetter15\
    \ = words.contains(lastChar) && !", "        val lastChar = txt.last\n       \
    \ val isLastCharALetter = lastChar.toString.isLetter\n        val isLastCharNotALetter\
    \ = lastChar.toString.isNotLetter\n        val isLastCharNotALetterOrSpace = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace\n        val isLastCharNotALetterOrSpaceOrNewLine\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isNewLine\n\
    \        val isLastCharNotALetterOrSpaceOrNewLineOrNewLine = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isNewLine || lastChar.toString.isNewLine\n\
    \        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLine = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isNewLine || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine\n        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine || lastChar.toString.isNewLine || lastChar.toString.isNewLine\n\
    \        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine || lastChar.toString.isNewLine || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine\n        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine || lastChar.toString.isNewLine || lastChar.toString.isNewLine\
    \ || lastChar.toString.isNewLine || lastChar.toString.isNewLine\n        val isLastCharNotALetterOrSpaceOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLineOrNewLine\
    \ = lastChar.toString.is", "        val words = txt.split(\" \")\n        val\
    \ lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.toString.toLowerCase\
    \ match {\n            case c if c.isLetter => true\n            case _ => false\n\
    \        }\n        !isLastCharALetter", "        val lastChar = txt.last\n  \
    \      val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar\
    \ >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter", "        val words\
    \ = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val\
    \ isLastCharALetter = lastChar.toString.isLetter\n        val isNotWord = words.last.forall(_.toString.isLetter)\n\
    \        isLastCharALetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\s\")\n        isLastCharALetter", "        val lastChar = txt.last\n     \
    \   val isLastCharALetter = lastChar >= 'a' && lastChar <= 'z'\n        val isLastCharNotALetter\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i'\n        val isLastCharNotALetterAndNotWord\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o' &&\
    \ lastChar != 'u'\n        val isLastCharNotALetterAndNotWordAndNotSpace = lastChar\
    \ != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o' && lastChar\
    \ != 'u' && lastChar != 's'\n        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpper\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o' &&\
    \ lastChar != 'u' && lastChar != 's' && lastChar != 'A' && lastChar != 'E' &&\
    \ lastChar != 'I' && lastChar != 'O' && lastChar != 'U'\n        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpper\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o' &&\
    \ lastChar != 'u' && lastChar != 's' && lastChar != 'A' && lastChar != 'E' &&\
    \ lastChar != 'I' && lastChar != 'O' && lastChar != 'U' && lastChar != 'a'\n \
    \       val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o' &&\
    \ lastChar != 'u' && lastChar != 's' && lastChar != 'A' && lastChar != 'E' &&\
    \ lastChar != 'I' && lastChar != 'O' && lastChar != 'U' && lastChar != 'a' &&\
    \ lastChar != 'e' && lastChar != 'i' && lastChar != 'o' && lastChar != 'u' &&\
    \ lastChar != 's'\n        val isLastCharNotALetterAndNotWordAndNotSpaceAndNotUpperAndNotUpperAndNotUpperAndNotUpper\
    \ = lastChar != 'a' && lastChar != 'e' && lastChar != 'i' && lastChar != 'o",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z ]\"\
    )\n        isLastCharAlpha && !isLastCharNotAlpha", "        val lastChar = txt.last\n\
    \        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").lastOption.exists(_.equals(lastChar))\n        isLetter &&\
    \ !isNotWord", "        val lastChar = txt.last\n        val isALetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.dropRight(1).forall(_.isLetter)\n\
    \        isALetter && !isNotWord", "        val words = txt.split(\" \")\n   \
    \     val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = words.last.contains(lastChar)\n \
    \       !isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsLetter = lastChar >= 'a' && lastChar <= 'z'\n        val\
    \ lastCharIsNotWord = lastChar != ' ' && lastChar != '-' && lastChar != '_'\n\
    \        val lastCharIsNotLetterOrWord = lastCharIsLetter || lastCharIsNotWord\n\
    \        lastCharIsLetter == lastCharIsNotWord && lastCharIsNotLetterOrWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"[a-zA-Z]+\")\n\
    \        isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar\
    \ >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter", "        val lastChar\
    \ = txt.last\n        val isLastCharAlpha = lastChar.toString.isLetter\n     \
    \   val isLastCharNotAlpha = !lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = txt.last.trim.toString.split(\" \").length == 0\n        isLastCharAlpha &&\
    \ isLastCharNotAlpha && isLastCharNotWord", "        var lastChar = txt.last\n\
    \        var isLastCharALetter = true\n        while(lastChar != \" \") {\n  \
    \          if(lastChar.isLetter) {\n                isLastCharALetter = false\n\
    \            }\n            lastChar = txt.last\n        }\n        return isLastCharALetter",
  "        val words = txt.split(\" \")\n        val lastChar = txt.last\n       \
    \ val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isNotLetter\n        val lastCharIsNotALetterButInWord = words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButNotInWord = words.last.contains(lastChar)\
    \ && !words.last.contains(lastChar)\n        val lastCharIsALetterButNotInWord\
    \ = words.last.contains(lastChar) && words.last.contains(lastChar)\n        val\
    \ lastCharIsALetterButInWord = words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButInWord = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)\n        val lastCharIsNotALetterButNotInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar)\n        val\
    \ lastCharIsALetterButInWord = words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButInWord = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)\n        val lastCharIsNotALetterButNotInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar)\n        val\
    \ lastCharIsALetterButInWord = words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButInWord = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)\n        val lastCharIsNotALetterButNotInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar)\n        val\
    \ lastCharIsALetterButInWord = words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButInWord = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)\n        val lastCharIsNotALetterButNotInWord\
    \ = words.last.contains(lastChar) && !words.last.contains(lastChar)\n        val\
    \ lastCharIsALetterButInWord = words.last.contains(lastChar) && words.last.contains(lastChar)\n\
    \        val lastCharIsNotALetterButInWord = words.last.contains(lastChar) &&\
    \ !words.last.contains(lastChar)", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = txt.split(\" \").last.contains(lastChar)\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\S\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \").toList\n        val lastChar = words(txt.length-1)\n        val lastCharIsALetter\
    \ = lastChar.toString.isLetter\n        val isNotWord = words.last.forall(_.toString.isLetter)\n\
    \        !lastCharIsALetter && !isNotWord", "        val lastChar = txt.last\n\
    \        val lastCharIsALetter = lastChar.toString.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isLetter\n        val lastCharIsNotALetterOrSpace = lastChar.isLetter\
    \ || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrDigit\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpper = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUpper\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpperOrLower  = lastChar.isLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUpper\
    \ || lastChar.isLower\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpperOrLowerOrSpace\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUpper || lastChar.isLower || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpperOrLowerOrSpaceOrWord\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUpper || lastChar.isLower || lastChar.isSpace || lastChar.isWord\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpperOrLowerOrSpaceOrWordOrDigit\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUpper || lastChar.isLower || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isDigit\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUpperOrLowerOrSpaceOrWordOrDigitOrUpper\
    \ = lastChar.isLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUpper || lastChar.isLower || lastChar.isSpace || lastChar.isWor",
  "        val words = txt.split(\" \")\n        val lastChar = txt.last\n       \
    \ val isLastCharALetter = lastChar.toString.toLowerCase == lastChar\n        val\
    \ isLastCharNotALetter = words.last.last.toString.toLowerCase != words.last.last\n\
    \        isLastCharALetter && !isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val isLetter = lastChar.matches(\"[a-zA-Z]+\")\n        val\
    \ isNotWord = txt.split(\" \").map(_.trim).filter(_.nonEmpty).map(_.last).exists(_.equals(lastChar))\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A'\
    \ && lastChar <= 'Z')\n        val isLastCharNotALetter = (lastChar != 'a' &&\
    \ lastChar != 'e' && lastChar != 'i' && lastChar != 'o' && lastChar != 'u')\n\
    \        isLastCharALetter && !isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n   \
    \     val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z ]\")\n        val isLastCharNotWord\
    \ = !lastChar.matches(\"[a-zA-Z ]+\")\n        isLastCharAlpha && !isLastCharNotAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar.toString.isLetter\n        val isLastCharNotALetter = lastChar.toString.isNotLetter\n\
    \        val isLastCharNotALetterOrSpace = lastChar.toString.isNotLetter || lastChar.toString.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWord = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrEmpty\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isEmpty\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrNull\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isEmpty || lastChar.toString.isNull\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrNullOrEmpty\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isEmpty || lastChar.toString.isNull || lastChar.toString.isEmpty\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrNullOrEmptyOrNull = lastChar.toString.isNotLetter\
    \ || lastChar.toString.isSpace || lastChar.toString.isWord || lastChar.toString.isEmpty\
    \ || lastChar.toString.isNull || lastChar.toString.isEmpty || lastChar.toString.isNull\
    \ || lastChar.toString.isEmpty\n        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrNullOrEmptyOrNull\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isEmpty || lastChar.toString.isNull || lastChar.toString.isEmpty\
    \ || lastChar.toString.isNull || lastChar.toString.isEmpty || lastChar.toString.isNull\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrEmptyOrNullOrEmptyOrNullOrNull\
    \ = lastChar.toString.isNotLetter || lastChar.toString.isSpace || lastChar.toString.isWord\
    \ || lastChar.toString.isEmpty || lastChar.toString.isNull || lastChar.to", " \
    \       val lastChar = txt.last\n        val words = txt.split(\" \").map(_.toLowerCase)\n\
    \        val isLastCharALetter = lastChar != null && !words.contains(lastChar)\n\
    \        return isLastCharALetter", "        val lastChar = txt.last\n       \
    \ val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >=\
    \ 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter = !(isLastCharALetter)\n\
    \        isLastCharNotALetter", "        val lastChar = txt.last\n        val\
    \ lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter = lastChar.isNotLetter\n\
    \        val lastCharIsNotALetterOrSpace = lastChar.isNotLetter || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isNotLetter || lastChar.isSpace\
    \ || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || ", "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = words.lastOption.map(_.toString.charAt(0)).exists(!_.isLetter)\n        isLastCharAlpha\
    \ && !isLastCharNotWord", "        val lastChar = txt.last\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\
    [a-zA-Z]+\")\n        isLastCharAlpha && !isLastCharNotWord", "        val lastChar\
    \ = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.isLetter\n        val isLastCharNotWord = txt.last.forall(letter\
    \ => !letter.isLetter)\n        isLastCharAlpha && isLastCharNotAlpha && isLastCharNotWord",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == lastChar)\n\
    \        val isLastCharNotALetter = (lastChar.toString.toLowerCase != lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(lastChar)\n\
    \        val isLastCharNotALetterWord = words.last.contains(lastChar)\n      \
    \  val isLastCharNotALetterWord = words.last.contains(lastChar)\n        val isLastCharNotALetterWord\
    \ = words.last.contains(lastChar)\n        val isLastCharNotALetterWord = words.last.contains(",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.isLetter\n\
    \        val isLastCharNotAlpha = !lastChar.isLetter\n        val isLastCharNotWord\
    \ = txt.last.trim.toString.split(\" \").length == 0\n        isLastCharAlpha &&\
    \ !isLastCharNotAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastWord = words(words.length-1)\n        val lastChar = lastWord.last\n\
    \        val isLastCharALetter = lastChar >= 'a' && lastChar <= 'z'\n        !isLastCharALetter",
  "        val lastChar = txt.last\n        val words = txt.split(\" \").filter(_.nonEmpty)\n\
    \        val lastWord = words.last\n        val lastWordChar = lastWord.last\n\
    \        lastChar.isLetterOrDigit() && lastWordChar != lastChar", "        val\
    \ lastChar = txt.last\n        val isLastCharALetter = (lastChar.isLetter) &&\
    \ (!lastChar.isDigit)\n        val isLastCharNotALetter = !lastChar.isLetter\n\
    \        return isLastCharALetter && isLastCharNotALetter", "        val lastChar\
    \ = txt.last\n        val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n     \
    \   val lastCharIsNotALetterOrLastCharIsALetter = lastCharIsALetter || lastCharIsNotALetter\n\
    \        lastCharIsALetter && lastCharIsNotALetterOrLastCharIsALetter", "    \
    \    val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter",
  "        val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterButInWord\
    \ = lastChar.isNotLetter && !txt.contains(lastChar)\n        val lastCharIsALetterButInWord\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButInWord\
    \ = lastChar.isNotLetter && txt.contains(lastChar)\n        val lastCharIsNotALetterButInWordButNotLastChar\
    \ = lastChar.isNotLetter && !txt.contains(lastChar)\n        val lastCharIsALetterButNotLastChar\
    \ = lastChar.isLetter && txt.contains(lastChar)\n        val lastCharIsALetterButNotLastCharButNotLastChar\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastChar\
    \ = lastChar.isNotLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastCharButNotLastChar\
    \ = lastChar.isNotLetter && txt.contains(lastChar)\n        val lastCharIsALetterButNotLastCharButNotLastChar\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastCharButNotLastChar\
    \ = lastChar.isNotLetter && !txt.contains(lastChar)\n        val lastCharIsALetterButNotLastCharButNotLastChar\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastCharButNotLastChar\
    \ = lastChar.isNotLetter && txt.contains(lastChar)\n        val lastCharIsALetterButNotLastCharButNotLastChar\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastCharButNotLastChar\
    \ = lastChar.isNotLetter && !txt.contains(lastChar)\n        val lastCharIsALetterButNotLastCharButNotLastChar\
    \ = lastChar.isLetter && !txt.contains(lastChar)\n        val lastCharIsNotALetterButNotLastCharButNotLastChar\
    \ = lastChar.isNotLetter && txt.contains(lastChar)\n        ", "        val lastChar\
    \ = txt.last\n        val isLastCharALetter = (lastChar >= 'a' && lastChar <=\
    \ 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter", " \
    \       val lastChar = txt.last\n        val isLastCharALetter = (lastChar >=\
    \ 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val\
    \ isLastCharNotALetter = !(isLastCharALetter)\n        isLastCharNotALetter",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z ]\"\
    )\n        isLastCharAlpha && !isLastCharNotAlpha", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = (lastChar.toString.toLowerCase == lastChar)\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterWord\
    \ = (words.last.toString.", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isLastCharNotALetter = txt.last != lastChar\n        val isLastCharNotALetterOrLastCharNotALetter\
    \ = (isLastCharALetter && isLastCharNotALetter) || (!isLastCharALetter && !isLastCharNotALetter)\n\
    \        isLastCharNotALetterOrLastCharNotALetter", "        val lastChar = txt.last\n\
    \        val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord\
    \ = txt.split(\" \").map(_.last).contains(lastChar)\n        isAlpha && !isNotWord",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !(isLastCharALetter)\n        isLastCharNotALetter", "        var lastChar\
    \ = txt.last\n        var isLastCharALetter = true\n        var isLastCharALetterWord\
    \ = false\n        var isLastCharALetterSpace = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterTab = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLastCharALetterNewline = false\n        var isLastCharALetterNewline\
    \ = false\n        var isLast", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n\
    \        val isLastCharNotWord = txt.last.split(\" \").forall(!_.isLetter)\n \
    \       isLastCharAlpha && !isLastCharNotAlpha && !isLastCharNotWord", "     \
    \   val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = txt.lastIndexOfAny(\" \") != txt.length\
    \ - 1\n        isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]+\")\n        val isLastCharNotWord = words.last.contains(lastChar)\n\
    \        !isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar\
    \ >= 'A' && lastChar <= 'Z')\n        !isLastCharALetter", "        val lastChar\
    \ = txt.last\n        val isALetter = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\W\")\n        return isALetter", "        val lastChar = txt.last\n      \
    \  val isLetter = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord =\
    \ txt.split(\" \").last.contains(lastChar)\n        isLetter && !isNotWord", " \
    \       val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterAndNotWord\
    \ = lastChar.isNotLetter && !lastChar.isWord\n        val lastCharIsWord = lastChar.isWord\n\
    \        val lastCharIsNotWord = lastChar.isNotWord\n        val lastCharIsWordAndNotALetter\
    \ = lastChar.isWord && !lastChar.isLetter\n        val lastCharIsWordAndNotALetterAndNotWord\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isNotWord\n        val\
    \ lastCharIsWordAndNotALetterAndNotWordAndNotALetter = lastChar.isWord && !lastChar.isLetter\
    \ && !lastChar.isNotWord && !lastChar.isNotLetter\n        val lastCharIsWordAndNotALetterAndNotWordAndNotALetterAndNotWord\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isNotWord && !lastChar.isNotLetter\
    \ && !lastChar.isNotWord\n        val lastCharIsWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetter\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isNotWord && !lastChar.isNotLetter\
    \ && !lastChar.isNotWord && !lastChar.isNotLetter\n        val lastCharIsWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetterAndNotWord\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isNotWord && !lastChar.isNotLetter\
    \ && !lastChar.isNotWord && !lastChar.isNotLetter && !lastChar.isNotWord\n   \
    \     val lastCharIsWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetter\
    \ = lastChar.isWord && !lastChar.isLetter && !lastChar.isNotWord && !lastChar.isNotLetter\
    \ && !lastChar.isNotWord && !lastChar.isNotLetter && !lastChar.isNotWord && !lastChar.isNotLetter\n\
    \        val lastCharIsWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetterAndNotWordAndNotALetterAndNotWord\
    \ = ", "        var lastChar = txt.last\n        var isLastCharALetter = true\n\
    \        var isLastCharNotALetter = false\n        while(lastChar != \" \" &&\
    \ lastChar != \"\") {\n            if(lastChar.matches(\"[a-zA-Z]\")) {\n    \
    \            isLastCharALetter = false\n            } else {\n               \
    \ isLastCharNotALetter = true\n            }\n            lastChar = txt.last\n\
    \        }\n        return isLastCharALetter", "        val lastChar = txt.last\n\
    \        val isLastCharALetter = lastChar.toString.isLetter\n        val isLastCharNotWord\
    \ = lastChar.toString.isNotEmpty && !lastChar.toString.contains(\"_\")\n     \
    \   isLastCharALetter && !isLastCharNotWord", "        var lastChar = txt.last\n\
    \        var isLastCharALetter = true\n        for(i <- 0 until txt.length){\n\
    \            if(txt(i) != lastChar){\n                isLastCharALetter = false\n\
    \                break\n            }\n        }\n        return isLastCharALetter",
  "        val lastChar = txt.last\n        if(lastChar.isLetter) {\n            val\
    \ words = txt.split(\" \").filter(_.nonEmpty)\n            val lastWord = words.last\n\
    \            if(lastWord.contains(lastChar)) {\n                return false\n\
    \            }\n        }\n        return true", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\W\")\n        val isLastCharNotAlpha = !lastChar.matches(\"[a-zA-Z]\")\n \
    \       isLastCharAlpha && isLastCharNotAlpha", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.toString.isLetter\n        val isLastCharNotAlpha\
    \ = !lastChar.toString.isLetter\n        val isLastCharNotWord = txt.last.trim.toString.contains(\"\
    space\")\n        val isLastCharNotWordAlpha = !isLastCharNotWord\n        val\
    \ isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n\
    \        val isLastCharNotWordAlpha = !isLastCharNotWordAlpha\n        val isLastCharNotWordAlpha\
    \ = !is", "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        var lastChar = txt.last\n\
    \        var isLastCharALetter = true\n        while(lastChar != ' ') {\n    \
    \        if(lastChar.matches(\"[a-zA-Z]\")) {\n                isLastCharALetter\
    \ = false\n            }\n            lastChar = txt.last\n        }\n       \
    \ return isLastCharALetter", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar.toString.isLetter\n        val isNotALetter = lastChar.toString.isNotLetter\n\
    \        val isNotALetterOrSpace = lastChar.toString.isNotLetter || lastChar.toString.isSpace\n\
    \        val isNotALetterOrNotSpace = lastChar.toString.isNotLetter && !lastChar.toString.isSpace\n\
    \        val isNotALetterOrNotSpaceOrNotLetter = lastChar.toString.isNotLetter\
    \ && !lastChar.toString.isSpace && !lastChar.toString.isLetter\n        val isNotALetterOrNotSpaceOrNotLetterOrNotLetter\
    \ = lastChar.toString.isNotLetter && !lastChar.toString.isSpace && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter\n        val isNotALetterOrNotSpaceOrNotLetterOrNotLetterOrNotLetter\
    \ = lastChar.toString.isNotLetter && !lastChar.toString.isSpace && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n        val isNotALetterOrNotSpaceOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = lastChar.toString.isNotLetter && !lastChar.toString.isSpace && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n\
    \        val isNotALetterOrNotSpaceOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = lastChar.toString.isNotLetter && !lastChar.toString.isSpace && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter\n        val isNotALetterOrNotSpaceOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetter\
    \ = lastChar.toString.isNotLetter && !lastChar.toString.isSpace && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter && !lastChar.toString.isLetter\
    \ && !lastChar.toString.isLetter && !lastChar.toString.isLetter\n        val isNotALetterOrNotSpaceOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOrNotLetterOr",
  "        val lastChar = txt.last\n        if(lastChar.isLetter) {\n            val\
    \ words = txt.split(\" \").filter(_.nonEmpty)\n            val lastWord = words.last\n\
    \            val lastWordChar = lastWord.last\n            if(lastWordChar !=\
    \ lastChar) {\n                return false\n            }\n        }\n      \
    \  return true", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = lastChar.isLetter\n        val isLastCharNotALetter = lastChar.isNotLetter\n\
    \        val isLastCharNotALetterOrSpace = lastChar.isNotLetter || lastChar.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWord = lastChar.isNotLetter || lastChar.isSpace\
    \ || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n\
    \        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord || lastChar.isSpace\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isWord\n        val isLastCharNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || ", "      \
    \  val lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n\
    \        val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotALetterOrSpace\
    \ = lastChar.isNotLetter || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrDigit\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercase = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord || lastChar.isDigit || lastChar.isUppercase\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrLowercase =\
    \ lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isLowercase\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrLowercaseOrDigit\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isLowercase || lastChar.isDigit\n      \
    \  val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrLowercaseOrDigitOrUppercase\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isLowercase || lastChar.isDigit || lastChar.isUppercase\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrLowercaseOrDigitOrUppercaseOrLowercase\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWord || lastChar.isDigit\
    \ || lastChar.isUppercase || lastChar.isLowercase || lastChar.isDigit || lastChar.isUppercase\
    \ || lastChar.isLowercase\n        val lastCharIsNotALetterOrSpaceOrWordOrDigitOrUppercaseOrLowercaseOrDigitOrUppercaseOrLowercaseOrDigit\
    \ = lastChar.isNotLetter || lastChar.isSpace || lastChar.isWor", "        val\
    \ words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n     \
    \   val isLastCharAlpha = lastChar.forall(_.isLetter)\n        val isLastCharNotAlpha\
    \ = !lastChar.forall(_.isLetter)\n        isLastCharAlpha && !isLastCharNotAlpha",
  "        var lastChar = txt.last\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var\
    \ isLastCharAlpha = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha\
    \ = true\n        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n\
    \        var isLastCharAlpha = true\n        var isLastCharAlpha = true\n    \
    \    var isLastCharAlpha = true\n", "        val words = txt.split(\" \")\n  \
    \      val lastChar = words(txt.length-1)\n        val isLastCharAlpha = lastChar.forall(x\
    \ => x.isLetter)\n        val isLastCharNotAlpha = !lastChar.forall(x => x.isLetter)\n\
    \        return isLastCharAlpha && !isLastCharNotAlpha", "        val lastChar\
    \ = txt.last\n        val lastCharIsALetter = lastChar >= 'a' && lastChar <= 'z'\n\
    \        val lastCharIsNotALetter = lastChar != 'a' && lastChar != 'z'\n     \
    \   val lastCharIsNotALetterAndNotWord = lastCharIsALetter && !lastCharIsNotALetter\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpace = lastCharIsALetter &&\
    \ !lastCharIsNotALetter && !lastChar.isSpace\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLine\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewLine\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLineAndNotUppercase\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewLine\
    \ && !lastChar.isUppercase\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLineAndNotUppercaseAndNotSpace\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewLine\
    \ && !lastChar.isUppercase && !lastChar.isSpace\n        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLineAndNotUppercaseAndNotSpaceAndNotNewLine\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewLine\
    \ && !lastChar.isUppercase && !lastChar.isSpace && !lastChar.isNewLine\n     \
    \   val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLineAndNotUppercaseAndNotSpaceAndNotNewLineAndNotUppercase\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNewLine\
    \ && !lastChar.isUppercase && !lastChar.isSpace && !lastChar.isNewLine && !lastChar.isUppercase\n\
    \        val lastCharIsNotALetterAndNotWordAndNotSpaceAndNotNewLineAndNotUppercaseAndNotSpaceAndNotNewLineAndNotUppercaseAndNotSpace\
    \ = lastCharIsALetter && !lastCharIsNotALetter && !lastChar.isSpace && !lastChar.isNew",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a'\
    \ && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        var lastChar =\
    \ txt.last\n        var isLastCharALetter = true\n        var isLastCharNotALetter\
    \ = false\n        var isLastCharALetter = false\n        for(i <- 0 until txt.length){\n\
    \            if(txt(i) == lastChar){\n                isLastCharALetter = true\n\
    \            }\n            else{\n                isLastCharNotALetter = true\n\
    \            }\n        }\n        if(isLastCharALetter){\n            return\
    \ true\n        }\n        else{\n            return false\n        }", "    \
    \    val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val lastCharIsALetter = lastChar.matches(\"[a-zA-Z]\") && !lastChar.matches(\"\
    \\\\w\")\n        lastCharIsALetter", "        val lastChar = txt.last\n     \
    \   val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isNotLetter\n        val lastCharIsNotALetterOrSpace = lastChar.isNotLetter\
    \ || lastChar.isSpace\n        val lastCharIsALetterOrSpace = lastChar.isLetter\
    \ || lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isSpace || lastChar.isWord\n        val lastCharIsALetterOrWord\
    \ = lastChar.isLetter || lastChar.isWord || lastChar.isSpace\n        val lastCharIsNotALetterOrWordOrSpace\
    \ = lastChar.isNotLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace\n\
    \        val lastCharIsALetterOrWordOrSpace = lastChar.isLetter || lastChar.isWord\
    \ || lastChar.isSpace || lastChar.isNotSpace\n        val lastCharIsNotALetterOrWordOrSpaceOrWord\
    \ = lastChar.isNotLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace\
    \ || lastChar.isWord\n        val lastCharIsALetterOrWordOrSpaceOrWord = lastChar.isLetter\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace || lastChar.isWord\n\
    \        val lastCharIsNotALetterOrWordOrSpaceOrWordOrSpace = lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace || lastChar.isWord\
    \ || lastChar.isNotSpace\n        val lastCharIsALetterOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace\
    \ || lastChar.isWord || lastChar.isNotSpace || lastChar.isNotWord\n        val\
    \ lastCharIsNotALetterOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isNotLetter\
    \ || lastChar.isWord || lastChar.isSpace || lastChar.isNotSpace || lastChar.isWord\
    \ || lastChar.isNotSpace || lastChar.isNotWord || lastChar.isNotWord\n       \
    \ val lastCharIsALetterOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter ",
  "        val lastChar = txt.last\n        val isLastCharAlpha = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isLastCharNotWord = lastChar.matches(\"\\\\W\")\n   \
    \     isLastCharAlpha && !isLastCharNotWord", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharAlpha\
    \ = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord = words.last.contains(lastChar)\n\
    \        !isLastCharAlpha && !isLastCharNotWord", "        val lastChar = txt.last\n\
    \        val isLastCharAlpha = lastChar.matches(\"[a-zA-Z]\")\n        val isLastCharNotWord\
    \ = lastChar.matches(\"\\\\W\")\n        isLastCharAlpha && !isLastCharNotWord",
  "        val lastChar = txt.last\n        val isLastCharALetter = (lastChar.toString.toLowerCase\
    \ == lastChar)\n        val isLastCharNotALetter = !isLastCharALetter\n      \
    \  return isLastCharNotALetter", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n\
    \        val isLastCharNotWord = txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val\
    \ isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val\
    \ isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val\
    \ isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val\
    \ isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n\
    \        val isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val\
    \ isLastCharNotWordAlpha = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha\
    \ = !txt.last.forall(_.isLetter)\n        val isLastCharNotWordAlpha = !txt.last.forall(_.",
  "        val words = txt.split(\" \")\n        val lastChar = txt.last\n       \
    \ val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.forall(_.isLetter)\n        val lastCharIsNotALetterButInWord = words.lastOption.exists(_.contains(lastChar))\n\
    \        val lastCharIsNotALetterButInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWord = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWordButNotLastChar\
    \ = words.lastOption.exists(_.contains(lastChar) && !lastChar.isLetter && !lastChar.isLetter)\n\
    \        val lastCharIsALetterButNotInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWordButNotLastChar\
    \ = words.lastOption.exists(_.contains(lastChar) && !lastChar.isLetter && !lastChar.isLetter)\n\
    \        val lastCharIsALetterButNotInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWordButNotLastChar\
    \ = words.lastOption.exists(_.contains(lastChar) && !lastChar.isLetter && !lastChar.isLetter)\n\
    \        val lastCharIsALetterButNotInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWordButNotLastChar\
    \ = words.lastOption.exists(_.contains(lastChar) && !lastChar.isLetter && !lastChar.isLetter)\n\
    \        val lastCharIsALetterButNotInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter && !lastChar.isLetter)\n        val lastCharIsALetterButNotInWordButNotLastChar\
    \ = words.lastOption.exists(_.contains(lastChar) && !lastChar.isLetter && !lastChar.isLetter)\n\
    \        val lastCharIsALetterButNotInWordButNotLastChar = words.lastOption.exists(_.contains(lastChar)\
    \ && !lastChar.isLetter && !lastChar.isLetter)\n        ", "        val words\
    \ = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n        val\
    \ isLastCharALetter = lastChar.toString.toLowerCase == lastChar\n        val isNotWord\
    \ = words.last.contains(lastChar)\n        isLastCharALetter && !isNotWord", " \
    \       val lastChar = txt.last\n        val isALetter = lastChar.toString.isLetter\n\
    \        val isNotWord = txt.splitAt(txt.length-1)\n            .map(_.toString.trim).\n\
    \            filter(_.nonEmpty).\n            forall(_.isLetter)\n        isALetter\
    \ && !isNotWord", "        val lastChar = txt.last\n        val isLetter = lastChar.matches(\"\
    [a-zA-Z]\")\n        val isNotWord = txt.split(\" \").last.contains(lastChar)\n\
    \        isLetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isALetter = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar\
    \ <= 'Z')\n        !isALetter", "        val lastChar = txt.last\n        val\
    \ lastCharIsALetter = lastChar.toString.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isLetter\n        val lastCharIsNotALetterOrSpace = lastChar.isLetter\
    \ && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWord = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord\
    \ && !lastChar.isWord\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace\
    \ && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord && !lastChar.isWord\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpace = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isWord && !lastChar.isSpace\n\
    \        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWord = lastChar.isLetter\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord\
    \ && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord\
    \ && !lastChar.isWord && !lastChar.isSpace\n        val lastCharIsNotALetterOrSpaceOrWordOrSpaceOrWordOrSpaceOrWordOrSpace\
    \ = lastChar.isLetter && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace\
    \ && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord && !lastChar.isSpace\
    \ && !lastChar.isWord && !lastChar.isSpace && !lastChar.isWord && !lastChar.isWord\
    \ && !lastChar.isSpace\n", "        val lastChar = txt.last\n        val isAlpha\
    \ = lastChar >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \"\
    ).last.contains(lastChar)\n        isAlpha && !isNotWord", "        val lastChar\
    \ = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n        val lastCharIsNotALetter\
    \ = lastChar.isNotLetter\n        val lastCharIsNotWord = lastChar.isNotWord\n\
    \        val lastCharIsWord = lastChar.isWord\n        val lastCharIsNotWordOrALetter\
    \ = lastCharIsWord || lastCharIsALetter\n        val lastCharIsWordOrALetter =\
    \ lastCharIsWord || lastCharIsALetter\n        val lastCharIsNotWordOrALetterOrNotWord\
    \ = lastCharIsNotWord || lastCharIsNotALetter || lastCharIsNotWord\n        val\
    \ lastCharIsWordOrALetterOrNotWord = lastCharIsWord || lastCharIsALetter || lastCharIsNotWord\n\
    \        val lastCharIsNotWordOrALetterOrNotWordOrNotWord = lastCharIsNotWord\
    \ || lastCharIsNotALetter || lastCharIsNotWord || lastCharIsNotWord\n        val\
    \ lastCharIsWordOrALetterOrNotWordOrNotWord = lastCharIsWord || lastCharIsALetter\
    \ || lastCharIsNotWord || lastCharIsNotWord\n        val lastCharIsNotWordOrALetterOrNotWordOrNotWord\
    \ = lastCharIsNotWord || lastCharIsNotALetter || lastCharIsNotWord || lastCharIsNotWord\n\
    \        val lastCharIsWordOrALetterOrNotWordOrNotWordOrNotWord = lastCharIsWord\
    \ || lastCharIsALetter || lastCharIsNotWord || lastCharIsNotWord || lastCharIsNotWord\n\
    \        val lastCharIsWordOrALetterOrNotWordOrNotWordOrNotWord = lastCharIsWord\
    \ || lastCharIsALetter || lastCharIsNotWord || lastCharIsNotWord || lastCharIsNotWord\n\
    \        val lastCharIsWordOrALetterOrNotWordOrNotWordOrNotWordOrNotWord = lastCharIsWord\
    \ || lastCharIsALetter || lastCharIsNotWord || lastCharIsNotWord || lastCharIsNotWord\
    \ || lastCharIsNotWord\n        val lastCharIsWordOrALetterOrNotWordOrNotWordOrNotWordOrNotWord\
    \ = lastCharIsWord || lastCharIsALetter || lastCharIsNotWord || lastCharIsNotWord\
    \ || last", "        val lastChar = txt.last\n        val isLastCharALetter =\
    \ (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        !isLastCharALetter", "        val words = txt.split(\" \")\n        val\
    \ lastChar = txt.last\n        val lastCharIsALetter = lastChar.isLetter\n   \
    \     val lastCharIsNotALetter = lastChar.isNotLetter\n        val lastCharIsNotWord\
    \ = words.last.last.isLetter\n        val lastCharIsNotWordOrALetter = lastCharIsNotWord\
    \ || lastCharIsALetter\n        val lastCharIsNotWordOrNotALetter = lastCharIsNotWord\
    \ && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrLastCharIsALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && lastCharIsALetter\n        val\
    \ lastCharIsNotWordOrNotALetterOrLastCharIsNotALetter = lastCharIsNotWord && !lastCharIsALetter\
    \ && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrLastCharIsNotALetterOrLastCharIsALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsALetter && lastCharIsALetter\n\
    \        val lastCharIsNotWordOrNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsALetter && !lastCharIsALetter\n\
    \        val lastCharIsNotWordOrNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetterOrLastCharIsALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsALetter && !lastCharIsALetter\
    \ && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsALetter && !lastCharIsALetter\
    \ && !lastCharIsALetter && !lastCharIsALetter\n        val lastCharIsNotWordOrNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetterOrLastCharIsNotALetterOrLastCharIsALetter\
    \ = lastCharIsNotWord && !lastCharIsALetter && !lastCharIsALet", "        val\
    \ lastChar = txt.last\n        val isAlpha = lastChar.matches(\"[a-zA-Z]\")\n\
    \        val isNotWord = txt.split(\" \").last.contains(lastChar)\n        isAlpha\
    \ && !isNotWord", "        var lastChar = txt.last\n        var isLastCharALetter\
    \ = true\n        var isLastCharALetterInWord = false\n        var isLastCharALetterInWordSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpace = false\n        var\
    \ isLastCharALetterInWordSpaceOrSpaceOrSpace = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace\
    \ = false\n        var isLastCharALetterInWordSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpaceOrSpace",
  "        val lastChar = txt.last\n        if(lastChar.isLetter) {\n            val\
    \ words = txt.split(\" \").filter(_.nonEmpty)\n            val lastWord = words.last\n\
    \            if(lastWord.last.isLetter) {\n                return false\n    \
    \        }\n        }\n        return true", "        val words = txt.split(\"\
    \ \")\n        val lastChar = words(txt.length-1)\n        val isLastCharALetter\
    \ = (lastChar.toString.toLowerCase == lastChar)\n        val isLastCharNotALetter\
    \ = words.last.forall(_.toString.toLowerCase != lastChar)\n        val isLastCharNotALetterOrLastCharIsALetter\
    \ = isLastCharNotALetter || isLastCharALetter\n        isLastCharNotALetterOrLastCharIsALetter",
  "        val lastChar = txt.last\n        val isAlpha = lastChar >= 'a' && lastChar\
    \ <= 'z'\n        val isNotWord = txt.split(\" \").map(_.last).contains(lastChar)\n\
    \        isAlpha && !isNotWord", "        val words = txt.split(\" \")\n     \
    \   val lastChar = words(txt.length-1)\n        val isLastCharALetter = lastChar.matches(\"\
    [a-zA-Z]\") && !lastChar.matches(\"\\\\w\")\n        return isLastCharALetter",
  "        val words = txt.split(\" \")\n        val lastChar = words(txt.length-1)\n\
    \        val isLastCharALetter = (lastChar.toString.toLowerCase == \"a\" || lastChar.toString.toLowerCase\
    \ == \"e\" || lastChar.toString.toLowerCase == \"i\" || lastChar.toString.toLowerCase\
    \ == \"o\" || lastChar.toString.toLowerCase == \"u\")\n        val isLastCharNotALetter\
    \ = (lastChar.toString.toLowerCase != \"a\" && lastChar.toString.toLowerCase !=\
    \ \"e\" && lastChar.toString.toLowerCase != \"i\" && lastChar.toString.toLowerCase\
    \ != \"o\" && lastChar.toString.toLowerCase != \"u\")\n        isLastCharALetter\
    \ && !isLastCharNotALetter", "        val lastChar = txt.last\n        val isALetter\
    \ = lastChar.toString.isLetter\n        val isNotWord = txt.dropRight(1).forall(_.toString.isLetter)\n\
    \        isALetter && !isNotWord", "        val lastChar = txt.last\n        val\
    \ isLastCharAlpha = lastChar.isLetter\n        val isLastCharNotAlpha = !lastChar.isLetter\n\
    \        val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = lastChar.isLetter\n        val isLastCharNotWord\
    \ = lastChar.isLetter\n        val isLastCharNotWord = lastChar.isLetter\n   \
    \     val isLastCharNotWord = last", "        val words = txt.split(\" \")\n \
    \       val lastChar = txt.last\n        val lastCharIsALetter = lastChar.toString.isLetter\n\
    \        val isLastCharNotInWord = words.lastOption.map(_.last).map(_.toString.toInt).contains(lastChar.toString.toInt)\n\
    \        !lastCharIsALetter && !isLastCharNotInWord", "        val lastChar =\
    \ txt.last\n        val isAlpha = lastChar >= 'a' && lastChar <= 'z'\n       \
    \ val isNotWord = txt.split(\" \").last.contains(lastChar)\n        isAlpha &&\
    \ !isNotWord", "        val lastChar = txt.last\n        val isLastCharALetter\
    \ = (lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n\
    \        val isNotWordChar = txt.last.forall(c => c != ' ' && c != '-' && c !=\
    \ '_')\n        !isLastCharALetter && !isNotWordChar", "        val lastChar =\
    \ txt.last\n        val isLastCharALetter = lastChar.matches(\"[a-zA-Z]\") &&\
    \ !(lastChar.matches(\"\\\\w\"))\n        return isLastCharALetter", "       \
    \ val lastChar = txt.last\n        val isALetter = lastChar.isLetter\n       \
    \ val isNotALetter = lastChar.isNotLetter\n        val isNotWord = txt.split(\"\
    \ \").last.contains(lastChar)\n        isALetter && !isNotALetter && !isNotWord",
  "        val lastChar = txt.last\n        val lastCharIsLetter = lastChar.toString.isLetter\n\
    \        val lastCharIsNotWord = lastChar.isLetter\n        val lastCharIsNotWordButNotALetter\
    \ = lastChar.isLetter && !lastChar.isLetter\n        val lastCharIsNotWordButNotALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && lastCharIsLetter\n\
    \        val lastCharIsNotWordButNotALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\
    \ && !lastChar.isLetter && !lastChar.isLetter\n        val lastCharIsNotWordButNotALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\
    \ && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\n        val\
    \ lastCharIsNotWordButNotALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\
    \ && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\n\
    \        val lastCharIsNotWordButNotALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\
    \ && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter && !lastChar.isLetter\
    \ && !lastChar.isLetter\n        val lastCharIsNotWordButNotALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetterAndNotLastCharIsALetter\
    \ = lastChar.isLetter && !lastChar.isLetter && !lastChar", "        val lastChar\
    \ = txt.last\n        val isALetter = lastChar >= 'a' && lastChar <= 'z'\n   \
    \     val isNotWord = txt.split(\" \").lastOption.isEmpty\n        isALetter &&\
    \ !isNotWord", "        val lastChar = txt.last\n        val isALetter = lastChar\
    \ >= 'a' && lastChar <= 'z'\n        val isNotWord = txt.split(\" \").lastOption\
    \ match {\n            case Some(word) => !word.contains(lastChar)\n         \
    \   case None => false\n        }\n        isALetter && !isNotWord", "       \
    \ val lastChar = txt.last\n        val isLastCharALetter = (lastChar >= 'a' &&\
    \ lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')\n        val isLastCharNotALetter\
    \ = !isLastCharALetter\n        isLastCharNotALetter", "        val lastChar =\
    \ txt.last\n        val isLetter = lastChar >= 'a' && lastChar <= 'z'\n      \
    \  val isNotWord = txt.split(\" \").lastOption.exists(_ != lastChar)\n       \
    \ isLetter && !isNotWord", "        val words = txt.split(\" \").toList\n    \
    \    val lastChar = words(txt.length-1)\n        val lastCharIsALetter = lastChar.forall(Character.isLetter)\n\
    \        val lastCharIsNotALetter = lastChar.forall(!Character.isLetter)\n   \
    \     lastCharIsALetter && !lastCharIsNotALetter"]
stop_tokens:
- "\n    }\n"

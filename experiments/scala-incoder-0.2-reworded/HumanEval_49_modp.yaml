name: HumanEval_49_modp
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return 2^n modulo p (be aware of numerics).\n    // >>> modp((3l), (5l))\n\
  \    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n    // >>> modp((0l),\
  \ (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n    // (8l)\n    // >>> modp((100l),\
  \ (101l))\n    // (1l)\n    def modp(n : Long, p : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(modp((3l), (5l))\
  \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
  \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
  \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
  \ == (3l));\n    }\n\n}\n"
completions: ["        val r = n.toInt\n        val m = p.toInt\n        val q = r\
    \ - m\n        val r = r - q\n        val r = r + q\n        val r = r + m\n \
    \       val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        val r = r + m\n        val r = r + m\n        val r = r + m\n   \
    \     val r = r + m\n        val r = r + m\n        val r = r + m\n        val\
    \ r = r + m\n        val r = r + m\n        val r = r + m\n        val r = r +\
    \ m\n        ", "        val r = n % p\n        if (r < 0) r + p else r", "  \
    \      val m = n.toInt\n        val r = p.toInt\n        val r = r - m\n     \
    \   val r = r * r\n        val r = r + m\n        val r = r / r\n        val r\
    \ = r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n        ",
  "        val r = n % p\n        if (r == 0) 1\n        else r", "        val r =\
    \ n % p\n        if (r == 0) 1l else r", "        val n2 = n.toInt\n        val\
    \ p2 = p.toInt\n        val n3 = n2.pow(2)\n        val p3 = p2.pow(2)\n     \
    \   val n4 = n3.mod(p3)\n        val p4 = p3.mod(p3)\n        val n5 = n4.pow(3)\n\
    \        val p5 = p4.pow(3)\n        val n6 = n5.mod(p5)\n        val p6 = p5.mod(p5)\n\
    \        val n7 = n6.pow(4)\n        val p7 = p6.pow(4)\n        val n8 = n7.mod(p7)\n\
    \        val p8 = p7.mod(p7)\n        val n9 = n8.pow(5)\n        val p9 = p8.pow(5)\n\
    \        val n10 = n9.mod(p9)\n        val p10 = p9.mod(p9)\n        val n11 =\
    \ n10.pow(6)\n        val p11 = p10.pow(6)\n        val n12 = (n11.toLong * p11.toLong).toInt\n\
    \        val p12 = (p11.toLong * p11.toLong).toInt\n        val n13 = n12.pow(7)\n\
    \        val p13 = p12.pow(7)\n        val n14 = n13.pow(8)\n        val p14 =\
    \ p13.pow(8)\n        val n15 = n14.pow(9)\n        val p15 = p14.pow(9)\n   \
    \     val n16 = n15.pow(10)\n        val p16 = p15.pow(10)\n        val n17 =\
    \ n16.pow(11)\n        val p17 = p16.pow(11)\n        val n18 = n17.pow(12)\n\
    \        val p18 = p17.pow(12)\n        val n19 = n18.pow(13)\n        val p19\
    \ = p18.pow(13)\n        val n20 = n19.pow(14)\n        val p20 = p19.pow(14)\n\
    \        val n21 = n20.pow(15)\n        val p21 = p20.pow(15)\n        val n22\
    \ = n21.pow(16)\n        val p22 = p21.pow(16)\n        val n23 = n22.pow(17)\n\
    \        val p23 = p22.pow(17)\n        val n24 = n23.pow(18)\n        val p24\
    \ = p23.pow(18)\n        val n25 = n24.pow(19)\n        val p25 = p24.pow(19)\n\
    \        val n26 = n25.pow(20)\n        val p26 = p25.pow(20)\n        val n27\
    \ = n26.pow(21)\n        val p27 = p26.pow(21)\n        val n28 = n27.pow(22)\n\
    \        val p28 = p27.pow(22)\n", "        val n2 = n.toInt\n        val p2 =\
    \ p.toInt\n        val n3 = n2.toLong\n        val p3 = p2.toLong\n        val\
    \ n4 = n3.toInt\n        val p4 = p3.toInt\n        val n5 = n4.toLong\n     \
    \   val p5 = p4.toLong\n        val n6 = n5.toInt\n        val p6 = p5.toInt\n\
    \        val n7 = n6.toLong\n        val p7 = p6.toLong\n        val n8 = (n7.toInt\
    \ << 32) + n7.toLong\n        val p8 = (p7.toInt << 32) + p7.toLong\n        val\
    \ n9 = (n8.toInt << 32) + n8.toLong\n        val p9 = (p8.toInt << 32) + p8.toLong\n\
    \        val n10 = (n9.toInt << 32) + n9.toLong\n        val p10 = (p9.toInt <<\
    \ 32) + p9.toLong\n        val n11 = (n10.toInt << 32) + n10.toLong\n        val\
    \ p11 = (p10.toInt << 32) + p10.toLong\n        val n12 = (n11.toInt << 32) +\
    \ n11.toLong\n        val p12 = (p11.toInt << 32) + p11.toLong\n        val n13\
    \ = (n12.toInt << 32) + n12.toLong\n        val p13 = (p12.toInt << 32) + p12.toLong\n\
    \        val n14 = (n13.toInt << 32) + n13.toLong\n        val p14 = (p13.toInt\
    \ << 32) + p13.toLong\n        val n15 = (n14.toInt << 32) + n14.toLong\n    \
    \    val p15 = (p14.toInt << 32) + p14.toLong\n        val n16 = (n15.toInt <<\
    \ 32) + n15.toLong\n        val p16 = (p15.toInt << 32) + p15.toLong\n       \
    \ val n17 = (n16.toInt << 32) + n16.toLong\n        val p17 = (p16.toInt << 32)\
    \ + p16.toLong\n        val n18 = (n17.toInt << 32) + n17.toLong\n        val\
    \ p18 = (p17.toInt << 32) + p17.toLong\n        val n19 = (n18.toInt << 32) +\
    \ n18.toLong\n        val p19 = (p18.toInt << 32) + p18.to", "        val r =\
    \ n % p\n        if (r < 0) r + p else r", "        val n2 = n.toInt\n       \
    \ val p2 = p.toInt\n        val result = n2 % p2\n        if (result < 0)\n  \
    \          result + p2\n        else\n            result", "        val n2 = n\
    \ % p\n        if (n2 == 0) n\n        else modp(n2, p)", "        val n2 = n.toInt\n\
    \        val p2 = p.toInt\n        if (n2 < p2) n2 % p2 else (p2 - n2) % p2",
  "        val m = n.toInt\n        val r = p.toInt\n        if (m == 0) 1\n     \
    \   else if (m == r) 1\n        else if (m > r) modp(m, r) \n        else modp(m,\
    \ r + 1) * (n - r)", "        val q = p / n\n        val r = p % n\n        val\
    \ s = q * q\n        val t = r * r\n        val u = (s + t) % q\n        val v\
    \ = (r + u * q) % q\n        v", "        val m = n.toInt\n        val r = p.toInt\n\
    \        val q = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        val r = r - m\n        val r = r - m\n       \
    \ val r = r - m\n        val r = r - m\n        val r = r - m\n        val r =\
    \ r - m\n        val r = r - m\n        val r = r - m\n        val r = r - m\n\
    \        val r = r - m\n        ", "        val m = n.toInt\n        val q = p.toInt\n\
    \        val r = ((m * q) % p).toLong\n        val s = (r % p).toLong\n      \
    \  val t = ((r * q) % p).toLong\n        val u = (t % p).toLong\n        val v\
    \ = (u % p).toLong\n        val w = (v % p).toLong\n        val x = (w % p).toLong\n\
    \        val y = (x % p).toLong\n        val z = (y % p).toLong\n        val a\
    \ = (z % p).toLong\n        val b = (a % p).toLong\n        val c = (b % p).toLong\n\
    \        val d = (c % p).toLong\n        val e = (d % p).toLong\n        val f\
    \ = (e % p).toLong\n        val g = (f % p).toLong\n        val h = (g % p).toLong\n\
    \        val i = (h % p).toLong\n        val j = (i % p).toLong\n        val k\
    \ = (j % p).toLong\n        val l = (k % p).toLong\n        val m = (l % p).toLong\n\
    \        val n = (m % p).toLong\n        val o = (n % p).toLong\n        val p\
    \ = (o % p).toLong\n        val q = (p % p).toLong\n        val r = (q % p).toLong\n\
    \        val s = (n % p).toLong\n        val t = (r % p).toLong\n        val u\
    \ = (t % p).toLong\n        val v = (u % p).toLong\n        val w = (v % p).toLong\n\
    \        val x = (w % p).toLong\n        val y = (x % p).toLong\n        val z\
    \ = (y % p).toLong\n        val a = (z % p).toLong\n        val b = (a % p).toLong\n\
    \        val c = (b % p).toLong\n        val d = (c % p).toLong\n        val e\
    \ = (d % p).toLong\n        val f = (e % p).toLong\n        val g = (f % p).toLong\n\
    \        val h = (g % p).toLong\n        val i = (h % p).toLong\n        val j\
    \ = (i % p).toLong\n        val k = (j % p).toLong\n        val l = (k % p).toLong\n\
    \        val m = (l % p).toLong\n        val n = (m % p).toLong\n        val o\
    \ = (n % p).toLong\n        val ", "        val r = n % p\n        if (r == 0)\
    \ 1\n        else r", "        val m = n.toInt\n        val r = p.toInt\n    \
    \    val q = r - m\n        if (q < 0) q + m\n        else q", "        val m\
    \ = n.toInt\n        val r = p.toInt\n        val r = r - m\n        val r = r\
    \ * r\n        val r = r / m\n        val r = r * m\n        val r = r + m\n \
    \       val r = r * r\n        val r = r / m\n        val r = r * m\n        val\
    \ r = r + m\n        val r = r * r\n        val r = r / m\n        val r = r *\
    \ m\n        val r = r + m\n        val r = r * r\n        val r = r / m\n   \
    \     val r = r * m\n        val r = r + m\n        val r = r * r\n        val\
    \ r = r / m\n        val r = r * m\n        val r = r + m\n        val r = r *\
    \ r\n        val r = r / m\n        val r = r * m\n        val r = r + m\n   \
    \     val r = r * r\n        val r = r / m\n        val r = r * m\n        val\
    \ r = r + m\n        val r = r * r\n        val r = r / m\n        val r = r *\
    \ m\n        val r = r + m\n        val r = r * r\n        val r = r / m\n   \
    \     val r = r * m\n        val r = r + m\n        val r = r * r\n        val\
    \ r = r / m\n        val r = r * m\n        val r = r + m\n        val r = r *\
    \ r\n        val r = r / m\n        val r = r * m\n        val r = r + m\n   \
    \     val r = r * r\n        val r = r / m\n        val r = r * m\n        val\
    \ r = r + m\n        val r = r * r\n        val r = r / m\n        val r = r *\
    \ m\n        val r = r + m\n        val r = r * r\n        val r = r / m\n   \
    \     val r = r * m\n        val r = r + m\n        val r = r * r\n        val\
    \ r = r / m\n        val r = r * m\n        val r = r + m\n        val r = r *\
    \ r\n        val r = r / m\n        val r = r * m\n        val r = r + m\n   \
    \     val r = r * r\n        val r = r / m\n        val r = r * m\n        val\
    \ r = r + m\n        val r = r * r\n        val r = r / m\n        ", "      \
    \  val r = n % p\n        if (r == 0) 1l else r", "        val r = n % p\n   \
    \     if (r < 0) r + p else r", "        val r = n % p\n        if (r == 0) 1\n\
    \        else r", "        val r = n % p\n        if (r == 0) 1\n        else\
    \ r", "        val n2 = n % p\n        if (n2 == 0) n2 else p + n2", "       \
    \ val n2 = n.toInt\n        val p2 = p.toInt\n        val n3 = n2 % p\n      \
    \  val p3 = p2 % p\n        if (p3 == 0) n3 else n3 + 1", "        val r = n %\
    \ p\n        if (r == 0) 1l else r", "        val r = n % p\n        if (r ==\
    \ 0) 1\n        else if (r > 0) modp(r, p) * p\n        else modp(r, p) * (p -\
    \ 1)", "        val m = n.toInt\n        val r = p.toInt\n        val q = r -\
    \ m\n        if (q > 0) {\n            val r = n.toInt\n            val s = r.toInt\n\
    \            val t = s % q\n            if (t < 0)\n                t + q\n  \
    \          else\n                t\n        }\n        else\n            q", " \
    \       val r = n % p\n        if (r == 0) 1\n        else if (r > 0) modp(r,\
    \ p) + 1\n        else modp(r, p) - 1", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (r == 0) 1\n        else\
    \ if (r < 0) (p - (p % r)) % r\n        else r", "        val r = n % p\n    \
    \    if (r < 0) r + p else r", "        val r = n.toInt\n        val m = p.toInt\n\
    \        val r = r * m % m\n        if (r < 0) r + m else r", "        val m =\
    \ n.toInt\n        val r = p.toInt\n        val r = r % m\n        val r = r *\
    \ m + (r - m) % m\n        val r = r % m\n        val r = r * m + (r - m) % m\n\
    \        val r = r % m\n        val r = r * m + (r - m) % m\n        val r = r\
    \ % m\n        val r = r * m + (r - m) % m\n        val r = r % m\n        val\
    \ r = r * m + (r - m) % m\n        val r = r % m\n        val r = r * m + (r -\
    \ m) % m\n        val r = r % m\n        val r = r * m + (r - m) % m\n       \
    \ val r = r % m\n        val r = r * m + (r - m) % m\n        val r = r % m\n\
    \        val r = r * m + (r - m) % m\n        val r = r % m\n        val r = r\
    \ * m + (r - m) % m\n        val r = r % m\n        val r = r * m + (r - m) %\
    \ m\n        val r = r % m\n        val r = r * m + (r - m) % m\n        val r\
    \ = r % m\n        val r = r * m + (r - m) % m\n        val r = r % m\n      \
    \  val r = r * m + (r - m) % m\n        val r = r % m\n        val r = r * m +\
    \ (r - m) % m\n        val r = r % m\n        val r = r * m + (r - m) % m\n  \
    \      val r = r % m\n        val r = r * m + (r - m) % m\n        val r = r %\
    \ m\n        val r = r * m + (r - m) % m\n        val r = r % m\n        val r\
    \ = r * m + (r - m) % m\n        val r = r % m\n        val r = r * m + (r - m)\
    \ % m\n        val r = r % m\n        val r = r * m + (r - m) % m\n        val\
    \ r = r % m\n        val r = r * m + (r - m) % m\n        val r = r % m\n    \
    \    val r = r * m + (r - m) % m\n        val r = r % m\n        val r = r * m\
    \ + (r - m) % m\n        val r = r % m\n        val r = r * m + (r - m) % ", " \
    \       val m = n.toInt\n        val q = p.toInt\n        val r = m % q\n    \
    \    if (r < 0) r + q\n        else r", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n % p\n        if (r == 0) 1l else r",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val m = n.toInt\n\
    \        val r = p.toInt\n        val r = r - m\n        val r = r * r\n     \
    \   val r = r + m\n        val r = r * r\n        val r = r + m\n        val r\
    \ = r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        ", "        val r = n %\
    \ p\n        if (r < 0) r + p else r", "        val r = n % p\n        if (r ==\
    \ 0) 1l else r", "        val m = n.toInt\n        val q = p.toInt\n        val\
    \ r = m.toInt\n        val s = q.toInt\n        val t = m.toInt\n        val u\
    \ = q.toInt\n        val v = m.toInt\n        val w = q.toInt\n        val x =\
    \ m.toInt\n        val y = q.toInt\n        val z = m.toInt\n        val a = q.toInt\n\
    \        val b = m.toInt\n        val c = m.toInt\n        val d = q.toInt\n \
    \       val e = m.toInt\n        val f = m.toInt\n        val g = q.toInt\n  \
    \      val h = m.toInt\n        val i = m.toInt\n        val j = q.toInt\n   \
    \     val k = m.toInt\n        val l = m.toInt\n        val m = q.toInt\n    \
    \    val n = m.toInt\n        val o = m.toInt\n        val p = m.toInt\n     \
    \   val q = m.toInt\n        val r = m.toInt\n        val s = m.toInt\n      \
    \  val t = m.toInt\n        val u = m.toInt\n        val v = m.toInt\n       \
    \ val w = m.toInt\n        val x = m.toInt\n        val y = m.toInt\n        val\
    \ z = m.toInt\n        val a = m.toInt\n        val b = m.toInt\n        val c\
    \ = m.toInt\n        val d = m.toInt\n        val e = m.toInt\n        val f =\
    \ m.toInt\n        val g = m.toInt\n        val h = m.toInt\n        val i = m.toInt\n\
    \        val j = m.toInt\n        val k = m.toInt\n        val l = m.toInt\n \
    \       val m = m.toInt\n        val n = m.toInt\n        val o = m.toInt\n  \
    \      val p = m.toInt\n        val q = m.toInt\n        val r = m.toInt\n   \
    \     val s = m.toInt\n        val t = m.toInt\n        val u = m.toInt\n    \
    \    val v = m.toInt\n        val w = m.toInt\n        val x = m.toInt\n     \
    \   val y = m.toInt\n        val z = m.toInt\n        val a = m.toInt\n      \
    \  val b = m.toInt\n        val c = m.toInt\n        val d = m.toInt\n       \
    \ val e = m.toInt\n        val f = m.toInt\n        val g = m.toInt\n        val\
    \ h = m.toInt\n        val i = m.toInt\n        val j = m.toInt\n        ", " \
    \       val m = n.toInt\n        val r = p.toInt\n        val r = r - m\n    \
    \    val r = r * r\n        val r = r + m\n        val r = r / r\n        val\
    \ r = r - m\n        val r = r * r\n        val r = r + m\n        val r = r /\
    \ r\n        r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val n2 = n.toInt\n\
    \        val p2 = p.toInt\n        if (n2 == 0) 1\n        else if (p2 == 0) 1\n\
    \        else (2l) % (p2)", "        val r = n.toInt\n        val m = p.toInt\n\
    \        val r = r * m % p\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r\n        val r = r + r\n        val r = r + r\n   \
    \     val r = r + r\n        val r = r + r\n        val r = r + r\n        val\
    \ r = r + r\n        val r = r + r\n        val r = r + r\n        val r = r +\
    \ r\n        val r = r + r", "        val r = n % p\n        if (r < 0) r + p\
    \ else r", "        val m = n.toInt\n        val r = p.toInt\n        val t =\
    \ m % r\n        if (t < 0)\n            t + r\n        else\n            t",
  "        val r = n % p\n        if (r == 0) 1\n        else r", "        val r =\
    \ n % p\n        if (r == 0) 1\n        else r", "        val r = n % p\n    \
    \    if (r == 0) 1\n        else r", "        val r = n % p\n        if (r ==\
    \ 0) 1l else r", "        val n2 = n * n\n        val p2 = p * p\n        val\
    \ n3 = n2 * n2\n        val p3 = p2 * p2\n        val n4 = n3 * n3\n        val\
    \ p4 = p3 * p3\n        val n5 = n4 * n4\n        val p5 = p4 * p4\n        val\
    \ n6 = n5 * n5\n        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val\
    \ p7 = p6 * p6\n        val n8 = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n\
    \        val n9 = (n8 * n8) % p\n        val p9 = (p8 * p8) % p\n        val n10\
    \ = (n9 * n9) % p\n        val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10)\
    \ % p\n        val p11 = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n\
    \        val p12 = (p11 * p11) % p\n        val n13 = (n12 * n12) % p\n      \
    \  val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n        val p14\
    \ = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n        val p15 = (p14\
    \ * p14) % p\n        val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15)\
    \ % p\n        val n17 = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n\
    \        val n18 = (n17 * n17) % p\n        val p18 = (p17 * p17) % p\n      \
    \  val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n        val n20\
    \ = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n        val n21 = (n20\
    \ * n20) % p\n        val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21)\
    \ % p\n        val p22 = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n\
    \        val p23 = (p22 * p", "        val q = p / n\n        val r = p % n\n\
    \        val s = q * q\n        val t = s * q\n        val u = t * q\n       \
    \ val v = t * r\n        val w = u * r\n        val x = v * r\n        val y =\
    \ w * r\n        val z = y * r\n        val w = x * r\n        val x = y * r\n\
    \        val y = z * r\n        val z = w * r\n        val w = x * r\n       \
    \ val x = y * r\n        val y = z * r\n        val z = w * r\n        val w =\
    \ x * r\n        val x = y * r\n        val y = z * r\n        val z = w * r\n\
    \        val w = x * r\n        val x = y * r\n        val y = z * r\n       \
    \ val z = w * r\n        val w = x * r\n        val x = y * r\n        val y =\
    \ z * r\n        val z = w * r\n        val w = x * r\n        val x = y * r\n\
    \        val y = z * r\n        val z = w * r\n        val w = x * r\n       \
    \ val x = y * r\n        val y = z * r\n        val z = w * r\n        val w =\
    \ x * r\n        val x = y * r\n        val y = z * r\n        val z = w * r\n\
    \        val w = x * r\n        val x = y * r\n        val y = z * r\n       \
    \ val z = w * r\n        val w = x * r\n        val x = y * r\n        val y =\
    \ z * r\n        val z = w * r\n        val w = x * r\n        val x = y * r\n\
    \        val y = z * r\n        val z = w * r\n        val w = x * r\n       \
    \ val x = y * r\n        val y = z * r\n        val z = w * r\n        val w =\
    \ x * r\n        val x = y * r\n        val y = z * r\n        val z = w * r\n\
    \        val w = x * r\n        val x = y * r\n        val y = z * r\n       \
    \ val z = w * r\n        val w = x * r\n        val x = y * r\n        val y =\
    \ z * r\n        val z = w * r\n        val w = x * r\n        val x = y * r\n\
    \        val y = z * r\n        val z = w * r\n        val w = x * r\n       \
    \ val x = y * r\n        val y = z * r\n        val z = w * r\n        val w =\
    \ x * r\n        val x = y * r\n        val y = z * r\n        val z = ", "  \
    \      val r = n % p\n        if (r == 0) 1l else r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r == 0)\
    \ 1\n        else r", "        val r = n % p\n        if (r == 0) 1\n        else\
    \ r", "        val r = n % p\n        if (r < 0) r + p else r", "        val n2\
    \ = n.toInt\n        val p2 = p.toInt\n        val n3 = n2 % p2\n        if (n3\
    \ == 0) n3 else n3", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val n2 = n % p\n        if (n2 == 0) n\n        else modp(n2, p)", "  \
    \      val r = n % p\n        if (r == 0) 1\n        else if (r < 0) (p - (n %\
    \ p)) % p\n        else (n % p) % p", "        val r = n % p\n        if (r ==\
    \ 0) 1\n        else if (r > 0) modp(r, p) + p\n        else modp(r, p) - p",
  "        val r = n % p\n        if (r == 0) r else p + r", "        val r = n %\
    \ p\n        if (r == 0) 1\n        else if (r < 0) (p - (p - r)) % p\n      \
    \  else r", "        val r = n % p\n        if (r < 0) r + p else r", "      \
    \  val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n \
    \       if (r < 0) r + p else r", "        val r = n % p\n        if (r < 0) r\
    \ + p else r", "        val m = n.toInt\n        val r = p.toInt\n        val\
    \ r = r - m\n        val r = r * r\n        val r = r + m\n        val r = r /\
    \ r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n   \
    \     val r = r * p\n        r", "        val r = n % p\n        if (r < 0) r\
    \ + p else r", "        val r = n % p\n        if (r == 0) 1\n        else if\
    \ (r > 0) modp(r, p + 1)\n        else modp(r - 1, p + 1)", "        val r = n\
    \ % p\n        if (r < 0) r + p else r", "        val r = n.toInt\n        val\
    \ m = p.toInt\n        val t = r * m % p\n        if (t < 0)\n            t +\
    \ p\n        else\n            t", "        val r = n % p\n        if (r == 0)\
    \ 1l else r", "        val m = n.toInt\n        val r = p.toInt\n        val r\
    \ = r * r\n        val r = r - m * m\n        val r = r * r\n        val r = r\
    \ - m * m\n        val r = r * r\n        val r = r - m * m\n        val r = r\
    \ * r\n        val r = r - m * m\n        val r = r * r\n        val r = r - m\
    \ * m\n        val r = r * r\n        val r = r - m * m\n        val r = r * r\n\
    \        val r = r - m * m\n        val r = r * r\n        val r = r - m * m\n\
    \        val r = r * r\n        val r = r - m * m\n        val r = r * r\n   \
    \     val r = r - m * m\n        val r = r * r\n        val r = r - m * m\n  \
    \      val r = r * r\n        val r = r - m * m\n        val r = r * r\n     \
    \   val r = r - m * m\n        val r = r * r\n        val r = r - m * m\n    \
    \    val r = r * r\n        val r = r - m * m\n        val r = r * r\n       \
    \ val r = r - m * m\n        val r = r * r\n        val r = r - m * m\n      \
    \  val r = r * r\n        val r = r - m * m\n        val r = r * r\n        val\
    \ r = r - m * m\n        val r = r * r\n        val r = r - m * m\n        val\
    \ r = r * r\n        val r = r - m * m\n        val r = r * r\n        val r =\
    \ r - m * m\n        val r = r * r\n        val r = r - m * m\n        val r =\
    \ r * r\n        val r = r - m * m\n        val r = r * r\n        val r = r -\
    \ m * m\n        val r = r * r\n        val r = r - m * m\n        val r = r *\
    \ r\n        val r = r - m * m\n        val r = r * r\n        val r = r - m *\
    \ m\n        val r = r * r\n        val r = r - m * m\n        val r = r * r\n\
    \        val r = r - m * m\n        val r = r * r\n        val r = r - m * m\n\
    \        val ", "        val r = n % p\n        if (r < 0) r + p else r", "  \
    \      val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n    \
    \    val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n  \
    \      val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = n7 * n7\n        val p8 = p7 * p7\n        val n9 = n8 * n8\n\
    \        val p9 = p8 * p8\n        val n10 = n9 * n9\n        val p10 = p9 * p9\n\
    \        val n11 = n10 * n10\n        val p11 = p10 * p10\n        val n12 = n11\
    \ * n11\n        val p12 = p11 * p11\n        val n13 = n12 * n12\n        val\
    \ p13 = p12 * p12\n        val n14 = n13 * n13\n        val p14 = p13 * p13\n\
    \        val n15 = n14 * n14\n        val p15 = p14 * p14\n        val n16 = n15\
    \ * n15\n        val p16 = p15 * p15\n        val n17 = n16 * n16\n        val\
    \ p17 = p16 * p16\n        val n18 = n17 * n17\n        val p18 = p17 * p17\n\
    \        val n19 = n18 * n18\n        val p19 = p18 * p18\n        val n20 = n19\
    \ * n19\n        val p20 = p19 * p19\n        val n21 = n20 * n20\n        val\
    \ p21 = p20 * p20\n        val n22 = n21 * n21\n        val p22 = p21 * p21\n\
    \        val n23 = n22 * n22\n        val p23 = p22 * p22\n        val n24 = n23\
    \ * n23\n        val p24 = p23 * p23\n        val n25 = n24 * n24\n        val\
    \ p25 = p24 * p24\n        val n26 = n25 * n25\n        val p26 = p25 * p25\n\
    \        val n27 = n26 * n26\n        val p27 = p26 * p26\n        val n28 = n27\
    \ * n27\n        ", "        val n2 = n.toInt\n        val p2 = p.toInt\n    \
    \    if (n2 >= p2) n2 % p2 else (p2 - n2) % p2", "        val m = n.toInt\n  \
    \      val r = p.toInt\n        val r = r - m + 1\n        val r = r * r\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n        val r = r * p\n   \
    \     val r = r / p\n        val r = r * p\n        val r = r / p\n        val\
    \ r = r * p\n        val r = r / p\n        val r = r * p\n        val r = r /\
    \ p\n        val r = r * p\n        val r = r / p\n", "        val m = n.toInt\n\
    \        val r = p.toInt\n        val s = m % r\n        if (s == 0) 1\n     \
    \   else if (s == r) 0\n        else s", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val r = n.toInt % p.toInt\n        if (r == 0)\
    \ 1l else r", "        val m = n.toInt\n        val r = p.toInt\n        val r\
    \ = r % m\n        val r = r * m + (r - m)\n        r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r < 0)\
    \ r + p else r", "        val q = p / n\n        val r = p % n\n        q * n\
    \ + (if (r < 0) -r * n else r)", "        val r = n % p\n        if (r == 0) 1\n\
    \        else r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (r == 0) r else r + p", "        val r = n % p\n        if (r\
    \ < 0) r + p else r", "        val m = n.toInt\n        val r = p.toInt\n    \
    \    val r = r - m\n        val r = r * r\n        val r = r + m\n        val\
    \ r = r / r\n        val r = r * p\n        val r = r + m\n        val r = r /\
    \ r\n        r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val r = n % p\n        if (r == 0) 1l else r", "        val n2 = n.toInt\n\
    \        val p2 = p.toInt\n        val n3 = n2 % p2\n        val n4 = n3 / p2\n\
    \        val p3 = p2 % p2\n        val p4 = p3 / p2\n        val p5 = p4 % p2\n\
    \        val p6 = p5 / p2\n        val p7 = p6 % p2\n        val p8 = p7 / p2\n\
    \        val p9 = p8 % p2\n        val p10 = p9 / p2\n        val p11 = p10 %\
    \ p2\n        val p12 = p11 / p2\n        val p13 = p12 % p2\n        val p14\
    \ = p13 / p2\n        val p15 = p14 % p2\n        val p16 = p15 / p2\n       \
    \ val p17 = p16 % p2\n        val p18 = p17 / p2\n        val p19 = p18 % p2\n\
    \        val p20 = p19 / p2\n        val p21 = p20 % p2\n        val p22 = p21\
    \ / p2\n        val p23 = p22 % p2\n        val p24 = p23 / p2\n        val p25\
    \ = p24 % p2\n        val p26 = p25 / p2\n        val p27 = p26 % p2\n       \
    \ val p28 = p27 / p2\n        val p29 = p28 % p2\n        val p30 = p29 / p2\n\
    \        val p31 = p30 % p2\n        val p32 = p31 / p2\n        val p33 = p32\
    \ % p2\n        val p34 = p33 / p2\n        val p35 = p34 % p2\n        val p36\
    \ = p35 / p2\n        val p37 = p36 % p2\n        val p38 = p37 / p2\n       \
    \ val p39 = p38 % p2\n        val p40 = p39 / p2\n        val p41 = p40 % p2\n\
    \        val p42 = p41 / p2\n        val p43 = p42 % p2\n        val p44 = p43\
    \ / p2\n        val p45 = p44 % p2\n        val p46 = p45 / p2\n        val p47\
    \ = p46 % p2\n        val p48 = p47 / p2\n        val p49 = p48 % p2\n       \
    \ val p50 = p49 / p2\n        val p51 = p50 % p2\n        val p52 = p51 / p2\n\
    \        val p53 = p52 % p2\n        val p54 = p53 / ", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val m = n.toInt\n        val q = p.toInt\n\
    \        val r = m.mod(q)\n        if (r < 0) r + q\n        else r", "      \
    \  val m = n.toInt\n        val r = p.toInt\n        val q = r - m\n        if\
    \ (q < 0) q + m\n        else q", "        val r = n % p\n        if (r == 0)\
    \ r else p + r", "        val r = n % p\n        if (r < 0) r + p else r", " \
    \       val n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n   \
    \     val p3 = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n \
    \       val n5 = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n\
    \        val p6 = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n\
    \        val n8 = n7 * n7\n        val p8 = p7 * p7\n        val n9 = n8 * n8\n\
    \        val p9 = p8 * p8\n        val n10 = n9 * n9\n        val p10 = p9 * p9\n\
    \        val n11 = n10 * n10\n        val p11 = p10 * p10\n        val n12 = (n11\
    \ * n11) % p\n        val p12 = (p11 * p11) % p\n        val n13 = (n12 * n12)\
    \ % p\n        val p13 = (p12 * p12) % p\n        val n14 = (n13 * n13) % p\n\
    \        val p14 = (p13 * p13) % p\n        val n15 = (n14 * n14) % p\n      \
    \  val p15 = (p14 * p14) % p\n        val n16 = (n15 * n15) % p\n        val p16\
    \ = (p15 * p15) % p\n        val n17 = (n16 * n16) % p\n        val p17 = (p16\
    \ * p16) % p\n        val n18 = (n17 * n17) % p\n        val p18 = (p17 * p17)\
    \ % p\n        val n19 = (n18 * n18) % p\n        val p19 = (p18 * p18) % p\n\
    \        val n20 = (n19 * n19) % p\n        val p20 = (p19 * p19) % p\n      \
    \  val n21 = (n20 * n20) % p\n        val p21 = (p20 * p20) % p\n        val n22\
    \ = (n21 * n21) % p\n        val p22 = (p21 * p21) % p\n        val n23 = (n22\
    \ * n22) % p\n        val p23 = (p22 * p22) % p\n        val n24 = (n23 * n23)\
    \ % p\n        val p24 = (p23 * ", "        val r = n.toInt\n        val m = p.toInt\n\
    \        val r = r * m % p\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m\n        val r = r / m\n        val r = r * m\n   \
    \     val r = r / m\n        val r = r * m\n        val r = r / m\n        val\
    \ r = r * m\n        val r = r / m\n        val r = r * m\n        val r = r /\
    \ m\n        val r = r * m", "        val r = n % p\n        if (r == 0) 1\n \
    \       else if (r > 0) modp(r, p + 1)\n        else modp(r - 1, p + 1)", "  \
    \      val q = p / n\n        val r = p % n\n        val s = q * q\n        val\
    \ t = r * r\n        val u = (s * t) % p\n        val v = (t * u) % p\n      \
    \  v", "        val n1 = n % p\n        val n2 = n / p\n        val n3 = n2 /\
    \ p\n        val n4 = n3 / p\n        val n5 = n4 / p\n        val n6 = n5 / p\n\
    \        val n7 = n6 / p\n        val n8 = n7 / p\n        val n9 = n8 / p\n \
    \       val n10 = n9 / p\n        val n11 = n10 / p\n        val n12 = n11 / p\n\
    \        val n13 = n12 / p\n        val n14 = n13 / p\n        val n15 = n14 /\
    \ p\n        val n16 = n15 / p\n        val n17 = n16 / p\n        val n18 = n17\
    \ / p\n        val n19 = n18 / p\n        val n20 = n19 / p\n        val n21 =\
    \ n20 / p\n        val n22 = n21 / p\n        val n23 = n22 / p\n        val n24\
    \ = n23 / p\n        val n25 = n24 / p\n        val n26 = n25 / p\n        val\
    \ n27 = n26 / p\n        val n28 = n27 / p\n        val n29 = n28 / p\n      \
    \  val n30 = n29 / p\n        val n31 = n30 / p\n        val n32 = n31 / p\n \
    \       val n33 = n32 / p\n        val n34 = n33 / p\n        val n35 = n34 /\
    \ p\n        val n36 = n35 / p\n        val n37 = n36 / p\n        val n38 = n37\
    \ / p\n        val n39 = n38 / p\n        val n40 = n39 / p\n        val n41 =\
    \ n40 / p\n        val n42 = n41 / p\n        val n43 = n42 / p\n        val n44\
    \ = n43 / p\n        val n45 = n44 / p\n        val n46 = n45 / p\n        val\
    \ n47 = n46 / p\n        val n48 = n47 / p\n        val n49 = n48 / p\n      \
    \  val n50 = n49 / p\n        val n51 = n50 / p\n        val n52 = n51 / p\n \
    \       val n53 = n52 / p\n        val n54 = n53 / p\n        val n55 = n54 /\
    \ p\n        val n56 = n55 / p\n        ", "        val r = n % p\n        if\
    \ (r < 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else\
    \ r", "        val r = n % p\n        if (r == 0) 1\n        else r", "      \
    \  val r = n % p\n        if (r == 0) 1\n        else if (r < 0) (p - (n / p)\
    \ * p) % p\n        else (n / p) % p", "        val r = n % p\n        if (r <\
    \ 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val r = n % p\n        if (r == 0) 1\n        else r", "        val r =\
    \ n % p\n        if (r < 0) r + p else r", "        val r = n % p\n        if\
    \ (r == 0) 1l else r", "        val m = n.toInt\n        val r = p.toInt\n   \
    \     val r = r - m % r\n        val r = r + m / r\n        r", "        val n2\
    \ = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n        val p3 =\
    \ p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n        val n5\
    \ = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n        val p6\
    \ = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n        val n8\
    \ = (n7 * n7) % p\n        val p8 = (p7 * p7) % p\n        val n9 = (n8 * n8)\
    \ % p\n        val p9 = (p8 * p8) % p\n        val n10 = (n9 * n9) % p\n     \
    \   val p10 = (p9 * p9) % p\n        val n11 = (n10 * n10) % p\n        val p11\
    \ = (p10 * p10) % p\n        val n12 = (n11 * n11) % p\n        val p12 = (p11\
    \ * p11) % p\n        val n13 = (n12 * n12) % p\n        val p13 = (p12 * p12)\
    \ % p\n        val n14 = (n13 * n13) % p\n        val p14 = (p13 * p13) % p\n\
    \        val n15 = (n14 * n14) % p\n        val p15 = (p14 * p14) % p\n      \
    \  val n16 = (n15 * n15) % p\n        val p16 = (p15 * p15) % p\n        val n17\
    \ = (n16 * n16) % p\n        val p17 = (p16 * p16) % p\n        val n18 = (n17\
    \ * n17) % p\n        val p18 = (p17 * p17) % p\n        val n19 = (n18 * n18)\
    \ % p\n        val p19 = (p18 * p18) % p\n        val n20 = (n19 * n19) % p\n\
    \        val p20 = (p19 * p19) % p\n        val n21 = (n20 * n20) % p\n      \
    \  val p21 = (p20 * p20) % p\n        val n22 = (n21 * n21) % p\n        val p22\
    \ = (p21 * p21) % p\n        val n23 = (n22 * n22) % p\n        val p23 = (p22\
    \ * p", "        val m = n % p\n        if (m == 0) n else m", "        val n1\
    \ = n % p\n        val n2 = n1 >>> 1\n        val n3 = n2 >>> 1\n        val n4\
    \ = n3 >>> 1\n        val n5 = n4 >>> 1\n        val n6 = n5 >>> 1\n        val\
    \ n7 = n6 >>> 1\n        val n8 = n7 >>> 1\n        val n9 = n8 >>> 1\n      \
    \  val n10 = n9 >>> 1\n        val n11 = n10 >>> 1\n        val n12 = n11 >>>\
    \ 1\n        val n13 = n12 >>> 1\n        val n14 = n13 >>> 1\n        val n15\
    \ = n14 >>> 1\n        val n16 = n15 >>> 1\n        val n17 = n16 >>> 1\n    \
    \    val n18 = n17 >>> 1\n        val n19 = n18 >>> 1\n        val n20 = n19 >>>\
    \ 1\n        val n21 = n20 >>> 1\n        val n22 = n21 >>> 1\n        val n23\
    \ = n22 >>> 1\n        val n24 = n23 >>> 1\n        val n25 = n24 >>> 1\n    \
    \    val n26 = n25 >>> 1\n        val n27 = n26 >>> 1\n        val n28 = n27 >>>\
    \ 1\n        val n29 = n28 >>> 1\n        val n30 = n29 >>> 1\n        val n31\
    \ = n30 >>> 1\n        val n32 = n31 >>> 1\n        val n33 = n32 >>> 1\n    \
    \    val n34 = n33 >>> 1\n        val n35 = n34 >>> 1\n        val n36 = n35 >>>\
    \ 1\n        val n37 = n36 >>> 1\n        val n38 = n37 >>> 1\n        val n39\
    \ = n38 >>> 1\n        val n40 = n39 >>> 1\n        val n41 = n40 >>> 1\n    \
    \    val n42 = n41 >>> 1\n        val n43 = n42 >>> 1\n        val n44 = n43 >>>\
    \ 1\n        val n45 = n44 >>> 1\n        val n46 = n45 >>> 1\n        val n47\
    \ = n46 >>> 1\n        val n48 = n47 >>> 1\n        val n49 = n48 >>> 1\n    \
    \    val n50 = n49 >>> 1\n        val n51 = n50 >>> 1\n        val n52 = n51 >>>\
    \ 1\n        val n53 = n52 >>> 1\n        val n54 = n53 >>> 1\n        val n55\
    \ = n54", "        val r = n % p\n        if (r < 0) r + p else r", "        val\
    \ r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n      \
    \  if (r == 0) 1l else r", "        val n1 = n % p\n        if (n1 == 0) n1 else\
    \ p + modp(n1, p)", "        val r = n % p\n        if (r == 0) 1\n        else\
    \ if (r < 0) (p - (n / p) * p) % p\n        else (n / p) % p", "        val m\
    \ = n.toInt\n        val r = p.toInt\n        val q = r.toInt\n        val r =\
    \ r - q\n        val r = r * r\n        val r = r + m\n        val r = r - m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r - m\n       \
    \ val r = r * r\n        val r = r + m\n        val r = r - m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r - m\n        val r = r * r\n\
    \        val r = r + m\n        val r = r - m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r - m\n        val r = r * r\n        val r =\
    \ r + m\n        val r = r - m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r - m\n        val r = r * r\n        val r = r + m\n       \
    \ val r = r - m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r - m\n        val r = r * r\n        val r = r + m\n        val r = r - m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r - m\n       \
    \ val r = r * r\n        val r = r + m\n        val r = r - m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r - m\n        val r = r * r\n\
    \        val r = r + m\n        val r = r - m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r - m\n        val r = r * r\n        val r =\
    \ r + m\n        val r = r - m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r - m\n        val r = r * r\n        val r = r + m\n       \
    \ val r = r - m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r - m\n        val r = r * r\n        val r = r + m\n        val r = r - m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r - m\n       \
    \ val r = r * r\n        val r = r + m\n        val r = r - m\n        ", "  \
    \      val r = n.toInt\n        val m = p.toInt\n        val t = r % m\n     \
    \   if (t == 0) 1l else t * modp(t, m)", "        val r = n.toInt % p.toInt\n\
    \        if (r == 0) r else p + r", "        val m = n.toInt\n        val r =\
    \ p.toInt\n        val r = r - m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r / r\n        r", "        val m = n.toInt\n        val r =\
    \ p.toInt\n        val r = r - m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        ", "        val r = n % p\n        if\
    \ (r == 0) 1\n        else if (r > 0) modp(r, p) + 1\n        else modp(r, p)\
    \ - 1", "        val m = n.toInt\n        val r = p.toInt\n        val s = m %\
    \ r\n        if (s == 0) m else m", "        val m = n.toInt\n        val r =\
    \ p.toInt\n        val r = r - m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        val r = r * r\n        val r = r + m\n\
    \        val r = r * r\n        val r = r + m\n        val r = r * r\n       \
    \ val r = r + m\n        val r = r * r\n        val r = r + m\n        val r =\
    \ r * r\n        val r = r + m\n        ", "        val q = p / n\n        val\
    \ r = p % n\n        q * n + (if (r > 0) r else 0)", "        val n2 = n % p\n\
    \        if (n2 < 0) n2 + p else n2", "        val r = n % p\n        if (r <\
    \ 0) r + p else r", "        val r = n % p\n        if (r < 0) r + p else r",
  "        val m = n.toInt\n        val r = p.toInt\n        val q = r % m\n     \
    \   val r = r - q\n        val r = r * m % m\n        val r = r + q\n        val\
    \ r = r * m % m\n        val r = r + q\n        val r = r * m % m\n        val\
    \ r = r + q\n        val r = r * m % m\n        val r = r + q\n        val r =\
    \ r * m % m\n        val r = r + q\n        val r = r * m % m\n        val r =\
    \ r + q\n        val r = r * m % m\n        val r = r + q\n        val r = r *\
    \ m % m\n        val r = r + q\n        val r = r * m % m\n        val r = r +\
    \ q\n        val r = r * m % m\n        val r = r + q\n        val r = r * m %\
    \ m\n        val r = r + q\n        val r = r * m % m\n        val r = r + q\n\
    \        val r = r * m % m\n        val r = r + q\n        val r = r * m % m\n\
    \        val r = r + q\n        val r = r * m % m\n        val r = r + q\n   \
    \     val r = r * m % m\n        val r = r + q\n        val r = r * m % m\n  \
    \      val r = r + q\n        val r = r * m % m\n        val r = r + q\n     \
    \   val r = r * m % m\n        val r = r + q\n        val r = r * m % m\n    \
    \    val r = r + q\n        val r = r * m % m\n        val r = r + q\n       \
    \ val r = r * m % m\n        val r = r + q\n        val r = r * m % m\n      \
    \  val r = r + q\n        val r = r * m % m\n        val r = r + q\n        val\
    \ r = r * m % m\n        val r = r + q\n        val r = r * m % m\n        val\
    \ r = r + q\n        val r = r * m % m\n        val r = r + q\n        val r =\
    \ r * m % m\n        val r = r + q\n        val r = r * m % m\n        val r =\
    \ r + q\n        val r = r * m % m\n        val r = r + q\n        val r = r",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val m = n.toInt\n\
    \        val r = p.toInt\n        val r = r - m\n        val r = r * r\n     \
    \   val r = r + m\n        val r = r / r\n        val r = r * p\n        val r\
    \ = r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        val r = r + m\n       \
    \ val r = r / r\n        val r = r * p\n        val r = r + m\n        val r =\
    \ r / r\n        val r = r * p\n        val r = r + m\n        val r = r / r\n\
    \        val r = r * p\n        val r = r + m\n        val r = r / r\n       \
    \ val r = r * p\n        val r = r + m\n        val r = r / r\n        val r =\
    \ r * p\n        val r = r + m\n        val r = r / r\n        val r = r * p\n\
    \        val r = r + m\n        val r = r / r\n        val r = r * p\n       \
    \ val r = r + m\n        val r = r / r\n        val r = r * p\n        val r =\
    \ r + m\n        val r = r / r\n        val r = r * p\n        val r = r + m\n\
    \        val r = r / r\n        val r = r * p\n        ", "        val q = n /\
    \ p\n        val r = n % p\n        if (q == 0) r\n        else q * p + (r * modp(q,\
    \ p))", "        val r = n % p\n        if (r == 0) 1l else r", "        val q\
    \ = n / p\n        val r = n % p\n        q * p + r", "        val m = n.toInt\n\
    \        val q = p.toInt\n        if (m == 0) 1\n        else if (m == 1) 0\n\
    \        else if (m == q) 1\n        else (n & (m - 1)) + (modp(n >> 1, q) * p)",
  "        val m = n.toInt\n        val r = p.toInt\n        if (m == 0) 1\n     \
    \   else if (m == r) 1\n        else (n & ((1 << r) - 1)).toLong", "        val\
    \ m = n.toInt\n        val r = p.toInt\n        if (m == 0) 1\n        else if\
    \ (m == 1) r\n        else if (m == r) 1\n        else (n & ((1 << r) - 1)).toLong",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val n2 = n.toInt\n\
    \        val p2 = p.toInt\n        val result = n2 % p2\n        if (result <\
    \ 0)\n            result + p2\n        else\n            result", "        val\
    \ r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n      \
    \  if (r < 0) r + p else r", "        val r = n % p\n        if (r == 0) 1l else\
    \ r", "        val r = n % p\n        if (r == 0) 1l else r", "        val q =\
    \ n / p\n        val r = n % p\n        val m = p / q\n        val r = n % q\n\
    \        val r = r * q\n        val r = r + m\n        val r = r * p\n       \
    \ val r = r + p\n        val r = r * q\n        val r = r + q\n        r", " \
    \       val q = p / n\n        val r = p % n\n        q * n + (if (r == 0) 0 else\
    \ r)", "        val r = n % p\n        if (r == 0) 1l else r", "        val r\
    \ = n.toInt\n        val m = p.toInt\n        val r = r % m\n        if (r < 0)\
    \ r + m else r", "        val r = n % p\n        if (r == 0) 1\n        else r",
  "        val r = n % p\n        if (r < 0) r + p else r", "        val r = n % p\n\
    \        if (r < 0) r + p else r", "        val r = n % p\n        if (r == 0)\
    \ 1l else r", "        val r = n % p\n        if (r == 0) 1\n        else if (r\
    \ < 0) r + p\n        else r", "        val r = n % p\n        if (r == 0) 1\n\
    \        else if (r > 0) modp(r, p) * p\n        else modp(r, p) * (p - 1)", " \
    \       val r = n % p\n        if (r < 0) r + p else r", "        val r = n %\
    \ p\n        if (r == 0) 1l else r", "        val n2 = n.toInt\n        val p2\
    \ = p.toInt\n        val n3 = n2.toLong\n        val p3 = p2.toLong\n        val\
    \ n4 = n3.toInt\n        val p4 = p3.toInt\n        val n5 = n4.toLong\n     \
    \   val p5 = p4.toLong\n        val n6 = n5.toInt\n        val p6 = p5.toInt\n\
    \        val n7 = n6.toLong\n        val p7 = p6.toLong\n        val n8 = (n7.toInt\
    \ + p7.toInt) % p\n        val p8 = (p7.toInt + n7.toInt) % p\n        val n9\
    \ = (n8.toInt + p8.toInt) % p\n        val p9 = (p8.toInt + n8.toInt) % p\n  \
    \      val n10 = (n9.toInt + p9.toInt) % p\n        val p10 = (p9.toInt + n9.toInt)\
    \ % p\n        val n11 = (n10.toInt + p10.toInt) % p\n        val p11 = (p10.toInt\
    \ + n10.toInt) % p\n        val n12 = (n11.toInt + p11.toInt) % p\n        val\
    \ p12 = (p11.toInt + n11.toInt) % p\n        val n13 = (n12.toInt + p12.toInt)\
    \ % p\n        val p13 = (p12.toInt + n12.toInt) % p\n        val n14 = (n13.toInt\
    \ + p13.toInt) % p\n        val p14 = (p13.toInt + n13.toInt) % p\n        val\
    \ n15 = (n14.toInt + p14.toInt) % p\n        val p15 = (p14.toInt + n14.toInt)\
    \ % p\n        val n16 = (n15.toInt + p15.toInt) % p\n        val p16 = (p15.toInt\
    \ + n15.toInt) % p\n        val n17 = (n16.toInt + p16.toInt) % p\n        val\
    \ p17 = (p16.toInt + n16.toInt) % p\n        val n18 = (n17.toInt + p17.toInt)\
    \ % p\n        val p18 = (p17.toInt + n17.toInt) % p\n        val n19 = (n18.toInt\
    \ + p18.toInt) % p\n        val p19 = (p18.toInt + n18.toInt) % ", "        val\
    \ n2 = n * n\n        val p2 = p * p\n        val n3 = n2 * n2\n        val p3\
    \ = p2 * p2\n        val n4 = n3 * n3\n        val p4 = p3 * p3\n        val n5\
    \ = n4 * n4\n        val p5 = p4 * p4\n        val n6 = n5 * n5\n        val p6\
    \ = p5 * p5\n        val n7 = n6 * n6\n        val p7 = p6 * p6\n        val n8\
    \ = n7 * n7\n        val p8 = p7 * p7\n        val n9 = (n8 + p8) % p\n      \
    \  val p9 = (p8 + n9) % p\n        val n10 = (n9 + p9) % p\n        val p10 =\
    \ (p9 + n10) % p\n        val n11 = (n10 + p10) % p\n        val p11 = (p10 +\
    \ n11) % p\n        val n12 = (n11 + p11) % p\n        val p12 = (p11 + n12) %\
    \ p\n        val n13 = (n12 + p12) % p\n        val p13 = (p12 + n13) % p\n  \
    \      val n14 = (n13 + p13) % p\n        val p14 = (p13 + n14) % p\n        val\
    \ n15 = (n14 + p14) % p\n        val p15 = (p14 + n15) % p\n        val n16 =\
    \ (n15 + p15) % p\n        val p16 = (p15 + n16) % p\n        val n17 = (n16 +\
    \ p16) % p\n        val p17 = (p16 + n17) % p\n        val n18 = (n17 + p17) %\
    \ p\n        val p18 = (p17 + n18) % p\n        val n19 = (n18 + p18) % p\n  \
    \      val p19 = (p18 + n19) % p\n        val n20 = (n19 + p19) % p\n        val\
    \ p20 = (p19 + n20) % p\n        val n21 = (n20 + p20) % p\n        val p21 =\
    \ (p20 + n21) % p\n        val n22 = (n21 + p21) % p\n        val p22 = (p21 +\
    \ n22) % p\n        val n23 = (n22 + p22) % p\n        val p23 = (p22 + n23) %\
    \ p\n        val ", "        val r = n % p\n        if (r == 0) r else p + r",
  "        val m = n.toInt\n        val q = p.toInt\n        val r = ((m % q) + q)\
    \ % q\n        val s = r.toLong\n        val t = ((s % q) + q) % q\n        val\
    \ u = t.toLong\n        val v = ((u % q) + q) % q\n        val w = ((v % q) +\
    \ q) % q\n        val x = ((w % q) + q) % q\n        val y = ((x % q) + q) % q\n\
    \        val z = ((y % q) + q) % q\n        val a = ((z % q) + q) % q\n      \
    \  val b = ((a % q) + q) % q\n        val c = ((b % q) + q) % q\n        val d\
    \ = ((c % q) + q) % q\n        val e = ((d % q) + q) % q\n        val f = ((e\
    \ % q) + q) % q\n        val g = ((f % q) + q) % q\n        val h = (g % q) +\
    \ q\n        val i = h.toInt\n        val j = (i / q).toLong\n        val k =\
    \ (j % q).toLong\n        val l = (k % q).toLong\n        val m = (l % q).toLong\n\
    \        val n = (m % q).toLong\n        val o = (n % q).toLong\n        val p\
    \ = (o % q).toLong\n        val q = (p % q).toLong\n        val r = (q % q).toLong\n\
    \        val s = (n % q).toLong\n        val t = (r % q).toLong\n        val u\
    \ = (t % q).toLong\n        val v = (u % q).toLong\n        val w = (v % q).toLong\n\
    \        val x = (w % q).toLong\n        val y = (x % q).toLong\n        val z\
    \ = (y % q).toLong\n        val a = (z % q).toLong\n        val b = (a % q).toLong\n\
    \        val c = (b % q).toLong\n        val d = (c % q).toLong\n        val e\
    \ = (d % q).toLong\n        val f = (e % q).toLong\n        val g = (f % q).toLong\n\
    \        val h = (g % q).toLong\n        val i = (h % q).toInt\n        val j\
    \ = (i / q).toLong\n        val k = (j % q).toLong\n        val l = (k % q).toLong\n\
    \        val m = (l % q).toLong\n        val n"]
stop_tokens:
- "\n    }\n"

name: HumanEval_63_fibfib
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n   \
  \ // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    // Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n    // >>> fibfib((5l))\n\
  \    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n    def fibfib(n : Long) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n\
  \    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l))\
  \ == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n\
  \    assert(fibfib((14l)) == (927l));\n    }\n\n}\n"
completions: ["        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(n) match {\n\
    \            case 0 => 0l\n            case 1 => 1l\n            case 2 => 2l\n\
    \            case _ => fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        }",
  "        var fib : mutable.MutableList[Long] = mutable.MutableList(1l)\n       \
    \ var fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib1 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib2\
    \ : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib3 :\
    \ mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib4 : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        var fibfib5 : mutable.MutableList[Long] =\
    \ mutable.MutableList(1l)\n        var fibfib6 : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        var fibfib7 : mutable.MutableList[Long] = mutable.MutableList(1l)\n \
    \       var fibfib8 : mutable.MutableList[Long] = mutable.MutableList(1l)\n  \
    \      var fibfib9 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib10 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib11 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib14 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib15 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib16 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib17 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib18 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib19 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib20 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib21 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib22 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib23 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib24 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib25 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib27 : mutable.MutableList[Long] = mutable.Mutable", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib =\
    \ new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", '        val fibfibArray = Array[Long](0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657,46368,75025,121393,196418,317811,514229,832040,1346269,2178309,3524578,5702887,9227465,14930352,24157817,39088169,63245986,102334155,165580141,267914296,433494437,701408733,1134903170,1836311903,2971215073,4807526976,7778742049,12586269025,20365011074,32951280099,53316291173,86267571273,139583862441,225851433717,365435296162,591286729871,956722026041,15480087559201,259695496911877,4201961407684651,6771898684564331,11766064415178657,18965517872149073,29805947086746625,501425827802895877,719972375690265737,123317335394185781,206613845395196625,3257810690697145781,5331629117335441857,8626757127339941857,13958386245134941857,225851433717039941857,365435296161994941857,5912867298710149941857,9567220260410349941857,15480087559201339941857,2596954969118770349941857,420196140768465139941857,677189868456433139941857,11766064415178657349941857,1896551787214907339941857,29805947086746625349941857,5014258278028958770349941857,',
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) = 0l\n        fibfibs(1) = 0l\n        fibfibs(2)\
    \ = 1l\n        fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n    \
    \    fibfibs(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n       \
    \ else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n        fibfib(n)\
    \ {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n    \
    \    }\n        fibfib(n)._1", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n    \
    \    fibfibs.update(2, 2l)\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)))", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib(n) match {\n            case 0 => 0\n            case 1\
    \ => 0\n            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        }", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 0\n\
    \                    case 2 => 1\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 0\n                            case 2 =>\
    \ 1\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 0\n                                \
    \    case 2 => 1\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 0\n                                            case 2 => 1\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 0\n                                                    case 2\
    \ => 1\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 0\n         \
    \                                                   case 2 => 1\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 0\n                                                                    case\
    \ 2 => 1\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 0\n                   \
    \                                                         case 2 => 1\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 0\n  \
    \                                                                            \
    \      case 2 => 1\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 0\n                    \
    \                                                                        case\
    \ 2 => 1\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 0\n\
    \                                                                            \
    \                        case 2 => 1\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                  case 2 => 1\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match {\n", "        val fibfibArray = mutable.ArrayBuffer(0l)\n\
    \        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray +=\
    \ 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfibArray\
    \ += 0l\n        fibfibArray += 0l\n        fibfibArray += 0l\n        fibfib",
  "        if (n <= 0) 0\n        else if (n <= 1) 1\n        else if (n <= 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib =\
    \ new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1,\
    \ 0l)\n        fibfib.put(2, 1l)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        if (n <= 0) 0\n        else if (n <= 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        if (n == 0) 0\n        else if (n == 1) 1\n       \
    \ else if (n == 2) 1\n        else if (n % 2 == 0) fibfib(n-1) + fibfib(n-2)\n\
    \        else fibfib(n-1) + fibfib(n-2)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) += 1\n        fibfibs(1) += 1\n        fibfibs(2)\
    \ += 1\n        fibfibs(n) += fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n   \
    \     fibfibs(n)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfibs = mutable.ArrayBuffer(0l)\n   \
    \     fibfibs += 0l\n        fibfibs += 1l\n        fibfibs += 2l\n        fibfibs\
    \ += 3l\n        fibfibs += 4l\n        fibfibs += 5l\n        fibfibs += 6l\n\
    \        fibfibs += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n       \
    \ fibfibs += 10l\n        fibfibs += 11l\n        fibfibs += 12l\n        fibfibs\
    \ += 13l\n        fibfibs += 14l\n        fibfibs += 15l\n        fibfibs += 16l\n\
    \        fibfibs += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n    \
    \    fibfibs += 20l\n        fibfibs += 21l\n        fibfibs += 22l\n        fibfibs\
    \ += 23l\n        fibfibs += 24l\n        fibfibs += 25l\n        fibfibs += 26l\n\
    \        fibfibs += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n    \
    \    fibfibs += 30l\n        fibfibs += 31l\n        fibfibs += 32l\n        fibfibs\
    \ += 33l\n        fibfibs += 34l\n        fibfibs += 35l\n        fibfibs += 36l\n\
    \        fibfibs += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n    \
    \    fibfibs += 40l\n        fibfibs += 41l\n        fibfibs += 42l\n        fibfibs\
    \ += 43l\n        fibfibs += 44l\n        fibfibs += 45l\n        fibfibs += 46l\n\
    \        fibfibs += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n    \
    \    fibfibs += 50l\n        fibfibs += 51l\n        fibfibs += 52l\n        fibfibs\
    \ += 53l\n        fibfibs += 54l\n        fibfibs += 55l\n        fibfibs += 56l\n\
    \        fibfibs += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n    \
    \    fibfibs += 60l\n        fibfibs += 61l\n        fibfibs += 62l\n        fibfibs\
    \ += 63l\n        fibfibs += 64l\n        fibfibs += 65l\n        fibfibs += 66l\n\
    \        fibfibs += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n    \
    \    fibfibs += 70l\n        fibfib", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "        if (n == 0)\
    \ 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        var fib : mutable.MutableList[Long] = mutable.MutableList(1l)\n       \
    \ var fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib1 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib2\
    \ : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib3 :\
    \ mutable.MutableList[Long] = mutable.MutableList(1l)\n        var fibfib4 : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        var fibfib5 : mutable.MutableList[Long] =\
    \ mutable.MutableList(1l)\n        var fibfib6 : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        var fibfib7 : mutable.MutableList[Long] = mutable.MutableList(1l)\n \
    \       var fibfib8 : mutable.MutableList[Long] = mutable.MutableList(1l)\n  \
    \      var fibfib9 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib10 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib11 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib14 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib15 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib16 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib17 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib18 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib19 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib20 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib21 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib22 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib23 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib24 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib25 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib27 : mutable.MutableList[Long] = mutable.Mutable", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n).asInstanceOf[Long]", "    \
    \    val fibfib = new mutable.MutableList[Long]()\n        fibfib.clear()\n  \
    \      fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        if (n <= 0) 0\n        else if (n <= 2) 1\n        else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n) ", "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n         \
    \   fibfib.add(_)\n        }\n        fibfib(n).last", "        if (n == 0) 0\n\
    \        else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2,\
    \ 1l)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        var fib : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ i : Long = 1\n        while (i <= n) {\n            fib.add(i)\n           \
    \ i = fib(i) + fib(i-1) + fib(i-2)\n        }\n        fib.last", "        val\
    \ fibfibs = mutable.ArrayBuffer(0l)\n        fibfibs(0) = 0\n        fibfibs(1)\
    \ = 0\n        fibfibs(2) = 1\n        fibfibs(n) = fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)\n        fibfibs(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                val temp =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n                fibfib.append(temp)\n\
    \                temp\n            }\n        }", "        val fibfibArray = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibArray.update(0, 0l)\n        fibfibArray.update(1, 1l)\n\
    \        fibfibArray.update(2, 2l)\n        fibfibArray.update(n-1, fibfibArray(n-1)\
    \ + fibfibArray(n-2) + fibfibArray(n-3))\n        fibfibArray(n)", "        val\
    \ fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        if (n == 0) 0\n  \
    \      else if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n).asInstanceOf[Long]", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                val fibfib2\
    \ = fibfib.toList\n                fibfib2.remove(fibfib2.size - 2)\n        \
    \        fibfib2.remove(fibfib2.size - 1)\n                fibfib2.last\n    \
    \        }\n        }", "        val fibfib = new mutable.HashSet[Long]()\n  \
    \      fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n)\
    \ {\n            fibfib.add(_)\n        }\n        fibfib(n).last", "        val\
    \ fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) += 1\n        fibfibs(1) += 1\n        fibfibs(2)\
    \ += 1\n        fibfibs(n) += fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n   \
    \     fibfibs(n)", "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(n) match {\n            case 0 => 0l\n            case\
    \ 1 => 1l\n            case 2 => 2l\n            case _ => fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)\n        }", "        val fibfibs = mutable.ArrayBuffer(0l, 1l,\
    \ 2l)\n        fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n     \
    \   fibfibs(n)", "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n    \
    \    fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2,\
    \ 2l)\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))",
  "        val fibfibs = mutable.ArrayBuffer(0l)\n        fibfibs(0) = 0\n       \
    \ fibfibs(1) = 0\n        fibfibs(2) = 1\n        fibfibs(n) = fibfibs(n-1) +\
    \ fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val fibfib = new\
    \ mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1,\
    \ 0l)\n        fibfib.put(2, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n      \
    \  fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n).asInstanceOf[Long]",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList()\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n        fib += 0l\n        fib += 0l\n        fib += 0l\n        fib +=\
    \ 0l\n", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n        fibfib(1)\
    \ = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        if (n <= 0) 0\n        else if (n <= 2) 1\n        else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    \
    \    val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibList = mutable.ListBuffer[Long]()\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        ", "        val fibfib :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        var fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib1 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib2 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib3 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib4 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib5 : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  var fibfib6 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib7 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib8\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib9 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib10 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib11 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib12 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib13 : mutable.MutableList[Long] = mutable.MutableList(0)\n \
    \       var fibfib14 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib15 : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib16 : mutable.MutableList[Long] = mutable.MutableList(0)\n    \
    \    var fibfib17 : mutable.MutableList[Long] = mutable.MutableList(0)\n     \
    \   var fibfib18 : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  var fibfib19 : mutable.MutableList[Long] = mutable.MutableList(0)\n       \
    \ var fibfib20 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var\
    \ fibfib21 : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib22\
    \ : mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib23 :\
    \ mutable.MutableList[Long] = mutable.MutableList(0)\n        var fibfib24 : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib25 : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var fibfib26 : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        var fibfib27 : mutable.MutableList[Long] = mutable.MutableList(0)\n \
    \       var fibfib28 : mutable.MutableList[Long] = mutable.MutableList(0)\n  \
    \      var fibfib29 : mutable.MutableList[Long] = mutable.MutableList(0)\n   \
    \     var fibfib30 : mut", "        val fibfibs = mutable.ArrayBuffer(0l, 1l,\
    \ 2l)\n        fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2,\
    \ 2l)\n        fibfibs.update(n, n)\n        fibfibs.update(n-1, fibfibs.update(n-2,\
    \ fibfibs.update(n-3, fibfibs.update(n-4, fibfibs.update(n-5, fibfibs.update(n-6,\
    \ fibfibs.update(n-7, fibfibs.update(n-8, fibfibs.update(n-9, fibfibs.update(n-10,\
    \ fibfibs.update(n-11, fibfibs.update(n-12, fibfibs.update(n-13, fibfibs.update(n-14,\
    \ fibfibs.update(n-15, fibfibs.update(n-16, fibfibs.update(n-17, fibfibs.update(n-18,\
    \ fibfibs.update(n-19, fibfibs.update(n-20, fibfibs.update(n-21, fibfibs.update(n-22,\
    \ fibfibs.update(n-23, fibfibs.update(n-24, fibfibs.update(n-25, fibfibs.update(n-26,\
    \ fibfibs.update(n-27, fibfibs.update(n-28, fibfibs.update(n-29, fibfibs.update(n-30,\
    \ fibfibs.update(n-31, fibfibs.update(n-32, fibfibs.update(n-33, fibfibs.update(n-34,\
    \ fibfibs.update(n-35, fibfibs.update(n-36, fibfibs.update(n-37, fibfibs.update(n-38,\
    \ fibfibs.update(n-39, fibfibs.update(n-40, fibfibs.update(n-41, fibfibs.update(n-42,\
    \ fibfibs.update(n-43, fibfibs.update(n-44, fibfibs.update(n-45, fibfibs.update(n-46,\
    \ fibfibs.update(n-47, fibfibs.update(n-48, fibfibs.update(n-49, fibfibs.update(n-50,\
    \ fibfibs.update(n-51, fibfibs.update(n-52, fibfibs.update(n-53, fibfibs.update(n-54,\
    \ fibfibs.update(n-55, fibfibs.update(n-56, fibfibs.update(n-57, fibfibs.update(n-58,\
    \ fibfibs.update(n-59, fibfibs.update(n-60, fibfibs.update(n-61, fibfibs.update(n-62,\
    \ fibfibs.update(n-63, fibfibs.update(n-64, fibfibs.update(n-65, fibfibs.update(n",
  "        val fibfibs = mutable.ListBuffer[Long]()\n        fibfibs += 0\n      \
    \  fibfibs += 1\n        fibfibs += 2\n        fibfibs += fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)\n        fibfibs(n)", "        val fibfibArray = mutable.ArrayBuffer(0l)\n\
    \        fibfibArray(0) = 0l\n        fibfibArray(1) = 0l\n        fibfibArray(2)\
    \ = 1l\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                val n1 = fibfib(n-1)\n\
    \                val n2 = fibfib(n-2)\n                val n3 = fibfib(n-3)\n\
    \                fibfib.append(n1 + n2 + n3)\n            }\n        }", "   \
    \     val fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n      \
    \  fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n    \
    \    fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n   \
    \         case 2 => 1\n            case _ => {\n                fibfib(n-1) match\
    \ {\n                    case 0 => 0\n                    case 1 => 0\n      \
    \              case 2 => 1\n                    case _ => {\n                \
    \        fibfib(n-2) match {\n                            case 0 => 0\n      \
    \                      case 1 => 0\n                            case 2 => 1\n\
    \                            case _ => {\n                                fibfib(n-3)\
    \ match {\n                                    case 0 => 0\n                 \
    \                   case 1 => 0\n                                    case 2 =>\
    \ 1\n                                    case _ => {\n                       \
    \                 fibfib(n-4) match {\n                                      \
    \      case 0 => 0\n                                            case 1 => 0\n\
    \                                            case 2 => 1\n                   \
    \                         case _ => {\n                                      \
    \          fibfib(n-5) match {\n                                             \
    \       case 0 => 0\n                                                    case\
    \ 1 => 0\n                                                    case 2 => 1\n  \
    \                                                  case _ => {\n             \
    \                                           fibfib(n-6) match {\n            \
    \                                                case 0 => 0\n               \
    \                                             case 1 => 0\n                  \
    \                                          case 2 => 1\n                     \
    \                                       case _ => {\n                        \
    \                                        fibfib(n-7) match {\n               \
    \                                                     case 0 => 0\n          \
    \                                                          case 1 => 0\n     \
    \                                                               case 2 => 1\n\
    \                                                                    case _ =>\
    \ {\n                                                                        fibfib(n-8)\
    \ match {\n                                                                  \
    \          case 0 => 0\n                                                     \
    \                       case 1 => 0\n                                        \
    \                                    case 2 => 1\n                           \
    \                                                 case _ => {\n              \
    \                                                                  fibfib(n-9)\
    \ match {\n                                                                  \
    \                  case 0 => 0\n                                             \
    \                                       case 1 => 0\n                        \
    \                                                            case 2 => 1\n   \
    \                                                                            \
    \     case _ => {\n                                                          \
    \                              fibfib(n-10) match {\n                        \
    \                                                                    case 0 =>\
    \ 0\n                                                                        \
    \                    case 1 => 0\n                                           \
    \                                                 case 2 => 1\n              \
    \                                                                            \
    \  case _ => {\n                                                             \
    \                                   fibfib(n-11) match {\n                   \
    \                                                                            \
    \     case 0 => 0\n                                                          \
    \                                          case 1 => 0\n                     \
    \                                                                            \
    \   case 2 => 1\n                                                            \
    \                                        case _ => {\n                       \
    \                                                                            \
    \     fibfib(n-12) match {\n                                                 \
    \                                                           case 0 => 0\n    \
    \                                                                            \
    \                            case 1 => 0\n                                   \
    \                                                                         case\
    \ 2 => 1\n                                                                   \
    \                                         case _ => {\n                      \
    \                                                                            \
    \              fibfib(n-13) match {\n                                        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                                                 case 1 => 0\n              \
    \                                                                            \
    \                          case 2 => 1\n                                     \
    \                                                                            \
    \   case _ => {\n                                                            \
    \                                                            fibfib(n-14) match\
    \ {\n", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n        fibfib.add(1)\n\
    \        fibfib.add(2)\n        fibfib(n) match {\n            case 0 => 0\n \
    \           case 1 => 1\n            case 2 => 2\n            case n => fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        }", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n", "        val fibfib = new\
    \ mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfib = new mutable.MutableList[Long]()\n     \
    \   fibfib.clear()\n        fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 1\n\
    \            case 2 => 2\n            case _ => {\n                fibfib(n-1)\
    \ match {\n                    case 0 => 0\n                    case 1 => 1\n\
    \                    case 2 => 2\n                    case _ => {\n          \
    \              fibfib(n-2) match {\n                            case 0 => 0\n\
    \                            case 1 => 1\n                            case 2 =>\
    \ 2\n                            case _ => {\n                               \
    \ fibfib(n-3) match {\n                                    case 0 => 0\n     \
    \                               case 1 => 1\n                                \
    \    case 2 => 2\n                                    case _ => {\n          \
    \                              fibfib(n-4) match {\n                         \
    \                   case 0 => 0\n                                            case\
    \ 1 => 1\n                                            case 2 => 2\n          \
    \                                  case _ => {\n                             \
    \                   fibfib(n-5) match {\n                                    \
    \                case 0 => 0\n                                               \
    \     case 1 => 1\n                                                    case 2\
    \ => 2\n                                                    case _ => {\n    \
    \                                                    fibfib(n-6) match {\n   \
    \                                                         case 0 => 0\n      \
    \                                                      case 1 => 1\n         \
    \                                                   case 2 => 2\n            \
    \                                                case _ => {\n               \
    \                                                 fibfib(n-7) match {\n      \
    \                                                              case 0 => 0\n \
    \                                                                   case 1 =>\
    \ 1\n                                                                    case\
    \ 2 => 2\n                                                                   \
    \ case _ => {\n                                                              \
    \          fibfib(n-8) match {\n                                             \
    \                               case 0 => 0\n                                \
    \                                            case 1 => 1\n                   \
    \                                                         case 2 => 2\n      \
    \                                                                      case _\
    \ => {\n                                                                     \
    \           fibfib(n-9) match {\n                                            \
    \                                        case 0 => 0\n                       \
    \                                                             case 1 => 1\n  \
    \                                                                            \
    \      case 2 => 2\n                                                         \
    \                           case _ => {\n                                    \
    \                                                    fibfib(n-10) match {\n  \
    \                                                                            \
    \              case 0 => 0\n                                                 \
    \                                           case 1 => 1\n                    \
    \                                                                        case\
    \ 2 => 2\n                                                                   \
    \                         case _ => {\n                                      \
    \                                                          fibfib(n-11) match\
    \ {\n                                                                        \
    \                            case 0 => 0\n                                   \
    \                                                                 case 1 => 1\n\
    \                                                                            \
    \                        case 2 => 2\n                                       \
    \                                                             case _ => {\n  \
    \                                                                            \
    \                          fibfib(n-12) match {\n                            \
    \                                                                            \
    \    case 0 => 0\n                                                           \
    \                                                 case 1 => 1\n              \
    \                                                                            \
    \                  case 2 => 2\n                                             \
    \                                                               case _ => {\n\
    \                                                                            \
    \                                    fibfib(n-13) match {\n                  \
    \                                                                            \
    \                      case 0 => 0\n                                         \
    \                                                                           case\
    \ 1 => 1\n                                                                   \
    \                                                 case 2 => 2\n              \
    \                                                                            \
    \                          case _ => {\n                                     \
    \                                                                            \
    \       fibfib(n-14) match ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(n) = fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val fibfibList\
    \ = mutable.ListBuffer[Long]()\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        ", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        fibfib(0) = 0\n        fibfib(1) = 0\n  \
    \      fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n).foreach(x => fibfib.append(fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    \        fibfib(n)", "        var fibfib = 0\n        var fibfib1 = 1\n      \
    \  var fibfib2 = 1\n        var fibfib3 = 1\n        var fibfib4 = 2\n       \
    \ var fibfib5 = 3\n        var fibfib6 = 5\n        var fibfib7 = 8\n        var\
    \ fibfib8 = 1\n        var fibfib9 = 2\n        var fibfib10 = 3\n        var\
    \ fibfib11 = 5\n        var fibfib12 = 8\n        var fibfib13 = 1\n        var\
    \ fibfib14 = 2\n        var fibfib15 = 3\n        var fibfib16 = 5\n        var\
    \ fibfib17 = 8\n        var fibfib18 = 1\n        var fibfib19 = 2\n        var\
    \ fibfib20 = 3\n        var fibfib21 = 5\n        var fibfib22 = 8\n        var\
    \ fibfib23 = 1\n        var fibfib24 = 2\n        var fibfib25 = 3\n        var\
    \ fibfib26 = 5\n        var fibfib27 = 8\n        var fibfib28 = 1\n        var\
    \ fibfib29 = 2\n        var fibfib30 = 3\n        var fibfib31 = 5\n        var\
    \ fibfib32 = 8\n        var fibfib33 = 1\n        var fibfib34 = 2\n        var\
    \ fibfib35 = 3\n        var fibfib36 = 5\n        var fibfib37 = 8\n        var\
    \ fibfib38 = 1\n        var fibfib39 = 2\n        var fibfib40 = 3\n        var\
    \ fibfib41 = 5\n        var fibfib42 == 8\n        var fibfib43 == 1\n       \
    \ var fibfib44 == 2\n        var fibfib45 == 3\n        var fibfib46 == 5\n  \
    \      var fibfib47 == 8\n        var fibfib48 == 1\n        var fibfib49 == 2\n\
    \        var fibfib50 == 3\n        var fibfib51 == 5\n        var fibfib52 ==\
    \ 8\n        var fibfib53 == 1\n        var fibfib54 == 2\n        var fibfib55\
    \ == 3\n        var fibfib56 == 5\n        var fibfib57 == 8\n        var fibfib58\
    \ == 1\n        var fibfib59 == 2\n        var fibfib60 == 3\n        var fibfib61\
    \ == 5\n        var fibfib62 == 8\n        var fibfib63 == 1\n        var fibfib64\
    \ == 2\n        var fibfib65 == 3\n        var fibfib66 == 5\n        var fibfib67\
    \ == 8\n        var fibfib68 == 1\n        var fibfib69 == 2\n        var fibfib70\
    \ == 3\n        var fibfib71 == 5\n        var fibfib72 == 8\n        var fibfib73\
    \ == 1\n        var fibfib74 == 2\n        var fibfib75 == 3\n        var fibfib76\
    \ == 5\n        var fibfib77 == 8\n        var fibfib78 == 1\n        var fibfib79\
    \ == 2\n        var fibfib80 == 3\n        var fibfib81 == 5\n        var fibfib82\
    \ == 8\n        var fibfib83 == 1\n        var fibfib84 == 2\n", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        val fibfibArray\
    \ = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibArray.update(0, 0l)\n     \
    \   fibfibArray.update(1, 1l)\n        fibfibArray.update(2, 2l)\n        fibfibArray.update(n-1,\
    \ fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3))", "        val fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList(1l)\n        fibfib(0) = 0\n\
    \        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs(0) += 1\n        fibfibs(1) += 1\n        fibfibs(2)\
    \ += 1\n        fibfibs(n) += fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n   \
    \     fibfibs(n)", "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0)\
    \ = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        if (n <= 0) 0\n  \
    \      else if (n <= 1) 1\n        else if (n <= 2) 1\n        else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib.append(1)\n        fibfib(n) match {\n            case 0 => 0\n\
    \            case 1 => 0\n            case 2 => 1\n            case n => fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        }", "        val fibfibList = mutable.ListBuffer[Long]()\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     ", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibArray = Array(0, 1, 1, 2)\n        val fibfibArraySize = fibfibArray.length\n\
    \        val fibfibArrayIterator = fibfibArray.iterator\n        val fibfibArrayIteratorSize\
    \ = fibfibArrayIterator.length\n        val fibfibArrayIteratorCurrent = fibfibArrayIterator.next\n\
    \        val fibfibArrayIteratorCurrentSize = fibfibArrayIteratorCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentSize = fibfibArrayIteratorCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentSize = fibfibArrayIteratorCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentSize = fibfibArrayIteratorCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentSize = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrent.length\n   \
    \     val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrent.length\n\
    \        val fibfibArrayIteratorCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentCurrentSize\
    \ = ", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0,\
    \ 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n        fibfib(n)\
    \ {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n    \
    \    }\n        fibfib(n)._1", "        val fibfibs = mutable.ArrayBuffer(0l,\
    \ 1l, 2l)\n        fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n    \
    \    fibfibs.update(2, 2l)\n        fibfibs.update(n, (fibfibs(n-1) + fibfibs(n-2)\
    \ + fibfibs(n-3)))", "        if (n == 0) 0\n        else if (n == 1) 1\n    \
    \    else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0) =\
    \ 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs.update(0,\
    \ 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2, 2l)\n        fibfibs.update(n,\
    \ (fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)))", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var i : Long = 0\n        while (i < n) {\n\
    \            fib += fibfib(i+1)\n            i += 1\n        }\n        fib(0)",
  "        val fibfibs = mutable.ListBuffer(0l)\n        fibfibs += 0l\n        fibfibs\
    \ += 1l\n        fibfibs += 2l\n        fibfibs += 3l\n        fibfibs += 4l\n\
    \        fibfibs += 5l\n        fibfibs += 6l\n        fibfibs += 7l\n       \
    \ fibfibs += 8l\n        fibfibs += 9l\n        fibfibs += 10l\n        fibfibs\
    \ += 11l\n        fibfibs += 12l\n        fibfibs += 13l\n        fibfibs += 14l\n\
    \        fibfibs += 15l\n        fibfibs += 16l\n        fibfibs += 17l\n    \
    \    fibfibs += 18l\n        fibfibs += 19l\n        fibfibs += 20l\n        fibfibs\
    \ += 21l\n        fibfibs += 22l\n        fibfibs += 23l\n        fibfibs += 24l\n\
    \        fibfibs += 25l\n        fibfibs += 26l\n        fibfibs += 27l\n    \
    \    fibfibs += 28l\n        fibfibs += 29l\n        fibfibs += 30l\n        fibfibs\
    \ += 31l\n        fibfibs += 32l\n        fibfibs += 33l\n        fibfibs += 34l\n\
    \        fibfibs += 35l\n        fibfibs += 36l\n        fibfibs += 37l\n    \
    \    fibfibs += 38l\n        fibfibs += 39l\n        fibfibs += 40l\n        fibfibs\
    \ += 41l\n        fibfibs += 42l\n        fibfibs += 43l\n        fibfibs += 44l\n\
    \        fibfibs += 45l\n        fibfibs += 46l\n        fibfibs += 47l\n    \
    \    fibfibs += 48l\n        fibfibs += 49l\n        fibfibs += 50l\n        fibfibs\
    \ += 51l\n        fibfibs += 52l\n        fibfibs += 53l\n        fibfibs += 54l\n\
    \        fibfibs += 55l\n        fibfibs += 56l\n        fibfibs += 57l\n    \
    \    fibfibs += 58l\n        fibfibs += 59l\n        fibfibs += 60l\n        fibfibs\
    \ += 61l\n        fibfibs += 62l\n        fibfibs += 63l\n        fibfibs += 64l\n\
    \        fibfibs += 65l\n        fibfibs += 66l\n        fibfibs += 67l\n    \
    \    fibfibs += 68l\n        fibfibs += 69l\n        fibfibs += 70l\n        fibfib",
  "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs.update(0,\
    \ 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2, 2l)\n        fibfibs.update(n-1,\
    \ fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3))\n        fibfibs(n)", "        var\
    \ fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer(0l)\n\
    \        fibfibs(0) = 0\n        fibfibs(1) = 0\n        fibfibs(2) = 1\n    \
    \    fibfibs(n) = fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)",
  "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(n) = fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val fibfibs = mutable.ArrayBuffer(0l)\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n       \
    \ fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs\
    \ += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n        fibfibs += 0l\n\
    \        fibfibs += 0l\n        fibfib", "        val fibfib = new mutable.HashSet[Long]()\n\
    \        fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n       \
    \ fibfib.add(3)\n        fibfib.add(4)\n        fibfib.add(5)\n        fibfib.add(6)\n\
    \        fibfib.add(7)\n        fibfib.add(8)\n        fibfib.add(9)\n       \
    \ fibfib.add(10)\n        fibfib.add(11)\n        fibfib.add(12)\n        fibfib.add(13)\n\
    \        fibfib.add(14)\n        fibfib.add(15)\n        fibfib.add(16)\n    \
    \    fibfib.add(17)\n        fibfib.add(18)\n        fibfib.add(19)\n        fibfib.add(20)\n\
    \        fibfib.add(21)\n        fibfib.add(22)\n        fibfib.add(23)\n    \
    \    fibfib.add(24)\n        fibfib.add(25)\n        fibfib.add(26)\n        fibfib.add(27)\n\
    \        fibfib.add(28)\n        fibfib.add(29)\n        fibfib.add(30)\n    \
    \    fibfib.add(31)\n        fibfib.add(32)\n        fibfib.add(33)\n        fibfib.add(34)\n\
    \        fibfib.add(35)\n        fibfib.add(36)\n        fibfib.add(37)\n    \
    \    fibfib.add(38)\n        fibfib.add(39)\n        fibfib.add(40)\n        fibfib.add(41)\n\
    \        fibfib.add(42)\n        fibfib.add(43)\n        fibfib.add(44)\n    \
    \    fibfib.add(45)\n        fibfib.add(46)\n        fibfib.add(47)\n        fibfib.add(48)\n\
    \        fibfib.add(49)\n        fibfib.add(50)\n        fibfib.add(51)\n    \
    \    fibfib.add(52)\n        fibfib.add(53)\n        fibfib.add(54)\n        fibfib.add(55)\n\
    \        fibfib.add(56)\n        fibfib.add(57)\n        fibfib.add(58)\n    \
    \    fibfib.add(59)\n        fibfib.add(60)\n        fibfib.add(61)\n        fibfib.add(62)\n\
    \        fibfib.add(63)\n        fibfib.add(64)\n        fibfib.add(65)\n    \
    \    ", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n \
    \       fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n   \
    \     fibfibs += 0\n        fibfibs += 0\n        fibfibs += 0\n        fibfibs\
    \ += 0\n        fibfibs += 0\n", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        var fibfib : mutable.MutableList[Long] =\
    \ mutable.MutableList(1l)\n        var fibfib1 : mutable.MutableList[Long] = mutable.MutableList(1l)\n\
    \        var fibfib2 : mutable.MutableList[Long] = mutable.MutableList(1l)\n \
    \       var fibfib3 : mutable.MutableList[Long] = mutable.MutableList(1l)\n  \
    \      var fibfib4 : mutable.MutableList[Long] = mutable.MutableList(1l)\n   \
    \     var fibfib5 : mutable.MutableList[Long] = mutable.MutableList(1l)\n    \
    \    var fibfib6 : mutable.MutableList[Long] = mutable.MutableList(1l)\n     \
    \   var fibfib7 : mutable.MutableList[Long] = mutable.MutableList(1l)\n      \
    \  var fibfib8 : mutable.MutableList[Long] = mutable.MutableList(1l)\n       \
    \ var fibfib9 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib10 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib11 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib12 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib13 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib14 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib15 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib16 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib17 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib18 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib19 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib20 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib21 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib22 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib23 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib24 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib25 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib26 : mutable.MutableList[Long] = mutable.MutableList(1l)\n        var\
    \ fibfib27 : mutable.MutableList[Long] = mutable.Mutable", "        val fibfib\
    \ = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l,\
    \ 0l)\n        fibfib.put(2l, 1l)\n        fibfib(n) match {\n            case\
    \ 0 => 0l\n            case 1 => 0l\n            case 2 => 1l\n            case\
    \ _ => {\n                val fibfib2 = new mutable.HashMap[Long, Long]()\n  \
    \              fibfib2.put(0l, 0l)\n                fibfib2.put(1l, 0l)\n    \
    \            fibfib2.put(2l, 1l)\n                fibfib(n) match {\n        \
    \            case 0 => 0l\n                    case 1 => 0l\n                \
    \    case 2 => 1l\n                    case _ => {\n                        val\
    \ fibfib3 = new mutable.HashMap[Long, Long]()\n                        fibfib3.put(0l,\
    \ 0l)\n                        fibfib3.put(1l, 0l)\n                        fibfib3.put(2l,\
    \ 1l)\n                        fibfib(n) match {\n                           \
    \ case 0 => 0l\n                            case 1 => 0l\n                   \
    \         case 2 => 1l\n                            case _ => {\n            \
    \                    val fibfib4 = new mutable.HashMap[Long, Long]()\n       \
    \                         fibfib4.put(0l, 0l)\n                              \
    \  fibfib4.put(1l, 0l)\n                                fibfib4.put(2l, 1l)\n\
    \                                fibfib(n) match {\n                         \
    \           case 0 => 0l\n                                    case 1 => 0l\n \
    \                                   case 2 => 1l\n                           \
    \         case _ => {\n                                        val fibfib5 = new\
    \ mutable.HashMap[Long, Long]()\n                                        fibfib5.put(0l,\
    \ 0l)\n                                        fibfib5.put(1l, 0l)\n         \
    \                               fibfib5.put(2l, 1l)\n                        \
    \                fibfib(n) match {\n                                         \
    \   case 0 => 0l\n                                            case 1 => 0l\n \
    \                                           case 2 => 1l\n                   \
    \                         case _ => {\n                                      \
    \          val fibfib6 = new mutable.HashMap[Long, Long]()\n                 \
    \                               fibfib6.put(0l, 0l)\n                        \
    \                        fibfib6.put(1l, 0l)\n                               \
    \                 fibfib6.put(2l, 1l)\n                                      \
    \          fibfib(n) match {\n                                               \
    \     case 0 => 0l\n                                                    case 1\
    \ => 0l\n                                                    case 2 => 1l\n  \
    \                                                  case _ => {\n             \
    \                                           val fibfib7 = new mutable.HashMap[Long,\
    \ Long]()\n                                                        fibfib7.put(0l,\
    \ 0l)\n                                                        fibfib7.put(1l,\
    \ 0l)\n                                                        fibfib7.put(",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n   \
    \     else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new\
    \ mutable.MutableList[Long]()\n        fibfib.clear()\n        fibfib.append(0)\n\
    \        fibfib.append(1)\n        fibfib.append(1)\n        fibfib(n).foreach(fibfib(n)\
    \ += fibfib(n-1))\n        fibfib(n).foreach(fibfib(n) += fibfib(n-2))\n     \
    \   fibfib(n).foreach(fibfib(n) += fibfib(n-3))\n        fibfib(n)", "       \
    \ val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(0) += 1\n   \
    \     fibfibs(1) += 1\n        fibfibs(2) += 1\n        fibfibs(n) += fibfibs(n-1)\
    \ + fibfibs(n-2) + fibfibs(n-3)\n        fibfibs(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0l\n        fibfibs += 1l\n        fibfibs += 2l\n       \
    \ fibfibs += 3l\n        fibfibs += 4l\n        fibfibs += 5l\n        fibfibs\
    \ += 6l\n        fibfibs += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n\
    \        fibfibs += 10l\n        fibfibs += 11l\n        fibfibs += 12l\n    \
    \    fibfibs += 13l\n        fibfibs += 14l\n        fibfibs += 15l\n        fibfibs\
    \ += 16l\n        fibfibs += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n\
    \        fibfibs += 20l\n        fibfibs += 21l\n        fibfibs += 22l\n    \
    \    fibfibs += 23l\n        fibfibs += 24l\n        fibfibs += 25l\n        fibfibs\
    \ += 26l\n        fibfibs += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n\
    \        fibfibs += 30l\n        fibfibs += 31l\n        fibfibs += 32l\n    \
    \    fibfibs += 33l\n        fibfibs += 34l\n        fibfibs += 35l\n        fibfibs\
    \ += 36l\n        fibfibs += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n\
    \        fibfibs += 40l\n        fibfibs += 41l\n        fibfibs += 42l\n    \
    \    fibfibs += 43l\n        fibfibs += 44l\n        fibfibs += 45l\n        fibfibs\
    \ += 46l\n        fibfibs += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n\
    \        fibfibs += 50l\n        fibfibs += 51l\n        fibfibs += 52l\n    \
    \    fibfibs += 53l\n        fibfibs += 54l\n        fibfibs += 55l\n        fibfibs\
    \ += 56l\n        fibfibs += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n\
    \        fibfibs += 60l\n        fibfibs += 61l\n        fibfibs += 62l\n    \
    \    fibfibs += 63l\n        fibfibs += 64l\n        fibfibs += 65l\n        fibfibs\
    \ += 66l\n        fibfibs += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n\
    \        fibfibs += 70l\n        ", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2,\
    \ 1l)\n        fibfib(n) match {\n            case 0 => 0\n            case 1\
    \ => 0\n            case 2 => 1\n            case _ => {\n                val\
    \ fibfib1 = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n                fibfib.put(n,\
    \ fibfib1)\n                fibfib1\n            }\n        }", "        if (n\
    \ == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n        else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n        fibfib.clear()\n        fibfib(0) = 0\n\
    \        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0l\n        fibfibs += 1l\n        fibfibs += 2l\n       \
    \ fibfibs += 3l\n        fibfibs += 4l\n        fibfibs += 5l\n        fibfibs\
    \ += 6l\n        fibfibs += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n\
    \        fibfibs += 10l\n        fibfibs += 11l\n        fibfibs += 12l\n    \
    \    fibfibs += 13l\n        fibfibs += 14l\n        fibfibs += 15l\n        fibfibs\
    \ += 16l\n        fibfibs += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n\
    \        fibfibs += 20l\n        fibfibs += 21l\n        fibfibs += 22l\n    \
    \    fibfibs += 23l\n        fibfibs += 24l\n        fibfibs += 25l\n        fibfibs\
    \ += 26l\n        fibfibs += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n\
    \        fibfibs += 30l\n        fibfibs += 31l\n        fibfibs += 32l\n    \
    \    fibfibs += 33l\n        fibfibs += 34l\n        fibfibs += 35l\n        fibfibs\
    \ += 36l\n        fibfibs += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n\
    \        fibfibs += 40l\n        fibfibs += 41l\n        fibfibs += 42l\n    \
    \    fibfibs += 43l\n        fibfibs += 44l\n        fibfibs += 45l\n        fibfibs\
    \ += 46l\n        fibfibs += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n\
    \        fibfibs += 50l\n        fibfibs += 51l\n        fibfibs += 52l\n    \
    \    fibfibs += 53l\n        fibfibs += 54l\n        fibfibs += 55l\n        fibfibs\
    \ += 56l\n        fibfibs += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n\
    \        fibfibs += 60l\n        fibfibs += 61l\n        fibfibs += 62l\n    \
    \    fibfibs += 63l\n        fibfibs += 64l\n        fibfibs += 65l\n        fibfibs\
    \ += 66l\n        fibfibs += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n\
    \        fibfibs += 70l\n        ", "        if (n <= 0) 0\n        else if (n\
    \ <= 1) 1\n        else if (n <= 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.HashMap[Long, Long]()\n  \
    \      fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n)._1", "        var fib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        var fibfib : mutable.MutableList[Long] = mutable.MutableList(0)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n).asInstanceOf[Long]",
  "        val fibfib : mutable.MutableList[Long] = mutable.MutableList.empty\n  \
    \      fibfib.clear()\n        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2)\
    \ = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib :\
    \ mutable.MutableList[Long] = mutable.MutableList(1l)\n        fibfib.add(0l)\n\
    \        fibfib.add(0l)\n        fibfib.add(1l)\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n   \
    \     fibfibs.update(0, 0l)\n        fibfibs.update(1, 1l)\n        fibfibs.update(2,\
    \ 2l)\n        fibfibs.update(n, n)\n        fibfibs.update(n-1, fibfibs.update(n-2,\
    \ fibfibs.update(n-3, fibfibs.update(n-4, fibfibs.update(n-5, fibfibs.update(n-6,\
    \ fibfibs.update(n-7, fibfibs.update(n-8, fibfibs.update(n-9, fibfibs.update(n-10,\
    \ fibfibs.update(n-11, fibfibs.update(n-12, fibfibs.update(n-13, fibfibs.update(n-14,\
    \ fibfibs.update(n-15, fibfibs.update(n-16, fibfibs.update(n-17, fibfibs.update(n-18,\
    \ fibfibs.update(n-19, fibfibs.update(n-20, fibfibs.update(n-21, fibfibs.update(n-22,\
    \ fibfibs.update(n-23, fibfibs.update(n-24, fibfibs.update(n-25, fibfibs.update(n-26,\
    \ fibfibs.update(n-27, fibfibs.update(n-28, fibfibs.update(n-29, fibfibs.update(n-30,\
    \ fibfibs.update(n-31, fibfibs.update(n-32, fibfibs.update(n-33, fibfibs.update(n-34,\
    \ fibfibs.update(n-35, fibfibs.update(n-36, fibfibs.update(n-37, fibfibs.update(n-38,\
    \ fibfibs.update(n-39, fibfibs.update(n-40, fibfibs.update(n-41, fibfibs.update(n-42,\
    \ fibfibs.update(n-43, fibfibs.update(n-44, fibfibs.update(n-45, fibfibs.update(n-46,\
    \ fibfibs.update(n-47, fibfibs.update(n-48, fibfibs.update(n-49, fibfibs.update(n-50,\
    \ fibfibs.update(n-51, fibfibs.update(n-52, fibfibs.update(n-53, fibfibs.update(n-54,\
    \ fibfibs.update(n-55, fibfibs.update(n-56, fibfibs.update(n-57, fibfibs.update(n-58,\
    \ fibfibs.update(n-59, fibfibs.update(n-60, fibfibs.update(n-61, fibfibs.update(n-62,\
    \ fibfibs.update(n-63, fibfibs.update(n-64, fibfibs.update(n-65, fibfibs.update(n",
  "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0l\n\
    \        fibfibs += 1l\n        fibfibs += 2l\n        fibfibs += 3l\n       \
    \ fibfibs += 4l\n        fibfibs += 5l\n        fibfibs += 6l\n        fibfibs\
    \ += 7l\n        fibfibs += 8l\n        fibfibs += 9l\n        fibfibs += 10l\n\
    \        fibfibs += 11l\n        fibfibs += 12l\n        fibfibs += 13l\n    \
    \    fibfibs += 14l\n        fibfibs += 15l\n        fibfibs += 16l\n        fibfibs\
    \ += 17l\n        fibfibs += 18l\n        fibfibs += 19l\n        fibfibs += 20l\n\
    \        fibfibs += 21l\n        fibfibs += 22l\n        fibfibs += 23l\n    \
    \    fibfibs += 24l\n        fibfibs += 25l\n        fibfibs += 26l\n        fibfibs\
    \ += 27l\n        fibfibs += 28l\n        fibfibs += 29l\n        fibfibs += 30l\n\
    \        fibfibs += 31l\n        fibfibs += 32l\n        fibfibs += 33l\n    \
    \    fibfibs += 34l\n        fibfibs += 35l\n        fibfibs += 36l\n        fibfibs\
    \ += 37l\n        fibfibs += 38l\n        fibfibs += 39l\n        fibfibs += 40l\n\
    \        fibfibs += 41l\n        fibfibs += 42l\n        fibfibs += 43l\n    \
    \    fibfibs += 44l\n        fibfibs += 45l\n        fibfibs += 46l\n        fibfibs\
    \ += 47l\n        fibfibs += 48l\n        fibfibs += 49l\n        fibfibs += 50l\n\
    \        fibfibs += 51l\n        fibfibs += 52l\n        fibfibs += 53l\n    \
    \    fibfibs += 54l\n        fibfibs += 55l\n        fibfibs += 56l\n        fibfibs\
    \ += 57l\n        fibfibs += 58l\n        fibfibs += 59l\n        fibfibs += 60l\n\
    \        fibfibs += 61l\n        fibfibs += 62l\n        fibfibs += 63l\n    \
    \    fibfibs += 64l\n        fibfibs += 65l\n        fibfibs += 66l\n        fibfibs\
    \ += 67l\n        fibfibs += 68l\n        fibfibs += 69l\n        fibfibs += 70l\n\
    \        ", "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfibs = mutable.ArrayBuffer.empty[Long]\n        fibfibs += 0\n     \
    \   fibfibs += 0\n        fibfibs += 1\n        fibfibs += 2\n        fibfibs\
    \ += 3\n        fibfibs += 4\n        fibfibs += 5\n        fibfibs += 6\n   \
    \     fibfibs += 7\n        fibfibs += 8\n        fibfibs += 9\n        fibfibs\
    \ += 10\n        fibfibs += 11\n        fibfibs += 12\n        fibfibs += 13\n\
    \        fibfibs += 14\n        fibfibs += 15\n        fibfibs += 16\n       \
    \ fibfibs += 17\n        fibfibs += 18\n        fibfibs += 19\n        fibfibs\
    \ += 20\n        fibfibs += 21\n        fibfibs += 22\n        fibfibs += 23\n\
    \        fibfibs += 24\n        fibfibs += 25\n        fibfibs += 26\n       \
    \ fibfibs += 27\n        fibfibs += 28\n        fibfibs += 29\n        fibfibs\
    \ += 30\n        fibfibs += 31\n        fibfibs += 32\n        fibfibs += 33\n\
    \        fibfibs += 34\n        fibfibs += 35\n        fibfibs += 36\n       \
    \ fibfibs += 37\n        fibfibs += 38\n        fibfibs += 39\n        fibfibs\
    \ += 40\n        fibfibs += 41\n        fibfibs += 42\n        fibfibs += 43\n\
    \        fibfibs += 44\n        fibfibs += 45\n        fibfibs += 46\n       \
    \ fibfibs += 47\n        fibfibs += 48\n        fibfibs += 49\n        fibfibs\
    \ += 50\n        fibfibs += 51\n        fibfibs += 52\n        fibfibs += 53\n\
    \        fibfibs += 54\n        fibfibs += 55\n        fibfibs += 56\n       \
    \ fibfibs += 57\n        fibfibs += 58\n        fibfibs += 59\n        fibfibs\
    \ += 60\n        fibfibs += 61\n        fibfibs += 62\n        fibfibs += 63\n\
    \        fibfibs += 64\n        fibfibs += 65\n        fibfibs += 66\n       \
    \ fibfibs += 67\n        fibfibs += 68\n        fibfibs += 69\n        fibfibs\
    \ += 70\n        fibfibs += 71\n        fibfibs += 72\n        fibfibs += 73\n\
    \        fibfibs += 74\n        fibfibs += 75\n        fibfibs += 76\n       \
    \ fibfibs += 77\n        fibfibs += 78\n        fibfibs += 79\n        fibfibs\
    \ += 80\n        fibfibs += 81\n", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib.get(n)", "        val fibfib = new mutable.MutableList[Long]()\n \
    \       fibfib.clear()\n        fibfib.add(0)\n        fibfib.add(1)\n       \
    \ fibfib(n) match {\n            case 0 => 0\n            case 1 => 1\n      \
    \      case _ => {\n                fibfib(n-1) match {\n                    case\
    \ 0 => 1\n                    case 1 => fibfib(n-2) + fibfib(n-3)\n          \
    \          case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n               \
    \ }\n            }\n        }", "        var fib : mutable.MutableList[Long] =\
    \ mutable.MutableList(0)\n        var i : Long = 1\n        while (i <= n) {\n\
    \            fib.add(i)\n            i = fib(i) + fib(i-1) + fib(i-2)\n      \
    \  }\n        fib.last", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case _ => {\n                val a = fibfib(n-1)\n\
    \                val b = fibfib(n-2)\n                val c = fibfib(n-3)\n  \
    \              fibfib.append(a+b+c)\n            }\n        }", "        val fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList(1l)\n        fibfib(0) = 0\n\
    \        fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2,\
    \ 1l)\n        fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n      \
    \  fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n     \
    \   fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) match {\n            case 0 => 0l\n            case 1 => 0l\n\
    \            case 2 => 1l\n            case _ => {\n                val fibfib2\
    \ = new mutable.HashMap[Long, Long]()\n                fibfib2.put(0, 0l)\n  \
    \              fibfib2.put(1, 0l)\n                fibfib2.put(2, 1l)\n      \
    \          fibfib2.put(n-1, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n       \
    \         fibfib2.put(n-2, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        \
    \        fibfib2.put(n-3, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n         \
    \       fibfib2.get(n) match {\n                    case 0 => 0l\n           \
    \         case 1 => 0l\n                    case 2 => 1l\n                   \
    \ case _ => fibfib2.get(n)\n                }\n            }\n        }", "  \
    \      val fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0)\
    \ = 0\n        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                val fibfib1 = fibfib(n-1)\n         \
    \       val fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n\
    \                fibfib(n) = fibfib1 + fibfib2 + fibfib3\n            }\n    \
    \    }", "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n\
    \ == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        var\
    \ fib : mutable.MutableList[Long] = mutable.MutableList.empty\n        var fibfib\
    \ : mutable.MutableList[Long] = mutable.MutableList.empty\n        fib.append(0)\n\
    \        fibfib.append(0)\n        fibfib(n).foreach(x => fib.append(x))\n   \
    \     fibfib(n).foreach(x => fibfib.append(x))\n        fibfib(n).foreach(x =>\
    \ fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(x\
    \ => fibfib(n).append(x))\n        fibfib(n).foreach(x => fibfib(n).append(x))\n\
    \        fibfib(n).foreach(x => fibfib(n).append(x))\n        fibfib(n).foreach(",
  "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n     \
    \   fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) match {\n        \
    \    case 0 => 0\n            case 1 => 1\n            case 2 => 2\n         \
    \   case _ => {\n                val fibfib1 = fibfib(n-1)\n                val\
    \ fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n         \
    \       fibfib(n) = fibfib1 + fibfib2 + fibfib3\n            }\n        }", " \
    \       val fibfibList = mutable.ListBuffer[Long]()\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fibfibList += 0l\n        fibfibList += 0l\n\
    \        fibfibList += 0l\n        fib", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n)", "        val\
    \ fibfibArray = mutable.ArrayBuffer.empty[Long]\n        fibfibArray(0) = 0\n\
    \        fibfibArray(1) = 0\n        fibfibArray(2) = 1\n        fibfibArray(n)\
    \ = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n        fibfibArray(n)",
  "        if (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n\
    \        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfibList\
    \ = mutable.ListBuffer[Long]()\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n  \
    \      fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n   \
    \     fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n    \
    \    fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n     \
    \   fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n      \
    \  fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n       \
    \ fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList\
    \ += 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList +=\
    \ 0\n        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n\
    \        fibfibList += 0\n        fibfibList += 0\n        fibfibList += 0\n \
    \       fibfibList += 0\n        ", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfibArray = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibArray(0) = 0\n        fibfibArray(1) = 0\n        fibfibArray(2)\
    \ = 1\n        fibfibArray(n) = fibfibArray(n-1) + fibfibArray(n-2) + fibfibArray(n-3)\n\
    \        fibfibArray(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) match {\n            case 0 => 0l\n            case 1 => 0l\n\
    \            case 2 => 1l\n            case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        val fibfib = new mutable.HashMap[Long, Long]()\n       \
    \ fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n  \
    \      fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n        fibfib(n)",
  "        val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib(n).asInstanceOf[Long]",
  "        val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        }", " \
    \       val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l,\
    \ 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n  \
    \      fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) match {\n\
    \            case 0 => 0\n            case 1 => 0\n            case 2 => 1\n \
    \           case _ => {\n                fibfib(n-1) match {\n               \
    \     case 0 => 0\n                    case 1 => 0\n                    case 2\
    \ => 1\n                    case _ => {\n                        fibfib(n-2) match\
    \ {\n                            case 0 => 0\n                            case\
    \ 1 => 0\n                            case 2 => 1\n                          \
    \  case _ => {\n                                fibfib(n-3) match {\n        \
    \                            case 0 => 0\n                                   \
    \ case 1 => 0\n                                    case 2 => 1\n             \
    \                       case _ => {\n                                        fibfib(n-4)\
    \ match {\n                                            case 0 => 0\n         \
    \                                   case 1 => 0\n                            \
    \                case 2 => 1\n                                            case\
    \ _ => {\n                                                fibfib(n-5) match {\n\
    \                                                    case 0 => 0\n           \
    \                                         case 1 => 0\n                      \
    \                              case 2 => 1\n                                 \
    \                   case _ => {\n                                            \
    \            fibfib(n-6) match {\n                                           \
    \                 case 0 => 0\n                                              \
    \              case 1 => 0\n                                                 \
    \           case 2 => 1\n                                                    \
    \        case _ => {\n                                                       \
    \         fibfib(n-7) match {\n                                              \
    \                      case 0 => 0\n                                         \
    \                           case 1 => 0\n                                    \
    \                                case 2 => 1\n                               \
    \                                     case _ => {\n                          \
    \                                              fibfib(n-8) match {\n         \
    \                                                                   case 0 =>\
    \ 0\n                                                                        \
    \    case 1 => 0\n                                                           \
    \                 case 2 => 1\n                                              \
    \                              case _ => {\n                                 \
    \                                               fibfib(n-9) match {\n        \
    \                                                                            case\
    \ 0 => 0\n                                                                   \
    \                 case 1 => 0\n                                              \
    \                                      case 2 => 1\n                         \
    \                                                           case _ => {\n    \
    \                                                                            \
    \        fibfib(n-10) match {\n                                              \
    \                                              case 0 => 0\n                 \
    \                                                                           case\
    \ 1 => 0\n                                                                   \
    \                         case 2 => 1\n                                      \
    \                                                      case _ => {\n         \
    \                                                                            \
    \           fibfib(n-11) match {\n                                           \
    \                                                         case 0 => 0\n      \
    \                                                                            \
    \                  case 1 => 0\n                                             \
    \                                                       case 2 => 1\n        \
    \                                                                            \
    \                case _ => {\n                                               \
    \                                                         fibfib(n-12) match {\n\
    \                                                                            \
    \                                case 0 => 0\n                               \
    \                                                                            \
    \ case 1 => 0\n                                                              \
    \                                              case 2 => 1\n                 \
    \                                                                            \
    \               case _ => {\n                                                \
    \                                                                fibfib(n-13)\
    \ match {\n                                                                  \
    \                                                  case 0 => 0\n             \
    \                                                                            \
    \                           case 1 => 0\n                                    \
    \                                                                            \
    \    case 2 => 1\n                                                           \
    \                                                         case _ => {\n      \
    \                                                                            \
    \                                      fibfib(n-14) match {\n                \
    \                                                                            \
    \                                case 0 ", "        if (n == 0) 0\n        else\
    \ if (n == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n\
    \        fibfibArray.update(0, 0l)\n        fibfibArray.update(1, 1l)\n      \
    \  fibfibArray.update(2, 2l)\n        fibfibArray.update(n, (fibfibArray(n-1)\
    \ + fibfibArray(n-2) + fibfibArray(n-3)))\n        fibfibArray(n)", "        if\
    \ (n == 0) 0\n        else if (n == 1) 1\n        else if (n == 2) 1\n       \
    \ else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib = new mutable.Array[Long](n)\n\
    \        fibfib(0) = 0\n        fibfib(1) = 0\n        fibfib(2) = 1\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfib = new mutable.MutableList[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) match {\n   \
    \         case 0 => 0\n            case 1 => 0\n            case 2 => 1\n    \
    \        case _ => {\n                val fibfib1 = fibfib(n-1)\n            \
    \    val fibfib2 = fibfib(n-2)\n                val fibfib3 = fibfib(n-3)\n  \
    \              fibfib.add(fibfib1 + fibfib2 + fibfib3)\n            }\n      \
    \  }", "        val fibfibs = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibs(0)\
    \ = 0l\n        fibfibs(1) = 1l\n        fibfibs(2) = 2l\n        fibfibs(n) =\
    \ fibfibs(n-1) + fibfibs(n-2) + fibfibs(n-3) \n        fibfibs(n)", "        val\
    \ fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n   \
    \     fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n, (fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "        val fibfib =\
    \ new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1,\
    \ 0l)\n        fibfib.put(2, 1l)\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        val fibfibs = mutable.ArrayBuffer.empty[Long]\n\
    \        fibfibs += 0\n        fibfibs += 0\n        fibfibs += 1\n        fibfibs\
    \ += 2\n        fibfibs += 3\n        fibfibs += fibfibs(n-1) + fibfibs(n-2) +\
    \ fibfibs(n-3)\n        fibfibs(n)", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        fibfib(0) = 0\n        fibfib(1) = 0\n  \
    \      fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n\
    \        fibfib.put(0, 0l)\n        fibfib.put(1, 0l)\n        fibfib.put(2, 1l)\n\
    \        fibfib(n) {\n            fibfib.put(n, fibfib(n-1) + fibfib(n-2) + fibfib(n-3))\n\
    \        }\n        fibfib(n)._1", "        var fibfib = 0\n        var fibfib1\
    \ = 1\n        var fibfib2 = 1\n        var fibfib3 = 1\n        var fibfib4 =\
    \ 2\n        var fibfib5 = 3\n        var fibfib6 = 5\n        var fibfib7 = 8\n\
    \        var fibfib8 = 10\n        var fibfib9 = 13\n        var fibfib10 = 20\n\
    \        var fibfib11 = 30\n        var fibfib12 = 35\n        var fibfib13 =\
    \ 50\n        var fibfib14 = 70\n        var fibfib15 = 100\n        var fibfib16\
    \ = 140\n        var fibfib17 = 180\n        var fibfib18 = 270\n        var fibfib19\
    \ = 300\n        var fibfib20 = 400\n        var fibfib21 = 350\n        var fibfib22\
    \ = 500\n        var fibfib23 = 600\n        var fibfib24 = 650\n        var fibfib25\
    \ = 700\n        var fibfib26 = 750\n        var fibfib27 = 800\n        var fibfib28\
    \ = 850\n        var fibfib29 = 900\n        var fibfib30 = 1000\n        var\
    \ fibfib31 = 1100\n        var fibfib32 = 1205\n        var fibfib33 = 1320\n\
    \        var fibfib34 = 1420\n        var fibfib35 = 1530\n        var fibfib36\
    \ = 1640\n        var fibfib37 = 1750\n        var fibfib38 = 1860\n        var\
    \ fibfib39 = 1960\n        var fibfib40 = 2060\n        var fibfib41 = 2160\n\
    \        var fibfib42 = 2250\n        var fibfib43 = 2350\n        var fibfib44\
    \ = 2450\n        var fibfib45 = 2550\n        var fibfib46 = 2650\n        var\
    \ fibfib47 = 2750\n        var fibfib48 = 2850\n        var fibfib49 = 2950\n\
    \        var fibfib50 = 3050\n        var fibfib51 = 3150\n        var fibfib52\
    \ = 3250\n        var fibfib53 = 3350\n        var fibfib54 = 3450\n        var\
    \ fibfib55 = 3550\n        var fibfib56 = 3650\n        var fibfib57 = 3750\n\
    \        var fibfib58 = 3850\n        var fibfib59 = 3950\n        var fibfib60\
    \ = 4050\n        var fibfib61 = 4150\n        var fibfib62 = 4260\n        var\
    \ fibfib63 = 4360\n        var fibfib64 = 4460\n        var fibfib65 = 4560\n\
    \        var fibfib66 = 4660\n        var fibfib67 = 4760\n        var fibfib68\
    \ = 4860\n        var fibfib69 = 4960\n        var fibfib70 = 5060\n        var\
    \ fibfib71 = ", "        if (n == 0) 0\n        else if (n == 1) 1\n        else\
    \ if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    \
    \    val fibfib = new mutable.HashMap[Long, Long]()\n        fibfib.put(0l, 0l)\n\
    \        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n        fibfib.put(n,\
    \ (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)", "      \
    \  val fibfib : mutable.MutableList[Long] = mutable.MutableList(1l)\n        fibfib.add(0l)\n\
    \        fibfib.add(0l)\n        fibfib.add(1l)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        var fibfib = 0\n \
    \       var fibfib1 = 1\n        var fibfib2 = 1\n        var fibfib3 = 1\n  \
    \      var fibfib4 = 1\n        var fibfib5 = 1\n        var fibfib6 = 1\n   \
    \     var fibfib7 = 1\n        var fibfib8 = 1\n        var fibfib9 = 1\n    \
    \    var fibfib10 = 1\n        var fibfib11 = 1\n        var fibfib12 = 1\n  \
    \      var fibfib13 = 1\n        var fibfib14 = 1\n        var fibfib15 = 1\n\
    \        var fibfib16 = 1\n        var fibfib17 = 1\n        var fibfib18 = 1\n\
    \        var fibfib19 = 1\n        var fibfib20 = 1\n        var fibfib21 = 1\n\
    \        var fibfib22 = 1\n        var fibfib23 = 1\n        var fibfib24 = 1\n\
    \        var fibfib25 = 1\n        var fibfib26 = 1\n        var fibfib27 = 1\n\
    \        var fibfib28 = 1\n        var fibfib29 = 1\n        var fibfib30 = 1\n\
    \        var fibfib31 = 1\n        var fibfib32 = 1\n        var fibfib33 = 1\n\
    \        var fibfib34 = 1\n        var fibfib35 = 1\n        var fibfib36 = 1\n\
    \        var fibfib37 = 1\n        var fibfib38 = 1\n        var fibfib39 = 1\n\
    \        var fibfib40 = 1\n        var fibfib41 = 1\n        var fibfib42 = 1\n\
    \        var fibfib43 = 1\n        var fibfib44 = 1\n        var fibfib45 = 1\n\
    \        var fibfib46 = 1\n        var fibfib47 = 1\n        var fibfib48 = 1\n\
    \        var fibfib49 = 1\n        var fibfib50 = 1\n        var fibfib51 = 1\n\
    \        var fibfib52 = 1\n        var fibfib53 = 1\n        var fibfib54 = 1\n\
    \        var fibfib55 = 1\n        var fibfib56 = 1\n        var fibfib57 = 1\n\
    \        var fibfib58 = 1\n        var fibfib59 = 1\n        var fibfib60 = 1\n\
    \        var fibfib61 = 1\n        var fibfib62 = 1\n        var fibfib63 = 1\n\
    \        var fibfib64 = 1\n        var fibfib65 = 1\n        var fibfib66 = 1\n\
    \        var fibfib67 = 1\n        var fibfib68 = 1\n        var fibfib69 = 1\n\
    \        var fibfib70 = 1\n        var fibfib71 = 1\n        var fibfib72 = 1\n\
    \        var fibfib73 = 1\n        var fibfib74 = 1\n        var fibfib75 = 1\n\
    \        var fibfib76 = 1\n        var fibfib77 = 1\n        var fibfib78 = 1\n\
    \        var fibfib79 = 1\n        var fibfib80 = 1\n        var fibfib81 = 1\n\
    \        var fibfib", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.add(0)\n        fibfib.add(1)\n        fibfib.add(2)\n       \
    \ fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", " \
    \       val fibfibArray = mutable.ArrayBuffer(0l, 1l, 2l)\n        fibfibArray.update(0,\
    \ 0l)\n        fibfibArray.update(1, 1l)\n        fibfibArray.update(2, 2l)\n\
    \        fibfibArray.update(3, 3l)\n        fibfibArray.update(4, fibfibArray.get(0l)\
    \ + fibfibArray.get(1l) + fibfibArray.get(2l))\n        fibfibArray.update(5,\
    \ fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l))\n\
    \        fibfibArray.update(6, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l))\n        fibfibArray.update(7,\
    \ fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l)\
    \ + fibfibArray.get(4l) + fibfibArray.get(5l))\n        fibfibArray.update(8,\
    \ fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l)\
    \ + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l))\n       \
    \ fibfibArray.update(9, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l)\
    \ + fibfibArray.get(7l))\n        fibfibArray.update(10, fibfibArray.get(0l) +\
    \ fibfibArray.get(1l) + fibfibArray.get(2l) + fibfibArray.get(3l) + fibfibArray.get(4l)\
    \ + fibfibArray.get(5l) + fibfibArray.get(6l) + fibfibArray.get(7l) + fibfibArray.get(8l))\n\
    \        fibfibArray.update(11, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4l) + fibfibArray.get(5l) + fibfibArray.get(6l)\
    \ + fibfibArray.get(7l) + fibfibArray.get(8l) + fibfibArray.get(9l))\n       \
    \ fibfibArray.update(12, fibfibArray.get(0l) + fibfibArray.get(1l) + fibfibArray.get(2l)\
    \ + fibfibArray.get(3l) + fibfibArray.get(4", "        val fibfib = new mutable.MutableList[Long]()\n\
    \        fibfib.append(0)\n        fibfib.append(0)\n        fibfib.append(1)\n\
    \        fibfib(n) match {\n            case 0 => 0\n            case 1 => 0\n\
    \            case 2 => 1\n            case n => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \        }", "        if (n <= 0) 0\n        else if (n <= 1) 1\n        else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "        val fibfib : mutable.MutableList[Long]\
    \ = mutable.MutableList(0)\n        fibfib.add(0)\n        fibfib.add(1)\n   \
    \     fibfib(n) match {\n            case 0 => 0\n            case 1 => 1\n  \
    \          case _ => fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n        }", "  \
    \      val fibfib = new mutable.MutableList[Long]()\n        fibfib.append(0)\n\
    \        fibfib.append(0)\n        fibfib.append(1)\n        fibfib(n) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n        fibfib(n)", "        val fibfib = new mutable.HashMap[Long,\
    \ Long]()\n        fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l,\
    \ 1l)\n        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n    \
    \    fibfib(n)", "        val fibfib = new mutable.HashMap[Long, Long]()\n   \
    \     fibfib.put(0l, 0l)\n        fibfib.put(1l, 0l)\n        fibfib.put(2l, 1l)\n\
    \        fibfib.put(n, (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n        fibfib.get(n)",
  "        val fibfib = new mutable.Array[Long](n)\n        fibfib(0) = 0\n      \
    \  fibfib(1) = 0\n        fibfib(2) = 1\n        fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        fibfib(n)", "        if (n == 0) 0\n        else if (n\
    \ == 1) 1\n        else if (n == 2) 1\n        else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)", "        val fibfib = new mutable.HashSet[Long]()\n        fibfib.add(0)\n\
    \        fibfib.add(1)\n        fibfib.add(2)\n        fibfib(n) {\n         \
    \   fibfib.add(_ + _ + _)\n        }\n        fibfib(n)._1", "        val fibfib\
    \ = new mutable.HashMap[Long, Long]()\n        fibfib.put(0, 0l)\n        fibfib.put(1,\
    \ 0l)\n        fibfib.put(2, 1l)\n        fibfib.put(n, fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3))\n        fibfib.get(n)"]
stop_tokens:
- "\n    }\n"

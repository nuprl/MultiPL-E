language: scala
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (currentPrefix.length > 0)\
    \ {\n                prefixes += currentPrefix\n            }\n            currentPrefix\
    \ = currentPrefix + c\n        }\n        prefixes += currentPrefix\n        prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12hddp4x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").reverse.foreach(prefix\
    \ => {\n            prefixes += prefix\n            prefixes += prefix + \"a\"\
    \n            prefixes += prefix + \"ab\"\n            prefixes += prefix + \"\
    abc\"\n        })\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc5in6fwf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0) {\n                currentPrefix = c\n                currentLength =\
    \ 1\n            } else {\n                if (c == currentPrefix) {\n       \
    \             currentLength += 1\n                } else {\n                 \
    \   prefixes += currentPrefix\n                    currentPrefix = c\n       \
    \             currentLength = 1\n                }\n            }\n        }\n\
    \        prefixes += currentPrefix\n        prefixes\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt1b4nmf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdt1b4nmf.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpdt1b4nmf.scala:16:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \         \e[33mif\e[0m (c == currentPrefix) {\n\e[31m\e[31m   |\e[0m        \
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpdt1b4nmf.scala:20:36 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    currentPrefix = c\n\e[31m\e[31m   |\e[0m         \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          Found:    (c : Char)\n\e[31m   |\e[0m                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805310
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (i <- 0 until string.length) {\n            if (string.charAt(i)\
    \ == string.charAt(i-1)) {\n                currentPrefix = currentPrefix + string.charAt(i)\n\
    \            } else {\n                prefixes += currentPrefix\n           \
    \     currentPrefix = string.charAt(i)\n            }\n        }\n        prefixes\
    \ += currentPrefix\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq93vyz02.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpq93vyz02.scala:15:45 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                currentPrefix = string.charAt(i)\n\e\
    [31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805308
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        string.foldLeft(prefixes)((prefixes,\
    \ c) => {\n            val prefix = c.takeWhile(_ != 'a')\n            prefixes\
    \ += prefix\n            prefixes\n        })\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_lvgp4ah.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_lvgp4ah.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mprefix\e[0m = c.takeWhile(_\
    \ != \e[31m'a'\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         value takeWhile is not a member of\
    \ Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_lvgp4ah.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            prefixes += prefix\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of\
    \ List[String] - did you mean prefixes.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_ktpi0a.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (c <- string) {\n            if (c.isLetter) {\n               \
    \ currentPrefix = currentPrefix + c\n            } else {\n                prefixes\
    \ += currentPrefix\n                currentPrefix = \"\"\n            }\n    \
    \    }\n        prefixes += currentPrefix\n        prefixes.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp475xk8z8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").foreach(prefix\
    \ => prefixes += prefix)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_dfzt_lk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = 0\n        for(i <- 0 until string.length) {\n            if(string.charAt(i)\
    \ == string.charAt(i-1)) {\n                currentLength += 1\n            }\
    \ else {\n                currentLength = 1\n                currentPrefix = string.substring(0,i)\n\
    \                prefixes = currentPrefix :: prefixes\n            }\n       \
    \ }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\
    \tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\
    \tat Problem$.allPrefixes$$anonfun$1(tmp_2_8rbnl.scala:12)\n\tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\
    \tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.allPrefixes(tmp_2_8rbnl.scala:19)\n\
    \tat Problem$.main(tmp_2_8rbnl.scala:24)\n\tat Problem.main(tmp_2_8rbnl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805311
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for(i <- 0 until string.length){\n            currentPrefix =\
    \ currentPrefix + string.charAt(i)\n            prefixes += currentPrefix\n  \
    \      }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo8e7iyyz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for(i <- 0 until string.length){\n            currentPrefix =\
    \ currentPrefix + string.charAt(i)\n            prefixes += currentPrefix\n  \
    \      }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo8e7iyyz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (c.isLetter) {\n         \
    \       currentPrefix = currentPrefix + c\n            } else {\n            \
    \    prefixes += currentPrefix\n                currentPrefix = \"\"\n       \
    \     }\n        }\n        prefixes += currentPrefix\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy7j0m8bc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").foreach(prefix\
    \ => prefixes += prefix)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_dfzt_lk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(prefix =>\
    \ {\n            val newPrefixes = allPrefixes(string.drop(prefix.length))\n \
    \           prefixes ++= newPrefixes\n        })\n        prefixes.toList\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpztkb40h4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpztkb40h4.scala:10:61 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mnewPrefixes\e[0m = allPrefixes(string.drop(prefix.length))\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    value length is not a\
    \ member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659805308
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavb4mb0s.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentLength =\
    \ 0\n        for(i <- 0 until string.length){\n            currentLength = currentLength\
    \ + string(i)\n            prefixes += string.substring(0,i)\n        }\n    \
    \    prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6nm_krwk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current.length != 0) {\n            prefixes += current.substring(0,\
    \ current.length - 1)\n            current = current.substring(current.length\
    \ - 1)\n        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp69qpartc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current.length != 0) {\n            prefixes += current.substring(0,\
    \ current.length - 1)\n            current = current.substring(current.length\
    \ - 1)\n        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavsdt69d.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zz4mk4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            prefixes += string.substring(0, i)\n\
    \            i += 1\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsktkhkz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (currentPrefix.length < c.length)\
    \ {\n                currentPrefix = c\n            }\n            prefixes +=\
    \ currentPrefix\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0ev01e3j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp0ev01e3j.scala:11:41 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (currentPrefix.length < c.length)\
    \ {\n\e[31m\e[31m   |\e[0m                                       ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                    value length is not a member\
    \ of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0ev01e3j.scala:12:32\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m                currentPrefix\
    \ = c\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhha4fzd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0,currentLength)\n    \
    \        prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm9_76yeg.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").foreach(prefix\
    \ => {\n            prefixes += prefix\n        })\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgfpqj92m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current.nonEmpty) {\n            prefixes += current\n       \
    \     current = current.dropRight(1)\n        }\n        prefixes\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp__eeyspa.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength -= 1\n        }\n  \
    \      prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsaezxzo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.takeWhile(_ != '\\\
    0').foreach(prefixes += _)\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpdm_2kl06.scala:9:31 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        string.takeWhile(_ != \e[31m'\\0'\e[0m).foreach(prefixes\
    \ += _)\n\e[31m\e[31m  |\e[0m                               ^\e[0m\n\e[31m  |\e\
    [0m                 octal escape literals are unsupported: use \\u0000 instead\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdm_2kl06.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == currentPrefix.length) {\n                prefixes ::= currentPrefix\n   \
    \             currentPrefix = \"\"\n                currentLength = 0\n      \
    \      }\n            currentLength += 1\n            currentPrefix += c\n   \
    \     }\n        prefixes ::= currentPrefix\n        return prefixes\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdtmt8yjo.scala:24)\n\tat Problem.main(tmpdtmt8yjo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805318
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var current = string\n        while (current\
    \ != \"\") {\n            prefixes = prefixes ::: List(current)\n            current\
    \ = current.substring(0,current.length-1)\n        }\n        prefixes\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuaovsbpa.scala:18)\n\tat Problem.main(tmpuaovsbpa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        for\
    \ (c <- string) {\n            if (currentPrefix.length == 0) {\n            \
    \    currentPrefix = c\n            } else {\n                if (currentPrefix.length\
    \ < c.length) {\n                    prefixes = prefixes :+ currentPrefix\n  \
    \                  currentPrefix = c\n                } else {\n             \
    \       prefixes = prefixes :+ currentPrefix + c\n                    currentPrefix\
    \ = \"\"\n                }\n            }\n        }\n        prefixes = prefixes\
    \ :+ currentPrefix\n        return prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmmc9qsb7.scala:12:32\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m                currentPrefix\
    \ = c\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpmmc9qsb7.scala:14:45 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                \e[33mif\e[0m (currentPrefix.length <\
    \ c.length) {\n\e[31m\e[31m   |\e[0m                                         \
    \  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                                    value length\
    \ is not a member of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmmc9qsb7.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m                    currentPrefix\
    \ = c\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                    Found:    (c : Char)\n\e[31m   |\e\
    [0m                                    Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            prefixes += string.substring(0, i)\n\
    \            i += 1\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsktkhkz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for(i <- 0 until string.length) {\n \
    \           currentLength = string.charAt(i).toString.length\n            currentPrefix\
    \ = string.substring(0, i)\n            prefixes += currentPrefix\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6mao2aep.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = string.length\n        while (currentLength > 0) {\n       \
    \     currentPrefix = string.substring(0, currentLength)\n            prefixes\
    \ = prefixes :+ currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbrvillhn.scala:20)\n\tat Problem.main(tmpbrvillhn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhha4fzd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805312
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = string.length\n        while (currentLength > 0) {\n       \
    \     currentPrefix = string.substring(0, currentLength)\n            prefixes\
    \ ::= currentPrefix\n            currentLength = currentLength - 1\n        }\n\
    \        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zz4mk4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength -= 1\n        }\n  \
    \      prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsaezxzo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0) {\n                currentPrefix = c\n                currentLength =\
    \ 1\n            } else {\n                if (c == currentPrefix) {\n       \
    \             currentLength += 1\n                } else {\n                 \
    \   prefixes += currentPrefix\n                    currentPrefix = c\n       \
    \             currentLength = 1\n                }\n            }\n        }\n\
    \        prefixes += currentPrefix\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpym4gfrkr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpym4gfrkr.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpym4gfrkr.scala:16:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \         \e[33mif\e[0m (c == currentPrefix) {\n\e[31m\e[31m   |\e[0m        \
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpym4gfrkr.scala:20:36 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    currentPrefix = c\n\e[31m\e[31m   |\e[0m         \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          Found:    (c : Char)\n\e[31m   |\e[0m                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (currentPrefix.length > 0)\
    \ {\n                prefixes += currentPrefix\n            }\n            currentPrefix\
    \ = currentPrefix + c\n        }\n        prefixes += currentPrefix\n        prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp12hddp4x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => {\n\
    \            val prefix = string.substring(0, x)\n            prefixes += prefix\n\
    \        })\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppvcviu7y.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => {\n\
    \            val prefix = string.reverse.takeWhile(_.isLetter).reverse\n     \
    \       prefixes += prefix\n        })\n        prefixes.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7fz3nfji.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805316
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = 0\n\
    \        var currentString = \"\"\n        for(i <- 0 until string.length){\n\
    \            currentString += string(i)\n            if(currentString.length <\
    \ currentPrefix){\n                currentPrefix = currentString.length\n    \
    \            prefixes += currentString\n                currentString = \"\"\n\
    \            }\n        }\n        prefixes += currentString\n        return prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxrj7t5he.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805316
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            val prefix = string.substring(0, i)\n\
    \            prefixes += prefix\n            i += 1\n        }\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzd4cxd3u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0) {\n                currentPrefix = c\n                currentLength =\
    \ 1\n            } else {\n                if (c == currentPrefix) {\n       \
    \             currentLength += 1\n                } else {\n                 \
    \   prefixes ::= currentPrefix\n                    currentPrefix = c\n      \
    \              currentLength = 1\n                }\n            }\n        }\n\
    \        prefixes ::= currentPrefix\n        prefixes\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpya3i97uu.scala:13:32\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m                currentPrefix\
    \ = c\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ Error: /tmp/tmpya3i97uu.scala:16:20 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                \e[33mif\e[0m (c == currentPrefix) {\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types Char and String cannot be compared with == or !=\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpya3i97uu.scala:20:36 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    currentPrefix = c\n\e[31m\e[31m \
    \  |\e[0m                                    ^\e[0m\n\e[31m   |\e[0m         \
    \                           Found:    (c : Char)\n\e[31m   |\e[0m            \
    \                        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwe4luqew.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (i <- 0 until string.length) {\n            if (string.charAt(i)\
    \ == string.charAt(i-1)) {\n                currentPrefix += string.charAt(i)\n\
    \            } else {\n                prefixes += currentPrefix\n           \
    \     currentPrefix = string.charAt(i)\n            }\n        }\n        prefixes\
    \ += currentPrefix\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzm_bq2ld.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzm_bq2ld.scala:15:45 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                currentPrefix = string.charAt(i)\n\e\
    [31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength -= 1\n        }\n  \
    \      prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsaezxzo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_ao9i5z.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805319
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var current = string\n        while (current\
    \ != \"\") {\n            prefixes ::= current\n            current = current.dropRight(1)\n\
    \        }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength = currentLength - 1\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxhha4fzd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for(i <- 0 until string.length){\n  \
    \          val currentChar = string.charAt(i)\n            if(currentLength >\
    \ 0){\n                currentPrefix = currentPrefix + currentChar\n         \
    \       currentLength += 1\n            }\n            else if(currentChar ==\
    \ 'a'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'b'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'c'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'd'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'e'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'f'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'g'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'h'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'i'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'j'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'k'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'l'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'm'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'n'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'o'){\n                currentLength = 1\n                prefixes += currentPrefix\n\
    \                currentPrefix = \"\"\n            }\n            else if(currentChar\
    \ == 'p'){\n                currentLength = 1\n                \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1hxyzinz.scala:103:0 ---------------------------\e\
    [0m\e[0m\n\e[31m103 |\e[0m\n\e[31m\e[31m    |\e[0m^\e[0m\n\e[31m    |\e[0m'}'\
    \ expected, but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1hxyzinz.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mprefixes\e[0m = mutable.ListBuffer[\e[35mString\e[0m]()\n\e[31m\e[31m  |\e\
    [0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1hxyzinz.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m 11 |\e[0m        \e[33mfor\e[0m(i <-\
    \ \e[31m0\e[0m until string.length){\n\e[31m\e[31m    |\e[0m        ^\e[0m\n\e\
    [31m    |\e[0m        Found:    Unit\n\e[31m    |\e[0m        Required: List[String]\n\
    \e[31m 12 |\e[0m            \e[33mval\e[0m \e[36mcurrentChar\e[0m = string.charAt(i)\n\
    \e[31m 13 |\e[0m            \e[33mif\e[0m(currentLength > \e[31m0\e[0m){\n\e[31m\
    \ 14 |\e[0m                currentPrefix = currentPrefix + currentChar\n\e[31m\
    \ 15 |\e[0m                currentLength += \e[31m1\e[0m\n\e[31m 16 |\e[0m   \
    \         }\n\e[31m 17 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(currentChar\
    \ == \e[31m'a'\e[0m){\n\e[31m 18 |\e[0m                currentLength = \e[31m1\e\
    [0m\n\e[31m 19 |\e[0m                prefixes += currentPrefix\n\e[31m 20 |\e\
    [0m                currentPrefix = \e[31m\"\"\e[0m\n\e[31m 21 |\e[0m         \
    \   }\n\e[31m 22 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(currentChar ==\
    \ \e[31m'b'\e[0m){\n\e[31m 23 |\e[0m                currentLength = \e[31m1\e\
    [0m\n\e[31m 24 |\e[0m                prefixes += currentPrefix\n\e[31m 25 |\e\
    [0m                currentPrefix = \e[31m\"\"\e[0m\n\e[31m 26 |\e[0m         \
    \   }\n\e[31m 27 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m(currentChar ==\
    \ \e[31m'c'\e[0m){\n\e[31m 28 |\e[0m                currentLength = \e[31m1\e\
    [0m\n\e[31m 29 |\e[0m                prefixes += currentPrefix\n\e[31m 30 |\e\
    [0m                currentPrefix = \e[31m\"\"\e[0m\n\e[31m 31 |\e[0m         \
    \   }\n\e[31m 32 |\e[0m            \e[33melse\e[0m \e[33mif\e["
  stdout: ''
  timestamp: 1659805324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zz4mk4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var i = 0\n        while\
    \ (i < string.length) {\n            prefixes += string.substring(0, i)\n    \
    \        i += 1\n        }\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2w47mdom.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foldLeft(prefixes)\
    \ { (prefixes, c) =>\n            val prefix = prefixes.last\n            if (c.length\
    \ < prefix.length) prefixes += prefix\n            else prefixes += prefix +:\
    \ c.takeWhile(_ != prefix)\n        }\n        prefixes.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc85lz3om.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpc85lz3om.scala:10:34 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mprefix\e[0m = prefixes.last\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         value last is not a member of Any\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpc85lz3om.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (c.length < prefix.length)\
    \ prefixes += prefix\n\e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                value length is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpc85lz3om.scala:11:51 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (c.length < prefix.length)\
    \ prefixes += prefix\n\e[31m\e[31m   |\e[0m                                  \
    \        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             value += is not a member\
    \ of Any - did you mean prefixes.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc85lz3om.scala:12:26\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33melse\e\
    [0m prefixes += prefix +: c.takeWhile(_ != prefix)\n\e[31m\e[31m   |\e[0m    \
    \             ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             value += is not a\
    \ member of Any - did you mean prefixes.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpc85lz3om.scala:12:41 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m            \e[33melse\e[0m prefixes += prefix +: c.takeWhile(_ != prefix)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                 value takeWhile is not a member\
    \ of Char\n6 errors found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        for(i\
    \ <- 0 until string.length) {\n            currentPrefix = currentPrefix + string(i)\n\
    \            prefixes = prefixes :+ currentPrefix\n        }\n        prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var index = 0\n   \
    \     while (index < string.length) {\n            val prefix = string.substring(0,\
    \ index)\n            prefixes += prefix\n            index += 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl9ftkirr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").foreach(prefix\
    \ => prefixes += prefix)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_dfzt_lk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zz4mk4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").reverse.foreach(prefix\
    \ => {\n            prefixes += prefix\n        })\n        prefixes.toList.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpih5a3mch.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var i = 0\n        while\
    \ (i < string.length) {\n            prefixes += string.substring(0, i)\n    \
    \        i += 1\n        }\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2w47mdom.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.split(\"\").foreach(prefix\
    \ => prefixes += prefix)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_dfzt_lk.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength = currentLength\
    \ - 1\n        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj1485m73.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for(i <- 0 until string.length){\n  \
    \          currentLength = string(i)\n            currentPrefix = string.substring(0,\
    \ i)\n            prefixes += currentPrefix\n        }\n        prefixes\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd99v5y7e.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var prefix = \"\"\n   \
    \     var i = 0\n        while (i < string.length) {\n            prefix += string(i)\n\
    \            i += 1\n            if (i < string.length) {\n                prefixes\
    \ += prefix\n                prefix = \"\"\n            }\n        }\n       \
    \ prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7xyhk9ul.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavb4mb0s.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(c <- string) {\n            currentPrefix = currentPrefix + c\n\
    \            prefixes += currentPrefix\n        }\n        prefixes.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwf23ivg8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => prefixes\
    \ += x)\n        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeuzp2hqs.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805323
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = 0\n        for (c <- string) {\n         \
    \   if (currentLength == 0) {\n                currentPrefix = c\n           \
    \     currentLength = 1\n            } else {\n                if (c == currentPrefix)\
    \ {\n                    currentLength += 1\n                } else {\n      \
    \              prefixes += currentPrefix\n                    currentPrefix =\
    \ c\n                    currentLength = 1\n                }\n            }\n\
    \        }\n        prefixes += currentPrefix\n        prefixes\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfrwxb79a.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfrwxb79a.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpfrwxb79a.scala:16:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \         \e[33mif\e[0m (c == currentPrefix) {\n\e[31m\e[31m   |\e[0m        \
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfrwxb79a.scala:20:36 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    currentPrefix = c\n\e[31m\e[31m   |\e[0m         \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          Found:    (c : Char)\n\e[31m   |\e[0m                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ > 0) {\n                currentPrefix = currentPrefix + \"-\" + c\n        \
    \        prefixes += currentPrefix\n                currentLength = 0\n      \
    \      }\n            currentLength += 1\n        }\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb8yvtj_b.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0,currentLength)\n         \
    \   prefixes += currentPrefix\n            currentLength -= 1\n        }\n   \
    \     prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwstx0q1m.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0) {\n                currentPrefix = c\n                currentLength =\
    \ 1\n            } else {\n                if (c == currentPrefix) {\n       \
    \             currentLength += 1\n                } else {\n                 \
    \   prefixes += currentPrefix\n                    currentPrefix = c\n       \
    \             currentLength = 1\n                }\n            }\n        }\n\
    \        prefixes += currentPrefix\n        prefixes\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt1b4nmf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdt1b4nmf.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpdt1b4nmf.scala:16:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \         \e[33mif\e[0m (c == currentPrefix) {\n\e[31m\e[31m   |\e[0m        \
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpdt1b4nmf.scala:20:36 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    currentPrefix = c\n\e[31m\e[31m   |\e[0m         \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          Found:    (c : Char)\n\e[31m   |\e[0m                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805310
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix = currentPrefix\
    \ + string.charAt(i)\n            prefixes += currentPrefix\n        }\n     \
    \   prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdj85mryz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix = currentPrefix\
    \ + string.charAt(i)\n            prefixes += currentPrefix\n        }\n     \
    \   prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18kw56b5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            val prefix = string.substring(0, i)\n\
    \            prefixes += prefix\n            i += 1\n        }\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzd4cxd3u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = 0\n        for(i <- 0 until string.length){\n            if(string.charAt(i)\
    \ == string.charAt(i-1)){\n                currentLength += 1\n              \
    \  currentPrefix = currentPrefix + string.charAt(i)\n            }else{\n    \
    \            prefixes = prefixes :+ currentPrefix\n                currentLength\
    \ = 1\n                currentPrefix = string.charAt(i)\n            }\n     \
    \   }\n        prefixes = prefixes :+ currentPrefix\n        return prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp193k6_pr.scala:18:45\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                currentPrefix\
    \ = string.charAt(i)\n\e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Found:    Char\n\e[31m   |\e\
    [0m                                Required: String\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0) {\n                currentPrefix = c\n                currentLength =\
    \ 1\n            } else {\n                if (c == currentPrefix) {\n       \
    \             currentLength += 1\n                } else {\n                 \
    \   prefixes += currentPrefix\n                    currentPrefix = c\n       \
    \             currentLength = 1\n                }\n            }\n        }\n\
    \        prefixes += currentPrefix\n        prefixes\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdt1b4nmf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdt1b4nmf.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpdt1b4nmf.scala:16:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \         \e[33mif\e[0m (c == currentPrefix) {\n\e[31m\e[31m   |\e[0m        \
    \            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpdt1b4nmf.scala:20:36 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    currentPrefix = c\n\e[31m\e[31m   |\e[0m         \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          Found:    (c : Char)\n\e[31m   |\e[0m                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805310
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = 0\n        for(c <- string) {\n          \
    \  currentLength += 1\n            currentPrefix += c\n            prefixes +=\
    \ currentPrefix\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptwe5518d.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var i = 0\n        while\
    \ (i < string.length) {\n            prefixes += string.substring(0, i)\n    \
    \        i += 1\n        }\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2w47mdom.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805320
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_ao9i5z.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => {\n\
    \            val prefixLength = string.length\n            val prefix = string.substring(0,\
    \ prefixLength)\n            prefixes += prefix\n        })\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjd0qwky7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for (c <- string) {\n            if (c.isLetter) {\n         \
    \       currentPrefix = currentPrefix + c\n            } else {\n            \
    \    prefixes += currentPrefix\n                currentPrefix = \"\"\n       \
    \     }\n        }\n        prefixes += currentPrefix\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy7j0m8bc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            val prefix = string.substring(0, i)\n\
    \            if (prefixes.contains(prefix)) {\n                prefixes += prefix\n\
    \            } else {\n                prefixes += prefix\n                i +=\
    \ 1\n            }\n        }\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp71unm0ng.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805326
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (c <- string) {\n            if (c.isLetter) {\n               \
    \ currentPrefix = currentPrefix + c\n            } else {\n                prefixes\
    \ += currentPrefix\n                currentPrefix = \"\"\n            }\n    \
    \    }\n        prefixes += currentPrefix\n        prefixes.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp475xk8z8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            prefixes += string.substring(0, i)\n\
    \            i += 1\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsktkhkz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix = currentPrefix\
    \ + string.charAt(i)\n            prefixes += currentPrefix\n        }\n     \
    \   prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18kw56b5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var index = 0\n   \
    \     while (index < string.length) {\n            val prefix = string.substring(0,index)\n\
    \            prefixes += prefix\n            index += 1\n        }\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngrlbvfo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix += string.charAt(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvw7o9joi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix += string.charAt(i)\n\
    \            if(currentPrefix.length > 0){\n                prefixes += currentPrefix\n\
    \            }\n        }\n        prefixes.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6t5uk0uv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var index = 0\n   \
    \     while (index < string.length) {\n            val prefix = string.substring(0,\
    \ index)\n            prefixes += prefix\n            index += 1\n        }\n\
    \        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdlpbybbf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => prefixes\
    \ += x)\n        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeuzp2hqs.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805323
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = 0\n        for(i <- 0 until string.length)\
    \ {\n            currentLength += 1\n            currentPrefix = currentPrefix\
    \ + string.charAt(i)\n            if(currentLength > string.length) prefixes +=\
    \ currentPrefix\n        }\n        prefixes\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps9wfjwmn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        var currentIndex = 0\n  \
    \      while (currentIndex < currentLength) {\n            currentPrefix = string.substring(currentIndex,\
    \ currentIndex + currentLength)\n            prefixes += currentPrefix\n     \
    \       currentIndex += currentLength\n            currentLength = currentPrefix.length\n\
    \        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphaxlyp90.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        string.foldLeft(prefixes)\
    \ { (prefixes, s) =>\n            prefixes += s\n            prefixes += s.takeWhile(_\
    \ != 'a')\n        }\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3v4w131t.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp3v4w131t.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            prefixes += s\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Any - did you mean prefixes.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3v4w131t.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m            prefixes += s.takeWhile(_\
    \ != \e[31m'a'\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Any - did you mean prefixes.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3v4w131t.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            prefixes += s.takeWhile(_ != \e[31m'a'\e\
    [0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                        value takeWhile is not a member of Char\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var index = 0\n   \
    \     while (index < string.length) {\n            val prefix = string.substring(0,\
    \ index)\n            prefixes += prefix\n            index += 1\n        }\n\
    \        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdlpbybbf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (c <- string) {\n            if (currentPrefix.length > 0) {\n \
    \               prefixes += currentPrefix\n                currentPrefix = \"\"\
    \n            }\n            currentPrefix += c\n        }\n        if (currentPrefix.length\
    \ > 0) {\n            prefixes += currentPrefix\n        }\n        prefixes.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpulnsjyng.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength -= 1\n        }\n  \
    \      prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsaezxzo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var currentPrefix = \"\"\n        var\
    \ currentLength = string.length\n        while (currentLength > 0) {\n       \
    \     currentPrefix = string.substring(0, currentLength)\n            prefixes\
    \ ::= currentPrefix\n            currentLength = currentLength - 1\n        }\n\
    \        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        for(i <- 0 until string.length){\n            currentPrefix =\
    \ currentPrefix + string.charAt(i)\n            if(currentPrefix.length > 0){\n\
    \                prefixes += currentPrefix\n            }\n        }\n       \
    \ prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu3tn8557.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpavb4mb0s.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkkm685y_.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesHelper(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp61aousob.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesHelper(string, prefixes)\n\e[31m\e\
    [31m  |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesHelper\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_ao9i5z.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7sv5t94j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => {\n\
    \            prefixes += x\n            prefixes += allPrefixes(string.drop(1))\n\
    \        })\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpygdafz0a.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length){\n            currentPrefix = currentPrefix\
    \ + string.charAt(i)\n            prefixes += currentPrefix\n        }\n     \
    \   prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18kw56b5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ \"\", prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxb5u_pu5.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, \e[31m\"\"\e[0m, prefixes)\n\
    \e[31m\e[31m  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found:\
    \ allPrefixesRec\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for(i <- 0 until string.length) {\n            currentPrefix += string(i)\n\
    \            prefixes += currentPrefix\n        }\n        prefixes.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv_ktpi0a.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ var prefixes = List[String]()\n        var current = string\n        while (current\
    \ != \"\") {\n            prefixes ::= current\n            current = current.dropRight(1)\n\
    \        }\n        prefixes\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = string.length\n        while (currentLength > 0)\
    \ {\n            currentPrefix = string.substring(0, currentLength)\n        \
    \    prefixes += currentPrefix\n            currentLength -= 1\n        }\n  \
    \      prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppsaezxzo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805314
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        string.takeWhile(_.isLetter).foreach(prefixes\
    \ += _)\n        prefixes\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqbx58yqx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        for (c <- string) {\n            if (currentPrefix.length > 0) {\n \
    \               prefixes += currentPrefix\n                currentPrefix = \"\"\
    \n            }\n            currentPrefix += c\n        }\n        prefixes +=\
    \ currentPrefix\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7hgmn5wp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_ao9i5z.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        string.foreach(x => prefixes\
    \ += x)\n        prefixes.reverse\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplv42m8lc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe4u270pi.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var current = string\n\
    \        while (current != \"\") {\n            prefixes += current\n        \
    \    current = current.dropRight(1)\n        }\n        prefixes.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6zz4mk4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var currentPrefix =\
    \ \"\"\n        var currentLength = string.length\n        while (currentLength\
    \ > 0) {\n            currentPrefix = string.substring(0, currentLength)\n   \
    \         prefixes += currentPrefix\n            currentLength -= 1\n        }\n\
    \        prefixes.toList\n    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\
    \")).equals((List[String]())));\n    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"\
    a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"\
    WWW\")).equals((List[String](\"W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_ao9i5z.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer.empty[String]\n        var i = 0\n       \
    \ while (i < string.length) {\n            val prefix = string.substring(0, i)\n\
    \            prefixes += prefix\n            i += 1\n        }\n        prefixes\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_xr0unm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        var currentPrefix = \"\"\
    \n        var currentLength = 0\n        for (c <- string) {\n            if (currentLength\
    \ == 0)\n                currentPrefix = c\n            else if (currentLength\
    \ > 0)\n                currentPrefix = currentPrefix + \"_\" + c\n          \
    \  else\n                currentPrefix = c\n            currentLength += 1\n \
    \           prefixes += currentPrefix\n        }\n        prefixes.toList\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\"\
    , \"asdf\", \"asdfg\", \"asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"\
    W\", \"WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4e5v_0d3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4e5v_0d3.scala:13:32 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m                currentPrefix = c\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                          \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4e5v_0d3.scala:17:32\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m                currentPrefix\
    \ = c\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return list of all prefixes from shortest to longest of the input\
    \ string\n    // >>> allPrefixes((\"abc\"))\n    // (List[String](\"a\", \"ab\"\
    , \"abc\"))\n    def allPrefixes(string : String) : List[String] = {\n       \
    \ val prefixes = mutable.ListBuffer[String]()\n        allPrefixesRec(string,\
    \ prefixes)\n        prefixes.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(allPrefixes((\"\")).equals((List[String]())));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((List[String](\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"\
    asdfgh\"))));\n    assert(allPrefixes((\"WWW\")).equals((List[String](\"W\", \"\
    WW\", \"WWW\"))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mprefixes\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5psgky34.scala:9:8 --------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        allPrefixesRec(string, prefixes)\n\e[31m\e[31m\
    \  |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        Not found: allPrefixesRec\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805313

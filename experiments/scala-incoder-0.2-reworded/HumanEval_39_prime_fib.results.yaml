language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphttxd6au.scala:99:19 ---------------------------\e\
    [0m\e[0m\n\e[31m99 |\e[0m        fib.append(\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmphttxd6au.scala:99:12\
    \ -----------------------------\e[0m\e[0m\n\e[31m99 |\e[0m        fib.append(\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e\
    [0m with types\n\e[31m   |\e[0m (elems: Long*): (fib : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0m (elem: Long): (fib : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0mmatch arguments (Null)\n2 errors found\n"
  stdout: ''
  timestamp: 1659799171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(2l)\n        fibs += 2l\n\
    \        fibs += 3l\n        fibs += 5l\n        fibs += 13l\n        fibs +=\
    \ 89l\n        fibs.takeWhile(_ < n).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8eurnkfr.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(n / 2) = fibs(n / 2) + fibs(n / 2 - 1)\n \
    \       fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqq7eqyrc.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqq7eqyrc.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpqq7eqyrc.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpqq7eqyrc.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(n / \e[31m2\e[0m) = fibs(n / \e[31m2\e[0m) + fibs(n / \e[31m2\e\
    [0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqq7eqyrc.scala:19:27 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(n / \e[31m2\e[0m) = fibs(n / \e[31m2\e[0m)\
    \ + fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \              ^^^^^\e[0m\n\e[31m   |\e[0m                           Found:  \
    \  Long\n\e[31m   |\e[0m                           Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqq7eqyrc.scala:19:41 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(n / \e[31m2\e[0m) = fibs(n / \e[31m2\e[0m)\
    \ + fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \                            ^^^^^^^^^\e[0m\n\e"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs\
    \ += 5\n        fibs += 13\n        fibs += 89\n        fibs += 101\n        fibs\
    \ += 201\n        fibs += 301\n        fibs += 401\n        fibs += 501\n    \
    \    fibs += 601\n        fibs += 701\n        fibs += 801\n        fibs += 901\n\
    \        fibs += 1001\n        fibs += 2001\n        fibs += 3001\n        fibs\
    \ += 4001\n        fibs += 5001\n        fibs += 6001\n        fibs += 7001\n\
    \        fibs += 8001\n        fibs += 9001\n        fibs += 10001 // last Fibonacci\
    \ number that is a prime number\n        fibs += 20001\n        fibs += 30001\n\
    \        fibs += 40001\n        fibs += 50001\n        fibs += 60001\n       \
    \ fibs += 70001\n        fibs += 80001 // last Fibonacci number that is a prime\
    \ number\n        fibs += 90001\n        fibs += 100001\n        fibs += 200001\n\
    \        fibs += 300001\n        fibs += 400001\n        fibs += 500001\n    \
    \    fibs += 600001\n        fibs += 700001\n        fibs += 800001\n        fibs\
    \ += 900001\n        fibs += 1000001 // last Fibonacci number that is a prime\
    \ number\n        fibs += 2000001 // last Fibonacci number that is a prime number\n\
    \        fibs += 3000001 // last Fibonacci number that is a prime number\n   \
    \     fibs += 4000001 // last Fibonacci number that is a prime number\n      \
    \  fibs += 5000001 // last Fibonacci number that is a prime number\n        fibs\
    \ += 6000001 // last Fibonacci number that is a prime number\n        fibs +=\
    \ 7000001 // last Fibonacci number that is a prime number\n        fibs += 8000001\
    \ // last Fibonacci number that is a prime number\n        fibs += 9000001 //\
    \ last Fibonacci number that is a prime number\n        fibs += 10000001 // last\
    \ Fibonacci number that is a prime number\n        fibs += 20000001 // last Fibonacci\
    \ number that is a prime number\n        fibs += 30000001 // last Fibonacci number\
    \ that is a \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8532mde7.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 0l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgqlnzzcp.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m0l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpgqlnzzcp.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgqlnzzcp.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpgqlnzzcp.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpgqlnzzcp.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgqlnzzcp.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 7l\n        var e = 1l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 0l\n        var j = 1l\n        var k = 0l\n\
    \        var l = 1l\n        var m = 2l\n        var n = 3l\n        var o = 1l\n\
    \        var p = 0l\n        var q = 1l\n        var r = 2l\n        var s = 3l\n\
    \        var t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 3l\n        var z = 1l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 0l\n\
    \        var j = 1l\n        var k = 0l\n        var l = 1l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 1l\n        var p = 0l\n        var q = 1l\n\
    \        var r = 2l\n        var s = 3l\n        var t = 1l\n        var u = 2l\n\
    \        var v = 5l\n        var w = 1l\n        var x = 2l\n        var y = 3l\n\
    \        var z = 1l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 7l\n        var e = 1l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 0l\n        var j = 1l\n        var k = 0l\n\
    \        var l = 1l\n        var m = 2l\n        var n = 3l\n        var o = 1l\n\
    \        var p = 0l\n        var q = 1l\n        var r = 2l\n        var s = 3l\n\
    \        var t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 3l\n        var z = 1l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 0l\n\
    \        var j = 1l\n        var k = 0l\n        var l = 1l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 1l\n        var p = 0l\n        var q = 1l\n\
    \        var r = 2l\n        var s = 3l\n        var t = 1l\n        var u = 2l\n\
    \        var v = 5l\n        var w = 1l\n        var x = 2l\n        var y = 3l\n\
    \        var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpb4t41nou.scala:119:11 --------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb4t41nou.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb4t41nou.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb4t41nou.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb4t41nou.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m7l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb4t41nou.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_n = scala.math.BigInt(n).fibonacci\n        val\
    \ prime_fib_n = scala.math.BigInt(fib_n).prime\n        prime_fib_n\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n \
    \   assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n   \
    \ assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n   \
    \ assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb1gzpufb.scala:16:41 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_n\e[0m = scala.math.BigInt(n).fibonacci\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                    value fibonacci is not a member of BigInt\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 2l\n        var c = 2l\n   \
    \     var d = 2l\n        var e = 2l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n\
    \        var l = 1l\n        var m = 1l\n        var n = 1l\n        var o = 1l\n\
    \        var p = 1l\n        var q = 1l\n        var r = 1l\n        var s = 1l\n\
    \        var t = 1l\n        var u = 1l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 1l\n        var y = 1l\n        var z = 1l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var l = 1l\n        var m = 1l\n\
    \        var n = 1l\n        var o = 1l\n        var p = 1l\n        var q = 1l\n\
    \        var r = 1l\n        var s = 1l\n        var t = 1l\n        var u = 1l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 1l\n        var y = 1l\n\
    \        var z = 1l\n        var a = 1l\n        var b = 1l\n        var c = 1l\n\
    \        var d = 1l\n        var e = 1l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n\
    \        var l = 1l\n        var m = 1l\n        var n = 1l\n        var o = 1l\n\
    \        var p = 1l\n        var q = 1l\n        var r = 1l\n        var s = 1l\n\
    \        var t = 1l\n        var u = 1l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 1l\n        var y = 1l\n        var z = 1l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 1l\n\
    \        var j = 1l\n        var k = 1l\n        var l = 1l\n        var m = 1l\n\
    \        var n = 1l\n        var o = 1l\n        var p = 1l\n        var q = 1l\n\
    \        var r = 1l\n        var s = 1l\n        var t = 1l\n        var u = 1l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 1l\n        var y = 1l\n\
    \        var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmps9vwuakz.scala:119:11 --------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps9vwuakz.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps9vwuakz.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps9vwuakz.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps9vwuakz.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmps9vwuakz.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        val i = 2l\n        while (fibs.size\
    \ < n) {\n            fibs += fibs.head + fibs.last\n            i += 1\n    \
    \    }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc8lo1l66.scala:22:14 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean i.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc8lo1l66.scala:24:13\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        fibs(n)\n\e[31m\e[31m\
    \   |\e[0m             ^\e[0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(2l, 3l, 5l, 8l)\n       \
    \ val primes = mutable.ArrayBuffer(2l, 3l, 5l)\n        val primesCount = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrime = mutable.ArrayBuffer(2l, 3l, 5l)\n        val\
    \ isPrimeCount = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSum = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumCount = mutable.ArrayBuffer(2l, 3l, 5l)\n   \
    \     val isPrimeSumPrime = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimeCount\
    \ = mutable.ArrayBuffer(2l, 3l, 5l)\n        val isPrimeSumPrimePrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimeCount = mutable.ArrayBuffer(2l, 3l,\
    \ 5l)\n        val isPrimeSumPrimePrimePrime = mutable.ArrayBuffer(2l, 3l, 5l)\n\
    \        val isPrimeSumPrimePrimePrimeCount = mutable.ArrayBuffer(2l, 3l, 5l)\n\
    \        val isPrimeSumPrimePrimePrimePrime = mutable.ArrayBuffer(2l, 3l, 5l)\n\
    \        val isPrimeSumPrimePrimePrimePrimeCount = mutable.ArrayBuffer(2l, 3l,\
    \ 5l)\n        val isPrimeSumPrimePrimePrimePrimePrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val isPrimeSumPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer(2l,\
    \ 3l, 5l)\n        val \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpaxp2g4fs.scala:38:11 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpaxp2g4fs.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36misPrimeSumPrimePrimePrimePrimePrimeCount\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSumPrimePrimePrimePrimePrimeCount is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeSumPrimePrimePrimePrimePrimeCount\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpaxp2g4fs.scala:37:12 ---------------------------\e[0m\e[0m\n\e[31m37\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeSumPrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeSumPrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeSumPrimePrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaxp2g4fs.scala:16:19 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m,\
    \ \e[31m3l\e[0m, \e[31m5l\e[0m, \e[31m8l\e[0m)\n\e[31m\e[31m   |\e[0m        \
    \           ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxp2g4fs.scala:17:21\
    \ ------------------------\e[0m\e[0"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        val limit = n / 2\n        while(fibs.length\
    \ < limit) {\n            val a = fibs(fibs.length-1)\n            val b = fibs(fibs.length-2)\n\
    \            fibs += b + a\n        }\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0goqxdqd.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 3l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 0l\n        var v = 0l\n        var w =\
    \ 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n        var\
    \ a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n       \
    \ var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n   \
    \     var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n\
    \        var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 0l\n        var n = 0l\n\
    \        var o = 0l\n        var p = 0l\n        var q = 0l\n        var r = 0l\n\
    \        var s = 0l\n        var t = 0l\n        var u = 0l\n        var v = 0l\n\
    \        var w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n\
    \        var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n\
    \        var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 0l\n        var n = 0l\n        var o = 0l\n        var p = 0l\n\
    \        var q = 0l\n        var r = 0l\n        var s = 0l\n        var t = 0l\n\
    \        var u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n\
    \        var y = 0l\n        var z = 0l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9fhjj5_o.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(fibs(_) < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_42xskuq.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_42xskuq.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_42xskuq.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_42xskuq.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_42xskuq.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_42xskuq.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_42xskuq.scala:23:28 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs.takeWhile(fibs(_) < n).last\n\e[31m\e[31m\
    \   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m                \
    \            Found:    (_$1 : Long)\n\e[31m   |\e[0m                         \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain"
  stdout: ''
  timestamp: 1659799175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        var i = 2\n    \
    \    var prime = true\n        while(prime && i <= n){\n            prime =  fib.isPrime\n\
    \            fib = fib.add(fib)\n            i = i + 1\n        }\n        fib\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6c8gpp1x.scala:20:25 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            prime =  fib.isPrime\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \ value isPrime is not a member of BigInt\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6c8gpp1x.scala:21:22 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m            fib = fib.add(fib)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m             value add is not a member of BigInt - did you\
    \ mean fib.abs?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6c8gpp1x.scala:24:8\
    \ ---------------------\e[0m\e[0m\n\e[31m24 |\e[0m        fib\n\e[31m\e[31m  \
    \ |\e[0m        ^^^\e[0m\n\e[31m   |\e[0m        Found:    (fib : BigInt)\n\e\
    [31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 5l\n        var i = 13l\n        var j = 1l\n        var k =\
    \ 2l\n        var l = 5l\n        var m = 13l\n        var n = 89l\n        var\
    \ o = 1l\n        var p = 2l\n        var q = 5l\n        var r = 13l\n      \
    \  var s = 89l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n \
    \       var w = 13l\n        var x = 89l\n        var y = 1l\n        var z =\
    \ 2l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n        var\
    \ d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n     \
    \   var h = 5l\n        var i = 13l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 13l\n        var n = 89l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 5l\n        var r = 13l\n        var\
    \ s = 89l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n      \
    \  var w = 13l\n        var x = 89l\n        var y = 1l\n        var z = 2l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 2l\n        var h =\
    \ 5l\n        var i = 13l\n        var j = 1l\n        var k = 2l\n        var\
    \ l = 5l\n        var m = 13l\n        var n = 89l\n        var o = 1l\n     \
    \   var p = 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n\
    \        var t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 13l\n\
    \        var x = 89l\n        var y = 1l\n        var z = 2l\n        var a =\
    \ 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n        var\
    \ e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 5l\n      \
    \  var i = 13l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n \
    \       var m = 13l\n        var n = 89l\n        var o = 1l\n        var p =\
    \ 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n        var\
    \ t = 1l\n        var u = 2l\n        var v = 5l\n        var w = 13l\n      \
    \  var x = 89l\n        var y = \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp863xk5hw.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp863xk5hw.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp863xk5hw.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp863xk5hw.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp863xk5hw.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp863xk5hw.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += 0l\n        primes += 1l\n        for(i <- 2 to n){\n     \
    \       val temp = fib\n            fib = fib + fib\n            primes += temp\n\
    \        }\n        primes.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppm9thud1.scala:20:22\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmppm9thud1.scala:22:16 -----------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m            fib = fib + fib\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppm9thud1.scala:23:22 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            primes += temp\n\e[31m\e[31m   |\e[0m   \
    \                   ^^^^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (temp : BigInt)\n\e[31m   |\e[0m                      Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659799175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(2l, 3l, 5l)\n        val\
    \ primes = mutable.ArrayBuffer(2l, 3l)\n        val fib = fibs.last\n        fibs\
    \ += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n       \
    \ fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqq9obqen.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqq9obqen.scala:17:21\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m, \e[31m3l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 5l\n\
    \        var l = 13l\n        var m = 89l\n        var n = 2l\n        var o =\
    \ 3l\n        var p = 5l\n        var q = 13l\n        var r = 89l\n        var\
    \ s = 2l\n        var t = 3l\n        var u = 5l\n        var v = 13l\n      \
    \  var w = 89l\n        var x = 2l\n        var y = 3l\n        var z = 5l\n \
    \       var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad\
    \ = 13l\n        var ae = 89l\n        var af = 0l\n        var ag = 2l\n    \
    \    var ah = 3l\n        var ai = 5l\n        var aj = 1l\n        var ak = 5l\n\
    \        var al = 13l\n        var am = 89l\n        var an = 2l\n        var\
    \ ao = 3l\n        var ap = 5l\n        var aq = 13l\n        var ar = 89l\n \
    \       var as = 2l\n        var at = 3l\n        var au = 5l\n        var av\
    \ = 13l\n        var aw = 89l\n        var ax = 2l\n        var ay = 3l\n    \
    \    var az = 5l\n        var aa += 2l\n        var ab += 3l\n        var ac +=\
    \ 5l\n        var ad += 13l\n        var ae += 89l\n        var af += 0l\n   \
    \     var ag += 2l\n        var ah += 3l\n        var ai += 5l\n        var aj\
    \ += 1l\n        var ak += 5l\n        var al += 13l\n        var am += 89l\n\
    \        var an += 2l\n        var ao += 3l\n        var ap += 5l\n        var\
    \ aq += 13l\n        var ar += 89l\n        var as += 2l\n        var at += 3l\n\
    \        var au += 5l\n        var av += 13l\n        var aw += 89l\n        var\
    \ ax += 2l\n        var ay += 3l\n        var az += 5l\n        var aa += 2l\n\
    \        var ab += 3l\n        var ac += 5l\n        var ad += 13l\n        var\
    \ ae += 89l\n        var af += 0l\n        var ag += 2l\n        var ah += 3l\n\
    \        var ai += 5l\n        var aj += 1l\n        var ak += 5l\n        var\
    \ al += 13l\n        var am += 89l\n        var an += \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:69:0 ----------------------------\e\
    [0m\e[0m\n\e[31m69 |\e[0m        \e[33mvar\e[0m ab += \e[31m3l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:70:0 ----------------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m        \e[33mvar\e[0m ac += \e[31m5l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:71:0 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m        \e[33mvar\e[0m ad += \e[31m13l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:72:0 ----------------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m        \e[33mvar\e[0m ae += \e[31m89l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:73:0 ----------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m        \e[33mvar\e[0m af += \e[31m0l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:74:0 ----------------------------\e\
    [0m\e[0m\n\e[31m74 |\e[0m        \e[33mvar\e[0m ag += \e[31m2l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:75:0 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        \e[33mvar\e[0m ah += \e[31m3l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:76:0 ----------------------------\e\
    [0m\e[0m\n\e[31m76 |\e[0m        \e[33mvar\e[0m ai += \e[31m5l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp51pyejqd.scala:77:0 ----------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m        \e[33mvar\e[0m aj += \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m^^^\e[0m\n\e[31m"
  stdout: ''
  timestamp: 1659799173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n\
    \        var t = 2l\n        var u = 2l\n        var v = 2l\n        var w = 2l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 0l\n        var g = 2l\n        var h = 3l\n        var\
    \ i = 5l\n        var j = 1l\n        var k = 0l\n        var l = 0l\n       \
    \ var m = 2l\n        var n = 2l\n        var o = 2l\n        var p = 2l\n   \
    \     var q = 2l\n        var r = 2l\n        var s = 2l\n        var t = 2l\n\
    \        var u = 2l\n        var v = 2l\n        var w = 2l\n        var x = 2l\n\
    \        var y = 2l\n        var z = 2l\n        var a = 2l\n        var b = 3l\n\
    \        var c = 5l\n        var d = 13l\n        var e = 89l\n        var f =\
    \ 0l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n        var\
    \ j = 1l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n       \
    \ var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n   \
    \     var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 2l\n        var w = 2l\n        var x = 2l\n        var y = 2l\n\
    \        var z = 2l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 13l\n        var e = 89l\n        var f = 0l\n        var g =\
    \ 2l\n        var h = 3l\n        var i = 5l\n        var j = 1l\n        var\
    \ k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 2l\n       \
    \ var o = 2l\n        var p = 2l\n        var q = 2l\n        var r = 2l\n   \
    \     var s = 2l\n        var t = 2l\n        var u = 2l\n        var v = 2l\n\
    \        var w = 2l\n        var x = 2l\n        var y = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4w3zr8rt.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp4w3zr8rt.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp4w3zr8rt.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4w3zr8rt.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4w3zr8rt.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4w3zr8rt.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        fib_array(6)\
    \ = 1l\n        fib_array(7) = 1l\n        fib_array(8) = 1l\n        fib_array(9)\
    \ = 1l\n        fib_array(10) = 1l\n        fib_array(11) = 1l\n        fib_array(12)\
    \ = 1l\n        fib_array(13) = 1l\n        fib_array(14) = 1l\n        fib_array(15)\
    \ = 1l\n        fib_array(16) = 1l\n        fib_array(17) = 1l\n        fib_array(18)\
    \ = 1l\n        fib_array(19) = 1l\n        fib_array(20) = 1l\n        fib_array(21)\
    \ = 1l\n        fib_array(22) = 1l\n        fib_array(23) = 1l\n        fib_array(24)\
    \ = 1l\n        fib_array(25) = 1l\n        fib_array(26) = 1l\n        fib_array(27)\
    \ = 1l\n        fib_array(28) = 1l\n        fib_array(29) = 1l\n        fib_array(30)\
    \ = 1l\n        fib_array(31) = 1l\n        fib_array(32) = 1l\n        fib_array(33)\
    \ = 1l\n        fib_array(34) = 1l\n        fib_array(35) = 1l\n        fib_array(36)\
    \ = 1l\n        fib_array(37) = 1l\n        fib_array(38) = 1l\n        fib_array(39)\
    \ = 1l\n        fib_array(40) = 1l\n        fib_array(41) = 1l\n        fib_array(42)\
    \ = 1l\n        fib_array(43) = 1l\n        fib_array(44) = 1l\n        fib_array(45)\
    \ = 1l\n        fib_array(46) = 1l\n        fib_array(47) = 1l\n        fib_array(48)\
    \ = 1l\n        fib_array(49) = 1l\n        fib_array(50) = 1l\n        fib_array(51)\
    \ = 1l\n        fib_array(52) = 1l\n        fib_array(53) = 1l\n        fib_array(54)\
    \ = 1l\n        fib_array(55) = 1l\n        fib_array(56) = 1l\n        fib_array(57)\
    \ = 1l\n        fib_array(58) = 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3sfhiqdx.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3sfhiqdx.scala:75:8 ---------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        fib_array(\e[31m58\e[0m) = \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:   \
    \ Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 25l\n        var g = 101l\n\
    \        var h = 713l\n        var i = 525l\n        var j = 1393l\n        var\
    \ k = 4181l\n        var l = 4863l\n        var m = 1385l\n        var n = 4201l\n\
    \        var o = 1297l\n        var p = 4197l\n        var q = 1261l\n       \
    \ var r = 4231l\n        var s = 4291l\n        var t = 1259l\n        var u =\
    \ 1279l\n        var v = 4251l\n        var w = 1263l\n        var x = 4231l\n\
    \        var y = 4291l\n        var z = 1259l\n        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 25l\n        var g = 101l\n        var h = 713l\n        var i = 525l\n\
    \        var j = 1393l\n        var k = 4181l\n        var l = 4863l\n       \
    \ var m = 1385l\n        var n = 4201l\n        var o = 1297l\n        var p =\
    \ 4197l\n        var q = 1261l\n        var r = 4231l\n        var s = 4291l\n\
    \        var t = 1259l\n        var u = 1279l\n        var v = 4251l\n       \
    \ var w = 1263l\n        var x = 4231l\n        var y = 4291l\n        var z =\
    \ 1259l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n        var\
    \ d = 13l\n        var e = 89l\n        var f = 25l\n        var g = 101l\n  \
    \      var h = 713l\n        var i = 525l\n        var j = 1393l\n        var\
    \ k = 4181l\n        var l = 4863l\n        var m = 1385l\n        var n = 4201l\n\
    \        var o = 1297l\n        var p = 4197l\n        var q = 1261l\n       \
    \ var r = 4231l\n        var s = 4291l\n        var t = 1259l\n        var u =\
    \ 1279l\n        var v = 4251l\n        var w = 1263l\n        var x = 4231l\n\
    \        var y = 4291l\n        var z = 1259l\n        var a = 2l\n        var\
    \ b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n     \
    \   var f = 25l\n        var g = 101l\n        var h = 713l\n        var i = 5\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpi1sg0a2z.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e"
  stdout: ''
  timestamp: 1659799182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n    \
    \    fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) =\
    \ 1\n        fibs(5) = 1\n        val i = 5\n        while (fibs(i) < n) fibs(i)\
    \ = fibs(i - 1) + fibs(i - 2)\n        fibs(i)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp_oxq8wv5.scala:24:28 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mwhile\e[0m (fibs(i) < n) fibs(i) = fibs(i\
    \ - \e[31m1\e[0m) + fibs(i - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \                ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n7 errors found\n"
  stdout: ''
  timestamp: 1659799185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2l) :: scala.math.BigInt(3l)\
    \ :: scala.math.BigInt(5l) :: scala.math.BigInt(13l) :: scala.math.BigInt(89l)\
    \ :: scala.math.BigInt(101l) :: scala.math.BigInt(201l) :: scala.math.BigInt(301l)\
    \ :: scala.math.BigInt(401l) :: scala.math.BigInt(501l) :: scala.math.BigInt(601l)\
    \ :: scala.math.BigInt(701l) :: scala.math.BigInt(801l) :: scala.math.BigInt(901l)\
    \ :: scala.math.BigInt(1001l) :: scala.math.BigInt(2001l) :: scala.math.BigInt(3001l)\
    \ :: scala.math.BigInt(4001l) :: scala.math.BigInt(5001l) :: scala.math.BigInt(6001l)\
    \ :: scala.math.BigInt(7001l) :: scala.math.BigInt(8001l) :: scala.math.BigInt(9001l)\
    \ :: scala.math.BigInt(1000l) :: scala.math.BigInt(2000l) :: scala.math.BigInt(3000l)\
    \ :: scala.math.BigInt(4000l) :: scala.math.BigInt(5000l) :: scala.math.BigInt(6000l)\
    \ :: scala.math.BigInt(7000l) :: scala.math.BigInt(8000l) :: scala.math.BigInt(9000l)\
    \ :: scala.math.BigInt(10000l) :: scala.math.BigInt(20000l) :: scala.math.BigInt(30000l)\
    \ :: scala.math.BigInt(40000l) :: scala.math.BigInt(50000l) :: scala.math.BigInt(60000l)\
    \ :: scala.math.BigInt(70000l) :: scala.math.BigInt(80000l) :: scala.math.BigInt(90000l)\
    \ :: scala.math.BigInt(100000l) :: scala.math.BigInt(200000l) :: scala.math.BigInt(300000l)\
    \ :: scala.math.BigInt(400000l) :: scala.math.BigInt(500000l) :: scala.math.BigInt(600000l)\
    \ :: scala.math.BigInt(700000l) :: scala.math.BigInt(800000l) :: scala.math.BigInt(900000l)\
    \ :: scala.math.BigInt(1000000l) :: scala.math.BigInt(2000000l) :: scala.math.BigInt(3000000l)\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfutxj051.scala:16:1482 ----------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2l\e[0m) :: scala.math.BigInt(\e[31m3l\e[0m) :: scala.math.BigInt(\e[31m5l\e\
    [0m) :: scala.math.BigInt(\e[31m13l\e[0m) :: scala.math.BigInt(\e[31m89l\e[0m)\
    \ :: scala.math.BigInt(\e[31m101l\e[0m) :: scala.math.BigInt(\e[31m201l\e[0m)\
    \ :: scala.math.BigInt(\e[31m301l\e[0m) :: scala.math.BigInt(\e[31m401l\e[0m)\
    \ :: scala.math.BigInt(\e[31m501l\e[0m) :: scala.math.BigInt(\e[31m601l\e[0m)\
    \ :: scala.math.BigInt(\e[31m701l\e[0m) :: scala.math.BigInt(\e[31m801l\e[0m)\
    \ :: scala.math.BigInt(\e[31m901l\e[0m) :: scala.math.BigInt(\e[31m1001l\e[0m)\
    \ :: scala.math.BigInt(\e[31m2001l\e[0m) :: scala.math.BigInt(\e[31m3001l\e[0m)\
    \ :: scala.math.BigInt(\e[31m4001l\e[0m) :: scala.math.BigInt(\e[31m5001l\e[0m)\
    \ :: scala.math.BigInt(\e[31m6001l\e[0m) :: scala.math.BigInt(\e[31m7001l\e[0m)\
    \ :: scala.math.BigInt(\e[31m8001l\e[0m) :: scala.math.BigInt(\e[31m9001l\e[0m)\
    \ :: scala.math.BigInt(\e[31m1000l\e[0m) :: scala.math.BigInt(\e[31m2000l\e[0m)\
    \ :: scala.math.BigInt(\e[31m3000l\e[0m) :: scala.math.BigInt(\e[31m4000l\e[0m)\
    \ :: scala.math.BigInt(\e[31m5000l\e[0m) :: scala.math.BigInt(\e[31m6000l\e[0m)\
    \ :: scala.math.BigInt(\e[31m7000l\e[0m) :: scala.math.BigInt(\e[31m8000l\e[0m)\
    \ :: scala.math.BigInt(\e[31m9000l\e[0m) :: scala.math.BigInt(\e[31m10000l\e[0m)\
    \ :: scala.math.BigInt(\e[31m20000l\e[0m) :: scala.math.BigInt(\e[31m30000l\e\
    [0m) :: scala.math.BigInt(\e[31m40000l\e[0m) :: scala.math.BigInt(\e[31m50000l\e\
    [0m) :: scala.math.BigInt(\e[31m60000l\e[0m) :: scala.math.BigInt(\e[31m70000l\e\
    [0m) :: scala.math.BigInt(\e[31m80000l\e[0m) :: scala.math.BigInt(\e[31m90000l\e\
    [0m) :: scala.math.BigInt(\e[31m100000l\e[0m) :: scala.math.BigInt(\e[31m200000l\e\
    [0m) :: scala.math.BigInt(\e[31m300000l\e[0m) :: scala.math.BigInt(\e[31m400000l\e\
    [0m) :: scala.math.BigInt(\e[31m500000l\e[0m) :: scala.math.BigInt(\e[31m600000l\e\
    [0m) :: scala.math.BigInt(\e[31m700000l\e[0m) :: scala.math.BigInt(\e[31m800000l\e\
    [0m) :: scala.math.BigInt(\e[31m900000l\e[0m) :: scala.math.BigInt(\e[31m1000000l\e\
    [0m) :: scala"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n   \
    \     fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11)\
    \ = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n\
    \        fibs(15) = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n       \
    \ fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21)\
    \ = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n\
    \        fibs(25) = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n       \
    \ fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31)\
    \ = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n\
    \        fibs(35) = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n       \
    \ fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41)\
    \ = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n\
    \        fibs(45) = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n       \
    \ fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51)\
    \ = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n\
    \        fibs(55) = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n       \
    \ fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61)\
    \ = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n\
    \        fibs(65) = 1l\n        fibs(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9edq4mhk.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        fibs(\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9edq4mhk.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9edq4mhk.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:23:8\
    \ -------------------------"
  stdout: ''
  timestamp: 1659799192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib_n = 0\n        var prime_n = 2\n        var prime_n_prime\
    \ = 2\n        var prime_n_prime_prime = 2\n        var prime_n_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime = 2\n        var prime_n_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime = 2\n        var\
    \ prime_n_prime_prime_prime_prime_prime_prime_prime = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 2\n        var prime_n_prime_prime_prime_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpd8jaw39w.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpd8jaw39w.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mprime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpd8jaw39w.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mvar\e[0m \e[36mprime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  prime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpd8jaw39w.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mvar\e[0m \e[36mprime_n_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659799185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs.drop(3).foreach(fibs\
    \ => fibs(3) = fibs(2) + fibs(1))\n        fibs.takeWhile(_ < n).last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplpzr79wo.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplpzr79wo.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplpzr79wo.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmplpzr79wo.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplpzr79wo.scala:20:37\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs.drop(\e[31m3\e\
    [0m).foreach(\e[36mfibs\e[0m => fibs(\e[31m3\e[0m) = fibs(\e[31m2\e[0m) + fibs(\e\
    [31m1\e[0m))\n\e[31m\e[31m   |\e[0m                                     ^^^^\e\
    [0m\n\e[31m   |\e[0m                                    value update is not a\
    \ member of Long\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmplpzr79wo.scala:20:47\
    \ -----------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs.drop(\e\
    [31m3\e[0m).foreach(\e[36mfibs\e[0m => fibs(\e[31m3\e[0m) = fibs(\e[31m2\e[0m)\
    \ + fibs(\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                               \
    \                ^^^^\e[0m\n\e[31m   |\e[0m                                 \e\
    [33mparameter\e[0m \e[35mfibs\e[0m does not take parameters\n\e"
  stdout: ''
  timestamp: 1659799187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val isPrime = true\n        val isFib = true\n        val isPrimeFib\
    \ = true\n        val isPrimeFibonacci = true\n        val isPrimeFibonacciPrime\
    \ = true\n        val isPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrime = true\n        val\
    \ isPrimeFibonacciPrimeFibonacciPrimeFib = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib = true\n   \
    \     val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = true\n\
    \        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime =\
    \ true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFib\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci\
    \ = true\n        val isPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime\
    \ = true\n        val is\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmposw14fx9.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmposw14fx9.scala:39:5 ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n\
    \        var t = 2l\n        var u = 2l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n\
    \        var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 2l\n        var y = 2l\n\
    \        var z = 2l\n        var a = 1l\n        var b = 1l\n        var c = 1l\n\
    \        var d = 1l\n        var e = 1l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 2l\n        var r = 2l\n        var s = 2l\n\
    \        var t = 2l\n        var u = 2l\n        var v = 1l\n        var w = 1l\n\
    \        var x = 2l\n        var y = 2l\n        var z = 2l\n        var a = 1l\n\
    \        var b = 1l\n        var c = 1l\n        var d = 1l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 2l\n        var q = 2l\n\
    \        var r = 2l\n        var s = 2l\n        var t = 2l\n        var u = 2l\n\
    \        var v = 1l\n        var w = 1l\n        var x = 2l\n        var y = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuhr95t5f.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpuhr95t5f.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpuhr95t5f.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuhr95t5f.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuhr95t5f.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuhr95t5f.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1659799185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0l).init\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).foreach(x => fibs(x)\
    \ = fibs(x - 1) + fibs(x - 2))\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt3dmhwcd.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt3dmhwcd.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:23:43 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mx\e[0m =>\
    \ fibs(x) = fibs(x - \e[31m1\e[0m) + fibs(x - \e[31m2\e[0m))\n\e[31m\e[31m   |\e\
    [0m                                           ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch "
  stdout: ''
  timestamp: 1659799189
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1l\n        var b : Long = 1l\n        var\
    \ c : Long = 1l\n        var d : Long = 1l\n        var i : Long = 1l\n      \
    \  var prime : Boolean = false\n        while(!prime){\n            if((n % 2l)\
    \ == 0){\n                a = b\n                b = c\n                c = d\n\
    \                d = n\n                i = 2l\n                prime = true\n\
    \            }\n            else{\n                i = i + 1l\n              \
    \  d = a + b\n                a = b\n                b = c\n                c\
    \ = d\n            }\n        }\n        return d\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659799190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 0l\n        fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i)\
    \ = fib_array(i-1) + fib_array(i-2)\n        }\n        fib_array(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ha3_p95.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6ha3_p95.scala:19:22 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ha3_p95.scala:22:18\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659799187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_nums = mutable.ArrayBuffer.empty[Long]\n       \
    \ val prime_fib_nums = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val\
    \ prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size\
    \ = mutable.ArrayBuffer.empty[Long]\n        val prime_fib_nums_size = mutable.ArrayBuffer.empty[Long]\n\
    \        val prime_fib_nums_size = mutable.Array\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvdo4uifs.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_nums_size\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_nums_size is already defined as \e[33mvalue\e[0m\
    \ \e[35mprime_fib_nums_size\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvdo4uifs.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_nums_size\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_nums_size is already defined as \e[33mvalue\e[0m\
    \ \e[35mprime_fib_nums_size\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvdo4uifs.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_nums_size\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_nums_size is already defined as \e[33mvalue\e[0m\
    \ \e[35mprime_fib_nums_size\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvdo4uifs.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_nums_size\e[0m\
    \ = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_nums_size is already defined as \e[33mvalue\e[0m\
    \ \e[35mprime_fib_nums_size\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [3"
  stdout: ''
  timestamp: 1659799186
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.find(_ == n).map(_ + 1).headOption.getOrElse(fibs.last)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg20m5x5a.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpg20m5x5a.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg20m5x5a.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpg20m5x5a.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpg20m5x5a.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg20m5x5a.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwi91v8oz.scala:99:8\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m        fibs += \e[31m82\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:  \
    \  (fibs : scala.collection.mutable.ListBuffer[Long])\n\e[31m   |\e[0m       \
    \ Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpes2aroi2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n        fibs :::\
    \ fibs.dropWhile(_ < n).takeWhile(_ < n).drop(1).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpn3wbmvvd.scala:18:4 ----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn3wbmvvd.scala:16:19\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ListBuffer(\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpn3wbmvvd.scala:17:1417\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs ::: fibs.dropWhile(_\
    \ < n).takeWhile(_ < n).drop(\e[31m1\e[0m).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_\
    \ < n).takeWhile(_ < n).takeWhile(_ < n).takeWhile(_ < n"
  stdout: ''
  timestamp: 1659799184
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2) +=\
    \ fibs(n / 2 - 1)\n        fibs(n / 2) += fibs(n / 2 + 1)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8ldpcwn.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8ldpcwn.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\e[31m   |\e[0m    \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8ldpcwn.scala:17:28\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            Found:\
    \    Long\n\e[31m   |\e[0m                            Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8ldpcwn.scala:18:13 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e\
    [0m + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e\
    [0m             Found:    Long\n\e[31m   |\e[0m             Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd8ldpcwn.scala:18:28\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ += fibs(n / \e[31m2\e[0m + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            Found:\
    \    Long\n\e[31m   |\e[0m                            Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m long"
  stdout: ''
  timestamp: 1659799190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib = scala.math.BigInt(2)\n\
    \        val prime_fibs = scala.collection.mutable.ListBuffer[Long]()\n      \
    \  val prime_fibs_prime = scala.collection.mutable.ListBuffer[Long]()\n      \
    \  val prime_fib_prime = scala.math.BigInt(2)\n        val prime_fibs_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime_fib_prime_prime_prime = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_fib_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.math.BigInt(2)\n        val prime_fibs_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val prime_\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n \
    \   assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n   \
    \ assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n   \
    \ assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbbtjoug9.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbbtjoug9.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m\
    \ \e[36mprime_fibs_prime_prime_prime_prime_prime_prime\e[0m = scala.collection.mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fibs_prime_prime_prime_prime_prime_prime is already\
    \ defined as \e[33mvalue\e[0m \e[35mprime_fibs_prime_prime_prime_prime_prime_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbbtjoug9.scala:35:12 ---------------------------\e[0m\e[0m\n\e\
    [31m35 |\e[0m        \e[33mval\e[0m \e[36mprime_fib_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.math.BigInt(\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fib_prime_prime_prime_prime_prime_prime is already defined\
    \ as \e[33mvalue\e[0m \e[35mprime_fib_prime_prime_prime_prime_prime_prime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpbbtjoug9.scala:38:12 ---------------------------\e[0m\e[0m\n\e[31m38\
    \ |\e[0m        \e[33mval\e[0m \e[36mprime_fibs_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mprime_fibs_prime_prime_prime_prime_prime_prime_prime is already\
    \ defined as \e[33mvalue\e[0m \e[35mprime_fibs_prime_prime_prime_prime_prime_prime_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined"
  stdout: ''
  timestamp: 1659799188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n    \
    \    fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) =\
    \ 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(x => fibs(x) =\
    \ fibs(x) + fibs(x - 1))\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2h1k98iw.scala:23:43 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mx\e[0m =>\
    \ fibs(x) = fibs(x) + fibs(x - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m         \
    \                                  ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not\
    \ a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp2h1k98iw.sc"
  stdout: ''
  timestamp: 1659799196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2) +\
    \ (fibs(n / 2 - 1l))\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp80qvxrf1.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp80qvxrf1.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ + (fibs(n / \e[31m2\e[0m - \e[31m1l\e[0m))\n\e[31m\e[31m   |\e[0m          \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\e[31m   |\e[0m  \
    \           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp80qvxrf1.scala:17:28 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        fibs(n / \e[31m2\e[0m) + (fibs(n / \e[31m2\e[0m - \e[31m1l\e[0m))\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                            Found:    Long\n\e[31m   |\e[0m               \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 0l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](n)\n\
    \        prime_array(0) = false\n        prime_array(1) = true\n        for(i\
    \ <- 2 to n) {\n            val a = fib_array(i)\n            val b = fib_array(i-1)\n\
    \            fib_array(i) = a + b\n            prime_array(i) = !(fib_array(i)\
    \ %2L)\n        }\n        fib_array\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcl_xprdc.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcl_xprdc.scala:19:45 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n)\n\e[31m\e[31m   |\e[0m           \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcl_xprdc.scala:22:22 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcl_xprdc.scala:26:29\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            prime_array(i)\
    \ = !(fib_array(i) %\e[31m2L\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \         ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      value unary_! is not\
    \ a member of Long - did you mean Long.unary_+?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpcl_xprdc.scala:28:8 ---------------------\e[0m\e[0m\n\e[31m28\
    \ |\e[0m        fib_array\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        Found:    (fib_array : Array[Long])\n\e[31m   |\e[0m       \
    \ Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](5l)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        val prime_array\
    \ = new Array[Long](5l)\n        prime_array(0) = 1l\n        prime_array(1) =\
    \ 1l\n        prime_array(2) = 1l\n        prime_array(3) = 1l\n        prime_array(4)\
    \ = 1l\n        prime_array(5) = 1l\n        val prime_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val prime_array_size =\
    \ prime_array.length\n        val fib_array_size = fib_array.length\n        val\
    \ fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_size = fib_array.length\n\
    \        val fib_array_size = fib_array.length\n        val fib_array_\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp1c3cbksd.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1c3cbksd.scala:32:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mprime_array_size\e[0m = prime_array.length\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mprime_array_size\
    \ is already defined as \e[33mvalue\e[0m \e[35mprime_array_size\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp1c3cbksd.scala:33:12 ---------------------------\e[0m\e[0m\n\e[31m33\
    \ |\e[0m        \e[33mval\e[0m \e[36mfib_array_size\e[0m = fib_array.length\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mfib_array_size is already defined as \e[33mvalue\e[0m \e[35mfib_array_size\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1c3cbksd.scala:34:12 ---------------------------\e[0m\e[0m\n\e\
    [31m34 |\e[0m        \e[33mval\e[0m \e[36mfib_array_size\e[0m = fib_array.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mfib_array_size is already defined as \e[33mvalue\e[0m \e[35mfib_array_size\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp1c3cbksd.scala:35:12 ---------------------------\e[0m\e[0m\n\e\
    [31m35 |\e[0m        \e[33mval\e[0m \e[36mfib_array_size\e[0m = fib_array.length\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mfib_array_size is already defined as \e[33mvalue\e[0m \e[35mfib_array_size\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tm"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(2l, 3l, 5l)\n        fibs.takeWhile(fibs.head\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgl7woglf.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9ch_g3h1.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 0l\n        var j = 1l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 2l\n        var v = 3l\n        var w =\
    \ 0l\n        var x = 2l\n        var y = 3l\n        var z = 0l\n        var\
    \ aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n  \
    \      var ae = 89l\n        var af = 0l\n        var ag = 2l\n        var ah\
    \ = 3l\n        var ai = 0l\n        var aj = 1l\n        var ak = 0l\n      \
    \  var al = 0l\n        var am = 2l\n        var an = 2l\n        var ao = 2l\n\
    \        var ap = 2l\n        var aq = 3l\n        var ar = 5l\n        var as\
    \ = 13l\n        var at = 89l\n        var au = 2l\n        var av = 3l\n    \
    \    var aw = 0l\n        var ax = 2l\n        var ay = 3l\n        var az = 0l\n\
    \        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n        var bd\
    \ = 13l\n        var be = 89l\n        var bf = 0l\n        var bg = 2l\n    \
    \    var bh = 3l\n        var bi = 0l\n        var bj = 1l\n        var bk = 0l\n\
    \        var bl = 0l\n        var bm = 2l\n        var bn = 2l\n        var bo\
    \ = 2l\n        var bp = 2l\n        var bq = 3l\n        var br = 5l\n      \
    \  var bs = 13l\n        var bt = 89l\n        var bu = 2l\n        var bv = 3l\n\
    \        var bw = 0l\n        var bx = 3l\n        var by = 3l\n        var bz\
    \ = 0l\n        var ca = 2l\n        var cb = 3l\n        var cc = 5l\n      \
    \  var cd = 13l\n        var ce = 89l\n        var cf = 0l\n        var cg = 2l\n\
    \        var ch = 3l\n        var ci = 0l\n        var cj = 1l\n        var ck\
    \ = 0l\n        var cl = 0l\n        var cm = 2l\n        var cn = 2l\n      \
    \  var co = 2l\n        var cp = 2l\n        var cq = 3l\n        var cr = 5l\n\
    \        var cs = 13l\n        var ct = 89l\n        var cu = 2l\n        var\
    \ cv\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7_wusiyu.scala:116:4 ---------------------------\e\
    [0m\e[0m\n\e[31m116 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp7_wusiyu.scala:116:5 --------------------\e[0m\e[0m\n\e[31m116 |\e[0m\
    \    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\
    \e[31m    |\e[0m     Required: Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i)\
    \ = fib_array(i-1) + fib_array(i-2)\n        }\n        fib_array(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:19:22 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:22:18\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659799197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n\
    \        fibs += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n\
    \        fibs += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs +=\
    \ 11l\n        fibs += 12l\n        fibs += 13l\n        fibs += 14l\n       \
    \ fibs += 15l\n        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n\
    \        fibs += 19l\n        fibs += 20l\n        fibs += 21l\n        fibs +=\
    \ 22l\n        fibs += 23l\n        fibs += 24l\n        fibs += 25l\n       \
    \ fibs += 26l\n        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n\
    \        fibs += 30l\n        fibs += 31l\n        fibs += 32l\n        fibs +=\
    \ 33l\n        fibs += 34l\n        fibs += 35l\n        fibs += 36l\n       \
    \ fibs += 37l\n        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n\
    \        fibs += 41l\n        fibs += 42l\n        fibs += 43l\n        fibs +=\
    \ 44l\n        fibs += 45l\n        fibs += 46l\n        fibs += 47l\n       \
    \ fibs += 48l\n        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n\
    \        fibs += 52l\n        fibs += 53l\n        fibs += 54l\n        fibs +=\
    \ 55l\n        fibs += 56l\n        fibs += 57l\n        fibs += 58l\n       \
    \ fibs += 59l\n        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n\
    \        fibs += 63l\n        fibs += 64l\n        fibs += 65l\n        fibs +=\
    \ 66l\n        fibs += 67l\n        fibs += 68l\n        fibs += 69l\n       \
    \ fibs += 70l\n        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n\
    \        fibs += 74l\n        fibs += 75l\n        fibs += 76l\n        fibs +=\
    \ 77l\n        fibs += 78l\n        fibs += 79l\n        fibs += 80l\n       \
    \ fibs += 81l\n        fibs += 82\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwi91v8oz.scala:99:8\
    \ ---------------------\e[0m\e[0m\n\e[31m99 |\e[0m        fibs += \e[31m82\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:  \
    \  (fibs : scala.collection.mutable.ListBuffer[Long])\n\e[31m   |\e[0m       \
    \ Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 5\n\
    \        fibs += 13\n        fibs += 89\n        fibs += 4\n        fibs += 8\n\
    \        fibs += 12\n        fibs += 16\n        fibs += 32\n        fibs += 64\n\
    \        fibs += 128\n        fibs += 256\n        fibs += 512\n        fibs +=\
    \ 1024\n        fibs += 2048\n        fibs += 4096\n        fibs += 8192\n   \
    \     fibs += 16384\n        fibs += 32768\n        fibs += 65536\n        fibs\
    \ += 131072\n        fibs += 262144\n        fibs += 524288\n        fibs += 1048576\n\
    \        fibs += 2097152\n        fibs += 4194304\n        fibs += 8388608\n \
    \       fibs += 16777216\n        fibs += 33554432\n        fibs += 67108864\n\
    \        fibs += 134217728\n        fibs += 268435456\n        fibs += 536870912\n\
    \        fibs += 1073741824\n        fibs += 2147483648\n        fibs += 4294967296\n\
    \        fibs += 8589934592\n        fibs += 17179869184\n        fibs += 34359738368\n\
    \        fibs += 68719476736\n        fibs += 137438953472\n        fibs += 274877906944\n\
    \        fibs += 549755813888\n        fibs += 1099511627776\n        fibs +=\
    \ 2199023255552\n        fibs += 4398046511104\n        fibs += 8796093022208\n\
    \        fibs += 17592186044416\n        fibs += 35184372088832\n        fibs\
    \ += 70368744177664\n        fibs += 140737488355328\n        fibs += 281474976710656\n\
    \        fibs += 562949953421312\n        fibs += 1125899906842624\n        fibs\
    \ += 2251799813685248\n        fibs += 4503599627370496\n        fibs += 9007199254740992\n\
    \        fibs += 18014398509481984\n        fibs += 36028797018963968\n      \
    \  fibs += 72057594037927936\n        fibs += 144115188075855872\n        \n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjfpui_b.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = fibs(1)\
    \ = 1l\n        fibs(n / 2) = fibs(n / 2 - 1) + fibs(n / 2)\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy5rhvfxf.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy5rhvfxf.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean fibs.updated?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy5rhvfxf.scala:17:18 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = fibs(\e[31m1\e[0m) = \e\
    [31m1l\e[0m\n\e[31m\e[31m   |\e[0m                  ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpy5rhvfxf.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m) = fibs(n / \e[31m2\e[0m\
    \ - \e[31m1\e[0m) + fibs(n / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy5rhvfxf.scala:18:27\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ = fibs(n / \e[31m2\e[0m - \e[31m1\e[0m) + fibs(n / \e[31m2\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                           ^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                  Found:    Long\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy5rhvfxf.scala:18:45\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ = fibs(n / \e[31m2\e[0m - \e[31m1\e[0m) + fibs(n / \e[31m2\e[0m)\n\e[31m\e[31m\
    \   |\e[0m    "
  stdout: ''
  timestamp: 1659799199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 7l\n        var n = 8l\n        var o = 1l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 7l\n\
    \        var t = 8l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n\
    \        var x = 5l\n        var y = 7l\n        var z = 8l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 7l\n\
    \        var n = 8l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 7l\n        var t = 8l\n        var u = 1l\n\
    \        var v = 2l\n        var w = 3l\n        var x = 5l\n        var y = 7l\n\
    \        var z = 8l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n\
    \        var d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 7l\n        var n = 8l\n        var o = 1l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 7l\n\
    \        var t = 8l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n\
    \        var x = 5l\n        var y = 7l\n        var z = 8l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n\
    \        var f = 1l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 2l\n        var l = 5l\n        var m = 7l\n\
    \        var n = 8l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 7l\n        var t = 8l\n        var u = 1l\n\
    \        var v = 2l\n        var w = 3l\n        var x = 5l\n        var y = \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpbvmzylao.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpbvmzylao.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpbvmzylao.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbvmzylao.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbvmzylao.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m7l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbvmzylao.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1659799197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 5\n\
    \        fibs += 13\n        fibs += 89\n        fibs += 101\n        fibs +=\
    \ 201\n        fibs += 301\n        fibs += 401\n        fibs += 501\n       \
    \ fibs += 601\n        fibs += 701\n        fibs += 801\n        fibs += 901\n\
    \        fibs += 1001\n        fibs += 2001\n        fibs += 3001\n        fibs\
    \ += 4001\n        fibs += 5001\n        fibs += 6001\n        fibs += 7001\n\
    \        fibs += 8001\n        fibs += 9001\n        fibs += 10001 \n        fibs\
    \ += 20001\n        fibs += 30001\n        fibs += 40001\n        fibs += 50001\n\
    \        fibs += 60001\n        fibs += 70001\n        fibs += 80001\n       \
    \ fibs += 90001\n        fibs += 100001\n        fibs += 200001\n        fibs\
    \ += 300001\n        fibs += 400001\n        fibs += 500001\n        fibs += 600001\n\
    \        fibs += 700001\n        fibs += 800001\n        fibs += 900001\n    \
    \    fibs += 1000001 \n        fibs += 2000001 \n        fibs += 3000001 \n  \
    \      fibs += 4000001 \n        fibs += 5000001 \n        fibs += 6000001 \n\
    \        fibs += 7000001 \n        fibs += 8000001 \n        fibs += 9000001 \n\
    \        fibs += 10000001\n        fibs += 20000001\n        fibs += 30000001\n\
    \        fibs += 40000001\n        fibs += 50000001\n        fibs += 60000001\n\
    \        fibs += 70000001\n        fibs += 80000001\n        fibs += 90000001\n\
    \        fibs += 100000001 \n        fibs += 200000001\n        fibs += 300000001\n\
    \        fibs += 400000001\n        fibs += 500000001\n        fibs += 600000001\n\
    \        fibs += 700000001\n        fibs += 800000001\n        fibs += 900000001\n\
    \        fibs += 1000000001\n        fibs += 2000000001\n        fibs += 3000000001\n\
    \        fibs += 4000000001\n        fibs += 5000000001\n        fibs += 6000000001\n\
    \        fibs += 7000000001\n        fibs += 8000000001\n        fibs += 9\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1el999qh.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs.zip(fibs.tail).foreach\
    \ { case (a, b) => if (b > a) fibs(b - 2l) = a * a + b * b}\n        fibs(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5h6ux_vu.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5h6ux_vu.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp5h6ux_vu.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp5h6ux_vu.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5h6ux_vu.scala:20:64\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs.zip(fibs.tail).foreach\
    \ { \e[33mcase\e[0m (a, b) => \e[33mif\e[0m (b > a) fibs(b - \e[31m2l\e[0m) =\
    \ a * a + b * b}\n\e[31m\e[31m   |\e[0m                                      \
    \                          ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member\
    \ of Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp5h6ux_vu.scala:21:13 --------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        fibs(n)\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e\
    [0m             Found:    (n : Long)\n\e[31m   |\e[0m             Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1659799200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 4l\n        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs\
    \ += 8l\n        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n      \
    \  fibs += 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n\
    \        fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs +=\
    \ 19l\n        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n       \
    \ fibs += 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n\
    \        fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs +=\
    \ 30l\n        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n       \
    \ fibs += 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n\
    \        fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs +=\
    \ 41l\n        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n       \
    \ fibs += 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n\
    \        fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs +=\
    \ 52l\n        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n       \
    \ fibs += 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n\
    \        fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs +=\
    \ 63l\n        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n       \
    \ fibs += 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n\
    \        fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs +=\
    \ 74l\n        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n       \
    \ fibs += 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n\
    \        fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptrtmqbpp.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = mutable.ListBuffer[Long]()\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9s7h32qz.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799194
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val result = scala.math.BigInt(0)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:20:18\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpj2g2ngu8.scala:25:18 --------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs += fib\n  \
    \      primes += prime\n        while(fibs.size < n) {\n            val newFib\
    \ = fib.plus(prime)\n            fibs += newFib\n            primes += newFib\n\
    \        }\n        fibs(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2aza2l_l.scala:20:16\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs += fib\n\e[31m\e\
    [31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                Found: \
    \   (fib : BigInt)\n\e[31m   |\e[0m                Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2aza2l_l.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp2aza2l_l.scala:23:29 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mnewFib\e[0m = fib.plus(prime)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                        value plus is not a member of BigInt\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2aza2l_l.scala:27:13 --------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        fibs(n)\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\e[31m   |\e[0m       \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659799201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n   \
    \     fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11)\
    \ = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n\
    \        fibs(15) = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n       \
    \ fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21)\
    \ = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n\
    \        fibs(25) = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n       \
    \ fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31)\
    \ = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n\
    \        fibs(35) = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n       \
    \ fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41)\
    \ = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n\
    \        fibs(45) = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n       \
    \ fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51)\
    \ = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n\
    \        fibs(55) = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n       \
    \ fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61)\
    \ = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n\
    \        fibs(65) = 1l\n        fibs(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfi40ljdm.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        fibs(\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:23:8\
    \ -------------------------"
  stdout: ''
  timestamp: 1659799208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l).reverse ++ Vector.fill(n\
    \ / 2)(3l).reverse\n        val primes = Vector.fill(n / 2)(2l).reverse ++ Vector.fill(n\
    \ / 2)(3l).reverse ++ Vector.fill(n / 2)(5l).reverse\n        val fibIndex = fibs.indexOf(n)\n\
    \        val primeIndex = primes.indexOf(n)\n        fibs(fibIndex + primeIndex)\
    \ % n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnj1hhuw_.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m).reverse ++ Vector.fill(n /\
    \ \e[31m2\e[0m)(\e[31m3l\e[0m).reverse\n\e[31m\e[31m   |\e[0m                \
    \               ^^^^^\e[0m\n\e[31m   |\e[0m                               Found:\
    \    Long\n\e[31m   |\e[0m                               Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnj1hhuw_.scala:16:65 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m2l\e[0m).reverse ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m3l\e\
    [0m).reverse\n\e[31m\e[31m   |\e[0m                                          \
    \                       ^^^^^\e[0m\n\e[31m   |\e[0m                          \
    \                                Found:    Long\n\e[31m   |\e[0m             \
    \                                             Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnj1hhuw_.scala:17:33 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m2l\e[0m).reverse ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m3l\e\
    [0m).reverse ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m5l\e[0m).reverse\n\e[31m\e\
    [31m   |\e[0m                                 ^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                             Found:    Long\n\e[31m   |\e[0m                \
    \                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpnj1hhuw_.scala:17:67 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = Vector.fill(n / \e[31m2\e[0m)(\e\
    [31m2l\e[0m).reverse ++ Vector.fill(n / \e[31m2\e[0m)(\e[31m3l\e[0m).reverse ++\
    \ Vector.fill(n / \e[31m2\e[0m)(\e[31m5l\e[0m).reverse\n\e[31m\e[31m   |\e[0m\
    \                                    "
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(3, 5)\n        val\
    \ fibs = scala.collection.mutable.ArrayBuffer(fib, fib + fib)\n        val fibs_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes_prime\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime)\n        val fibs_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = scala.collection.mutable.ArrayBuffer(fib, prime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmsbvdpau.scala:38:4 ----------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmsbvdpau.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfibs_primes_primes_primes_primes_primes_primes_prime\e[0m = scala.collection.mutable.ArrayBuffer(fib,\
    \ prime)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibs_primes_primes_primes_primes_primes_primes_prime is already\
    \ defined as \e[33mvalue\e[0m \e[35mfibs_primes_primes_primes_primes_primes_primes_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpmsbvdpau.scala:35:12 ---------------------------\e[0m\e[0m\n\e\
    [31m35 |\e[0m        \e[33mval\e[0m \e[36mfibs_primes_primes_primes_primes_primes_primes_primes\e\
    [0m = scala.collection.mutable.ArrayBuffer(fib, prime)\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibs_primes_primes_primes_primes_primes_primes_primes is already\
    \ defined as \e[33mvalue\e[0m \e[35mfibs_primes_primes_primes_primes_primes_primes_primes\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpmsbvdpau.scala:38:5 ---------------------\e[0m\e[0m\n\
    \e[31m38 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:\
    \    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659799201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        val fib = (fibs take n).sum\n        fib\
    \ match {\n            case 0 => fib\n            case _ => primeFib(fib - 1)\
    \ + 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl_lsabu0.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](5)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        val fib_array_length\
    \ = fib_array.length\n        val fib_array_index_length = fib_array_length -\
    \ 1\n        val fib_array_index_index_length = fib_array_index_length - 1\n \
    \       val fib_array_index_index_index_length = fib_array_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_length = fib_array_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_length = fib_array_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_length = fib_array_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_length - 1\n        val fib_array_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_length - 1\n        val\
    \ fib_array_index_index_index_index_index_index_index_index_index_length = fib_array_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ = fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - 1\n        val fib_array_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpicucj8rj.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpicucj8rj.scala:32:85\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_array_index_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_index_length -\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                        \
    \                                             ^\e[0m\n\e[31m   |\e[0mRecursive\
    \ \e[33mvalue\e[0m \e[35mfib_array_index_index_index_index_index_index_index_index_index_length\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpicucj8rj.scala:33:91\
    \ ---------------------------\e[0m\e[0m\n\e[31m33 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_array_index_index_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_index_index_length\
    \ - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                      \
    \                                                     ^\e[0m\n\e[31m   |\e[0mRecursive\
    \ \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  fib_array_index_index_index_index_index_index_index_index_index_index_length\n\
    \e[31m   |\e[0m\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpicucj8rj.scala:34:97 ---------------------------\e[0m\e[0m\n\e[31m34\
    \ |\e[0m        \e[33mval\e[0m \e[36mfib_array_index_index_index_index_index_index_index_index_index_index_index_length\e\
    [0m = fib_array_index_index_index_index_index_index_index_index_index_index_index_length\
    \ - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                      \
    \                                                           ^\e[0m\n\e[31m   |\e\
    [0mRecursive \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  fib_array_index_index_index_index_index_index_inde"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqqqgs95z.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m             Found:\
    \    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n\
    \        var l = 1l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n\
    \        var p = 5l\n        var q = 13l\n        var r = 89l\n        var s =\
    \ 1l\n        var t = 1l\n        var u = 1l\n        var v = 1l\n        var\
    \ w = 1l\n        var x = 2l\n        var y = 3l\n        var z = 3l\n       \
    \ var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n\
    \        var ae = 89l\n        var af = 1l\n        var ag = 1l\n        var ah\
    \ = 1l\n        var ai = 1l\n        var aj = 1l\n        var ak = 1l\n      \
    \  var al = 1l\n        var am = 2l\n        var an = 3l\n        var ao = 3l\n\
    \        var ap = 5l\n        var aq = 13l\n        var ar = 89l\n        var\
    \ as = 1l\n        var at = 1l\n        var au = 1l\n        var av = 1l\n   \
    \     var aw = 1l\n        var ax = 2l\n        var ay = 3l\n        var az =\
    \ 3l\n        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n        var\
    \ bd = 13l\n        var be = 89l\n        var bf = 1l\n        var bg = 1l\n \
    \       var bh = 1l\n        var bi = 1l\n        var bj = 1l\n        var bk\
    \ = 1l\n        var bl = 1l\n        var bm = 2l\n        var bn = 3l\n      \
    \  var bo = 3l\n        var bp = 5l\n        var bq = 13l\n        var br = 89l\n\
    \        var bs = 1l\n        var bt1 = 3l\n        var bt2 = 3l\n        var\
    \ bt3 = 5l\n        var bt4 = 13l\n        var bt5 = 89l\n        var bt6 = 1l\n\
    \        var bt7 = 1l\n        var bt8 = 1l\n        var bt9 = 1l\n        var\
    \ bt10 = 1l\n        var bt11 = 1l\n        var bt12 = 1l\n        var bt13 =\
    \ 1l\n        var bt14 = 1l\n        var bt15 = 1l\n        var bt16 = 1l\n  \
    \      var bt17 = 1l\n        var bt18 = 1l\n        var bt19 = 1l\n        var\
    \ bt20 = 1l\n        var bt21 = 1l\n        var bt22 = 1l\n        var bt23 =\
    \ 1l\n        var bt24 = 1l\n        var \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpy0xl2zyp.scala:111:11 --------------------------\e\
    [0m\e[0m\n\e[31m111 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy0xl2zyp.scala:112:5 --------------------\e\
    [0m\e[0m\n\e[31m112 |\e[0m    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m   \
    \ |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required: Long\n\e[31m    |\e\
    [0m\n\e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(fibs.head <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1uxxfqxg.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 3l\n        var m = 5l\n        var n = 13l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 3l\n        var r = 5l\n        var\
    \ s = 13l\n        var t = 1l\n        var u = 2l\n        var v = 5l\n      \
    \  var w = 13l\n        var x = 1l\n        var y = 2l\n        var z = 3l\n \
    \       var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad\
    \ = 13l\n        var ae = 89l\n        var af = 1l\n        var ag = 2l\n    \
    \    var ah = 3l\n        var ai = 5l\n        var aj = 1l\n        var ak = 2l\n\
    \        var al = 3l\n        var am = 5l\n        var an = 13l\n        var ao\
    \ = 1l\n        var ap = 2l\n        var aq = 3l\n        var ar = 5l\n      \
    \  var as = 13l\n        var at = 1l\n        var au = 2l\n        var av = 5l\n\
    \        var aw = 13l\n        var ax = 1l\n        var ay = 2l\n        var az\
    \ = 3l\n        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n      \
    \  var bd = 13l\n        var be = 89l\n        var bf = 1l\n        var bg = 2l\n\
    \        var bh = 3l\n        var bi = 5l\n        var bj = 1l\n        var bk\
    \ = 2l\n        var bl = 3l\n        var bm = 5l\n        var bn = 13l\n     \
    \   var bo = 1l\n        var bp = 2l\n        var bq = 3l\n        var br = 5l\n\
    \        var bs = 13l\n        var bt = 1l\n        var bu = 2l\n        var bv\
    \ = 5l\n        var bw = 13l\n        var bx = 1l\n        var by = 2l\n     \
    \   var bz = 3l\n        var ca = 2l\n        var cb = 3l\n        var cc = 5l\n\
    \        var cd = 13l\n        var ce = 89l\n        var cf = 1l\n        var\
    \ cg = 2l\n        var ch = 3l\n        var ci = 5l\n        var cj = 1l\n   \
    \     var ck = 2l\n        var cl = 3l\n        var cm = 5l\n        var cn =\
    \ 13l\n        var co = 1l\n        var cp = 2l\n        var cq = 3l\n       \
    \ var cr = 5l\n        var cs = 13l\n        var ct = 1l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdgpv7pwa.scala:114:5\
    \ --------------------\e[0m\e[0m\n\e[31m114 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](5) // fibonacci array\n\
    \        fib_array(0) = 1l\n        fib_array(1) = 1l\n        fib_array(2) =\
    \ 1l\n        fib_array(3) = 1l\n        fib_array(4) = 1l\n        fib_array(5)\
    \ = 1l\n        val prime_array = new Array[Boolean](5) // prime array\n     \
    \   prime_array(0) = false\n        prime_array(1) = false\n        prime_array(2)\
    \ = false\n        prime_array(3) = false\n        prime_array(4) = false\n  \
    \      prime_array(5) = false\n        val counter = n // counter for fibonacci\
    \ array\n        while(counter > 0) {\n            val temp = fib_array(counter)\n\
    \            fib_array(counter) = fib_array(counter-1) + fib_array(counter-2)\n\
    \            fib_array(counter) = temp\n            prime_array(counter) = fib_array(counter)\
    \ == n\n            counter -= 1\n        }\n        fib_array(counter)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp569qcm7g.scala:32:33\
    \ --------------------\e[0m\e[0m\n\e[31m32 |\e[0m            \e[33mval\e[0m \e\
    [36mtemp\e[0m = fib_array(counter)\n\e[31m\e[31m   |\e[0m                    \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Found:\
    \    (counter : Long)\n\e[31m   |\e[0m                                 Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp569qcm7g.scala:33:22\
    \ --------------------\e[0m\e[0m\n\e[31m33 |\e[0m            fib_array(counter)\
    \ = fib_array(counter-\e[31m1\e[0m) + fib_array(counter-\e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (counter : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp569qcm7g.scala:33:43\
    \ --------------------\e[0m\e[0m\n\e[31m33 |\e[0m            fib_array(counter)\
    \ = fib_array(counter-\e[31m1\e[0m) + fib_array(counter-\e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                           ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                           Found:    Long\n\e[31m  \
    \ |\e[0m                                           Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp569qcm7g.scala:33:66 --------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m            fib_array(counter) = fib_array(counter-\e\
    [31m1\e[0m) + fib_array(counter-\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                                                         ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                                          Found:   \
    \ Long\n\e[31m   |\e[0m                                                      \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp569qcm7g.s"
  stdout: ''
  timestamp: 1659799207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibonacci = mutable.ListBuffer[Long]()\n        fibonacci\
    \ += 0l\n        fibonacci += 1l\n        fibonacci += 2l\n        fibonacci +=\
    \ 3l\n        fibonacci += 5l\n        fibonacci += 8l\n        fibonacci += 13l\n\
    \        fibonacci += 21l\n        fibonacci += 34l\n        fibonacci += 55l\n\
    \        fibonacci += 89l\n        fibonacci += 144l\n        fibonacci += 233l\n\
    \        fibonacci += 377l\n        fibonacci += 610l\n        fibonacci += 987l\n\
    \        fibonacci += 1597l\n        fibonacci += 2584l\n        fibonacci +=\
    \ 4181l\n        fibonacci += 6765l\n        fibonacci += 10946l\n        fibonacci\
    \ += 17711l\n        fibonacci += 28657l\n        fibonacci += 46368l\n      \
    \  fibonacci += 75025l\n        fibonacci += 121393l\n        fibonacci += 196418l\n\
    \        fibonacci += 317811l\n        fibonacci += 514229l\n        fibonacci\
    \ += 832040l\n        fibonacci += 1346269l\n        fibonacci += 2178309l\n \
    \       fibonacci += 3524578l\n        fibonacci += 5702887l\n        fibonacci\
    \ += 9227465l\n        fibonacci += 14930352l\n        fibonacci += 24157817l\n\
    \        fibonacci += 39088169l\n        fibonacci += 63245986l\n        fibonacci\
    \ += 102334155l\n        fibonacci += 165580141l\n        fibonacci += 267914296l\n\
    \        fibonacci += 433494437l\n        fibonacci += 701408733l\n        fibonacci\
    \ += 1134903170l\n        fibonacci += 1836311903l\n        fibonacci += 2971215073l\n\
    \        fi\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8pbcy5iq.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8pbcy5iq.scala:64:8 -------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m        fi\n\e[31m\e[31m   |\e[0m        ^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fi\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0l).init\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).foreach(x => fibs(x)\
    \ = fibs(x - 1) + fibs(x - 2))\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt3dmhwcd.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt3dmhwcd.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpt3dmhwcd.scala:23:43 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mx\e[0m =>\
    \ fibs(x) = fibs(x - \e[31m1\e[0m) + fibs(x - \e[31m2\e[0m))\n\e[31m\e[31m   |\e\
    [0m                                           ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch "
  stdout: ''
  timestamp: 1659799189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs take n foreach\
    \ { x => \n            if (fibs contains x) return x\n            fibs += x\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppv7zdf_e.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2) +=\
    \ fibs(n / 2 - 1)\n        fibs(n / 2) += fibs(n / 2 - 2)\n        fibs(n / 2)\
    \ += fibs(n / 2 - 3)\n        fibs(n / 2) += fibs(n / 2 - 4)\n        fibs(n /\
    \ 2) += fibs(n / 2 - 5)\n        fibs(n / 2) += fibs(n / 2 - 6)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 7)\n        fibs(n / 2) += fibs(n / 2 - 8)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 9)\n        fibs(n / 2) += fibs(n / 2 - 10)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 11)\n        fibs(n / 2) += fibs(n / 2 - 12)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 13)\n        fibs(n / 2) += fibs(n / 2 - 14)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 15)\n        fibs(n / 2) += fibs(n / 2 - 16)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 17)\n        fibs(n / 2) += fibs(n / 2 - 18)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 19)\n        fibs(n / 2) += fibs(n / 2 - 20)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 21)\n        fibs(n / 2) += fibs(n / 2 - 22)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 23)\n        fibs(n / 2) += fibs(n / 2 - 24)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 25)\n        fibs(n / 2) += fibs(n / 2 - 26)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 27)\n        fibs(n / 2) += fibs(n / 2 - 28)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 29)\n        fibs(n / 2) += fibs(n / 2 - 30)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 31)\n        fibs(n / 2) += fibs(n / 2 - 32)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 33)\n        fibs(n / 2) += fibs(n / 2 - 34)\n        fibs(n\
    \ / 2) += fibs(n / 2 - 35\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpg41g5ry7.scala:52:4 ----------------------------\e\
    [0m\e[0m\n\e[31m52 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpg41g5ry7.scala:16:31 --------------------\e[0m\e[0m\n\e[31m16 |\e[0m\
    \        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^\e[0m\n\e[31m \
    \  |\e[0m                               Found:    Long\n\e[31m   |\e[0m      \
    \                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpg41g5ry7.scala:17:13 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m -\
    \ \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m\
    \             Found:    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg41g5ry7.scala:17:28 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e\
    [0m - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Found:    Long\n\e[31m   |\e[0m\
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpg41g5ry7.scala:18:13 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e[0m -\
    \ \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m             ^^^^^\e[0m\n\e[31m   |\e[0m\
    \             Found:    Long\n\e[31m   |\e[0m             Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg41g5ry7.scala:18:28 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2\e[0m) += fibs(n / \e[31m2\e\
    [0m - \e[31m2\e[0m)\n\e[31m\e[31m  "
  stdout: ''
  timestamp: 1659799216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime = scala.math.BigInt(2)\n        primes += prime\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpx_fz3_qn.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_fz3_qn.scala:20:14 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        prime += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member of BigInt\
    \ - did you mean prime.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_fz3_qn.scala:21:14\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        prime += \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ += is not a member of BigInt - did you mean prime.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpx_fz3_qn.scala:22:14 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        prime += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member of BigInt -\
    \ did you mean prime.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_fz3_qn.scala:23:14\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        prime += \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ += is not a member of BigInt - did you mean prime.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpx_fz3_qn.scala:24:14 ------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        prime += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member of BigInt -\
    \ did you mean prime.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx_fz3_qn.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        prime += \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ += is not a member of BigInt - did you mean prime.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpx_fz3_qn.scala:26:14 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m  "
  stdout: ''
  timestamp: 1659799217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](2l, n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](2l)\n\
    \        var prime_flag = true\n        for(i <- 2l to n){\n            val fib_num\
    \ = fib_array(i - 1)\n            val prime_num = fib_array(i - 2)\n         \
    \   if(fib_num + prime_num == i){\n                prime_flag = false\n      \
    \      }\n            fib_array(i) = fib_num + prime_num\n            prime_array(i)\
    \ = prime_flag\n        }\n        fib_array(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqup0j8j0.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](\e[31m2l\e[0m, n)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^^^\e[0m\n\e[31m   |\e\
    [0m                                        Found:    (Long, Long)\n\e[31m   |\e\
    [0m                                        Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqup0j8j0.scala:19:45 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                                             ^^\e[0m\n\e[31m   |\e[0m       \
    \                                      Found:    (\e[31m2L\e[0m : Long)\n\e[31m\
    \   |\e[0m                                             Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqup0j8j0.scala:22:36 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e[36mfib_num\e[0m = fib_array(i\
    \ - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    Found:    Long\n\e[31m\
    \   |\e[0m                                    Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqup0j8j0.scala:23:38 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mprime_num\e[0m = fib_array(i\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                                     \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m                                      Found:    Long\n\
    \e[31m   |\e[0m                                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqup0j8j0.scala:27:22 --"
  stdout: ''
  timestamp: 1659799210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fibs += 0\n        fibs += 1\n        fibs += 2\n        fibs += 3\n\
    \        fibs += 5\n        fibs += 13\n        fibs += 89\n        fibs += 4\n\
    \        fibs += 8\n        fibs += 12\n        fibs += 16\n        fibs += 32\n\
    \        fibs += 64\n        fibs += 128\n        fibs += 256\n        fibs +=\
    \ 512\n        fibs += 1024\n        fibs += 2048\n        fibs += 4096\n    \
    \    fibs += 8192\n        fibs += 16384\n        fibs += 32768\n        fibs\
    \ += 65536\n        fibs += 131072\n        fibs += 262144\n        fibs += 524288\n\
    \        fibs += 1048576\n        fibs += 2097152\n        fibs += 4194304\n \
    \       fibs += 8388608\n        fibs += 16777216\n        fibs += 33554432\n\
    \        fibs += 67108864\n        fibs += 134217728\n        fibs += 268435456\n\
    \        fibs += 536870912\n        fibs += 1073741824\n        fibs += 2147483648\n\
    \        fibs += 4294967296\n        fibs += 8589934592\n        fibs += 17179869184\n\
    \        fibs += 34359738368\n        fibs += 68719476736\n        fibs += 137438953472\n\
    \        fibs += 274877906944\n        fibs += 549755813888\n        fibs += 1099511627776\n\
    \        fibs += 2199023255552\n        fibs += 4398046511104\n        fibs +=\
    \ 8796093022208\n        fibs += 17592186044416\n        fibs += 35184372088832\n\
    \        fibs += 70368744177664\n        fibs += 140737488355328\n        fibs\
    \ += 281474976710656\n        fibs += 562949953421312\n        fibs += 1125899906842624\n\
    \        fibs += 2251799813685248\n        fibs += 4503599627370496\n        fibs\
    \ += 9007199254740992\n        fibs += 18014398509481984\n        fibs += 36028797018963968\n\
    \        fibs += 72057594037927936\n        fibs += 144115188075855\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n \
    \   assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n   \
    \ assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n   \
    \ assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5564bw5a.scala:80:8\
    \ ---------------------\e[0m\e[0m\n\e[31m80 |\e[0m        fibs += \e[31m144115188075855\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        Found:    (fibs : scala.collection.mutable.ListBuffer[Long])\n\e[31m\
    \   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.collection.mutable.ListBuffer[Long]()\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n\
    \        fib.append(1)\n        fib.append(1)\n        fib.append(1)\n       \
    \ fib.append(1)\n        fib.append(1)\n        fib.append(\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphttxd6au.scala:99:19 ---------------------------\e\
    [0m\e[0m\n\e[31m99 |\e[0m        fib.append(\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmphttxd6au.scala:99:12\
    \ -----------------------------\e[0m\e[0m\n\e[31m99 |\e[0m        fib.append(\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e\
    [0m with types\n\e[31m   |\e[0m (elems: Long*): (fib : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0m (elem: Long): (fib : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0mmatch arguments (Null)\n2 errors found\n"
  stdout: ''
  timestamp: 1659799171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(2l, 3l, 5l, 8l)\n       \
    \ fibs.takeWhile(_ < n).last\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpamvdgvo4.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m, \e[31m8l\e[0m)\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibonacci = mutable.ListBuffer[Long]()\n        fibonacci\
    \ += 0l\n        fibonacci += 1l\n        fibonacci += 2l\n        fibonacci +=\
    \ 3l\n        fibonacci += 5l\n        fibonacci += 13l\n        fibonacci +=\
    \ 89l\n        fibonacci.takeWhile(x => x < n).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbcfhspa.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659799205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs += fib\n  \
    \      primes += prime\n        primes += prime\n        while(fibs.size < n){\n\
    \            val fib = fibs.last\n            val prime = primes.last\n      \
    \      fibs += fib\n            primes += prime\n        }\n        fibs.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi5c7ku4v.scala:20:16\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs += fib\n\e[31m\e\
    [31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                Found: \
    \   (fib : BigInt)\n\e[31m   |\e[0m                Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi5c7ku4v.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpi5c7ku4v.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l).reverse ++ Vector.fill((n\
    \ / 2)(2l))(2l).reverse\n        fibs(n) match {\n            case 0 => n\n  \
    \          case 1 => n\n            case _ => primeFib(fibs(n-1) + fibs(n-2))\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp19vant25.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m).reverse ++ Vector.fill((n /\
    \ \e[31m2\e[0m)(\e[31m2l\e[0m))(\e[31m2l\e[0m).reverse\n\e[31m\e[31m   |\e[0m\
    \                               ^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \             Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp19vant25.scala:16:66\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e\
    [0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m).reverse ++\
    \ Vector.fill((n / \e[31m2\e[0m)(\e[31m2l\e[0m))(\e[31m2l\e[0m).reverse\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \  ^^^^^\e[0m\n\e[31m   |\e[0m                    \e[33mmethod\e[0m \e[35m/\e\
    [0m in \e[33mclass\e[0m \e[35mLong\e[0m does not take more parameters\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp19vant25.scala:17:13 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(n) \e[33mmatch\e[0m {\n\e[31m\e[31m   |\e\
    [0m             ^\e[0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\e[31m\
    \   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp19vant25.scala:20:36 --------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            \e[33mcase\e[0m _ => primeFib(fibs(n-\e[31m1\e\
    [0m) + fibs(n-\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^\e[0m\n\e[31m   |\e[0m                                    Found:\
    \    Long\n\e[31m   |\e[0m                                    Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp19vant25.scala:20:48\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m           "
  stdout: ''
  timestamp: 1659799211
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        val prime = scala.math.BigInt(3)\n        val limit = scala.math.BigInt(n).divide(prime)\n\
    \        val fibs = scala.collection.mutable.ListBuffer[Long]()\n        fibs\
    \ += fib\n        primes += prime\n        prime += 2\n        prime += 2\n  \
    \      prime += 2\n        prime += 2\n        prime += 2\n        prime += 2\n\
    \        prime += 2\n        prime += 2\n        prime += 2\n        prime +=\
    \ 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += 2\n        prime += 2\n        prime += 2\n        prime\
    \ += 2\n        prime += \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpz5jbwh2p.scala:109:16 --------------------------\e\
    [0m\e[0m\n\e[31m109 |\e[0m        prime += \n\e[31m\e[31m    |\e[0m          \
    \      ^\e[0m\n\e[31m    |\e[0m                expression expected but \e[31m'}'\e\
    [0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz5jbwh2p.scala:19:41\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mlimit\e[0m = scala.math.BigInt(n).divide(prime)\n\e[31m\e[31m   |\e[0m   \
    \                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \          value divide is not a member of BigInt\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpz5jbwh2p.scala:21:16 --------------------\e[0m\e[0m\n\
    \e[31m21 |\e[0m        fibs += fib\n\e[31m\e[31m   |\e[0m                ^^^\e\
    [0m\n\e[31m   |\e[0m                Found:    (fib : BigInt)\n\e[31m   |\e[0m\
    \                Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpz5jbwh2p.scala:22:18 --------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m                  ^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\e[31m   |\e\
    [0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpz5jbwh2p.scala:23:14 ------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m        prime += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        value += is not a member of BigInt - did you mean prime.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz5jbwh2p.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        prime += \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member of BigInt\
    \ - did you mean prime.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz5jbwh2p.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        prime += \e[3"
  stdout: ''
  timestamp: 1659799218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += 2\n        primes += 3\n        primes += 5\n        primes += 13\n     \
    \   primes += 89\n        while (fib <= n) {\n            val temp = fib % prime\n\
    \            if (temp == 0) primes += temp\n            fib = fib + (prime - 1)\n\
    \        }\n        primes.last\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2clnt0mq.scala:26:37\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m            \e[33mif\e[0m (temp\
    \ == \e[31m0\e[0m) primes += temp\n\e[31m\e[31m   |\e[0m                     \
    \                ^^^^\e[0m\n\e[31m   |\e[0m                                  \
    \   Found:    (temp : BigInt)\n\e[31m   |\e[0m                               \
    \      Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2clnt0mq.scala:27:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            fib = fib\
    \ + (prime - \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs2 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes2 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val fibs3 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes3 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs4 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes4 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val fibs5 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes5 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs6 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes6 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val fibs7 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes7 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs8 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes8 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val fibs9 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val primes9 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ fibs10 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val primes10 =\
    \ Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs11 = Vector.fill(5)(2l).takeWhile(_\
    \ < n).reverse\n        val primes11 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n\
    \        val fibs12 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val\
    \ primes12 = Vector.fill(5)(2l).takeWhile(_ < n).reverse\n        val fibs13 =\
    \ Vector.fill(5)(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp8lqmq8p4.scala:40:36 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mval\e[0m \e[36mfibs13\e[0m = Vector.fill(\e\
    [31m5\e[0m)(\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\
    \e[31m   |\e[0m                                    expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8lqmq8p4.scala:41:5\
    \ ---------------------\e[0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        val fib = (fibs.last, fibs.last)\n        fibs +=\
    \ fib\n        fibs.drop(1).find(_ == fib).map(_ + 1).getOrElse(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n  \
    \  assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3wgz_pu.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1l\n        var b : Long = 1l\n        var\
    \ c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n      \
    \  var f : Long = 1l\n        var g : Long = 1l\n        var h : Long = 1l\n \
    \       var i : Long = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n\
    \        var l : Long = 1l\n        var m : Long = 1l\n        var n : Long =\
    \ 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var q : Long\
    \ = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n        var t :\
    \ Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n        var\
    \ w : Long = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n      \
    \  var z : Long = 1l\n        var a : Long = 1l\n        var b : Long = 1l\n \
    \       var c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n\
    \        var f : Long = 1l\n        var g : Long = 1l\n        var h : Long =\
    \ 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var k : Long\
    \ = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n        var n :\
    \ Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var\
    \ q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n      \
    \  var t : Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n \
    \       var w : Long = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n\
    \        var z : Long = 1l\n        var a : Long = 1l\n        var b : Long =\
    \ 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var e : Long\
    \ = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n        var h :\
    \ Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var\
    \ k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n      \
    \  var n : Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n \
    \       var q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n\
    \        var t : Long = 1l\n        var u : Long = 1l\n        var v : Long =\
    \ 1l\n        var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp25tid0ob.scala:90:11 ---------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0ma is already defined as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mb\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined as \e[33mvariable\e\
    [0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp25tid0ob.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mc is already defined as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:45:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m\
    \ \e[36md\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined as \e[33mvariable\e\
    [0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp25tid0ob.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mv"
  stdout: ''
  timestamp: 1659799214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs += 101l\n        fibs\
    \ += 201l\n        fibs += 301l\n        fibs += 401l\n        fibs += 501l\n\
    \        fibs += 601l\n        fibs += 701l\n        fibs += 801l\n        fibs\
    \ += 901l\n        fibs += 1001l\n        fibs += 2001l\n        fibs += 3001l\n\
    \        fibs += 4001l\n        fibs += 5001l\n        fibs += 6001l\n       \
    \ fibs += 7001l\n        fibs += 8001l\n        fibs += 9001l\n        fibs +=\
    \ 1000l\n        fibs += 2000l\n        fibs += 3000l\n        fibs += 4000l\n\
    \        fibs += 5000l\n        fibs += 6000l\n        fibs += 7000l\n       \
    \ fibs += 8000l\n        fibs += 9000l\n        fibs += 10000l\n        fibs +=\
    \ 20000l\n        fibs += 30000l\n        fibs += 40000l\n        fibs += 50000l\n\
    \        fibs += 60000l\n        fibs += 70000l\n        fibs += 80000l\n    \
    \    fibs += 90000l\n        fibs += 100000l\n        fibs += 200000l\n      \
    \  fibs += 300000l\n        fibs += 400000l\n        fibs += 500000l\n       \
    \ fibs += 600000l\n        fibs += 700000l\n        fibs += 800000l\n        fibs\
    \ += 900000l\n        fibs += 1000000l\n        fibs += 2000000l\n        fibs\
    \ += 3000000l\n        fibs += 4000000l\n        fibs += 5000000l\n        fibs\
    \ += 6000000l\n        fibs += 7000000l\n        fibs += 8000000l\n        fibs\
    \ += 9000000l\n        fibs += 10000000l\n        fibs += 20000000l\n        fibs\
    \ += 30000000l\n        fibs += 40000000l\n        fibs += 50000000l\n       \
    \ fibs += 60000000l\n        fibs += 70000000l\n        fibs += 80000000l\n  \
    \      fibs += 90000000l\n        fibs += 100000000l\n        fibs += 200000000l\n\
    \        fibs += 300000000l\n        fibs += 400000000l\n        fibs += 5\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgza71l7b.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpes2aroi2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpes2aroi2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n\
    \        var l = 2l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n\
    \        var p = 5l\n        var q = 13l\n        var r = 89l\n        var s =\
    \ 2l\n        var t = 2l\n        var u = 2l\n        var v = 3l\n        var\
    \ w = 5l\n        var x = 13l\n        var y = 89l\n        var z = 1l\n     \
    \   var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 1l\n        var h =\
    \ 1l\n        var i = 2l\n        var j = 2l\n        var k = 2l\n        var\
    \ l = 2l\n        var m = 2l\n        var n = 3l\n        var o = 3l\n       \
    \ var p = 5l\n        var q = 13l\n        var r = 89l\n        var s = 2l\n \
    \       var t = 2l\n        var u = 2l\n        var v = 3l\n        var w = 5l\n\
    \        var x = 13l\n        var y = 89l\n        var z = 1l\n        var a =\
    \ 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n        var\
    \ e = 89l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n      \
    \  var i = 2l\n        var j = 2l\n        var k = 2l\n        var l = 2l\n  \
    \      var m = 2l\n        var n = 3l\n        var o = 3l\n        var p = 5l\n\
    \        var q = 13l\n        var r = 89l\n        var s = 2l\n        var t =\
    \ 2l\n        var u = 2l\n        var v = 3l\n        var w = 5l\n        var\
    \ x = 13l\n        var y = 89l\n        var z = 1l\n        var a = 2l\n     \
    \   var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 2l\n\
    \        var j = 2l\n        var k = 2l\n        var l = 2l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 3l\n        var p = 5l\n        var q = 13l\n\
    \        var r = 89l\n        var s = 2l\n        var t = 2l\n        var u =\
    \ 2l\n        var v = 3l\n        var w = 5l\n        var x = 13l\n        var\
    \ y = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpne3psnt5.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpne3psnt5.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpne3psnt5.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpne3psnt5.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpne3psnt5.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpne3psnt5.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n    \
    \    fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) =\
    \ 1\n        fibs(5) = 1\n        fibs.takeWhile(_ < n).foreach(fibs => fibs(5)\
    \ = fibs(5) + fibs(4))\n        fibs(5)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp00c6k5w6.scala:23:46 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs.takeWhile(_ < n).foreach(\e[36mfibs\e[0m\
    \ => fibs(\e[31m5\e[0m) = fibs(\e[31m5\e[0m) + fibs(\e[31m4\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                                              ^^^^\e[0m\n\e[31m   |\e\
    [0m                                     value update is not a member of Int\n\e\
    [31m\e[31m-- [E050] Type Error: /tmp/tmp"
  stdout: ''
  timestamp: 1659799217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 5l\n\
    \        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ < n).last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptj3sanat.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(0l) +=\
    \ 2l\n        fibs(1l) += 2l\n        fibs(2l) += 2l\n        fibs(3l) += 2l\n\
    \        fibs(4l) += 2l\n        fibs(5l) += 2l\n        fibs(6l) += 2l\n    \
    \    fibs(7l) += 2l\n        fibs(8l) += 2l\n        fibs(9l) += 2l\n        fibs(10l)\
    \ += 2l\n        fibs(11l) += 2l\n        fibs(12l) += 2l\n        fibs(13l) +=\
    \ 2l\n        fibs(14l) += 2l\n        fibs(15l) += 2l\n        fibs(16l) += 2l\n\
    \        fibs(17l) += 2l\n        fibs(18l) += 2l\n        fibs(19l) += 2l\n \
    \       fibs(20l) += 2l\n        fibs(21l) += 2l\n        fibs(22l) += 2l\n  \
    \      fibs(23l) += 2l\n        fibs(24l) += 2l\n        fibs(25l) += 2l\n   \
    \     fibs(26l) += 2l\n        fibs(27l) += 2l\n        fibs(28l) += 2l\n    \
    \    fibs(29l) += 2l\n        fibs(30l) += 2l\n        fibs(31l) += 2l\n     \
    \   fibs(32l) += 2l\n        fibs(33l) += 2l\n        fibs(34l) += 2l\n      \
    \  fibs(35l) += 2l\n        fibs(36l) += 2l\n        fibs(37l) += 2l\n       \
    \ fibs(38l) += 2l\n        fibs(39l) += 2l\n        fibs(40l) += 2l\n        fibs(41l)\
    \ += 2l\n        fibs(42l) += 2l\n        fibs(43l) += 2l\n        fibs(44l) +=\
    \ 2l\n        fibs(45l) += 2l\n        fibs(46l) += 2l\n        fibs(47l) += 2l\n\
    \        fibs(48l) += 2l\n        fibs(49l) += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2qxnqosr.scala:66:20 ---------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m        fibs(\e[31m49l\e[0m) += \n\e[31m\e[31m   |\e\
    [0m                    ^\e[0m\n\e[31m   |\e[0m                    expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp2qxnqosr.scala:16:31 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2l\e[0m)(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                               Found:    Long\n\e[31m   |\e[0m\
    \                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp2qxnqosr.scala:17:13 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0l\e[0m) += \e[31m2l\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^\e[0m\n\e[31m   |\e[0m             Found:    (\e[31m0L\e\
    [0m : Long)\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2qxnqosr.scala:18:13 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1l\e[0m) += \e[31m2l\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^\e[0m\n\e[31m   |\e[0m             Found:    (\e[31m1L\e\
    [0m : Long)\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2qxnqosr.scala:19:13 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2l\e[0m) += \e[31m2l\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^\e[0m\n\e[31m   |\e[0m             Found:    (\e[31m2L\e\
    [0m : Long)\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2qxnqosr.scala:20:13 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m "
  stdout: ''
  timestamp: 1659799222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(n) match {\n       \
    \     case 0 => 1l\n            case 1 => 1l\n            case _ => {\n      \
    \          val i = 2\n                while (i < fibs.size) {\n              \
    \      fibs(i) match {\n                        case 0 => fibs(i - 1)\n      \
    \                  case 1 => fibs(i - 2)\n                        case _ => {\n\
    \                            val j = 3\n                            while (j <\
    \ fibs.size) {\n                                fibs(j) match {\n            \
    \                        case 0 => fibs(j - 1)\n                             \
    \       case 1 => fibs(j - 2)\n                                    case _ => {\n\
    \                                        val k = 5\n                         \
    \               while (k < fibs.size) {\n                                    \
    \        fibs(k) match {\n                                                case\
    \ 0 => fibs(k - 1)\n                                                case 1 =>\
    \ fibs(k - 2)\n                                                case _ => {\n \
    \                                                   val l = 13\n             \
    \                                       while (l < fibs.size) {\n            \
    \                                            fibs(l) match {\n               \
    \                                             case 0 => fibs(l - 1)\n        \
    \                                                    case 1 => fibs(l - 2)\n \
    \                                                           case _ => fibs(l)\n\
    \                                                        }\n                 \
    \                                       l += 1\n                             \
    \                       }\n                                                }\n\
    \                                            }\n                             \
    \               k += 1\n                                        }\n          \
    \                          }\n                                }\n            \
    \                    j += 1\n                            }\n                 \
    \       }\n                    }\n                    i += 1\n               \
    \ }\n                fibs(n)\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph2990uer.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmph2990uer.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmph2990uer.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmph2990uer.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph2990uer.scala:20:13\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(n) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e[0m             Found:\
    \    (n : Long)\n\e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmph2990uer.scala:49:58 ------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m                                                    \
    \    l += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                \
    \                        ^^^^\e[0m\n\e[31m   |\e[0m                    value +=\
    \ is not a member of Int - did you mean l.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmph2990uer.scala:53:46"
  stdout: ''
  timestamp: 1659799218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n    \
    \    fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) =\
    \ 1\n        fibs(5) = 1\n        fibs(6) = 1\n        fibs(7) = 1\n        fibs(8)\
    \ = 1\n        fibs(9) = 1\n        fibs(10) = 1\n        fibs(11) = 1\n     \
    \   fibs(12) = 1\n        fibs(13) = 1\n        fibs(14) = 1\n        fibs(15)\
    \ = 1\n        fibs(16) = 1\n        fibs(17) = 1\n        fibs(18) = 1\n    \
    \    fibs(19) = 1\n        fibs(20) = 1\n        fibs(21) = 1\n        fibs(22)\
    \ = 1\n        fibs(23) = 1\n        fibs(24) = 1\n        fibs(25) = 1\n    \
    \    fibs(26) = 1\n        fibs(27) = 1\n        fibs(28) = 1\n        fibs(29)\
    \ = 1\n        fibs(30) = 1\n        fibs(31) = 1\n        fibs(32) = 1\n    \
    \    fibs(33) = 1\n        fibs(34) = 1\n        fibs(35) = 1\n        fibs(36)\
    \ = 1\n        fibs(37) = 1\n        fibs(38) = 1\n        fibs(39) = 1\n    \
    \    fibs(40) = 1\n        fibs(41) = 1\n        fibs(42) = 1\n        fibs(43)\
    \ = 1\n        fibs(44) = 1\n        fibs(45) = 1\n        fibs(46) = 1\n    \
    \    fibs(47) = 1\n        fibs(48) = 1\n        fibs(49) = 1\n        fibs(50)\
    \ = 1\n        fibs(51) = 1\n        fibs(52) = 1\n        fibs(53) = 1\n    \
    \    fibs(54) = 1\n        fibs(55) = 1\n        fibs(56) = 1\n        fibs(57)\
    \ = 1\n        fibs(58) = 1\n        fibs(59) = 1\n        fibs(60) = 1\n    \
    \    fibs(61) = 1\n        fibs(62) = 1\n        fibs(63) = 1\n        fibs(64)\
    \ = 1\n        fibs(65) = 1\n        fibs(66) = 1\n        fibs(67) = 1\n    \
    \    fibs(68) = 1\n        fibs(69) = 1\n        fibs(70) = 1\n        fibs(71)\
    \ = 1\n        fibs(72) = 1\n        fibs(73) = 1\n        fibs(74) = 1\n    \
    \    fibs(75) = 1\n        \n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:23:8 -------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fibs(\e[31m6\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpym24d92q.scala:24:8\
    \ -------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        fibs(\e[31m7\e[0m)\
    \ = \e[31m1\e[0m\n\e"
  stdout: ''
  timestamp: 1659799223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](n)\n\
    \        prime_array(0) = false\n        prime_array(1) = false\n        var i\
    \ = 2\n        while (i < n) {\n            if (fib_array(i) == fib_array(i-1)\
    \ + fib_array(i-2))\n                prime_array(i) = true\n            else\n\
    \                prime_array(i) = false\n            i += 1\n        }\n     \
    \   fib_array\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd2u0tn_n.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpd2u0tn_n.scala:19:45 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n)\n\e[31m\e[31m   |\e[0m           \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpd2u0tn_n.scala:30:8 ---------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        fib_array\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    (fib_array : Array[Long])\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 7l\n        var e = 1l\n        var f = 1l\n        var g = 1l\n\
    \        var h = 1l\n        var i = 1l\n        var j = 1l\n        var k = 1l\n\
    \        var l = 1l\n        var m = 1l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 3l\n        var q = 3l\n        var r = 4l\n        var s = 5l\n\
    \        var t = 6l\n        var u = 7l\n        var v = 8l\n        var w = 9l\n\
    \        var x = 10l\n        var y = 11l\n        var z = 12l\n        var a\
    \ = 2l\n        var b = 3l\n        var c = 5l\n        var d = 7l\n        var\
    \ e = 1l\n        var f = 1l\n        var g = 1l\n        var h = 1l\n       \
    \ var i = 1l\n        var j = 1l\n        var k = 1l\n        var l = 1l\n   \
    \     var m = 1l\n        var n = 2l\n        var o = 2l\n        var p = 3l\n\
    \        var q = 3l\n        var r = 4l\n        var s = 5l\n        var t = 6l\n\
    \        var u = 7l\n        var v = 8l\n        var w = 9l\n        var x = 10l\n\
    \        var y = 11l\n        var z = 12l\n        var a = 2l\n        var b =\
    \ 3l\n        var c = 5l\n        var d = 7l\n        var e = 1l\n        var\
    \ f = 1l\n        var g = 1l\n        var h = 1l\n        var i = 1l\n       \
    \ var j = 1l\n        var k = 1l\n        var l = 1l\n        var m = 1l\n   \
    \     var n = 2l\n        var o = 2l\n        var p = 3l\n        var q = 3l\n\
    \        var r = 4l\n        var s = 5l\n        var t = 6l\n        var u = 7l\n\
    \        var v = 8l\n        var w = 9l\n        var x = 10l\n        var y =\
    \ 11l\n        var z = 12l\n        var a = 2l\n        var b = 3l\n        var\
    \ c = 5l\n        var d = 7l\n        var e = 1l\n        var f = 1l\n       \
    \ var g = 1l\n        var h = 1l\n        var i = 1l\n        var j = 1l\n   \
    \     var k = 1l\n        var l = 1l\n        var m = 1l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 3l\n        var q = 3l\n        var r = 4l\n\
    \        var s = 5l\n        var t = 6l\n        var u = 7l\n        var v = 8l\n\
    \        var w = 9l\n        var x = 10l\n        var y = \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpat_jpe86.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpat_jpe86.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpat_jpe86.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpat_jpe86.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpat_jpe86.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m7l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpat_jpe86.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1659799218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(1l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n   \
    \     fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11)\
    \ = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n\
    \        fibs(15) = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n       \
    \ fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21)\
    \ = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n\
    \        fibs(25) = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n       \
    \ fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31)\
    \ = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n\
    \        fibs(35) = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n       \
    \ fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41)\
    \ = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n\
    \        fibs(45) = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n       \
    \ fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51)\
    \ = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n\
    \        fibs(55) = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n       \
    \ fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61)\
    \ = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n\
    \        fibs(65) = 1l\n        fibs(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9edq4mhk.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        fibs(\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9edq4mhk.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp9edq4mhk.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9edq4mhk.scala:23:8\
    \ -------------------------"
  stdout: ''
  timestamp: 1659799192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l).filter(_ < n).takeWhile(_\
    \ <= n).map(_ + _)\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjyymisw1.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m).filter(_ < n).takeWhile(_ <=\
    \ n).map(_ + _)\n\e[31m\e[31m   |\e[0m                               ^^^^^\e[0m\n\
    \e[31m   |\e[0m                               Found:    Long\n\e[31m   |\e[0m\
    \                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E086] Syntax Error: /tmp/tmpjyymisw1.scala:16:78 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n\
    \ / \e[31m2\e[0m)(\e[31m2l\e[0m).filter(_ < n).takeWhile(_ <= n).map(_ + _)\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                    ^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \    Wrong number of parameters, expected: 1\n2 errors found\n"
  stdout: ''
  timestamp: 1659799217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(1l, 2l)\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc4hmdhcc.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpc4hmdhcc.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpes2aroi2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1l\n        var b : Long = 2l\n        var\
    \ c : Long = 3l\n        var d : Long = 5l\n        var e : Long = 13l\n     \
    \   var f : Long = 89l\n        var g : Long = 97l\n        var h : Long = 23l\n\
    \        var i : Long = 29l\n        var j : Long = 31l\n        var k : Long\
    \ = 43l\n        var l : Long = 57l\n        var m : Long = 67l\n        var n\
    \ : Long = 79l\n        var o : Long = 89l\n        var p : Long = 97l\n     \
    \   var q : Long = 23l\n        var r : Long = 29l\n        var s : Long = 31l\n\
    \        var t : Long = 43l\n        var u : Long = 57l\n        var v : Long\
    \ = 67l\n        var w : Long = 79l\n        var x : Long = 89l\n        var y\
    \ : Long = 97l\n        var z : Long = 23l\n        var a : Long = 1l\n      \
    \  var b : Long = 2l\n        var c : Long = 3l\n        var d : Long = 5l\n \
    \       var e : Long = 13l\n        var f : Long = 89l\n        var g : Long =\
    \ 97l\n        var h : Long = 23l\n        var i : Long = 29l\n        var j :\
    \ Long = 31l\n        var k : Long = 43l\n        var l : Long = 57l\n       \
    \ var m : Long = 67l\n        var n : Long = 79l\n        var o : Long = 89l\n\
    \        var p : Long = 97l\n        var q : Long = 23l\n        var r : Long\
    \ = 29l\n        var s : Long = 31l\n        var t : Long = 43l\n        var u\
    \ : Long = 57l\n        var v : Long = 67l\n        var w : Long = 79l\n     \
    \   var x : Long = 89l\n        var y : Long = 97l\n        var z : Long = 23l\n\
    \        var a : Long = 1l\n        var b : Long = 2l\n        var c : Long =\
    \ 3l\n        var d : Long = 5l\n        var e : Long = 13l\n        var f : Long\
    \ = 89l\n        var g : Long = 97l\n        var h : Long = 23l\n        var i\
    \ : Long = 29l\n        var j : Long = 31l\n        var k : Long = 43l\n     \
    \   var l : Long = 57l\n        var m : Long = 67l\n        var n : Long = 79l\n\
    \        var o \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplic9cdyu.scala:83:4 ----------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplic9cdyu.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m\
    \ \e[36ma\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplic9cdyu.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = \e[31m2l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mb is already defined as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplic9cdyu.scala:44:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mc\e[0m : \e[35mLong\e[0m = \e[31m3l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined as \e[33mvariable\e\
    [0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmplic9cdyu.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m : \e[35mLong\e[0m\
    \ = \e[31m5l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0md is already defined as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplic9cdyu.scala:46:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m\
    \ \e[36me\e[0m : \e[35mLong\e[0m = \e[31m13l\e[0m\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |"
  stdout: ''
  timestamp: 1659799221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](5)\n        fib_array(0)\
    \ = 1\n        fib_array(1) = 1\n        fib_array(2) = 1\n        fib_array(3)\
    \ = 1\n        fib_array(4) = 1\n        val i = 5\n        while(i <= n) {\n\
    \            fib_array(i) = fib_array(i-1) + fib_array(i-2)\n            i = i\
    \ + 1\n        }\n        fib_array(5) = n\n        fib_array(4)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpxx6zs9cz.scala:25:14 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            i = i + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_n = scala.math.BigInt(n).fibonacci\n        val\
    \ prime_n = scala.math.BigInt(n).prime\n        val prime_fib_n = fib_n.multiply(prime_n)\n\
    \        prime_fib_n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbm74lpd7.scala:16:41 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_n\e[0m = scala.math.BigInt(n).fibonacci\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                    value fibonacci is not a member of BigInt\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbm74lpd7.scala:17:43 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mprime_n\e[0m = scala.math.BigInt(n).prime\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      value prime is not a member of BigInt\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val primes = scala.collection.mutable.ListBuffer[Long]()\n\
    \        primes += 2l\n        primes += 3l\n        primes += 5l\n        primes\
    \ += 13l\n        primes += 89l\n        primes += 101l\n        primes += 201l\n\
    \        primes += 301l\n        primes += 401l\n        primes += 501l\n    \
    \    primes += 601l\n        primes += 701l\n        primes += 801l\n        primes\
    \ += 901l\n        primes += 1001l\n        primes += 2001l\n        primes +=\
    \ 3001l\n        primes += 4001l\n        primes += 5001l\n        primes += 6001l\n\
    \        primes += 7001l\n        primes += 8001l\n        primes += 9001l\n \
    \       primes += 1000l\n        primes += 2000l\n        primes += 3000l\n  \
    \      primes += 4000l\n        primes += 5000l\n        primes += 6000l\n   \
    \     primes += 7000l\n        primes += 8000l\n        primes += 9000l\n    \
    \    primes += 10000l\n        primes += 20000l\n        primes += 30000l\n  \
    \      primes += 40000l\n        primes += 50000l\n        primes += 60000l\n\
    \        primes += 70000l\n        primes += 80000l\n        primes += 90000l\n\
    \        primes += 100000l\n        primes += 200000l\n        primes += 300000l\n\
    \        primes += 400000l\n        primes += 500000l\n        primes += 600000l\n\
    \        primes += 700000l\n        primes += 800000l\n        primes += 900000l\n\
    \        primes += 1000000l\n        primes += 2000000l\n        primes += 3000000l\n\
    \        primes += 4000000l\n        primes += 5000000l\n        primes += 6000000l\n\
    \        primes += 7000000l\n        primes += 8000000l\n        primes += 9000000l\n\
    \        primes += 10000000l\n        primes += 20000000l\n        primes += 30000000l\n\
    \        primes += 40000000l\n        primes += 50000000l\n        primes += 60000000l\n\
    \        primes += 70000000l\n        primes += 80000000l\n        primes += 90000000l\n\
    \        primes += 100000000l\n        primes += 200000000l\n        primes +=\
    \ 300000000l\n        primes += 400000000l\n        prime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdsiphz3i.scala:90:8 -------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m        prime\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\
    \e[31m   |\e[0m        Not found: prime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        val fib = (fibs(0l) + fibs(1l))/2\n     \
    \   while (fib < n) {\n            fibs += fib\n            fib = (fibs(0l) +\
    \ fibs(1l))/2\n        }\n        fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd783cl6t.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpd783cl6t.scala:22:16 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            fib = (fibs(\e[31m0l\e[0m) + fibs(\e[31m1l\e\
    [0m))/\e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val fib\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 13l\n        var k =\
    \ 89l\n        var l = 1l\n        var m = 2l\n        var n = 5l\n        var\
    \ o = 3l\n        var p = 13l\n        var q = 89l\n        var r = 1l\n     \
    \   var s = 2l\n        var t = 5l\n        var u = 3l\n        var v = 13l\n\
    \        var w = 89l\n        var x = 1l\n        var y = 2l\n        var z =\
    \ 3l\n        var aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var\
    \ ad = 13l\n        var ae = 89l\n        var af = 1l\n        var ag = 2l\n \
    \       var ah = 3l\n        var ai = 5l\n        var aj = 13l\n        var ak\
    \ = 89l\n        var al = 1l\n        var am = 2l\n        var an = 5l\n     \
    \   var ao = 3l\n        var ap = 13l\n        var aq = 89l\n        var ar =\
    \ 1l\n        var as = 2l\n        var at = 5l\n        var au = 3l\n        var\
    \ av = 13l\n        var aw = 89l\n        var ax = 1l\n        var ay = 2l\n \
    \       var az = 3l\n        var ba = 2l\n        var bb = 3l\n        var bc\
    \ = 5l\n        var bd = 13l\n        var be = 89l\n        var bf = 1l\n    \
    \    var bg = 2l\n        var bh = 3l\n        var bi = 5l\n        var bj = 13l\n\
    \        var bk = 89l\n        var bl = 1l\n        var bm = 2l\n        var bn\
    \ = 5l\n        var bo = 3l\n        var bp = 13l\n        var bq = 89l\n    \
    \    var br = 1l\n        var bs = 2l\n        var bt = 5l\n        var bu = 3l\n\
    \        var bv = 13l\n        var bw = 89l\n        var bx = 1l\n        var\
    \ by = 2l\n        var bz = 3l\n        var ca = 2l\n        var cb = 3l\n   \
    \     var cc = 5l\n        var cd = 13l\n        var ce = 89l\n        var cf\
    \ = 1l\n        var cg = 2l\n        var ch = 3l\n        var ci = 5l\n      \
    \  var cj = 13l\n        var ck = 89l\n        var cl = 1l\n        var cm = 2l\n\
    \        var cn = 5l\n        var co = 3l\n        var cp = 13l\n        var cq\
    \ = 89l\n        var cr = 1l\n        var cs = 2l\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc6apu12o.scala:114:5\
    \ --------------------\e[0m\e[0m\n\e[31m114 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(1)\n        val prime = scala.math.BigInt(2)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n        primes += prime\n        primes +=\
    \ prime\n        primes += prime\n        primes += prime\n        primes += prime\n\
    \        primes += prime\n        primes += prime\n        primes += prime\n \
    \       primes += prime\n        primes += prime\n        primes += prime\n  \
    \      primes += prime\n        primes += prime\n        primes += prime\n   \
    \     primes += prime\n        primes += prime\n        primes += prime\n    \
    \    primes += prime\n        primes += prime\n        primes += prime\n     \
    \   primes += prime\n        primes += prime\n        primes += prime\n      \
    \  primes += prime\n        primes += prime\n        primes += prime\n       \
    \ primes += prime\n        primes += prime\n        primes += prime\n        primes\
    \ += prime\n        primes += prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        primes += prime\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (prime : BigInt)\n\e[31m   |\e[0m                  Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:20:18 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:21:18 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:22:18 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:23:18 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e[0m\n\e[31m   |\e[0m                  Found:    (prime : BigInt)\n\
    \e[31m   |\e[0m                  Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpap9bdm36.scala:24:18 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes += prime\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^\e"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2l) = fibs(1l) + fibs(0l)\n        fibs.drop(3).takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxmjw8qi8.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxmjw8qi8.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpxmjw8qi8.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpxmjw8qi8.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2l\e[0m) = fibs(\e[31m1l\e[0m) + fibs(\e[31m0l\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member\
    \ of Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpxmjw8qi8.scala:19:24 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        fibs(\e[31m2l\e[0m) = fibs(\e[31m1l\e[0m) + fibs(\e[31m0l\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^\e[0m\n\e[31m   |\e[0m        \
    \                Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m           \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpxmjw8qi8.scala:19:35 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        fibs(\e[31m2l\e[0m) = fibs(\e[31m1l\e[0m) + fibs(\e[31m0l\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                   ^^\e[0m\n\e[31m   |\e\
    [0m                                   Found:    (\e[31m0L\e[0m : Lon"
  stdout: ''
  timestamp: 1659799225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_cache = new mutable.HashMap[Long, Long]\n      \
    \  fib_cache.put(n, 1l)\n        fib_cache.put(n + 1, 2l)\n        fib_cache.put(n\
    \ + 2, 3l)\n        fib_cache.put(n + 3, 5l)\n        fib_cache.put(n + 4, 13l)\n\
    \        fib_cache.put(n + 5, 89l)\n        fib_cache.put(n + 6, 101l)\n     \
    \   fib_cache.put(n + 7, 121l)\n        fib_cache.put(n + 8, 141l)\n        fib_cache.put(n\
    \ + 9, 161l)\n        fib_cache.put(n + 10, 181l)\n        fib_cache.put(n + 11,\
    \ 21l)\n        fib_cache.put(n + 12, 23l)\n        fib_cache.put(n + 13, 29l)\n\
    \        fib_cache.put(n + 14, 31l)\n        fib_cache.put(n + 15, 37l)\n    \
    \    fib_cache.put(n + 16, 41l)\n        fib_cache.put(n + 17, 43l)\n        fib_cache.put(n\
    \ + 18, 47l)\n        fib_cache.put(n + 19, 53l)\n        fib_cache.put(n + 20,\
    \ 59l)\n        fib_cache.put(n + 21, 61l)\n        fib_cache.put(n + 22, 67l)\n\
    \        fib_cache.put(n + 23, 71l)\n        fib_cache.put(n + 24, 73l)\n    \
    \    fib_cache.put(n + 25, 79l)\n        fib_cache.put(n + 26, 83l)\n        fib_cache.put(n\
    \ + 27, 89l)\n        fib_cache.put(n + 28, 97l)\n        fib_cache.put(n + 29,\
    \ 101l)\n        fib_cache.put(n + 30, 103l)\n        fib_cache.put(n + 31, 107l)\n\
    \        fib_cache.put(n + 32, 113l)\n        fib_cache.put(n + 33, 119l)\n  \
    \      fib_cache.put(n + 34, 121l)\n        fib_cache.put(n + 35, 131l)\n    \
    \    fib_cache.put(n + 36, 137l)\n        fib_cache.put(n + 37, 142l)\n      \
    \  fib_cache.put(n + 38, 147l)\n        fib_cache.put(n + 39, 151l)\n        fib_cache.put(n\
    \ + 40, 157l)\n        fib_cache.put(n + 41, 163l)\n        fib_cache.put(n +\
    \ 42, 167l)\n        fib_cache.put(n + 43, 173l)\n        fib_cache.put\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzhrl1n_8.scala:16:28 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_cache\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m \
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1l\n        var b : Long = 1l\n        var\
    \ c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n      \
    \  var f : Long = 1l\n        var g : Long = 1l\n        var h : Long = 1l\n \
    \       var i : Long = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n\
    \        var l : Long = 1l\n        var m : Long = 1l\n        var n : Long =\
    \ 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var q : Long\
    \ = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n        var t :\
    \ Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n        var\
    \ w : Long = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n      \
    \  var z : Long = 1l\n        var a : Long = 1l\n        var b : Long = 1l\n \
    \       var c : Long = 1l\n        var d : Long = 1l\n        var e : Long = 1l\n\
    \        var f : Long = 1l\n        var g : Long = 1l\n        var h : Long =\
    \ 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var k : Long\
    \ = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n        var n :\
    \ Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n        var\
    \ q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n      \
    \  var t : Long = 1l\n        var u : Long = 1l\n        var v : Long = 1l\n \
    \       var w : Long = 1l\n        var x : Long = 1l\n        var y : Long = 1l\n\
    \        var z : Long = 1l\n        var a : Long = 1l\n        var b : Long =\
    \ 1l\n        var c : Long = 1l\n        var d : Long = 1l\n        var e : Long\
    \ = 1l\n        var f : Long = 1l\n        var g : Long = 1l\n        var h :\
    \ Long = 1l\n        var i : Long = 1l\n        var j : Long = 1l\n        var\
    \ k : Long = 1l\n        var l : Long = 1l\n        var m : Long = 1l\n      \
    \  var n : Long = 1l\n        var o : Long = 1l\n        var p : Long = 1l\n \
    \       var q : Long = 1l\n        var r : Long = 1l\n        var s : Long = 1l\n\
    \        var t : Long = 1l\n        var u : Long = 1l\n        var v : Long =\
    \ 1l\n        var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp25tid0ob.scala:90:11 ---------------------------\e\
    [0m\e[0m\n\e[31m90 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0ma is already defined as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:43:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mb\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined as \e[33mvariable\e\
    [0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp25tid0ob.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mc is already defined as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp25tid0ob.scala:45:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m\
    \ \e[36md\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined as \e[33mvariable\e\
    [0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmp25tid0ob.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mv"
  stdout: ''
  timestamp: 1659799214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](5)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        val i =\
    \ 5\n        while(i <= n){\n            fib_array(i) = fib_array(i-1) + fib_array(i-2)\n\
    \            i = i + 1\n        }\n        fib_array(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpzrw62ck7.scala:26:14 -----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            i = i + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzrw62ck7.scala:28:18\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659799224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 3l\n        var o = 5l\n\
    \        var p = 13l\n        var q = 89l\n        var r = 2l\n        var s =\
    \ 3l\n        var t = 5l\n        var u = 0l\n        var v = 0l\n        var\
    \ w = 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n       \
    \ var a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n   \
    \     var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n\
    \        var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 2l\n        var n = 3l\n        var o = 5l\n        var p = 13l\n\
    \        var q = 89l\n        var r = 2l\n        var s = 3l\n        var t =\
    \ 5l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n        var\
    \ x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n       \
    \ var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n   \
    \     var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 3l\n        var o = 5l\n        var p = 13l\n        var q =\
    \ 89l\n        var r = 2l\n        var s = 3l\n        var t = 5l\n        var\
    \ u = 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n       \
    \ var y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n   \
    \     var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n\
    \        var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 3l\n\
    \        var o = 5l\n        var p = 13l\n        var q = 89l\n        var r =\
    \ 2l\n        var s = 3l\n        var t = 5l\n        var u = 0l\n        var\
    \ v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n       \
    \ var \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp_aierm_1.scala:119:11 --------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp_aierm_1.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659799225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 25l\n        var g = 101l\n\
    \        var h = 413l\n        var i = 233l\n        var j = 867l\n        var\
    \ k = 521l\n        var l = 729l\n        var m = 1279l\n        var n = 671l\n\
    \        var o = 2517l\n        var p = 1025l\n        var q = 413l\n        var\
    \ r = 233l\n        var s = 867l\n        var t = 521l\n        var u = 729l\n\
    \        var v = 1279l\n        var w = 671l\n        var x = 2517l\n        var\
    \ y = 1025l\n        var z = 413l\n        var a = 2l\n        var b = 3l\n  \
    \      var c = 5l\n        var d = 13l\n        var e = 89l\n        var f = 25l\n\
    \        var g = 101l\n        var h = 413l\n        var i = 233l\n        var\
    \ j = 867l\n        var k = 521l\n        var l = 729l\n        var m = 1279l\n\
    \        var n = 671l\n        var o = 2517l\n        var p = 1025l\n        var\
    \ q = 413l\n        var r = 233l\n        var s = 867l\n        var t = 521l\n\
    \        var u = 729l\n        var v = 1279l\n        var w = 671l\n        var\
    \ x = 2517l\n        var y = 1025l\n        var z = 413l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 25l\n        var g = 101l\n        var h = 413l\n     \
    \   var i = 233l\n        var j = 867l\n        var k = 521l\n        var l =\
    \ 729l\n        var m = 1279l\n        var n = 671l\n        var o = 2517l\n \
    \       var p = 1025l\n        var q = 413l\n        var r = 233l\n        var\
    \ s = 867l\n        var t = 521l\n        var u = 729l\n        var v = 1279l\n\
    \        var w = 671l\n        var x = 2517l\n        var y = 1025l\n        var\
    \ z = 413l\n        var a = 2l\n        var b = 3l\n        var c = 5l\n     \
    \   var d = 13l\n        var e = 89l\n        var f = 25l\n        var g = 101l\n\
    \        var h = 413l\n        var i = 233l\n        var j = 867l\n        var\
    \ k = 521l\n        var l = 729l\n        var m = 1279l\n        var \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpg8r9m0_y.scala:107:11 --------------------------\e\
    [0m\e[0m\n\e[31m107 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg8r9m0_y.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg8r9m0_y.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg8r9m0_y.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg8r9m0_y.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpg8r9m0_y.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1659799226
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](n)\n\
    \        prime_array(0) = false\n        prime_array(1) = false\n        for(i\
    \ <- 2 to n) {\n            val fib_value = fib_array(i)\n            val prime_check\
    \ = prime_array(i)\n            if(fib_value + fib_array(i-1) == fib_value &&\
    \ prime_check == false) {\n                fib_array(i) = fib_value + fib_array(i-1)\n\
    \                prime_array(i) = true\n            }\n        }\n        fib_array(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa7t03iw2.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpa7t03iw2.scala:19:45 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n)\n\e[31m\e[31m   |\e[0m           \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpa7t03iw2.scala:22:22 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa7t03iw2.scala:30:18\
    \ --------------------\e[0m\e[0m\n\e[31m30 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs.takeWhile(_ < n).foreach(x\
    \ => fibs(x) = fibs(x - 1) + fibs(x - 2))\n        fibs(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt9moxkzj.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt9moxkzj.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpt9moxkzj.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt9moxkzj.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt9moxkzj.scala:20:43\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs.takeWhile(_\
    \ < n).foreach(\e[36mx\e[0m => fibs(x) = fibs(x - \e[31m1\e[0m) + fibs(x - \e\
    [31m2\e[0m))\n\e[31m\e[31m   |\e[0m                                          \
    \ ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did\
    \ you mean fibs.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt9moxkzj.scala:20:58\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs.takeWhile(_ < n).foreach(\e\
    [36mx\e[0m => fibs(x) = fibs(x - \e[31m1\e[0m) + fibs(x - \e[31m2\e[0m))\n\e[31m\e\
    [31m   |\e[0m                                                          ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                         \
    \ Found:    Long\n\e[31m   "
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 5l\n\
    \        var l = 13l\n        var m = 89l\n        var n = 2l\n        var o =\
    \ 3l\n        var p = 5l\n        var q = 13l\n        var r = 89l\n        var\
    \ s = 2l\n        var t = 3l\n        var u = 5l\n        var v = 13l\n      \
    \  var w = 89l\n        var x = 2l\n        var y = 3l\n        var z = 5l\n \
    \       var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 0l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 5l\n        var\
    \ l = 13l\n        var m = 89l\n        var n = 2l\n        var o = 3l\n     \
    \   var p = 5l\n        var q = 13l\n        var r = 89l\n        var s = 2l\n\
    \        var t = 3l\n        var u = 5l\n        var v = 13l\n        var w =\
    \ 89l\n        var x = 2l\n        var y = 3l\n        var z = 5l\n        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 0l\n        var g = 2l\n        var h = 3l\n \
    \       var i = 5l\n        var j = 1l\n        var k = 5l\n        var l = 13l\n\
    \        var m = 89l\n        var n = 2l\n        var o = 3l\n        var p =\
    \ 5l\n        var q = 13l\n        var r = 89l\n        var s = 2l\n        var\
    \ t = 3l\n        var u = 5l\n        var v = 13l\n        var w = 89l\n     \
    \   var x = 2l\n        var y = 3l\n        var z = 5l\n        var a = 2l\n \
    \       var b = 3l\n        var c = 5l\n        var d = 13l\n        var e = 89l\n\
    \        var f = 0l\n        var g = 2l\n        var h = 3l\n        var i = 5l\n\
    \        var j = 1l\n        var k = 5l\n        var l = 13l\n        var m =\
    \ 89l\n        var n = 2l\n        var o = 3l\n        var p = 5l\n        var\
    \ q = 13l\n        var r = 89l\n        var s = 2l\n        var t = 3l\n     \
    \   var u = 5l\n        var v = 13l\n        var w = 89l\n        var x = 2l\n\
    \        var y\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptgmak27_.scala:119:4 ---------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m    }\n\e[31m\e[31m    |\e[0m    ^\e[0m\n\e[31m    |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptgmak27_.scala:42:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m\
    \ \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma is already defined as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmptgmak27_.scala:43:12 ---------------------------\e[0m\e[0m\n\e[31m43\
    \ |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined as \e[33mvariable\e\
    [0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmptgmak27_.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmptgmak27_.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmptgmak27_.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded metho"
  stdout: ''
  timestamp: 1659799229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 2l\n        var o = 2l\n\
    \        var p = 3l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 0l\n        var v = 0l\n        var w =\
    \ 0l\n        var x = 0l\n        var y = 0l\n        var z = 0l\n        var\
    \ a = 0l\n        var b = 0l\n        var c = 0l\n        var d = 0l\n       \
    \ var e = 0l\n        var f = 0l\n        var g = 0l\n        var h = 0l\n   \
    \     var i = 0l\n        var j = 0l\n        var k = 0l\n        var l = 0l\n\
    \        var m = 2l\n        var n = 2l\n        var o = 2l\n        var p = 3l\n\
    \        var q = 3l\n        var r = 5l\n        var s = 13l\n        var t =\
    \ 89l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n        var\
    \ x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n       \
    \ var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n   \
    \     var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 2l\n\
    \        var n = 2l\n        var o = 2l\n        var p = 3l\n        var q = 3l\n\
    \        var r = 5l\n        var s = 13l\n        var t = 89l\n        var u =\
    \ 0l\n        var v = 0l\n        var w = 0l\n        var x = 0l\n        var\
    \ y = 0l\n        var z = 0l\n        var a = 0l\n        var b = 0l\n       \
    \ var c = 0l\n        var d = 0l\n        var e = 0l\n        var f = 0l\n   \
    \     var g = 0l\n        var h = 0l\n        var i = 0l\n        var j = 0l\n\
    \        var k = 0l\n        var l = 0l\n        var m = 2l\n        var n = 2l\n\
    \        var o = 2l\n        var p = 3l\n        var q = 3l\n        var r = 5l\n\
    \        var s = 13l\n        var t = 89l\n        var u = 0l\n        var v =\
    \ 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n        var\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8wmdl2pw.scala:119:11 --------------------------\e\
    [0m\e[0m\n\e[31m119 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m    |\e[0m    \
    \       ^\e[0m\n\e[31m    |\e[0m           pattern expected\n\e[31m    |\e[0m\n\
    \e[31m    |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8wmdl2pw.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8wmdl2pw.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8wmdl2pw.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8wmdl2pw.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8wmdl2pw.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me"
  stdout: ''
  timestamp: 1659799229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(1l, 2l)\n        fibs +=\
    \ fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n        fibs\
    \ += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n       \
    \ fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n  \
    \      fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fibs += fibs.last\n\
    \        fibs += fibs.last\n        fibs += fibs.last\n        fib\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n  \
    \  assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0s9_154.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0s9_154.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        fib\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Not found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpppy59qni.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(n / 2l)\
    \ -= 1\n        fibs(n / 2l) += 1\n        fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp45m4cxqp.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2l\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                            ^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \           Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp45m4cxqp.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2l\e[0m)\
    \ -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e\
    [0m             Found:    Long\n\e[31m   |\e[0m             Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp45m4cxqp.scala:18:13\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2l\e[0m)\
    \ += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e\
    [0m             Found:    Long\n\e[31m   |\e[0m             Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 13l\n        var n = 89l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 3l\n        var r = 5l\n        var\
    \ s = 13l\n        var t = 89l\n        var u = 1l\n        var v = 2l\n     \
    \   var w = 3l\n        var x = 5l\n        var y = 13l\n        var z = 89l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n        var\
    \ l = 5l\n        var m = 13l\n        var n = 89l\n        var o = 1l\n     \
    \   var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 1l\n        var v = 2l\n        var w =\
    \ 3l\n        var x = 5l\n        var y = 13l\n        var z = 89l\n        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n \
    \       var i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n\
    \        var m = 13l\n        var n = 89l\n        var o = 1l\n        var p =\
    \ 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n        var\
    \ t = 89l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n      \
    \  var x = 5l\n        var y = 13l\n        var z = 89l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n        var\
    \ i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 5l\n       \
    \ var m = 13l\n        var n = 89l\n        var o = 1l\n        var p = 2l\n \
    \       var q = 3l\n        var r = 5l\n        var s = 13l\n        var t = 89l\n\
    \        var u = 1l\n        var v = 2l\n        var w = 3l\n        var x = 5l\n\
    \        var y = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpmtm901mj.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpmtm901mj.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpmtm901mj.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmtm901mj.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmtm901mj.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmtm901mj.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(n / 2l)\
    \ -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n /\
    \ 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbd98jfxi.scala:67:4 ----------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpbd98jfxi.scala:16:31 --------------------\e[0m\e[0m\n\e[31m16 |\e[0m\
    \        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2l\e[0m)(\e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Found:    Long\n\e[31m   |\e[0m     \
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpbd98jfxi.scala:17:13 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2l\e[0m) -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpbd98jfxi.scala:18:13 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2l\e[0m) += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpbd98jfxi.scala:19:13 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        fibs(n / \e[31m2l\e[0m) += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpbd98jfxi.scala:20:13 --------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m        fibs(n / \e[31m2l\e[0m) -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1659799236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.empty[Long]\n        fibs\
    \ += 0l\n        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs\
    \ += 5l\n        fibs += 13l\n        fibs += 89l\n        fibs.takeWhile(_ <\
    \ n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpes2aroi2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n+1)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i)\
    \ = fib_array(i-1) + fib_array(i-2)\n        }\n        fib_array(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoq2989o8.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^\e[0m\n\e[31m   |\e[0m\
    \                                        Found:    Long\n\e[31m   |\e[0m     \
    \                                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpoq2989o8.scala:19:22 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoq2989o8.scala:22:18\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n / 2)\n        fib_array(0)\
    \ = 0l\n        fib_array(1) = 1l\n        val prime_array = new Array[Boolean](n\
    \ / 2)\n        prime_array(0) = false\n        prime_array(1) = true\n      \
    \  var i = 2\n        while (i < n) {\n            if (prime_array(i)) {\n   \
    \             fib_array(i) = fib_array(i-1) + fib_array(i-2)\n               \
    \ prime_array(i) = false\n            }\n            i += 1\n        }\n     \
    \   fib_array(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqsi5oidq.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n / \e[31m2\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^^^\e[0m\n\e[31m   |\e\
    [0m                                        Found:    Long\n\e[31m   |\e[0m   \
    \                                     Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqsi5oidq.scala:19:45 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m = \e[33mnew\e\
    [0m \e[35mArray\e[0m[\e[35mBoolean\e[0m](n / \e[31m2\e[0m)\n\e[31m\e[31m   |\e\
    [0m                                             ^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                                           Found:    Long\n\e[31m   |\e[0m  \
    \                                           Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqsi5oidq.scala:30:18 --------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        fib_array(n)\n\e[31m\e[31m   |\e[0m         \
    \         ^\e[0m\n\e[31m   |\e[0m                  Found:    (n : Long)\n\e[31m\
    \   |\e[0m                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2l)(1l)\n        fibs(0l) = fibs(1l)\
    \ = 2l\n        fibs(1l) = fibs(2l) = fibs(3l) = fibs(4l) = fibs(5l) = fibs(6l)\
    \ = fibs(7l) = fibs(8l) = fibs(9l) = fibs(10l) = fibs(11l) = fibs(12l) = fibs(13l)\
    \ = fibs(14l) = fibs(15l) = fibs(16l) = fibs(17l) = fibs(18l) = fibs(19l) = fibs(20l)\
    \ = fibs(21l) = fibs(22l) = fibs(23l) = fibs(24l) = fibs(25l) = fibs(26l) = fibs(27l)\
    \ = fibs(28l) = fibs(29l) = fibs(30l) = fibs(31l) = fibs(32l) = fibs(33l) = fibs(34l)\
    \ = fibs(35l) = fibs(36l) = fibs(37l) = fibs(38l) = fibs(39l) = fibs(40l) = fibs(41l)\
    \ = fibs(42l) = fibs(43l) = fibs(44l) = fibs(45l) = fibs(46l) = fibs(47l) = fibs(48l)\
    \ = fibs(49l) = fibs(50l) = fibs(51l) = fibs(52l) = fibs(53l) = fibs(54l) = fibs(55l)\
    \ = fibs(56l) = fibs(57l) = fibs(58l) = fibs(59l) = fibs(60l) = fibs(61l) = fibs(62l)\
    \ = fibs(63l) = fibs(64l) = fibs(65l) = fibs(66l) = fibs(67l) = fibs(68l) = fibs(69l)\
    \ = fibs(70l) = fibs(71l) = fibs(72l) = fibs(73l) = fibs(74l) = fibs(75l) = fibs(76l)\
    \ = fibs(77l) = fibs(78l) = fibs(79l) = fibs(80l) = fibs(81l) = fibs(82l) = fibs(83l)\
    \ = fibs(84l) = fibs(85l) = fibs(86l) = fibs(87l) = fibs(88l) = fibs(89l) = fibs(90l)\
    \ = fibs(91l) = fibs(92l) = fibs(93l) = fibs(94l) = fibs(95l) = fibs(96l) = fibs(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpqhgv46ld.scala:18:1156 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1l\e[0m) = fibs(\e[31m2l\e[0m) = fibs(\e\
    [31m3l\e[0m) = fibs(\e[31m4l\e[0m) = fibs(\e[31m5l\e[0m) = fibs(\e[31m6l\e[0m)\
    \ = fibs(\e[31m7l\e[0m) = fibs(\e[31m8l\e[0m) = fibs(\e[31m9l\e[0m) = fibs(\e\
    [31m10l\e[0m) = fibs(\e[31m11l\e[0m) = fibs(\e[31m12l\e[0m) = fibs(\e[31m13l\e\
    [0m) = fibs(\e[31m14l\e[0m) = fibs(\e[31m15l\e[0m) = fibs(\e[31m16l\e[0m) = fibs(\e\
    [31m17l\e[0m) = fibs(\e[31m18l\e[0m) = fibs(\e[31m19l\e[0m) = fibs(\e[31m20l\e\
    [0m) = fibs(\e[31m21l\e[0m) = fibs(\e[31m22l\e[0m) = fibs(\e[31m23l\e[0m) = fibs(\e\
    [31m24l\e[0m) = fibs(\e[31m25l\e[0m) = fibs(\e[31m26l\e[0m) = fibs(\e[31m27l\e\
    [0m) = fibs(\e[31m28l\e[0m) = fibs(\e[31m29l\e[0m) = fibs(\e[31m30l\e[0m) = fibs(\e\
    [31m31l\e[0m) = fibs(\e[31m32l\e[0m) = fibs(\e[31m33l\e[0m) = fibs(\e[31m34l\e\
    [0m) = fibs(\e[31m35l\e[0m) = fibs(\e[31m36l\e[0m) = fibs(\e[31m37l\e[0m) = fibs(\e\
    [31m38l\e[0m) = fibs(\e[31m39l\e[0m) = fibs(\e[31m40l\e[0m) = fibs(\e[31m41l\e\
    [0m) = fibs(\e[31m42l\e[0m) = fibs(\e[31m43l\e[0m) = fibs(\e[31m44l\e[0m) = fibs(\e\
    [31m45l\e[0m) = fibs(\e[31m46l\e[0m) = fibs(\e[31m47l\e[0m) = fibs(\e[31m48l\e\
    [0m) = fibs(\e[31m49l\e[0m) = fibs(\e[31m50l\e[0m) = fibs(\e[31m51l\e[0m) = fibs(\e\
    [31m52l\e[0m) = fibs(\e[31m53l\e[0m) = fibs(\e[31m54l\e[0m) = fibs(\e[31m55l\e\
    [0m) = fibs(\e[31m56l\e[0m) = fibs(\e[31m57l\e[0m) = fibs(\e[31m58l\e[0m) = fibs(\e\
    [31m59l\e[0m) = fibs(\e[31m60l\e[0m) = fibs(\e[31m61l\e[0m) = fibs(\e[31m62l\e\
    [0m) = fibs(\e[31m63l\e[0m) = fibs(\e[31m64l\e[0m) = fibs(\e[31m65l\e[0m) = fibs(\e\
    [31m66l\e[0m) = fibs(\e[31m67l\e[0m) = fibs(\e[31m68l\e[0m) = fibs(\e[31m69l\e\
    [0m) = fibs(\e[31m70l\e[0m) = fibs(\e[31m71l\e[0m) = fibs(\e[31m72l\e[0m) = fibs(\e\
    [31m73l\e[0m) = fibs(\e[31m74l\e[0m) = fibs(\e[31m75l\e[0m) = fibs(\e[31m76l\e\
    [0m) = fibs(\e[31m77l\e[0m) = fibs(\e[31m78l\e[0m) = fibs(\e[31m79l\e[0m) = fibs(\e\
    [31m80l\e[0m) = fibs(\e[31m81l\e[0m) = fibs(\e[31m82l\e[0m) = fibs(\e[31m83l\e\
    [0m) = fibs(\e[31m84l\e[0m) = fibs(\e[31m85l\e[0m) = fibs(\e[31m86l\e[0m) = fibs(\e\
    [31m87l\e[0m) = fibs(\e[31m88l\e[0m) = fibs(\e[31m89l\e[0m) = fibs(\e[31m90l\e\
    [0m) = fibs(\e[31m91l\e[0m) = fibs(\e[31m92l\e[0m) = fibs("
  stdout: ''
  timestamp: 1659799238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        fib_array(2) = 1l\n        fib_array(3)\
    \ = 1l\n        fib_array(4) = 1l\n        fib_array(5) = 1l\n        fib_array(6)\
    \ = 1l\n        fib_array(7) = 1l\n        fib_array(8) = 1l\n        fib_array(9)\
    \ = 1l\n        fib_array(10) = 1l\n        fib_array(11) = 1l\n        fib_array(12)\
    \ = 1l\n        fib_array(13) = 1l\n        fib_array(14) = 1l\n        fib_array(15)\
    \ = 1l\n        fib_array(16) = 1l\n        fib_array(17) = 1l\n        fib_array(18)\
    \ = 1l\n        fib_array(19) = 1l\n        fib_array(20) = 1l\n        fib_array(21)\
    \ = 1l\n        fib_array(22) = 1l\n        fib_array(23) = 1l\n        fib_array(24)\
    \ = 1l\n        fib_array(25) = 1l\n        fib_array(26) = 1l\n        fib_array(27)\
    \ = 1l\n        fib_array(28) = 1l\n        fib_array(29) = 1l\n        fib_array(30)\
    \ = 1l\n        fib_array(31) = 1l\n        fib_array(32) = 1l\n        fib_array(33)\
    \ = 1l\n        fib_array(34) = 1l\n        fib_array(35) = 1l\n        fib_array(36)\
    \ = 1l\n        fib_array(37) = 1l\n        fib_array(38) = 1l\n        fib_array(39)\
    \ = 1l\n        fib_array(40) = 1l\n        fib_array(41) = 1l\n        fib_array(42)\
    \ = 1l\n        fib_array(43) = 1l\n        fib_array(44) = 1l\n        fib_array(45)\
    \ = 1l\n        fib_array(46) = 1l\n        fib_array(47) = 1l\n        fib_array(48)\
    \ = 1l\n        fib_array(49) = 1l\n        fib_array(50) = 1l\n        fib_array(51)\
    \ = 1l\n        fib_array(52) = 1l\n        fib_array(53) = 1l\n        fib_array(54)\
    \ = 1l\n        fib_array(55) = 1l\n        fib_array(56) = 1l\n        fib_array(57)\
    \ = 1l\n        fib_array(58) = 1\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3sfhiqdx.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3sfhiqdx.scala:75:8 ---------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m        fib_array(\e[31m58\e[0m) = \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:   \
    \ Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659799182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer(2l, 3l, 5l)\n        val primes\
    \ = mutable.ListBuffer(2l, 3l)\n        val isPrime = mutable.ListBuffer(true,\
    \ false)\n        val isPrime2 = mutable.ListBuffer(true, false)\n        val\
    \ isPrime3 = mutable.ListBuffer(true, false)\n        val isPrime5 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime13 = mutable.ListBuffer(true, false)\n        val\
    \ isPrime89 = mutable.ListBuffer(true, false)\n        val isPrime21 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime23 = mutable.ListBuffer(true, false)\n        val\
    \ isPrime35 = mutable.ListBuffer(true, false)\n        val isPrime45 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime135 = mutable.ListBuffer(true, false)\n        val\
    \ isPrime1357 = mutable.ListBuffer(true, false)\n        val isPrime13579 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime135793 = mutable.ListBuffer(true, false)\n      \
    \  val isPrime1357935 = mutable.ListBuffer(true, false)\n        val isPrime13579353\
    \ = mutable.ListBuffer(true, false)\n        val isPrime135793533 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime1357935333 = mutable.ListBuffer(true, false)\n  \
    \      val isPrime13579353332 = mutable.ListBuffer(true, false)\n        val isPrime135793533321\
    \ = mutable.ListBuffer(true, false)\n        val isPrime1357935333217 = mutable.ListBuffer(true,\
    \ false)\n        val isPrime13579353332171 = mutable.ListBuffer(true, false)\n\
    \        val isPrime135793533321715 = mutable.ListBuffer(true, false)\n      \
    \  val isPrime1357935333217151 = mutable.ListBuffer(true, false)\n        val\
    \ isPrime13579353332171515 = mutable.ListBuffer(true, false)\n        val isPrime135793533321715151\
    \ = mutable.ListBuffer(true, false)\n        val isPrime1357935333217151515 =\
    \ mutable.ListBuffer(true, false)\n        val isPrime13579353332171515151 = mutable.List\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp27yres6.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp27yres6.scala:17:21\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer(\e[31m2l\e[0m, \e[31m3l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp27yres6.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer(\e[31mtrue\e[0m, \e[31mfalse\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpp27yres6.scala:19:23 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.ListBuffer(\e[31mtrue\e\
    [0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpp27yres6.scala:20:23 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.ListBuffer(\e\
    [31mtrue\e[0m, \e[31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp27yres6.scala:21:23 -----"
  stdout: ''
  timestamp: 1659799229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n   \
    \     fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11)\
    \ = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n\
    \        fibs(15) = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n       \
    \ fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21)\
    \ = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n\
    \        fibs(25) = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n       \
    \ fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31)\
    \ = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n\
    \        fibs(35) = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n       \
    \ fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41)\
    \ = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n\
    \        fibs(45) = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n       \
    \ fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51)\
    \ = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n\
    \        fibs(55) = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n       \
    \ fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61)\
    \ = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n\
    \        fibs(65) = 1l\n        fibs(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfi40ljdm.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        fibs(\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:23:8\
    \ -------------------------"
  stdout: ''
  timestamp: 1659799208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.takeWhile(_ < n).last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:18:8 -------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:19:8\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpsl3yisq5.scala:21:8 -------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsl3yisq5.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n6 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659799176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer(2l, 3l, 5l)\n        fibs.takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpji2_ieep.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(2l)\n        fibs(0) = 1l\n  \
    \      fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs(6) = 1l\n        fibs(7) = 1l\n   \
    \     fibs(8) = 1l\n        fibs(9) = 1l\n        fibs(10) = 1l\n        fibs(11)\
    \ = 1l\n        fibs(12) = 1l\n        fibs(13) = 1l\n        fibs(14) = 1l\n\
    \        fibs(15) = 1l\n        fibs(16) = 1l\n        fibs(17) = 1l\n       \
    \ fibs(18) = 1l\n        fibs(19) = 1l\n        fibs(20) = 1l\n        fibs(21)\
    \ = 1l\n        fibs(22) = 1l\n        fibs(23) = 1l\n        fibs(24) = 1l\n\
    \        fibs(25) = 1l\n        fibs(26) = 1l\n        fibs(27) = 1l\n       \
    \ fibs(28) = 1l\n        fibs(29) = 1l\n        fibs(30) = 1l\n        fibs(31)\
    \ = 1l\n        fibs(32) = 1l\n        fibs(33) = 1l\n        fibs(34) = 1l\n\
    \        fibs(35) = 1l\n        fibs(36) = 1l\n        fibs(37) = 1l\n       \
    \ fibs(38) = 1l\n        fibs(39) = 1l\n        fibs(40) = 1l\n        fibs(41)\
    \ = 1l\n        fibs(42) = 1l\n        fibs(43) = 1l\n        fibs(44) = 1l\n\
    \        fibs(45) = 1l\n        fibs(46) = 1l\n        fibs(47) = 1l\n       \
    \ fibs(48) = 1l\n        fibs(49) = 1l\n        fibs(50) = 1l\n        fibs(51)\
    \ = 1l\n        fibs(52) = 1l\n        fibs(53) = 1l\n        fibs(54) = 1l\n\
    \        fibs(55) = 1l\n        fibs(56) = 1l\n        fibs(57) = 1l\n       \
    \ fibs(58) = 1l\n        fibs(59) = 1l\n        fibs(60) = 1l\n        fibs(61)\
    \ = 1l\n        fibs(62) = 1l\n        fibs(63) = 1l\n        fibs(64) = 1l\n\
    \        fibs(65) = 1l\n        fibs(\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfi40ljdm.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        fibs(\n\e[31m\e[31m   |\e[0m             ^\e\
    [0m\n\e[31m   |\e[0m             expression expected but \e[31m'}'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpfi40ljdm.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfi40ljdm.scala:23:8\
    \ -------------------------"
  stdout: ''
  timestamp: 1659799208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2l)(2l)\n        fibs(n / 2l)\
    \ -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n /\
    \ 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n\
    \ / 2l) += 1\n        fibs(n / 2l) -= 1\n        fibs(n / 2l) += 1\n        fibs(n\
    \ / 2l) -= 1\n        fibs(n / 2l\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0lak30bi.scala:67:4 ----------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp0lak30bi.scala:16:31 --------------------\e[0m\e[0m\n\e[31m16 |\e[0m\
    \        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2l\e[0m)(\e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Found:    Long\n\e[31m   |\e[0m     \
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0lak30bi.scala:17:13 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2l\e[0m) -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0lak30bi.scala:18:13 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        fibs(n / \e[31m2l\e[0m) += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0lak30bi.scala:19:13 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        fibs(n / \e[31m2l\e[0m) -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0lak30bi.scala:20:13 --------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m        fibs(n / \e[31m2l\e[0m) += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m  "
  stdout: ''
  timestamp: 1659799238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2) #:: scala.math.BigInt(3)\
    \ #:: scala.math.BigInt(5) #:: scala.math.BigInt(13) #:: scala.math.BigInt(89)\n\
    \        val primes = scala.collection.mutable.ArrayBuffer(2l, 3l, 5l, 13l, 89l)\n\
    \        val prime = primes(0)\n        val isPrime = true\n        for(i <- 1\
    \ to n){\n            val nextPrime = prime + primes(i)\n            if(nextPrime\
    \ > fib.toInt){\n                isPrime = false\n                break\n    \
    \        }\n            prime = nextPrime\n        }\n        if(isPrime)\n  \
    \          prime\n        else\n            0l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2dt2uyoa.scala:16:115 -----------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e\
    [0m) #:: scala.math.BigInt(\e[31m13\e[0m) #:: scala.math.BigInt(\e[31m89\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     value #:: is not a member\
    \ of BigInt\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2dt2uyoa.scala:20:22\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp2dt2uyoa.scala:23:24 -----------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2dt2uyoa.scala:24:16\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                break\n\e\
    [31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp2dt2uyoa.scala:26:18\
    \ -----------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            prime =\
    \ nextPrime\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m            Reassignment to val prime\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659799235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0\n\
    \        fibs += 1\n        fibs += 2\n        fibs += 3\n        fibs += 5\n\
    \        fibs += 13\n        fibs += 89\n        fibs += fibs.drop(fibs.size -\
    \ n)\n        fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9i0xrms2.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2l) = fibs(1l) + fibs(0l)\n        fibs(3l)\
    \ = fibs(2l) + fibs(1l)\n        fibs(4l) = fibs(3l) + fibs(2l)\n        fibs(5l)\
    \ = fibs(4l) + fibs(3l)\n        fibs(6l) = fibs(5l) + fibs(4l)\n        fibs(7l)\
    \ = fibs(6l) + fibs(5l)\n        fibs(8l) = fibs(7l) + fibs(6l)\n        fibs(9l)\
    \ = fibs(8l) + fibs(7l)\n        fibs(10l) = fibs(9l) + fibs(8l)\n        fibs(11l)\
    \ = fibs(10l) + fibs(9l)\n        fibs(12l) = fibs(11l) + fibs(10l)\n        fibs(13l)\
    \ = fibs(12l) + fibs(11l)\n        fibs(14l) = fibs(13l) + fibs(12l)\n       \
    \ fibs(15l) = fibs(14l) + fibs(13l)\n        fibs(16l) = fibs(15l) + fibs(14l)\n\
    \        fibs(17l) = fibs(16l) + fibs(15l)\n        fibs(18l) = fibs(17l) + fibs(16l)\n\
    \        fibs(19l) = fibs(18l) + fibs(17l)\n        fibs(20l) = fibs(19l) + fibs(18l)\n\
    \        fibs(21l) = fibs(20l) + fibs(19l)\n        fibs(22l) = fibs(21l) + fibs(20l)\n\
    \        fibs(23l) = fibs(22l) + fibs(21l)\n        fibs(24l) = fibs(23l) + fibs(22l)\n\
    \        fibs(25l) = fibs(24l) + fibs(23l)\n        fibs(26l) = fibs(25l) + fibs(24l)\n\
    \        fibs(27l) = fibs(26l) + fibs(25l)\n        fibs(28l) = fibs(27l) + fibs(26l)\n\
    \        fibs(29l) = fibs(28l) + fibs(27l)\n        fibs(30l) = fibs(29l) + fibs(28l)\n\
    \        fibs(31l) = fibs(30l) + fibs(29l)\n        fibs(32\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcyx23kt_.scala:50:4 ----------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpcyx23kt_.scala:16:31 --------------------\e[0m\e[0m\n\e[31m16 |\e[0m\
    \        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                               ^^^^^\e[0m\n\e[31m \
    \  |\e[0m                               Found:    Long\n\e[31m   |\e[0m      \
    \                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpcyx23kt_.scala:17:8 -------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcyx23kt_.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpcyx23kt_.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2l\e[0m) = fibs(\e[31m1l\e[0m) + fibs(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update\
    \ is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcyx23kt_.scala:19:24 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2l\e[0m) = fibs(\e[31m1l\e[0m) + fibs(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^\e[0m\n\e[31m   |\e\
    [0m                        Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpcyx23kt_.scala:19:35 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        fib"
  stdout: ''
  timestamp: 1659799240
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2)\n        val prime = scala.math.BigInt(3)\n\
    \        val primes = scala.collection.mutable.ListBuffer[Long]()\n        val\
    \ fibs = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime =\
    \ scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        val fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = scala.collection.mut\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpopg9sqzh.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvalue\e[0m \e[35mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpopg9sqzh.scala:33:12 ---------------------------\e[0m\e[0m\n\e\
    [31m33 |\e[0m        \e[33mval\e[0m \e[36mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |\e[0m  fibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\n\
    \e[31m   |\e[0m\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpopg9sqzh.scala:34:12 ---------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m        \e[33mval\e[0m \e[36mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\e\
    [0m = scala.collection.mut\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfibs_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ is already defined as \e[33mvalue\e[0m \e[35m\n\e[31m   |"
  stdout: ''
  timestamp: 1659799234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 3l\n        var m = 4l\n        var n = 5l\n        var o = 1l\n\
    \        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n\
    \        var t = 89l\n        var u = 1l\n        var v = 2l\n        var w =\
    \ 3l\n        var x = 5l\n        var y = 1l\n        var z = 2l\n        var\
    \ aa = 2l\n        var ab = 3l\n        var ac = 5l\n        var ad = 13l\n  \
    \      var ae = 89l\n        var af = 1l\n        var ag = 2l\n        var ah\
    \ = 3l\n        var ai = 5l\n        var aj = 1l\n        var ak = 2l\n      \
    \  var al = 3l\n        var am = 4l\n        var an = 5l\n        var ao = 1l\n\
    \        var ap = 2l\n        var aq = 3l\n        var ar = 5l\n        var as\
    \ = 13l\n        var at = 89l\n        var au = 1l\n        var av = 2l\n    \
    \    var aw = 3l\n        var ax = 5l\n        var ay = 1l\n        var az = 2l\n\
    \        var ba = 2l\n        var bb = 3l\n        var bc = 5l\n        var bd\
    \ = 13l\n        var be = 89l\n        var bf = 1l\n        var bg = 2l\n    \
    \    var bh = 3l\n        var bi = 5l\n        var bj = 1l\n        var bk = 2l\n\
    \        var bl = 3l\n        var bm = 4l\n        var bn = 5l\n        var bo\
    \ = 1l\n        var bp = 2l\n        var bq = 3l\n        var br = 5l\n      \
    \  var bs = 13l\n        var bt = 89l\n        var bu = 1l\n        var bv = 2l\n\
    \        var bw = 3l\n        var bx = 5l\n        var by = 1l\n        var bz\
    \ = 2l\n        var ca = 2l\n        var cb = 3l\n        var cc = 5l\n      \
    \  var cd = 13l\n        var ce = 89l\n        var cf = 1l\n        var cg = 2l\n\
    \        var ch = 3l\n        var ci = 5l\n        var cj = 1l\n        var ck\
    \ = 2l\n        var cl = 3l\n        var cm = 4l\n        var cn = 5l\n      \
    \  var co = 1l\n        var cp = 2l\n        var cq = 3l\n        var cr = 5l\n\
    \        var cs = 13l\n        var ct = 89l\n        var cu = 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsq_o_g1d.scala:115:5\
    \ --------------------\e[0m\e[0m\n\e[31m115 |\e[0m    }\n\e[31m\e[31m    |\e[0m\
    \     ^\e[0m\n\e[31m    |\e[0m     Found:    Unit\n\e[31m    |\e[0m     Required:\
    \ Long\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](n)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        for(i <- 2 to n) {\n            fib_array(i)\
    \ = fib_array(i-1) + fib_array(i-2)\n        }\n        fib_array(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:16:40\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib_array\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                        ^\e[0m\n\e[31m   |\e[0m           \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:19:22 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5gyyv3a_.scala:22:18\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fib_array(n)\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659799197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 4l\n        var i = 5l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpmd4war68.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799237
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0l).zipWithIndex.filter(_._2 %\
    \ n == 0).map(_._1)\n        fibs.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp501ho1xl.scala:20)\n\tat Problem.main(tmp501ho1xl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659799238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = scala.math.BigInt(2) #:: scala.math.BigInt(3)\
    \ #:: scala.math.BigInt(5) #:: scala.math.BigInt(13) #:: scala.math.BigInt(89)\
    \ #:: scala.math.BigInt(2l) #:: scala.math.BigInt(3l) #:: scala.math.BigInt(5l)\
    \ #:: scala.math.BigInt(13l) #:: scala.math.BigInt(89l) #:: scala.math.BigInt(3l)\
    \ #:: scala.math.BigInt(5l) #:: scala.math.BigInt(13l) #:: scala.math.BigInt(89l)\
    \ #:: scala.math.BigInt(5l) #:: scala.math.BigInt(13l) #:: scala.math.BigInt(89l)\
    \ #:: scala.math.BigInt(7l) #:: scala.math.BigInt(11l) #:: scala.math.BigInt(13l)\
    \ #:: scala.math.BigInt(17l) #:: scala.math.BigInt(19l) #:: scala.math.BigInt(23l)\
    \ #:: scala.math.BigInt(29l) #:: scala.math.BigInt(31l) #:: scala.math.BigInt(37l)\
    \ #:: scala.math.BigInt(41l) #:: scala.math.BigInt(43l) #:: scala.math.BigInt(47l)\
    \ #:: scala.math.BigInt(53l) #:: scala.math.BigInt(59l) #:: scala.math.BigInt(61l)\
    \ #:: scala.math.BigInt(67l) #:: scala.math.BigInt(71l) #:: scala.math.BigInt(73l)\
    \ #:: scala.math.BigInt(79l) #:: scala.math.BigInt(83l) #:: scala.math.BigInt(89l)\
    \ #:: scala.math.BigInt(97l) #:: scala.math.BigInt(101l) #:: scala.math.BigInt(103l)\
    \ #:: scala.math.BigInt(107l) #:: scala.math.BigInt(109l) #:: scala.math.BigInt(113l)\
    \ #:: scala.math.BigInt(117l) #:: scala.math.BigInt(121l) #:: scala.math.BigInt(123l)\
    \ #:: scala.math.BigInt(127l) #:: scala.math.BigInt(129l) #:: scala.math.BigInt(131l)\
    \ #:: scala.math.BigInt(137l) #:: scala.math.BigInt(139l) #:: scala.math.BigInt(147l)\
    \ #:: scala.math.BigInt(151l) #:: scala.math.BigInt(157l) #:: scala.math.BigInt(163l)\
    \ #:: scala.math.BigInt(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpky5d5u77.scala:16:1550 -------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = scala.math.BigInt(\e\
    [31m2\e[0m) #:: scala.math.BigInt(\e[31m3\e[0m) #:: scala.math.BigInt(\e[31m5\e\
    [0m) #:: scala.math.BigInt(\e[31m13\e[0m) #:: scala.math.BigInt(\e[31m89\e[0m)\
    \ #:: scala.math.BigInt(\e[31m2l\e[0m) #:: scala.math.BigInt(\e[31m3l\e[0m) #::\
    \ scala.math.BigInt(\e[31m5l\e[0m) #:: scala.math.BigInt(\e[31m13l\e[0m) #:: scala.math.BigInt(\e\
    [31m89l\e[0m) #:: scala.math.BigInt(\e[31m3l\e[0m) #:: scala.math.BigInt(\e[31m5l\e\
    [0m) #:: scala.math.BigInt(\e[31m13l\e[0m) #:: scala.math.BigInt(\e[31m89l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m5l\e[0m) #:: scala.math.BigInt(\e[31m13l\e[0m) #::\
    \ scala.math.BigInt(\e[31m89l\e[0m) #:: scala.math.BigInt(\e[31m7l\e[0m) #:: scala.math.BigInt(\e\
    [31m11l\e[0m) #:: scala.math.BigInt(\e[31m13l\e[0m) #:: scala.math.BigInt(\e[31m17l\e\
    [0m) #:: scala.math.BigInt(\e[31m19l\e[0m) #:: scala.math.BigInt(\e[31m23l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m29l\e[0m) #:: scala.math.BigInt(\e[31m31l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m37l\e[0m) #:: scala.math.BigInt(\e[31m41l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m43l\e[0m) #:: scala.math.BigInt(\e[31m47l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m53l\e[0m) #:: scala.math.BigInt(\e[31m59l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m61l\e[0m) #:: scala.math.BigInt(\e[31m67l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m71l\e[0m) #:: scala.math.BigInt(\e[31m73l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m79l\e[0m) #:: scala.math.BigInt(\e[31m83l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m89l\e[0m) #:: scala.math.BigInt(\e[31m97l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m101l\e[0m) #:: scala.math.BigInt(\e[31m103l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m107l\e[0m) #:: scala.math.BigInt(\e[31m109l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m113l\e[0m) #:: scala.math.BigInt(\e[31m117l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m121l\e[0m) #:: scala.math.BigInt(\e[31m123l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m127l\e[0m) #:: scala.math.BigInt(\e[31m129l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m131l\e[0m) #:: scala.math.BigInt(\e[31m137l\e[0m)\
    \ #:: scala.math.BigInt(\e[31m139l\e[0m) #:: scala.math.BigInt(\e[31m147l\e[0"
  stdout: ''
  timestamp: 1659799237
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(5)(0)\n        fibs(0) = 1\n    \
    \    fibs(1) = 1\n        fibs(2) = 1\n        fibs(3) = 1\n        fibs(4) =\
    \ 1\n        fibs(5) = 1\n        val primes = Vector.fill(5)(0)\n        primes(0)\
    \ = 1\n        primes(1) = 1\n        primes(2) = 1\n        primes(3) = 1\n \
    \       primes(4) = 1\n        primes(5) = 1\n        val fib = (fibs(n-1) + fibs(n-2))/2\n\
    \        primes(fib) = fib\n        fibs(n) = fib\n        primes\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:19:8 -------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        fibs(\e[31m2\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Int]\
    \ - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:22:8\
    \ -------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Int] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsz3a1gnd.scala:24:8 -------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        primes(\e[31m0\e[0m) = \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member\
    \ of Vector[Int] - did you mean primes.updated?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpsz3a1gnd.scala:25:8 -------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        primes(\e[31m1\e[0m) = \e[31"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibonacci = mutable.ListBuffer(1l, 2l)\n        fibonacci.takeWhile(x\
    \ => x <= n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc2vcmg3k.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659799234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(n / 2) +\
    \ (fibs(n / 2 - 1l))\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp80qvxrf1.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp80qvxrf1.scala:17:13\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(n / \e[31m2\e[0m)\
    \ + (fibs(n / \e[31m2\e[0m - \e[31m1l\e[0m))\n\e[31m\e[31m   |\e[0m          \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m             Found:    Long\n\e[31m   |\e[0m  \
    \           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp80qvxrf1.scala:17:28 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        fibs(n / \e[31m2\e[0m) + (fibs(n / \e[31m2\e[0m - \e[31m1l\e[0m))\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                            Found:    Long\n\e[31m   |\e[0m               \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659799195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n / 2)(2l)\n        fibs(0) = 1l\n\
    \        fibs(1) = 1l\n        fibs(2) = 1l\n        fibs(3) = 1l\n        fibs(4)\
    \ = 1l\n        fibs(5) = 1l\n        fibs.tail.foldLeft(1l) { (acc, n) => acc\
    \ + n }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5zzdl_fe.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5zzdl_fe.scala:17:8\
    \ -------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp5zzdl_fe.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp5zzdl_fe.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long] - did you mean\
    \ fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5zzdl_fe.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m)\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp5zzdl_fe.scala:21:8 -------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        fibs(\e[31m4\e[0m) = \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp5zzdl_fe.scala:22:8 -------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        fibs(\e[31m5\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue update is not a member o"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 0l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 2l\n        var n = 3l\n        var o = 5l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 2l\n        var s = 3l\n\
    \        var t = 5l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 2l\n        var y = 3l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0l\n        var a = 0l\n        var b = 0l\n        var c = 0l\n\
    \        var d = 0l\n        var e = 0l\n        var f = 0l\n        var g = 0l\n\
    \        var h = 0l\n        var i = 0l\n        var j = 0l\n        var k = 0l\n\
    \        var l = 0l\n        var m = 0l\n        var n = 0l\n        var o = 0l\n\
    \        var p = 0l\n        var q = 0l\n        var r = 0l\n        var s = 0l\n\
    \        var t = 0l\n        var u = 0l\n        var v = 0l\n        var w = 0l\n\
    \        var x = 0l\n        var y = 0l\n        var z = 0l\n        var a = 0l\n\
    \        var b = 0l\n        var c = 0l\n        var d = 0l\n        var e = 0l\n\
    \        var f = 0l\n        var g = 0l\n        var h = 0l\n        var i = 0l\n\
    \        var j = 0l\n        var k = 0l\n        var l = 0l\n        var m = 0l\n\
    \        var n = 0l\n        var o = 0l\n        var p = 0l\n        var q = 0l\n\
    \        var r = 0l\n        var s = 0l\n        var t = 0l\n        var u = 0l\n\
    \        var v = 0l\n        var w = 0l\n        var x = 0l\n        var y = 0l\n\
    \        var z = 0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:42:12 ---------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined\
    \ as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m0l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0me is already defined\
    \ as \e[33mvariable\e[0m \e[35me\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9avmvx7b.scala:47:12 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mvar\e[0m "
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 5l\n        var m = 13l\n        var n = 89l\n        var o =\
    \ 1l\n        var p = 2l\n        var q = 3l\n        var r = 5l\n        var\
    \ s = 13l\n        var t = 89l\n        var u = 1l\n        var v = 2l\n     \
    \   var w = 3l\n        var x = 5l\n        var y = 13l\n        var z = 1l\n\
    \        var a1 = 2l\n        var b1 = 3l\n        var c1 = 5l\n        var d1\
    \ = 13l\n        var e1 = 89l\n        var f1 = 1l\n        var g1 = 2l\n    \
    \    var h1 = 3l\n        var i1 = 5l\n        var j1 = 1l\n        var k1 = 2l\n\
    \        var l1 = 5l\n        var m1 = 13l\n        var n1 = 89l\n        var\
    \ o1 = 1l\n        var p1 = 2l\n        var q1 = 3l\n        var r1 = 5l\n   \
    \     var s1 = 13l\n        var t1 = 89l\n        var u1 = 1l\n        var v1\
    \ = 2l\n        var w1 = 3l\n        var x1 = 5l\n        var y1 = 13l\n     \
    \   var z1 = 1l\n        var a2 = 2l\n        var b2 = 3l\n        var c2 = 5l\n\
    \        var d2 = 13l\n        var e2 = 89l\n        var f2 = 1l\n        var\
    \ g2 = 2l\n        var h2 = 3l\n        var i2 = 5l\n        var j2 = 1l\n   \
    \     var k2 = 2l\n        var l2 = 5l\n        var m2 = 13l\n        var n2 =\
    \ 89l\n        var o2 = 1l\n        var p2 = 2l\n        var q2 = 3l\n       \
    \ var r2 = 5l\n        var s2 = 13l\n        var t2 = 89l\n        var u2 = 1l\n\
    \        var v2 = 2l\n        var w2 = 3l\n        var x2 = 5l\n        var y2\
    \ = 13l\n        var z2 = 1l\n        var a3 = 2l\n        var b3 = 3l\n     \
    \   var c3 = 5l\n        var d3 = 13l\n        var e3 = 89l\n        var f3 =\
    \ 1l\n        var g3 = 2l\n        var h3 = 3l\n        var i3 = 5l\n        var\
    \ j3 = 1l\n        var k3 = 2l\n        var l3 = 5l\n        var m3 = 13l\n  \
    \      var n3 = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpo8b6euik.scala:107:16 --------------------------\e\
    [0m\e[0m\n\e[31m107 |\e[0m        \e[33mvar\e[0m \e[36mn3\e[0m = \n\e[31m\e[31m\
    \    |\e[0m                ^\e[0m\n\e[31m    |\e[0m                expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpo8b6euik.scala:108:5 --------------------\e[0m\e\
    [0m\n\e[31m108 |\e[0m    }\n\e[31m\e[31m    |\e[0m     ^\e[0m\n\e[31m    |\e[0m\
    \     Found:    Unit\n\e[31m    |\e[0m     Required: Long\n\e[31m    |\e[0m\n\e\
    [31m    |\e[0m longer explanation available when compiling with `-explain`\n2\
    \ errors found\n"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1l\n        var b : Long = 2l\n        var\
    \ c : Long = 3l\n        var d : Long = 5l\n        var i : Long = 1l\n      \
    \  var j : Long = 1l\n        var k : Long = 1l\n        var l : Long = 1l\n \
    \       var m : Long = 1l\n        var n : Long = 1l\n        var o : Long = 1l\n\
    \        var p : Long = 1l\n        var q : Long = 1l\n        var r : Long =\
    \ 1l\n        var s : Long = 1l\n        var t : Long = 1l\n        var u : Long\
    \ = 1l\n        var v : Long = 1l\n        var w : Long = 1l\n        var x :\
    \ Long = 1l\n        var y : Long = 1l\n        var z : Long = 1l\n        var\
    \ a : Long = 1l\n        var b : Long = 1l\n        var c : Long = 1l\n      \
    \  var d : Long = 1l\n        var e : Long = 1l\n        var f : Long = 1l\n \
    \       var g : Long = 1l\n        var h : Long = 1l\n        var i : Long = 1l\n\
    \        var j : Long = 1l\n        var k : Long = 1l\n        var l : Long =\
    \ 1l\n        var m : Long = 1l\n        var n : Long = 1l\n        var o : Long\
    \ = 1l\n        var p : Long = 1l\n        var q : Long = 1l\n        var r :\
    \ Long = 1l\n        var s : Long = 1l\n        var t : Long = 1l\n        var\
    \ u : Long = 1l\n        var v : Long = 1l\n        var w : Long = 1l\n      \
    \  var x : Long = 1l\n        var y : Long = 1l\n        var z : Long = 1l\n \
    \       var a : Long = 1l\n        var b : Long = 1l\n        var c : Long = 1l\n\
    \        var d : Long = 1l\n        var e : Long = 1l\n        var f : Long =\
    \ 1l\n        var g : Long = 1l\n        var h : Long = 1l\n        var i : Long\
    \ = 1l\n        var j : Long = 1l\n        var k : Long = 1l\n        var l :\
    \ Long = 1l\n        var m : Long = 1l\n        var n : Long = 1l\n        var\
    \ o : Long = 1l\n        var p : Long = 1l\n        var q : Long = 1l\n      \
    \  var r : Long = 1l\n        var s : Long = 1l\n        var t : Long = 1l\n \
    \       var u : Long = 1l\n        var v : Long = 1l\n        var w : Long = 1l\n\
    \        var x : Long = 1l\n        var y : Long = 1l\n        var z : Long =\
    \ 1l\n        var a : \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmppc113cbe.scala:91:4 ----------------------------\e\
    [0m\e[0m\n\e[31m91 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmppc113cbe.scala:38:12 ---------------------------\e[0m\e[0m\n\e[31m38\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already\
    \ defined as \e[33mvariable\e[0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmppc113cbe.scala:39:12 ---------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mb is already defined as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppc113cbe.scala:40:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m40 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mc\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined as \e[33mvariable\e\
    [0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmppc113cbe.scala:41:12 ---------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m : \e[35mLong\e[0m\
    \ = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0md is already defined as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmppc113cbe.scala:46:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mi\e[0m : \e[35mLong\e[0m = \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^\e[0m\n\e"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_array = new Array[Long](2)\n        fib_array(0)\
    \ = 1l\n        fib_array(1) = 1l\n        val i = 2\n        while(i <= n){\n\
    \            fib_array(0) = fib_array(0) + fib_array(1)\n            fib_array(1)\
    \ = fib_array(0) + 1l\n            i = i + 1l\n        }\n        fib_array(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgpznkoel.scala:23:16\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            i = i + \e[31m1l\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \         Found:    Long\n\e[31m   |\e[0m                Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var d = 13l\n        var e = 89l\n        var f = 1l\n        var g = 2l\n\
    \        var h = 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n\
    \        var l = 3l\n        var m = 5l\n        var n = 13l\n        var o =\
    \ 89l\n        var p = 2l\n        var q = 5l\n        var r = 13l\n        var\
    \ s = 89l\n        var t = 2l\n        var u = 5l\n        var v = 13l\n     \
    \   var w = 89l\n        var x = 2l\n        var y = 5l\n        var z = 13l\n\
    \        var a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n\
    \        var e = 89l\n        var f = 1l\n        var g = 2l\n        var h =\
    \ 3l\n        var i = 5l\n        var j = 1l\n        var k = 2l\n        var\
    \ l = 3l\n        var m = 5l\n        var n = 13l\n        var o = 89l\n     \
    \   var p = 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n\
    \        var t = 2l\n        var u = 5l\n        var v = 13l\n        var w =\
    \ 89l\n        var x = 2l\n        var y = 5l\n        var z = 13l\n        var\
    \ a = 2l\n        var b = 3l\n        var c = 5l\n        var d = 13l\n      \
    \  var e = 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n \
    \       var i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 3l\n\
    \        var m = 5l\n        var n = 13l\n        var o = 89l\n        var p =\
    \ 2l\n        var q = 5l\n        var r = 13l\n        var s = 89l\n        var\
    \ t = 2l\n        var u = 5l\n        var v = 13l\n        var w = 89l\n     \
    \   var x = 2l\n        var y = 5l\n        var z = 13l\n        var a = 2l\n\
    \        var b = 3l\n        var c = 5l\n        var d = 13l\n        var e =\
    \ 89l\n        var f = 1l\n        var g = 2l\n        var h = 3l\n        var\
    \ i = 5l\n        var j = 1l\n        var k = 2l\n        var l = 3l\n       \
    \ var m = 5l\n        var n = 13l\n        var o = 89l\n        var p = 2l\n \
    \       var q = 5l\n        var r = 13l\n        var s = 89l\n        var t =\
    \ 2l\n        var u = 5l\n        var v = 13l\n        var w = 89l\n        var\
    \ x = 2l\n        var y = \n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpgs_b3l__.scala:118:15 --------------------------\e\
    [0m\e[0m\n\e[31m118 |\e[0m        \e[33mvar\e[0m \e[36my\e[0m = \n\e[31m\e[31m\
    \    |\e[0m               ^\e[0m\n\e[31m    |\e[0m               expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpgs_b3l__.scala:42:12 ---------------------------\e[0m\e[0m\n\e[31m42\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[31m2l\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma is already defined as \e[33mvariable\e\
    [0m \e[35ma\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpgs_b3l__.scala:43:12 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = \e[31m3l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mb is already defined\
    \ as \e[33mvariable\e[0m \e[35mb\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgs_b3l__.scala:44:12 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m5l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvariable\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgs_b3l__.scala:45:12 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mvar\e[0m \e[36md\e[0m = \e[31m13l\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0md is already defined\
    \ as \e[33mvariable\e[0m \e[35md\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpgs_b3l__.scala:46:12 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        \e[33mvar\e[0m \e[36me\e[0m = \e[31m89l\e[0m\n\
    \e[31m"
  stdout: ''
  timestamp: 1659799239
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ListBuffer[Long]()\n        fibs += 0l\n\
    \        fibs += 1l\n        fibs += 2l\n        fibs += 3l\n        fibs += 4l\n\
    \        fibs += 5l\n        fibs += 6l\n        fibs += 7l\n        fibs += 8l\n\
    \        fibs += 9l\n        fibs += 10l\n        fibs += 11l\n        fibs +=\
    \ 12l\n        fibs += 13l\n        fibs += 14l\n        fibs += 15l\n       \
    \ fibs += 16l\n        fibs += 17l\n        fibs += 18l\n        fibs += 19l\n\
    \        fibs += 20l\n        fibs += 21l\n        fibs += 22l\n        fibs +=\
    \ 23l\n        fibs += 24l\n        fibs += 25l\n        fibs += 26l\n       \
    \ fibs += 27l\n        fibs += 28l\n        fibs += 29l\n        fibs += 30l\n\
    \        fibs += 31l\n        fibs += 32l\n        fibs += 33l\n        fibs +=\
    \ 34l\n        fibs += 35l\n        fibs += 36l\n        fibs += 37l\n       \
    \ fibs += 38l\n        fibs += 39l\n        fibs += 40l\n        fibs += 41l\n\
    \        fibs += 42l\n        fibs += 43l\n        fibs += 44l\n        fibs +=\
    \ 45l\n        fibs += 46l\n        fibs += 47l\n        fibs += 48l\n       \
    \ fibs += 49l\n        fibs += 50l\n        fibs += 51l\n        fibs += 52l\n\
    \        fibs += 53l\n        fibs += 54l\n        fibs += 55l\n        fibs +=\
    \ 56l\n        fibs += 57l\n        fibs += 58l\n        fibs += 59l\n       \
    \ fibs += 60l\n        fibs += 61l\n        fibs += 62l\n        fibs += 63l\n\
    \        fibs += 64l\n        fibs += 65l\n        fibs += 66l\n        fibs +=\
    \ 67l\n        fibs += 68l\n        fibs += 69l\n        fibs += 70l\n       \
    \ fibs += 71l\n        fibs += 72l\n        fibs += 73l\n        fibs += 74l\n\
    \        fibs += 75l\n        fibs += 76l\n        fibs += 77l\n        fibs +=\
    \ 78l\n        fibs += 79l\n        fibs += 80l\n        fibs += 81l\n       \
    \ fibs += 82l\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphq9qldsz.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659799169

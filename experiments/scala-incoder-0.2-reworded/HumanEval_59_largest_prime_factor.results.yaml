language: scala
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 14)\n        val isPrimeIter\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp18zpxlsq.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp18zpxlsq.scala:13:78\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_ <=\
    \ n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                                                          ^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp18zpxlsq.scala:14:79 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                        "
  stdout: ''
  timestamp: 1659805683
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplprsoeeq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe5c6z9j9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpe5c6z9j9.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe5c6z9j9.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2)\n            factors\
    \ += i\n        factors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzbmwig6u.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzbmwig6u.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.Array\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbk2u7on8.scala:28:12 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimeFactor is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimeFactor\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpbk2u7on8.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrime\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpbk2u7on8.scala:32:12 ---------------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.Array\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpbk2u7on8.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e["
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val isPrime = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter2 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter3 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter4 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter5 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter6 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter8 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter9 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter10 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter11 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter12 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter13 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter14 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter15 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter16 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter17 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter18 = Iterator.iterate(n)(_ => false).takeWhile(_ < n).iterator\n\
    \        val isPrimeIter19 = Iterator.iterate(n)(_ => true).takeWhile(_ < n).iterator\n\
    \        val \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpor1yur4v.scala:31:11 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpor1yur4v.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpor1yur4v.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.HashSet[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpor1yur4v.scala:12:51 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ => \e[31mtrue\e[0m).takeWhile(_ < n).iterator\n\e[31m\e[31m   |\e[0m       \
    \                                            ^^^^\e[0m\n\e[31m   |\e[0m      \
    \                                        Found:    (\e[31mtrue\e[0m : Boolean)\n\
    \e[31m   |\e[0m                                              Required: Long\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpor1yur4v.scala:13:52\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e\
    [0m = Iterator.iterate(n)(_ => \e[31mfalse\e[0m).takeWhile(_ < n).iterator\n\e\
    [31m\e[31m   |\e[0m                                                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                             Found:    (\e\
    [31mfalse\e[0m : Boolean)\n\e[31m   |\e[0m                    "
  stdout: ''
  timestamp: 1659805684
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to Math.sqrt(n)) {\n \
    \           if(n % i == 0) {\n                factors += i\n                n\
    \ /= i\n            }\n        }\n        if(n > 1) {\n            factors +=\
    \ n\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd4u8yg3_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpd4u8yg3_.scala:11:31 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Double\n\e[31m   |\e[0m                   \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd4u8yg3_.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = Long.MaxValue\n    \
    \    for (i <- 2 to n by 2)\n            if (n % i == 0)\n                factors\
    \ += i\n        for (i <- factors) {\n            if (i <= largestPrimeFactor)\n\
    \                largestPrimeFactor = i\n        }\n        largestPrimeFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4si5f5cu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4si5f5cu.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2l\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx1dww407.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpx1dww407.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpx1dww407.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = BigInt(1)\n        var maxFactorPrime = BigInt(1)\n        var maxFactorPrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrime = BigInt(1)\n        var maxFactorPrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrime = BigInt(1)\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrime = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime =\
    \ BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = BigInt(1)\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = BigInt(1)\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = BigInt(1)\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = BigInt(1)\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePri\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpefndrhyl.scala:31:4 ----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpefndrhyl.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = BigInt(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpefndrhyl.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpefndrhyl.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = BigInt(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \e[31m   |\e[0m\e[0"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        var i = 2\n        while(i <= n && isPrime.size < 2) {\n            val\
    \ isPrime = n.toInt % i == 0\n            factors += i\n            i += isPrime\n\
    \        }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphb3mouk6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmphb3mouk6.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphb3mouk6.scala:16:14 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            i += isPrime\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val maxFactor = math.max(n / 2, 1)\n        for(i\
    \ <- 2 to maxFactor) {\n            if(n%i==0) {\n                factors += i\n\
    \                n /= i\n            }\n        }\n        factors.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpykwyhsbj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpykwyhsbj.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to maxFactor)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (maxFactor : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpykwyhsbj.scala:15:18 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                n /= i\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e\
    [31m   |\e[0m                value /= is not a member of Long - did you mean n.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2)\n            if(n % i ==\
    \ 0)\n                factors += i\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnqcrzfb8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnqcrzfb8.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var factor = 2\n        while (n != 1) {\n\
    \            if (n % factor == 0) {\n                factors += factor\n     \
    \           n /= factor\n            } else {\n                factor += 1\n \
    \           }\n        }\n        factors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjukbx1mg.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpjukbx1mg.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var maxFactor = 0\n        var maxFactorIndex\
    \ = 0\n        for(i <- 2 to n by 2){\n            if(n%i==0){\n             \
    \   factors.add(i)\n                if(i>maxFactor){\n                    maxFactor\
    \ = i\n                    maxFactorIndex = factors.indexOf(i)\n             \
    \   }\n            }\n        }\n        if(maxFactorIndex==0){\n            factors.add(n)\n\
    \        }\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8z78pkvv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8z78pkvv.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplprsoeeq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2)\n         \
    \   if(n % i == 0)\n                factors += i\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoudb5mmn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpoudb5mmn.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ => true).takeWhile(_ > 1).dropWhile(_\
    \ < n).iterator\n        var factor = 1\n        var isPrime = true\n        isPrimeIter.foreach(x\
    \ => {\n            if (x % factor == 0) {\n                factors += factor\n\
    \                isPrime += false\n            }\n            factor += 1\n  \
    \      })\n        if (isPrime.length == 0) {\n            return n\n        }\n\
    \        val largestPrimeFactor = factors.max\n        factors -= largestPrimeFactor\n\
    \        isPrime -= true\n        largestPrimeFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1kzjf_de.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36misPrime\e[0m = \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0misPrime\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrime\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1kzjf_de.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1kzjf_de.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp1kzjf_de.scala:12:51 --------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ => \e[31mtrue\e[0m).takeWhile(_ > \e[31m1\e[0m).dropWhile(_ < n).iterator\n\e\
    [31m\e[31m   |\e[0m                                                   ^^^^\e[0m\n\
    \e[31m   |\e[0m                                              Found:    (\e[31mtrue\e\
    [0m : Boolean)\n\e[31m   |\e[0m                                              Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n by 2l)\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        var factor = 2l\n        while (primes.contains(factor)) {\n        \
    \    factors += factor\n            factor += 2l\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_f72z4w1.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n by \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_f72z4w1.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805678
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.continually(isPrime)\n        val isPrimeIterIter\
    \ = Iterator.continually(isPrimeIter)\n        val isPrimeIterIterIter = Iterator.continually(isPrimeIterIter)\n\
    \        val isPrimeIterIterIterIter = Iterator.continually(isPrimeIterIterIter)\n\
    \        val isPrimeIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIter =\
    \ Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIter\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpztcsp5ge.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpztcsp5ge.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIter\e[0m = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIter is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpztcsp5ge.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpztcsp5ge.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E00"
  stdout: ''
  timestamp: 1659805681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        var factor = 2\n        while (factor <= n) {\n            if (n % factor\
    \ == 0) {\n                primes += factor\n                isPrime += true\n\
    \            }\n            factor += 1\n        }\n        primes.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ibh7v94.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp1ibh7v94.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805678
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i < n) {\n     \
    \       if (n % i == 0) {\n                primes += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        if (n > 1) {\n        \
    \    primes += n\n        }\n        primes.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptz1xyksa.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptz1xyksa.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrime2 = true\n        var isPrime2Index = 0\n\
    \        var isPrime3 = true\n        var isPrime3Index = 0\n        var isPrime4\
    \ = true\n        var isPrime4Index = 0\n        var isPrime5 = true\n       \
    \ var isPrime5Index = 0\n        var isPrime6 = true\n        var isPrime6Index\
    \ = 0\n        var isPrime7 = true\n        var isPrime7Index = 0\n        var\
    \ isPrime8 = true\n        var isPrime8Index = 0\n        var isPrime9 = true\n\
    \        var isPrime9Index = 0\n        var isPrime10 = true\n        var isPrime10Index\
    \ = 0\n        var isPrime11 = true\n        var isPrime11Index = 0\n        var\
    \ isPrime12 = true\n        var isPrime12Index = 0\n        var isPrime13 = true\n\
    \        var isPrime13Index = 0\n        var isPrime14 = true\n        var isPrime14Index\
    \ = 0\n        var isPrime15 = true\n        var isPrime15Index = 0\n        var\
    \ isPrime16 = true\n        var isPrime16Index = 0\n        var isPrime17 = true\n\
    \        var isPrime17Index = 0\n        var isPrime18 = true\n        var isPrime18Index\
    \ = 0\n        var isPrime19 = true\n        var isPrime19Index = 0\n        var\
    \ isPrime20 = true\n        var isPrime20Index = 0\n        var isPrime21 = true\n\
    \        var isPrime21Index = 0\n        var isPrime22 = true\n        var isPrime22Index\
    \ = 0\n        var isPrime23 = true\n        var isPrime23Index = 0\n        var\
    \ isPrime24 = true\n        var isPrime24Index = 0\n        var isPrime25 = true\n\
    \        var isPrime25Index = 0\n        var isPrime26 = true\n        var isPrime26Index\
    \ = 0\n        var isPrime27 = true\n        var isPrime27Index = 0\n        var\
    \ isPrime28 = true\n        var isPrime28Index = 0\n        var isPrime29 = true\n\
    \        var isPrime29Index = 0\n        var isPrime30 = true\n        var isPrime30Index\
    \ = 0\n        var isPrime31 = true\n        var isPrime31Index = 0\n        var\
    \ isPrime32 = true\n        var isPrime32Index = 0\n        var isPrime33 = true\n\
    \        var isPrime33Index = 0\n        var isPrime34 = true\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiyot_zg2.scala:79:5\
    \ ---------------------\e[0m\e[0m\n\e[31m79 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n) {\n            val isPrime = n.isPrime\n            if\
    \ (isPrime) {\n                primes += i\n                factors += i\n   \
    \             isPrime += false\n            }\n            i += 1\n        }\n\
    \        val largestPrime = primes.max\n        val largestFactor = factors.max\n\
    \        val largestPrimeFactor = if (largestPrime == 0) largestFactor else largestPrime\
    \ * largestFactor\n        largestPrimeFactor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmw3uv7pw.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmw3uv7pw.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmw3uv7pw.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpmw3uv7pw.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36misPrime\e[0m = n.isPrime\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                          value isPrime is not a member of Long\n4 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7h_67snp.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp7h_67snp.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7h_67snp.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = Long.MinValue\n        var maxFactorPrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrime = Long.MinValue\n    \
    \    var maxFactorPrimePrimePrimePrime = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfeo68k95.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfeo68k95.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = Long.MinValue\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfeo68k95.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = Long.MinValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpfeo68k95.scala:30:5 ---------------------\e[0m\e[0m\n\
    \e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:\
    \    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ != 0).iterator\n        while(isPrimeIter.hasNext && isPrimeIter2.hasNext)\
    \ {\n            val p = isPrimeIter.next()\n            val q = isPrimeIter2.next()\n\
    \            if(p * q > n) break\n            factors += p\n            factors\
    \ += q\n            isPrime += true\n            isPrime += false\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp90bv2wwb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp90bv2wwb.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp90bv2wwb.scala:12:46 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                              ^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp90bv2wwb.scala:12:77 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \        Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmp90bv2wwb.scala:13:47 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ != \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                               ^^^^^\e[0m\n\
    \e[31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Synta"
  stdout: ''
  timestamp: 1659805688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while(factor\
    \ <= n) {\n            primes += factor\n            factor += 2\n        }\n\
    \        primes.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk15_ejko.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659805688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i==0){\n\
    \                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi9f8le_6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi9f8le_6.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = mutable.Set[Long]()\n        val largestFactor = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val largestPrimeFactor\
    \ = mutable.Set[Long]()\n        val largestPrimeFactors = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount = mutable.Set[Long]()\n        val largestPrimeFactorsCount2\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount3 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount4 = mutable.Set[Long]()\n        val largestPrimeFactorsCount5\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount6 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount7 = mutable.Set[Long]()\n        val largestPrimeFactorsCount8\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount9 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount10 = mutable.Set[Long]()\n        val largestPrimeFactorsCount11\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount12 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount13 = mutable.Set[Long]()\n        val largestPrimeFactorsCount14\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount15 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount16 = mutable.Set[Long]()\n        val largestPrimeFactorsCount17\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount18 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount19 = mutable.Set[Long]()\n        val largestPrimeFactorsCount20\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount21 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount22 = mutable.Set[Long]()\n        val largestPrimeFactorsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphqzpdbba.scala:40:4 ----------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphqzpdbba.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphqzpdbba.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphqzpdbba.scala:12:27\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mlargestPrime\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmphqzpdbba.scala:13:28 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mlargestFactor\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphqzpdbba.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e["
  stdout: ''
  timestamp: 1659805691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrime = mutable.ArrayBuffer.empty[Long]\n        val largestFactor\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val largestPrimeFactor = mutable.ArrayBuffer.empty[Long]\n        val\
    \ largestPrimeFactors = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndex\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndexCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val largestPrimeFactorsIndex\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyculfke7.scala:39:4 ----------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyculfke7.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36mlargestPrimeFactorsIndexCount\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorsIndexCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorsIndexCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyculfke7.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsIndexCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mlargestPrimeFactorsIndexCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorsIndexCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyculfke7.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsIndexCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mlargestPrimeFactorsIndexCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorsIndexCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyculfke7.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorsIndexCount\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mLo"
  stdout: ''
  timestamp: 1659805691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1z_5upa9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1z_5upa9.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2l\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        if (n > 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpymo7sg2c.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpymo7sg2c.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpymo7sg2c.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2l\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72owyttw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp72owyttw.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp72owyttw.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_\
    \ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ <\
    \ n).takeWhile(_ > 1).filter(_ % _ == 0).dropWhile(_ < n).takeWhile(_ > 1).filter(_\
    \ % _ == 0).drop\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0thboz02.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp0thboz02.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0thboz02.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp0thboz02.scala:13:46 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ <\
    \ n).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_\
    \ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ >\
    \ \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e\
    [31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e[31m1\e\
    [0m).filter(_ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e[31m1\e[0m).filter(_\
    \ % _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e[31m1\e[0m).filter(_ %\
    \ _ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e[31m1\e[0m).filter(_ % _\
    \ == \e[31m0\e[0m).dropWhile(_ < n).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ ==\
    \ \e[31m0\e[0m).dropWhile(_"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n/2) {\n            if\
    \ (n % i == 0) {\n                factors += i\n            }\n        }\n   \
    \     factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpar45lzil.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpar45lzil.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n/\e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m\
    \                       Found:    Long\n\e[31m   |\e[0m                      \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ != 1) {\n            factors += n\n        }\n        factors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpufg003f3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpufg003f3.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufg003f3.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ isPrime = mutable.Set[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter2 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 14)\n        val isPrimeIter\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp18zpxlsq.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m      \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18zpxlsq.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp18zpxlsq.scala:13:78\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_ <=\
    \ n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                                                          ^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp18zpxlsq.scala:14:79 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                        "
  stdout: ''
  timestamp: 1659805683
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7h_67snp.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp7h_67snp.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7h_67snp.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) \n        val factors = mutable.ArrayBuffer(2l)\n\
    \        var i = 2l\n        while(i < n) {\n            val isPrime = primes.contains(i)\n\
    \            if(!isPrime) {\n                primes += i\n                while(i\
    \ < n && primes.contains(i)) {\n                    factors += i\n           \
    \         i += 1\n                }\n            }\n            i += 1\n     \
    \   }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptvd1b22u.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) \n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmptvd1b22u.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  for (i <- 2 to n by 2)\n            if (n % i == 0)\n                factors\
    \ += i\n            else\n                isPrime += false\n        val largestPrime\
    \ = factors.max\n        val isPrimeIndex = isPrime.indexOf(true)\n        if\
    \ (isPrimeIndex != -1)\n            largestPrime\n        else\n            largestPrimeFactor(n\
    \ / largestPrime)\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpan0rln3r.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpan0rln3r.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpan0rln3r.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwf7n2qoc.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpwf7n2qoc.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwf7n2qoc.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n / i) {\n            if (n % i == 0) {\n               \
    \ factors += i\n                primes += i\n                isPrime += true\n\
    \            }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestPrimeIndex = factors.indexOf(largestPrime)\n        val largestPrimeFactor\
    \ = factors(largestPrimeIndex)\n        val isPrimeIndex = primes.indexOf(largestPrime)\n\
    \        val isPrime = isPrimeIndex(isPrimeIndex)\n        if (isPrime) {\n  \
    \          largestPrimeFactor\n        } else {\n            largestPrimeFactor\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvx6zmtcl.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = isPrimeIndex(isPrimeIndex)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvx6zmtcl.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpvx6zmtcl.scala:11:21 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpvx6zmtcl.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrimeFactor = false\n        var isPrimeFactorIndex\
    \ = 0\n        var isPrimeFactor2 = false\n        var isPrimeFactor2Index = 0\n\
    \        var isPrimeFactor3 = false\n        var isPrimeFactor3Index = 0\n   \
    \     var isPrimeFactor4 = false\n        var isPrimeFactor4Index = 0\n      \
    \  var isPrimeFactor5 = false\n        var isPrimeFactor5Index = 0\n        var\
    \ isPrimeFactor6 = false\n        var isPrimeFactor6Index = 0\n        var isPrimeFactor7\
    \ = false\n        var isPrimeFactor7Index = 0\n        var isPrimeFactor8 = false\n\
    \        var isPrimeFactor8Index = 0\n        var isPrimeFactor9 = false\n   \
    \     var isPrimeFactor9Index = 0\n        var isPrimeFactor10 = false\n     \
    \   var isPrimeFactor10Index = 0\n        var isPrimeFactor11 = false\n      \
    \  var isPrimeFactor11Index = 0\n        var isPrimeFactor12 = false\n       \
    \ var isPrimeFactor12Index = 0\n        var isPrimeFactor13 = false\n        var\
    \ isPrimeFactor13Index = 0\n        var isPrimeFactor14 = false\n        var isPrimeFactor14Index\
    \ = 0\n        var isPrimeFactor15 = false\n        var isPrimeFactor15Index =\
    \ 0\n        var isPrimeFactor16 = false\n        var isPrimeFactor16Index = 0\n\
    \        var isPrimeFactor17 = false\n        var isPrimeFactor17Index = 0\n \
    \       var isPrimeFactor18 = false\n        var isPrimeFactor18Index = 0\n  \
    \      var isPrimeFactor19 = false\n        var isPrimeFactor19Index = 0\n   \
    \     var isPrimeFactor20 = false\n        var isPrimeFactor20Index = 0\n    \
    \    var isPrimeFactor21 = false\n        var isPrimeFactor21Index = 0\n     \
    \   var isPrimeFactor22 = false\n        var isPrimeFactor22Index = 0\n      \
    \  var isPrimeFactor23 = false\n        var isPrimeFactor23Index = 0\n       \
    \ var isPrimeFactor24 = false\n        var isPrimeFactor24Index = 0\n        var\
    \ isPrimeFactor25 = false\n        var isPrimeFactor25Index = 0\n        var isPrimeFactor26\
    \ = false\n        var isPrimeFactor26Index = 0\n        var isPrimeFactor27 =\
    \ false\n        var isPrimeFactor27Index = 0\n        var isPrimeFactor28 = false\n\
    \        var isPrimeFactor28Index = 0\n        var isPrimeFactor29 = false\n \
    \       var isPrimeFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvhwb12h8.scala:72:4 ----------------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpvhwb12h8.scala:72:5 ---------------------\e[0m\e[0m\n\e[31m72 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805693
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    val test = i * i\n            while(test < n){\n                if(n % test\
    \ == 0){\n                    factors += test\n                    n /= test\n\
    \                }\n                test += i\n            }\n        }\n    \
    \    factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmhw_nycu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmhw_nycu.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmhw_nycu.scala:16:22\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                    n /=\
    \ test\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m  \
    \                 value /= is not a member of Long - did you mean n.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpmhw_nycu.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                test += i\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean test.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659805694
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrimeFactors\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePri\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzkpc10b0.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzkpc10b0.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimeFactor is already defined as \e[33mvalue\e\
    [0m \e[35misPrimePrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzkpc10b0.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimeFactor\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimeFactor is already defined as \e[33mvalue\e\
    [0m \e[35misPrimePrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpzkpc10b0.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpzkpc10b0.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e["
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpdjf8rq5e.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdjf8rq5e.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimeFactor is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdjf8rq5e.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpdjf8rq5e.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimeFactor is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpdjf8rq5e.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33m"
  stdout: ''
  timestamp: 1659805694
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var maxFactor = 0\n        var maxFactorPrime\
    \ = 0\n        var primeFactor = 1\n        for(i <- 2 to n){\n            primeFactor\
    \ = 1\n            for(j <- 2 to i){\n                if(i % j == 0){\n      \
    \              primeFactor *= j\n                    primes += j\n           \
    \     }\n            }\n            if(primeFactor > maxFactor){\n           \
    \     maxFactor = primeFactor\n                maxFactorPrime = primes.last\n\
    \            }\n        }\n        maxFactor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy0tfhcra.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpy0tfhcra.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805694
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n      \
    \  val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <= n).filter(_\
    \ % _ != 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ <= n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ <= n).filter(_ % _ != 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf8yaukzk.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpf8yaukzk.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpf8yaukzk.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpf8yaukzk.scala:13:80 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpf8yaukzk.scala:14:81 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                         ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \              Wrong number of parameters, e"
  stdout: ''
  timestamp: 1659805696
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val isPrimeIter = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0).iterator\n        val isPrimeIter2\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 1).iterator\n\
    \        val isPrimeIter3 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 2).iterator\n        val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 3).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4).iterator\n        val isPrimeIter6\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 5).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 6).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 7).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8).iterator\n        val isPrimeIter10\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 9).iterator\n\
    \        val isPrimeIter11 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 10).iterator\n        val isPrimeIter12 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 11).iterator\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12).iterator\n        val isPrimeIter14\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ == 13).iterator\n\
    \        val isPrimeIter15 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 14).iterator\n        val isPrimeIter16 = Iterator.iterate(n)(_ + \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1yu9we5j.scala:28:51 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter16\e[0m = Iterator.iterate(n)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \ ^\e[0m\n\e[31m   |\e[0m                                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1yu9we5j.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1yu9we5j.scala:11:21 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp1yu9we5j.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.HashSet[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp1yu9we5j.scala:13:78 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \         Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax"
  stdout: ''
  timestamp: 1659805699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    if(n%i == 0){\n                factors += i\n                n /= i\n   \
    \         }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwjg9c861.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwjg9c861.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwjg9c861.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n)\
    \ {\n            if (n % i == 0) {\n                primes += i\n            \
    \    n /= i\n            }\n            i += 1\n        }\n        primes.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpknt2rdis.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpknt2rdis.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpknt2rdis.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805700
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        for (i <- 2 to n by 2) {\n            if (n % i == 0) {\n           \
    \     factors += i\n                isPrime += false\n            }\n        }\n\
    \        val largestPrimeFactor = factors.max\n        val isPrimeIndex = factors.indexOf(largestPrimeFactor)\n\
    \        if (isPrime(isPrimeIndex)) {\n            largestPrimeFactor\n      \
    \  } else {\n            largestPrimeFactor\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9dbjta81.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp9dbjta81.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9dbjta81.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805700
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        val primeFactors = mutable.ArrayBuffer(2l)\n\
    \        val isPrime = mutable.ArrayBuffer(false)\n        val isPrimeFactor =\
    \ mutable.ArrayBuffer(false)\n        val isPrimeFactor2 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor3 = mutable.ArrayBuffer(false)\n        val isPrimeFactor4\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor5 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor6 = mutable.ArrayBuffer(false)\n        val isPrimeFactor7\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor8 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor9 = mutable.ArrayBuffer(false)\n        val isPrimeFactor10\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor11 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor12 = mutable.ArrayBuffer(false)\n        val isPrimeFactor13\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor14 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor15 = mutable.ArrayBuffer(false)\n        val isPrimeFactor16\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor17 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor18 = mutable.ArrayBuffer(false)\n        val isPrimeFactor19\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor20 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor21 = mutable.ArrayBuffer(false)\n        val isPrimeFactor22\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor23 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor24 = mutable.ArrayBuffer(false)\n        val isPrimeFactor25\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor26 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor27 = mutable.ArrayBuffer(false)\n        val isPrimeFactor28\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor29 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor30 = mutable.ArrayBuffer(false)\n        val isPrimeFactor31\
    \ = mutable.ArrayBuffer(false)\n        val isPrimeFactor32 = mutable.ArrayBuffer(false)\n\
    \        val isPrimeFactor33 = \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpc1i_nfzp.scala:45:29 ---------------------------\e\
    [0m\e[0m\n\e[31m45 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor33\e[0m = \n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m    \
    \                         expression expected but \e[31m'}'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1i_nfzp.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpc1i_nfzp.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1i_nfzp.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpc1i_nfzp.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1i_nfzp.scala:14:29 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4b3tvit6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4b3tvit6.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp9xaodz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpdp9xaodz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while(i <= n/i) {\n      \
    \      if(n%i == 0) {\n                factors += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc0kdkt9j.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpc0kdkt9j.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc0kdkt9j.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter10\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter22\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter28\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplc2smpzg.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplc2smpzg.scala:13:26 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplc2smpzg.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       "
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2)\n            if(n%i\
    \ == 0)\n                factors += i\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm4r240bn.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpm4r240bn.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                factors\
    \ += i\n                primes += i\n                isPrime += true\n       \
    \     }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestPrimeFactor = factors.max\n        val largestPrimeIsPrime\
    \ = isPrime.max\n        (largestPrime, largestPrimeFactor, largestPrimeIsPrime)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp206znsvz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp206znsvz.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp206znsvz.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp206znsvz.scala:25:8 ---------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        (largestPrime, largestPrimeFactor, largestPrimeIsPrime)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    (Nothing, Nothing, Nothing)\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805703
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                primes += i\n            }\n\
    \            i += 1\n        }\n        val largestPrime = primes.max\n      \
    \  factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmxvk55hj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmxvk55hj.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = Long.MaxValue\n        val largestFactor = Long.MaxValue\n  \
    \      for (i <- 2 to n) {\n            if (n % i == 0) {\n                primes.add(i)\n\
    \                factors.add(i)\n            }\n        }\n        for (prime\
    \ <- primes) {\n            val factor = (n / prime).toInt\n            if (factor\
    \ > largestFactor) {\n                largestFactor = factor\n               \
    \ largestPrime = prime\n            }\n        }\n        largestPrime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwci8u8ex.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwci8u8ex.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwci8u8ex.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n by 2l) filter (_ % _ == 0)\n        primes.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp74w6jjs9.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n by \e[31m2l\e[0m) filter (_ % _ == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659805699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while(factor\
    \ <= n){\n            factors += factor\n            factor += 2\n        }\n\
    \        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbpnxo15u.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var factor = 2l\n        while (factor <=\
    \ n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        primes.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwk3dd4x9.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwk3dd4x9.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        val factors = mutable.ArrayBuffer(2l)\n \
    \       val largestPrime = mutable.ArrayBuffer(2l)\n        val largestPrimeFactor\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n\
    \        val largestPrimeFactorCount = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount\
    \ = mutable.ArrayBuffer(2l)\n        val largestPrimeFactorCount = mutable.Array\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjaazznp5.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorCount\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjaazznp5.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorCount\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjaazznp5.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorCount\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjaazznp5.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactorCount\e\
    [0m = mutable.ArrayBuffer(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mlargestPrimeFactorCount is already defined as \e[33mvalue\e\
    [0m \e[35mlargestPrimeFactorCount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[3"
  stdout: ''
  timestamp: 1659805705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1z_5upa9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1z_5upa9.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpka45d3g2.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpka45d3g2.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpka45d3g2.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        while(n > 1)\
    \ {\n            val nextFactor = n % factors.last\n            factors += nextFactor\n\
    \            n /= nextFactor\n        }\n        factors.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3m5a4c8m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp3m5a4c8m.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            n /= nextFactor\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var i = 2l\n        while (i < n) {\n   \
    \         if (n % i == 0) {\n                primes += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n > 1) {\n    \
    \        primes += n\n        }\n        primes.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj08gaevo.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpj08gaevo.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1z_5upa9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1z_5upa9.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var largestPrimeFactor = 0\n        for(i\
    \ <- 2 to n by 2){\n            if(n%i == 0){\n                factors += i\n\
    \                largestPrimeFactor = i\n            }\n        }\n        largestPrimeFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzjr421dv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzjr421dv.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val primeFactors = mutable.HashMap[Long, Long]()\n        val isPrime =\
    \ mutable.HashMap[Long, Boolean]()\n        var maxFactor = 0\n        val isPrimeIter\
    \ = Iterator.continually(isPrime(n % _))\n        val isPrimeIterIter = Iterator.continually(isPrimeIter.next)\n\
    \        val isPrimeIterIterIter = Iterator.continually(isPrimeIterIter.next)\n\
    \        val isPrimeIterIterIterIter = Iterator.continually(isPrimeIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIter.next)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpu86kt1ue.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu86kt1ue.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIterIterIterIter\e[0m = Iterator.continually(isPrimeIterIterIterIterIterIterIterIter.next)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIter is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIter\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpu86kt1ue.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter.next)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIter is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpu86kt1ue.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpu86kt1ue.scala:11:21 ------------------------\e\
    [0m\e["
  stdout: ''
  timestamp: 1659805704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var maxFactor = 0\n        var maxFactorIndex\
    \ = 0\n        for(i <- 2 to n){\n            val factor = (n%i)\n           \
    \ if(factor != 0){\n                factors += factor\n                if(factor\
    \ > maxFactor){\n                    maxFactor = factor\n                    maxFactorIndex\
    \ = i\n                }\n            }\n        }\n        factors.last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj3c903vb.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpj3c903vb.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj3c903vb.scala:18:32\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                    maxFactor\
    \ = factor\n\e[31m\e[31m   |\e[0m                                ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                Found:    (factor : Long)\n\e[31m\
    \   |\e[0m                                Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805708
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        var largestPrimeFactor = 0\n        var currentPrime\
    \ = 1\n        var currentFactor = 1\n        while (n > 1) {\n            factors\
    \ += currentPrime\n            currentPrime += 1\n            n /= currentPrime\n\
    \        }\n        factors.foreach { factor =>\n            if (factor > largestPrimeFactor)\
    \ {\n                largestPrimeFactor = factor\n            }\n        }\n \
    \       largestPrimeFactor\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr7rutm6w.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpr7rutm6w.scala:17:14 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            n /= currentPrime\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimeFactor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n     \
    \   val isPrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimePrimePrimePrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo9fpy6r6.scala:33:4 ----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo9fpy6r6.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo9fpy6r6.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo9fpy6r6.scala:12:27\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpo9fpy6r6.scala:13:22 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpo9fpy6r6.scala:14:28 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     "
  stdout: ''
  timestamp: 1659805710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2)\n            if\
    \ (n % i == 0)\n                factors += i\n        factors.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin0ls5ke.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpin0ls5ke.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        val i = 2l\n        while (i < n) {\n   \
    \         if (n % i == 0) {\n                primes += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        primes.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkx9562si.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkx9562si.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkx9562si.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while(i <= n/i)\
    \ {\n            if(n%i == 0) {\n                factors += i\n              \
    \  n /= i\n            }\n            i += 1\n        }\n        if(n > 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpswwvg85m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpswwvg85m.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while(i <= sqrt(n)) {\n\
    \            if(n % i == 0) {\n                factors += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        if(n > 1) {\n  \
    \          factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc4kizy8w.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpc4kizy8w.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc4kizy8w.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        var i = 2\n        while (i <= n / 2) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                isPrime += false\n        \
    \    }\n            else {\n                isPrime += true\n            }\n \
    \           i += 1\n        }\n        val largestPrimeFactor = factors.max\n\
    \        val isPrime = factors.toList.map(_.toBoolean).max\n        if (isPrime)\
    \ {\n            largestPrimeFactor\n        }\n        else {\n            largestPrimeFactor\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmptlcjp9vm.scala:24:12 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = factors.toList.map(_.toBoolean).max\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrime is already defined as \e[33mvalue\e[0m \e[35misPrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmptlcjp9vm.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptlcjp9vm.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp9xaodz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpdp9xaodz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n \
    \       val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_\
    \ % _ == 0).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).iterator\n\
    \        val isPrimeIter8 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_\
    \ % _ != 0).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_\
    \ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).iterator\n        val\
    \ isPrimeIter10 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ !=\
    \ 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n        val\
    \ isPrimeIter11 = Iterator.iterate(n)(_ + 2).\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzvrsk0xq.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpzvrsk0xq.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzvrsk0xq.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpzvrsk0xq.scala:12:78 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \         Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpzvrsk0xq.scala:13:79 ---------------------------\e[0m\e[0m\n\e\
    [31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                     ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \          Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpzvrsk0xq.scala:14:79 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter3\e[0m = Iterator.iterate(n)(_\
    \ +"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                factors += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbd6t3fzf.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbd6t3fzf.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for(i <- 2 to Math.sqrt(n)) {\n            if(n % i == 0) {\n       \
    \         factors += i\n                isPrime += false\n            }\n    \
    \        else {\n                isPrime += true\n            }\n        }\n \
    \       val largestPrimeFactor = factors.max\n        if(isPrime.contains(false))\
    \ {\n            largestPrimeFactor\n        } else {\n            largestPrimeFactor\
    \ * largestPrimeFactor\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmployhzvph.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmployhzvph.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmployhzvph.scala:12:31 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Double\n\e[31m   |\e[0m                   \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659805714
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val primeFactors = mutable.HashMap[Long, Long]()\n        val isPrime =\
    \ mutable.HashMap[Long, Boolean]()\n        val isPrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimePrime = mutable.HashMap[Long, Boolean]()\n  \
    \      val isPrimePrimeFactor = mutable.HashMap[Long, Boolean]()\n        val\
    \ isPrimePrimePrime = mutable.HashMap[Long, Boolean]()\n        val isPrimePrimePrimeFactor\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimePrimePrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimePrimePrimePrime = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimePrimePrimePrimePrime = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsp6606kx.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimeFactor\e\
    [0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0misPrimePrimePrimeFactor is already defined as \e[33mvalue\e[0m\
    \ \e[35misPrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsp6606kx.scala:27:12 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsp6606kx.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsp6606kx.scala:31:12 ---------------------------\e[0m\e[0m\n\e\
    [31m31 |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactor\e\
    [0m = mut\n\e[31m\e[31m"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var factor = 2\n        while (n >= factor) {\n\
    \            if (n % factor == 0) {\n                factors += factor\n     \
    \           n /= factor\n            }\n            else {\n                factor\
    \ += 1\n            }\n        }\n        factors.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkn0i9xx7.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpkn0i9xx7.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805714
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        if (n != 1) {\n   \
    \         factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi75tgkck.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpi75tgkck.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi75tgkck.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805715
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n / 2) {\n            if (n % i == 0) {\n               \
    \ primes += i\n                primeFactors += i\n                isPrime += true\n\
    \            }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestPrimeFactor = primeFactors.max\n        val largestPrimeIsPrime\
    \ = isPrime.max\n        if (largestPrimeIsPrime) {\n            largestPrimeFactor\n\
    \        } else {\n            largestPrimeFactor * largestPrime\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsz_ogml8.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpsz_ogml8.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpsz_ogml8.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    if(n%i == 0){\n                factors += i\n                n /= i\n   \
    \         }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwjg9c861.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwjg9c861.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwjg9c861.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2)\n            if(n %\
    \ i == 0)\n                factors.add(i)\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ckbdxy1.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1ckbdxy1.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805714
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = Long.MinValue\n        var maxFactorPrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrime = Long.MinValue\n    \
    \    var maxFactorPrimePrimePrimePrime = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfeo68k95.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfeo68k95.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = Long.MinValue\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfeo68k95.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = Long.MinValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpfeo68k95.scala:30:5 ---------------------\e[0m\e[0m\n\
    \e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:\
    \    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n.toInt)\n        var largestPrime = 0l\n\
    \        var largestPrimeFactor = 0l\n        var primeFactor = 0l\n        var\
    \ primeFactor2 = 0l\n        var primeFactor3 = 0l\n        var primeFactor4 =\
    \ 0l\n        var primeFactor5 = 0l\n        var primeFactor6 = 0l\n        var\
    \ primeFactor7 = 0l\n        var primeFactor8 = 0l\n        var primeFactor9 =\
    \ 0l\n        var primeFactor10 = 0l\n        var primeFactor11 = 0l\n       \
    \ var primeFactor12 = 0l\n        var primeFactor13 = 0l\n        var primeFactor14\
    \ = 0l\n        var primeFactor15 = 0l\n        var primeFactor16 = 0l\n     \
    \   var primeFactor17 = 0l\n        var primeFactor18 = 0l\n        var primeFactor19\
    \ = 0l\n        var primeFactor20 = 0l\n        var primeFactor21 = 0l\n     \
    \   var primeFactor22 = 0l\n        var primeFactor23 = 0l\n        var primeFactor24\
    \ = 0l\n        var primeFactor25 = 0l\n        var primeFactor26 = 0l\n     \
    \   var primeFactor27 = 0l\n        var primeFactor28 = 0l\n        var primeFactor29\
    \ = 0l\n        var primeFactor30 = 0l\n        var primeFactor31 = 0l\n     \
    \   var primeFactor32 = 0l\n        var primeFactor33 = 0l\n        var primeFactor34\
    \ = 0l\n        var primeFactor35 = 0l\n        var primeFactor36 = 0l\n     \
    \   var primeFactor37 = 0l\n        var primeFactor38 = 0l\n        var primeFactor39\
    \ = 0l\n        var primeFactor40 = 0l\n        var primeFactor41 = 0l\n     \
    \   var primeFactor42 = 0l\n        var primeFactor43 = 0l\n        var primeFactor44\
    \ = 0l\n        var primeFactor45 = 0l\n        var primeFactor46 = 0l\n     \
    \   var primeFactor47 = 0l\n        var primeFactor48 = 0l\n        var primeFactor49\
    \ = 0l\n        var primeFactor50 = 0l\n        var primeFactor51 = 0l\n     \
    \   var primeFactor52 = 0l\n        var primeFactor53 = 0l\n        var primeFactor54\
    \ = 0l\n        var primeFactor55 = 0l\n        var primeFactor56 = 0l\n     \
    \   var primeFactor57 = 0l\n        var primeFactor58 = 0l\n        var primeFactor59\
    \ = 0l\n        var primeFactor60 = 0l\n        var primeFactor61 = 0l\n     \
    \   var primeFactor62 = 0l\n        var primeFactor63 = 0l\n        var primeFactor64\
    \ = 0l\n        var primeFactor65 = 0l\n        var primeFactor66 = 0l\n     \
    \   var primeFactor67 = 0l\n        var primeFactor68 = 0l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt0t3fb9c.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n.toInt)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt0t3fb9c.scala:81:5\
    \ ---------------------\e[0m\e[0m\n\e[31m81 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805714
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i < n) {\n     \
    \       if (n % i == 0) {\n                primes += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        primes.last\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyyrddj6s.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpyyrddj6s.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805715
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val isPrimeIter = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter2 = mutable.HashSet[Boolean]()\n        val isPrimeIter3\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter4 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter5 = mutable.HashSet[Boolean]()\n        val isPrimeIter6\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter7 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter8 = mutable.HashSet[Boolean]()\n        val isPrimeIter9\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter10 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter11 = mutable.HashSet[Boolean]()\n        val isPrimeIter12\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter13 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter14 = mutable.HashSet[Boolean]()\n        val isPrimeIter15\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter16 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter17 = mutable.HashSet[Boolean]()\n        val isPrimeIter18\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter19 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter20 = mutable.HashSet[Boolean]()\n        val isPrimeIter21\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter22 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter23 = mutable.HashSet[Boolean]()\n        val isPrimeIter24\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter25 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter26 = mutable.HashSet[Boolean]()\n        val isPrimeIter27\
    \ = mutable.HashSet[Boolean]()\n        val isPrimeIter28 = mutable.HashSet[Boolean]()\n\
    \        val isPrimeIter29\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp38d2dyro.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp38d2dyro.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp38d2dyro.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp38d2dyro.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.HashSet[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp38d2dyro.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.HashSet[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp38d2dyro.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.HashSet[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e[3"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l to n.toInt)\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        while(primes.nonEmpty) {\n            val p = primes.head\n         \
    \   primes = primes.tail\n            factors += p\n            val q = n / p\n\
    \            if(q > 1) {\n                factors += q\n                n -= q\
    \ * p\n            }\n        }\n        factors.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjr4ia6lo.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m to n.toInt)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjr4ia6lo.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjr4ia6lo.scala:14:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            primes =\
    \ primes.tail\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            Reassignment to val primes\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpjr4ia6lo.scala:19:18 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                n -= q * p\n\e[31m\e[31m   |\e[0m   \
    \             ^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a member\
    \ of Long - did you mean n.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(n => isPrime.append(false))\n        val isPrimeIterIter\
    \ = Iterator.iterate(isPrime)(_ => primes.append(false))\n        val isPrimeIterIterIter\
    \ = Iterator.iterate(primes)(_ => factors.append(false))\n        val isPrimeIterIterIterIter\
    \ = Iterator.iterate(factors)(_ => isPrime.append(true))\n        val isPrimeIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(_ => primes.append(true))\n        val isPrimeIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(_ => factors.append(true))\n        val isPrimeIterIterIterIterIterIterIter\
    \ = Iterator.iterate(factors)(_ => isPrime.append(false))\n        val isPrimeIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(_ => primes.append(false))\n        val isPrimeIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(_ => factors.append(false))\n        val isPrimeIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(factors)(_ => isPrime.append(true))\n        val isPrimeIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(_ => primes.append(true))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(_ => factors.append(true))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(factors)(_ => isPrime.append(false))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrime)(_ => primes.append(false))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(primes)(_ => factors.append(false))\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(factors)(_ => isPrime.append(true))\n        val isPrimeIterIterIterIterIterIter\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2dlisypk.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp2dlisypk.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIterIterIterIterIter\e[0m = Iterator.iterate(isPrime)(_\
    \ => primes.append(\e[31mtrue\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIter is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2dlisypk.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrime)(_ => primes.append(\e[31mfalse\e[0m))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIter is\
    \ already defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp2dlisypk.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(primes)(_ => factors.append(\e[31mfalse\e[0m))\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIter is\
    \ already defined as \e"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8duptis3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8duptis3.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                primes += i\n            }\n\
    \            i += 1\n        }\n        val largest = factors.max\n        val\
    \ largestPrime = primes.max\n        if (largest == largestPrime) {\n        \
    \    largestPrime\n        } else {\n            largestPrimeFactor(largest)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpitpgat4m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpitpgat4m.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primesCount = mutable.ArrayBuffer.empty[Int]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactorCount = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor2 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor2Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor3 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor3Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor4 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor4Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor5Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor6 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor6Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor7 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor7Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor8 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor8Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor9Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor10 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor10Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor11 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor11Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor12Count\
    \ = mutable.ArrayBuffer.empty[Int]\n        val isPrimeFactor13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor13Count = mutable.ArrayBuffer.empty[Int]\n        val\
    \ isPrimeFactor14 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor14Count\
    \ = mut\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimesCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeCount\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xqx32ey.scala:15:33 -"
  stdout: ''
  timestamp: 1659805720
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp9xaodz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpdp9xaodz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var maxFactor = 0\n        for (i\
    \ <- 2 to n) {\n            if (n % i == 0) {\n                primes += i\n \
    \               if (primes.max == i) maxFactor = i\n            }\n        }\n\
    \        maxFactor\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpym0d7sx8.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpym0d7sx8.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805720
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter2\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter3 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter4 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter7 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter10 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter13 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter14\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter15 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter16 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter19 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter22 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter25 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter26\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter27 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter28 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter29\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvzlrs0vf.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzlrs0vf.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzlrs0vf.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvzlrs0vf.scala:12:26 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzlrs0vf.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpvzlrs0vf.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1659805721
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var maxFactor = 0\n        var maxFactorPrime\
    \ = 0\n        for(i <- 2 to n by 2){\n            val isPrime = true\n      \
    \      for(j <- 2 to i by 2){\n                if(i % j == 0){\n             \
    \       isPrime = false\n                    break\n                }\n      \
    \      }\n            if(isPrime){\n                primes += i\n            \
    \    if(primes.last > maxFactor){\n                    maxFactor = primes.last\n\
    \                    maxFactorPrime = i\n                }\n            }\n  \
    \      }\n        maxFactor\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6idvm4ni.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6idvm4ni.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6idvm4ni.scala:17:28\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                   \
    \ isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val isPrime\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6idvm4ni.scala:18:20 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805721
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        factors +=\
    \ 3\n        factors += 5\n        factors += 7\n        factors += 11\n     \
    \   factors += 13\n        factors += 17\n        factors += 19\n        factors\
    \ += 23\n        factors += 29\n        factors += 31\n        factors += 37\n\
    \        factors += 41\n        factors += 43\n        factors += 47\n       \
    \ factors += 53\n        factors += 59\n        factors += 61\n        factors\
    \ += 67\n        factors += 71\n        factors += 73\n        factors += 79\n\
    \        factors += 83\n        factors += 89\n        factors += 97\n       \
    \ factors += 101\n        factors += 103\n        factors += 107\n        factors\
    \ += 109\n        factors += 113\n        factors += 127\n        factors += 131\n\
    \        factors += 137\n        factors += 139\n        factors += 149\n    \
    \    factors += 151\n        factors += 157\n        factors += 163\n        factors\
    \ += 167\n        factors += 173\n        factors += 179\n        factors += 181\n\
    \        factors += 191\n        factors += 193\n        factors += 197\n    \
    \    factors += 199\n        factors += 211\n        factors += 223\n        factors\
    \ += 227\n        factors += 229\n        factors += 233\n        factors += 239\n\
    \        factors += 241\n        factors += 247\n        factors += 249\n    \
    \    factors += 251\n        factors += 253\n        factors += 257\n        factors\
    \ += 263\n        factors += 269\n        factors += 271\n        factors += 277\n\
    \        factors += 281\n        factors += 283\n        factors += 293\n    \
    \    factors += 307\n        factors += 311\n        factors += 313\n        factors\
    \ += 317\n        factors += 323\n        factors += 329\n        factors += 331\n\
    \        factors += 337\n        factors += 347\n        factors += 349\n    \
    \    factors += 353\n        factors += 359\n        factors += 363\n        factors\
    \ += 369\n        factors += 373\n        factors += 379\n        factors += 383\n\
    \        factors += 389\n        factors += 397\n        factors += 401\n    \
    \    factors += 409\n        factors += 419\n        factors += 421\n        factors\
    \ += 431\n        factors += 433\n        factors += 439\n        factors += 443\n\
    \        factors += 449\n        factors += 457\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuw5tb0d3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805719
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isPrimeFactor = mutable.Set[Boolean]()\n        val isPrimeFactors\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet2 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet3\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet4 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet5 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet6\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet7 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet8 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet9\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet10 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet11 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet12\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet13 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet14 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet15\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet16 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet17 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet18\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet19 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet20 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet21\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet22 = mutable.Set[Boolean]()\n\
    \        val isPrimeFactorsSet23 = mutable.Set[Boolean]()\n        val isPrimeFactorsSet24\
    \ = mutable.Set[Boolean]()\n        val isPrimeFactorsSet25 = mut\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mprimeFactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:14:28 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_8ot2b6n.scala:15:29 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36"
  stdout: ''
  timestamp: 1659805723
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val primeFactors = mutable.HashMap[Long, Long]()\n        val isPrime =\
    \ mutable.HashMap[Long, Boolean]()\n        val isPrimeFactor = mutable.HashMap[Long,\
    \ Boolean]()\n        val isPrimeFactors = mutable.HashMap[Long, Boolean]()\n\
    \        val isPrimeFactorsPrime = mutable.HashMap[Long, Boolean]()\n        val\
    \ isPrimeFactorsPrimePrime = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.HashMap[Long, Boolean]()\n        val isPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcn5wz8gy.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpcn5wz8gy.scala:22:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeFactorsPrimePrimePrimePrimePrimePrime\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFactorsPrimePrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeFactorsPrimePrimePrimePrimePrimePrime\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpcn5wz8gy.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = mutable.HashMap[\e[35mLong\e[0m, \e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvalue\e[0m \e[35misPrimeFactorsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpcn5wz8gy.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcn5wz8gy.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutab"
  stdout: ''
  timestamp: 1659805723
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = Long.MinValue\n        var maxFactorPrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrime = Long.MinValue\n    \
    \    var maxFactorPrimePrimePrimePrime = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfeo68k95.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpfeo68k95.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = Long.MinValue\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpfeo68k95.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = Long.MinValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpfeo68k95.scala:30:5 ---------------------\e[0m\e[0m\n\
    \e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:\
    \    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659805689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n != 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpka45d3g2.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpka45d3g2.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpka45d3g2.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4b3tvit6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4b3tvit6.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _\
    \ == 0)\n        val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ > 1l).filter(_ % _ != 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _ == 0)\n        val isPrimeIter4\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _\
    \ != 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ > 1l).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _ != 0)\n        val isPrimeIter7\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _\
    \ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ <\
    \ n).filter(_ > 1l).filter(_ % _ != 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _ == 0)\n        val isPrimeIter10\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _\
    \ != 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ > 1l).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _ != 0)\n        val isPrimeIter13\
    \ = Iterator.iterate(2l)(\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3voswdm3.scala:25:49 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter13\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(\n\e[31m\e[31m   |\e[0m                                         \
    \        ^\e[0m\n\e[31m   |\e[0m                                       expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp3voswdm3.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp3voswdm3.scala:11:21 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp3voswdm3.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp3voswdm3.scala:13:94 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ > \e[31m1l\e[0m).filter(_\
    \ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \                                                              ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                              "
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = Long.MinValue\n        var maxFactorPrime = Long.MinValue\n        var maxFactorPrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrime = Long.MinValue\n    \
    \    var maxFactorPrimePrimePrimePrime = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = Long.MinValue\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = Long.MinValue\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4a8xn_of.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4a8xn_of.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e[0m = Long.MinValue\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4a8xn_of.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = Long.MinValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp4a8xn_of.scala:27:12 ---------------------------\e[0m\e[0m\n\e\
    [31m27 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = Long.MinValue\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35m\n\e[31m   |\e[0m  maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime"
  stdout: ''
  timestamp: 1659805723
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = n / 2\n        var maxFactorPrime = 0\n        while (maxFactorPrime < maxFactor)\
    \ {\n            if (n % maxFactor == 0) {\n                maxFactorPrime +=\
    \ 1\n            }\n            maxFactor /= 2\n        }\n        maxFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjbvsdj9u.scala:21)\n\tat Problem.main(tmpjbvsdj9u.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659805723
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplprsoeeq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                primes += i\n       \
    \         n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            primes += n\n        }\n        primes.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmpymcghc.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpmpymcghc.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmpymcghc.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp9xaodz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpdp9xaodz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdaaoafzv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdaaoafzv.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2)\n        \
    \    if (n % i == 0)\n                factors += i\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1upfioa8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1upfioa8.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2L);\n        val isPrime = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter = mutable.ArrayBuffer(false);\n        val isPrimeIter2\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter3 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter4 = mutable.ArrayBuffer(false);\n        val isPrimeIter5\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter6 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter7 = mutable.ArrayBuffer(false);\n        val isPrimeIter8\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter9 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter10 = mutable.ArrayBuffer(false);\n        val isPrimeIter11\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter12 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter13 = mutable.ArrayBuffer(false);\n        val isPrimeIter14\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter15 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter16 = mutable.ArrayBuffer(false);\n        val isPrimeIter17\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter18 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter19 = mutable.ArrayBuffer(false);\n        val isPrimeIter20\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter21 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter22 = mutable.ArrayBuffer(false);\n        val isPrimeIter23\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter24 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter25 = mutable.ArrayBuffer(false);\n        val isPrimeIter26\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter27 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter28 = mutable.ArrayBuffer(false);\n        val isPrimeIter29\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter30 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter31 = mutable.ArrayBuffer(false);\n        val isPrimeIter32\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter33 = mutable.ArrayBuffer(false);\n\
    \        val isPrimeIter34 = mutable.ArrayBuffer(false);\n        val isPrimeIter35\
    \ = mutable.ArrayBuffer(false);\n        val isPrimeIter36 = mutable.\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8kl8o5gy.scala:48:4 ----------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp8kl8o5gy.scala:10:21 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2L\e\
    [0m);\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8kl8o5gy.scala:11:22 ------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m);\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8kl8o5gy.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m);\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8kl8o5gy.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m);\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8kl8o5gy.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter3\e[0m = mutable.ArrayBuffer(\e\
    [31mfalse\e[0m);\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  val isPrimeIter = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _\
    \ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ != 0).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n  \
    \      val isPrimeIter4 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > 1).filter(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ %\
    \ _ == 0).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n\
    \        val isPrimeIter8 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).iterator\n\
    \        val isPrimeIter9 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_\
    \ % _ != 0).iterator\n        val isPrimeIter10 = Iterator.iterate(n)(_ * _).takeWhile(_\
    \ > 1).filter(_ % _ == 0).takeWhile(_ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_\
    \ % _ != 0).takeWhile(_ % _ == 0).takeWhile(_ % _ != 0).iterator\n        val\
    \ isPrimeIter11 = Iterator.iterate(n)(_ * _).takeWhile(_ > 1).filter(_ % _ !=\
    \ 0).takeWhile(_ % _ == 0).takeWhile(_ % \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp387d7ku_.scala:22:126 --------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter11\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ != \e[31m0\e[0m).takeWhile(_ %\
    \ _ == \e[31m0\e[0m).takeWhile(_ % \n\e[31m\e[31m   |\e[0m                   \
    \                                                                            \
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \                 expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp387d7ku_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp387d7ku_.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.Set[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp387d7ku_.scala:12:46 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m                                              ^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp387d7ku_.scala:12:77 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ * _).takeWhile(_ > \e[31m1\e[0m).filter(_ % _ == \e[31m0\e[0m).iterator\n\e\
    [31m\e[31m   |\e[0m       "
  stdout: ''
  timestamp: 1659805726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                isPrime += false\n        \
    \    }\n            i += 1\n        }\n        val largestPrimeFactor = factors.max\n\
    \        val isPrimeFactor = isPrime.contains(largestPrimeFactor)\n        if\
    \ (isPrimeFactor) {\n            largestPrimeFactor\n        } else {\n      \
    \      largestPrimeFactor * largestPrimeFactor\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8_4a9axh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8_4a9axh.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805723
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var largestPrimeFactor\
    \ = n / 2\n        while (largestPrimeFactor != 1) {\n            if (n % largestPrimeFactor\
    \ == 0) {\n                largestPrimeFactor = n\n            } else {\n    \
    \            largestPrimeFactor = largestPrimeFactor / 2\n            }\n    \
    \    }\n        largestPrimeFactor\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659805729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        for(i <- 2 to n by 2)\n            factors\
    \ += i\n        factors.max\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzbmwig6u.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpzbmwig6u.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = n / 2\n        var maxFactorPrime = 2 // start at 2\n        while (maxFactorPrime\
    \ < maxFactor) {\n            if (n % maxFactorPrime == 0) {\n               \
    \ maxFactorPrime += 1\n            }\n            else {\n                maxFactorPrime\
    \ = maxFactor\n            }\n        }\n        maxFactor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpys2c2emv.scala:17:33\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m                maxFactorPrime\
    \ = maxFactor\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Found:    (maxFactor : Long)\n\
    \e[31m   |\e[0m                                 Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659805726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        primes.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd0lhgrak.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd0lhgrak.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805727
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeFactor = mutable.ListBuffer[Boolean]()\n        val isPrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrime = mutable.ListBuffer[Boolean]()\n        val isPrimePrimePrimeFactor\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n  \
    \      val isPrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n     \
    \   val isPrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n  \
    \      val isPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimePrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePrimePrimePrimeFactor = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimePrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpx9vqc3i6.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx9vqc3i6.scala:24:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimeFactor\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimeFactor is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx9vqc3i6.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpx9vqc3i6.scala:28:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimePrimePrimePrimePrimePrimeFactor\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimePrimePrimePrimePrimePrimeFactor is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimePrimePrimePrimePrimePrimeFactor\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpx9vqc3i6.scala:29:12 ---------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimePrimePrime"
  stdout: ''
  timestamp: 1659805726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n      \
    \  val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _\
    \ == 0).iterator\n        val isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).iterator\n        val isPrimeIter3 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 0).filter(_ % _ != 0).iterator\n    \
    \    val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ != 0).filter(_ % _ == 0).iterator\n        val isPrimeIter5 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ !=\
    \ 0).iterator\n        val isPrimeIter6 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ != 0).filter(_ % _\
    \ != 0).iterator\n        val isPrimeIter7 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ != 0).filter(_ % _\
    \ != 0).filter(_ % _ != 0).iterator\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ !=\
    \ 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _ !=\
    \ 0).iterator\n        val isPrimeIter9 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ != 0).filter(_ % _\
    \ != 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _\
    \ != 0).filter(_ % _ != 0).iterator\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ != 0).filter(_ % _ == 0).filter(_ % _ !=\
    \ 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _ != 0).filter(_ % _ !=\
    \ 0).filter(_\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0pgofhnv.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pgofhnv.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pgofhnv.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.Set[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp0pgofhnv.scala:12:78\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_ <=\
    \ n).filter(_ % _ == \e[31m0\e[0m).iterator\n\e[31m\e[31m   |\e[0m           \
    \                                                                   ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Wrong number of parameters,\
    \ expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp0pgofhnv.scala:13:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ != \e[31m0\e[0m).iterator\n\e[31m\e[31m   |\e[0m        \
    \                                                                       ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Wrong number of parameters,\
    \ expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp0pgofhnv.scala:14:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter3\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).fil"
  stdout: ''
  timestamp: 1659805729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorIndex = 0\n        var isPrime = true\n        var\
    \ isPrimeIndex = 0\n        var isPrimeEven = true\n        var isPrimeEvenIndex\
    \ = 0\n        var isPrimeOdd = true\n        var isPrimeOddIndex = 0\n      \
    \  var isPrimeEvenOdd = true\n        var isPrimeEvenOddIndex = 0\n        var\
    \ isPrimeOddEven = true\n        var isPrimeOddEvenIndex = 0\n        var isPrimeEvenOddEven\
    \ = true\n        var isPrimeEvenOddEvenIndex = 0\n        var isPrimeOddEvenOdd\
    \ = true\n        var isPrimeOddEvenOddIndex = 0\n        var isPrimeEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddIndex = 0\n        var isPrimeOddEvenOddEvenOdd\
    \ = true\n        var isPrimeOddEvenOddEvenOddIndex = 0\n        var isPrimeEvenOddEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddEvenOddIndex = 0\n        var isPrimeOddEvenOddEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddEvenOddEvenIndex = 0\n        var isPrimeOddEvenOddEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddEvenOddEvenOdd = true\n        var\
    \ isPrimeEvenOddEvenOddEvenOddEvenOddIndex = 0\n        var isPrimeOddEvenOddEvenOddEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddEvenOddEvenOddEvenIndex = 0\n     \
    \   var isPrimeOddEvenOddEvenOddEvenOddEvenOddEven = true\n        var isPrimeEvenOddEvenOddEvenOddEvenOddEvenOdd\
    \ = true\n        var isPrimeEvenOddEvenOddEvenOddEvenOddEvenOddIndex = 0\n  \
    \      var isPrimeOddEvenOddEvenOddEvenOddEvenOddEvenOdd = true\n        var isPrimeEvenOddEvenOddEvenOddEvenOddEvenOddEvenIndex\
    \ = 0\n        var isPrimeOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd = true\n\
    \        var isPrimeEvenOddEvenOddEvenOdd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4eqmhmhe.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4eqmhmhe.scala:34:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        \e[33mvar\e[0m\
    \ \e[36misPrimeOddEvenOddEvenOddEvenOdd\e[0m = \e[31mtrue\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0misPrimeOddEvenOddEvenOddEvenOdd is already defined as \e[33mvariable\e[0m \e\
    [35misPrimeOddEvenOddEvenOddEvenOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4eqmhmhe.scala:46:5 ---------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805728
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n by 2){\n        \
    \    if(n%i==0){\n                factors += i\n            }\n        }\n   \
    \     factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2_btbnlk.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp2_btbnlk.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805730
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy9tt6wnt.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpy9tt6wnt.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy9tt6wnt.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805731
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0)\n       \
    \ val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ %\
    \ _ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_ +\
    \ 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmgk2troe.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmgk2troe.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmgk2troe.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpmgk2troe.scala:13:79 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \            Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpmgk2troe.scala:14:80 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expec"
  stdout: ''
  timestamp: 1659805731
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val factors = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                primes += i\n                factors += i\n            }\n\
    \            i += 1\n        }\n        val largestPrime = primes.max\n      \
    \  val largestFactor = factors.max\n        if (largestPrime == largestFactor)\
    \ {\n            largestPrime\n        } else {\n            largestPrime * largestFactor\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb4amb10q.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpb4amb10q.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2)\n            if\
    \ (n % i == 0)\n                factors += i\n        factors.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin0ls5ke.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpin0ls5ke.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2L\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                primes += i\n            }\n\
    \            i += 1\n        }\n        val largestPrime = primes.max\n      \
    \  factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpylrzbh_w.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpylrzbh_w.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805729
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val largestPrime = Long.MaxValue\n        val largestPrimeFactor = Long.MaxValue\n\
    \        val isPrime = true\n        for(i <- 2 to n by 2){\n            val isPrime\
    \ = true\n            for(j <- 2 to i by 2){\n                if(i % j == 0){\n\
    \                    isPrime = false\n                    break\n            \
    \    }\n            }\n            if(isPrime){\n                primes += i\n\
    \            }\n            factors += i\n        }\n        for(prime <- primes){\n\
    \            val factors = primes.filter(_ % prime == 0)\n            if(factors.size\
    \ > largestPrimeFactor){\n                largestPrimeFactor = factors.last\n\
    \                largestPrime = prime\n            }\n        }\n        largestPrimeFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvmmmmeq8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvmmmmeq8.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpvmmmmeq8.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpvmmmmeq8.scala:19:28\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                   \
    \ isPrime = \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val isPrime\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvmmmmeq8.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8duptis3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8duptis3.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2\n        while (i <= n / i) {\n   \
    \         if (n % i == 0) {\n                factors += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        factors.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbv8lx056.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpbv8lx056.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbv8lx056.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = Long.MaxValue\n    \
    \    var currentPrime = 1\n        while (n != 1) {\n            while (n % currentPrime\
    \ == 0) {\n                factors += currentPrime\n                n /= currentPrime\n\
    \            }\n            currentPrime += 1\n        }\n        factors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxlnirud.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsxlnirud.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= currentPrime\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a\
    \ member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to Math.sqrt(n)) {\n            if(n\
    \ % i == 0) {\n                factors += i\n                n /= i\n        \
    \    }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp321l6e29.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp321l6e29.scala:11:31 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to Math.sqrt(n))\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Double\n\e[31m   |\e[0m                   \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp321l6e29.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                n /= i\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ /= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var i = 2l\n        while (i < n) {\n   \
    \         if (n % i == 0) {\n                primes += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        primes.max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8b_x2l96.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp8b_x2l96.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val maxFactor = math.ceil(math.sqrt(n))\n\
    \        for(i <- 2 to maxFactor) {\n            if(n%i == 0) {\n            \
    \    factors += i\n                n /= i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxuegdqmh.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpxuegdqmh.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to maxFactor)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (maxFactor : Double)\n\e[31m   |\e[0m       \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpxuegdqmh.scala:15:18 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                n /= i\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e\
    [31m   |\e[0m                value /= is not a member of Long - did you mean n.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            val\
    \ isPrime = n % i == 0\n            if(isPrime){\n                factors += i\n\
    \            }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph25711fp.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph25711fp.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3lk116gw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3lk116gw.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805734
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val maxFactor = math.max(2, math.ceil(math.sqrt(n)))\n\
    \        for(i <- 2 to maxFactor) {\n            val isPrime = n % i == 0\n  \
    \          if(isPrime) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptqaztle3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptqaztle3.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to maxFactor)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (maxFactor : Double)\n\e[31m   |\e[0m       \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n        while (i <= n)\
    \ {\n            if (n % i == 0) {\n                primes += i\n            \
    \    n /= i\n            }\n            i += 1\n        }\n        primes.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpknt2rdis.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpknt2rdis.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpknt2rdis.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805700
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ largestPrime = mutable.Set[Long]()\n        val largestPrimeFactor = mutable.Set[Long]()\n\
    \        val largestPrimeFactors = mutable.Set[Long]()\n        val largestPrimeFactorsCount\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount2 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount3 = mutable.Set[Long]()\n        val largestPrimeFactorsCount4\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount5 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount6 = mutable.Set[Long]()\n        val largestPrimeFactorsCount7\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount8 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount9 = mutable.Set[Long]()\n        val largestPrimeFactorsCount10\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount11 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount12 = mutable.Set[Long]()\n        val largestPrimeFactorsCount13\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount14 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount15 = mutable.Set[Long]()\n        val largestPrimeFactorsCount16\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount17 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount18 = mutable.Set[Long]()\n        val largestPrimeFactorsCount19\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount20 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount21 = mutable.Set[Long]()\n        val largestPrimeFactorsCount22\
    \ = mutable.Set[Long]()\n        val largestPrimeFactorsCount23 = mutable.Set[Long]()\n\
    \        val largestPrimeFactorsCount24 = mutable.Set[Long]\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mlargestPrime\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:13:33 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlargestPrimeFactor\e[0m\
    \ = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:14:34\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mlargestPrimeFactors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  \
    \ |\e[0m                                  ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpo4mqkbuv.scala:15:39 ------------------------\e\
    ["
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l..n).filter(x => n % x == 0)\n        val largestPrime\
    \ = primes.max\n        largestPrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpa3_epz0r.scala:10:52 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e[36mx\e[0m => n % x == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                    ^\e[0m\n\
    \e[31m   |\e[0m                                   an identifier expected, but\
    \ '.' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa3_epz0r.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer(\e[31m2l\e[0m) ++ (\e[31m2l\e[0m..n).filter(\e\
    [36mx\e[0m => n % x == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                  \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659805731
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdaaoafzv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdaaoafzv.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n \
    \       val maxFactorsIndex = mutable.Set[Long]()\n        val maxFactorsIndex\
    \ = mutable.Set[Long]()\n        val maxFactorsIndex = mutable.Set[Long]()\n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmposq3nis5.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorsIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmposq3nis5.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorsIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmposq3nis5.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorsIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmposq3nis5.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorsIndex\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorsIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxFactorsIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmposq3nis5.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mmaxFactorsIndex\e[0m = mutable."
  stdout: ''
  timestamp: 1659805737
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor4 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor7 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor8 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor12 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor15 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor16 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor19 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor20 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeDivisor24 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeDivisor26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeDivisor27 = mutable.Array\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq6lcbw7y.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpq6lcbw7y.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpq6lcbw7y.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeFactor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq6lcbw7y.scala:13:29 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeDivisor\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Not found: mutable\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq6lcbw7y.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeDivisor2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp"
  stdout: ''
  timestamp: 1659805737
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i < n) {\n \
    \           if (n % i == 0) {\n                factors += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        if (n != 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyr11bhh2.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpyr11bhh2.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805737
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by 2) {\n      \
    \      if (n % i == 0) {\n                factors += i\n            }\n      \
    \  }\n        factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdaaoafzv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpdaaoafzv.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                factors += i\n                primes += i\n            }\n  \
    \          i += 1\n        }\n        val largestPrime = primes.max\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpitxczb4q.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpitxczb4q.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805736
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorPrime = 0\n        var maxFactorPrimePrime = 0\n \
    \       var maxFactorPrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n    \
    \    var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n  \
    \      var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n \
    \       var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePri\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqpgdmr89.scala:35:4 ----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqpgdmr89.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqpgdmr89.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqpgdmr89.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqpgdmr89.scala:2"
  stdout: ''
  timestamp: 1659805739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_\
    \ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter2\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter3 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n\
    \        val isPrimeIter4 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_\
    \ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter5\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n\
    \        val isPrimeIter7 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_\
    \ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter8\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_\
    \ > 2l).map(_ % _ != 0l).iterator\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ != 0l).takeWhile(_ > 2l).map(_ % _ != 0l).iterator\n\
    \        val isPrimeIter10 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_\
    \ % _ != 0l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqah_xpvi.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpqah_xpvi.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpqah_xpvi.scala:12:79 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ != \e[31m0l\e[0m).takeWhile(_\
    \ > \e[31m2l\e[0m).map(_ % _ != \e[31m0l\e[0m).iterator\n\e[31m\e[31m   |\e[0m\
    \                                                                            \
    \   ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong number\
    \ of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpqah_xpvi.scala:12:114\
    \ --------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter\e[0m = Iterator.iterate(\e[31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_\
    \ < n).filter(_ % _ != \e[31m0l\e[0m).takeWhile(_ > \e[31m2l\e[0m).map(_ % _ !=\
    \ \e[31m0l\e[0m).iterator\n\e[31m\e[31m   |\e[0m                             \
    \                                                                            \
    \         ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpqah_xpvi.scala:13:80\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(\e[31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_\
    \ < n"
  stdout: ''
  timestamp: 1659805741
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ != 0)\n        val\
    \ isPrimeIter2 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_ % _ ==\
    \ 0)\n        val isPrimeIter3 = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 1)\n        val isPrimeIter4 = Iterator.iterate(n)(_ + 2).takeWhile(_\
    \ <= n).filter(_ % _ == 2)\n        val isPrimeIter5 = Iterator.iterate(n)(_ +\
    \ 2).takeWhile(_ <= n).filter(_ % _ == 3)\n        val isPrimeIter6 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 4)\n        val isPrimeIter7 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 5)\n        val isPrimeIter8 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 6)\n        val isPrimeIter9 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 7)\n        val isPrimeIter10 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 8)\n        val isPrimeIter11 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 9)\n        val isPrimeIter12 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 10)\n        val isPrimeIter13 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 11)\n        val isPrimeIter14 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 12)\n        val isPrimeIter15 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 13)\n        val isPrimeIter16 = Iterator.iterate(n)(_\
    \ + 2).takeWhile(_ <= n).filter(_ % _ == 14)\n        val is\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfrov6pio.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfrov6pio.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfrov6pio.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfrov6pio.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ArrayBuffer.empty[\e[35mBoolean\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmpfrov6pio.scala:13:78 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(n)(_\
    \ + \e[31m2\e[0m).takeWhile(_ <= n).filter(_ % _ != \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpfrov6pio.scala:14:79\
    \ ---------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIter2\e[0m = Iterator.iterate(n)(_ + \e[31m2\e[0m).takeWhile(_\
    \ <= n).filter(_ % _ == \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m    "
  stdout: ''
  timestamp: 1659805741
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_\
    \ => true)\n        val isPrimeIter2 = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(_ => false)\n        val isPrimeIter3 = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(_ => true)\n        val isPrimeIter4\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_ => false)\n\
    \        val isPrimeIter5 = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_\
    \ => true)\n        val isPrimeIter6 = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(_ => false)\n        val isPrimeIter7 = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(_ => true)\n        val isPrimeIter8\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_ => false)\n\
    \        val isPrimeIter9 = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_\
    \ => true)\n        val isPrimeIter10 = Iterator.iterate(n)(x => isPrime.append(x\
    \ % 2 != 0)).takeWhile(_ => false)\n        val isPrimeIter11 = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(_ => true)\n        val isPrimeIter12\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).takeWhile(_ => false)\n\
    \        val isPrimeIter13 = Iterator.iterate(n)(x => isPrime.append(x % 2 !=\
    \ 0)).takeWhile(_ => true)\n        val isPrimeIter14 = Iterator.iterate(n)(x\
    \ => isPrime.append(x % 2 != 0)).takeWhile(_ => false)\n        val isPrimeIter15\
    \ = Iterator.iterate(n)(x => isPrime.append(x % 2 != 0)).take\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpre2xj1cj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpre2xj1cj.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpre2xj1cj.scala:27:5 ---------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805741
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n\
    \        while (i <= n) {\n            if (n % i == 0) {\n                factors\
    \ += i\n                primes += i\n                isPrime += true\n       \
    \     }\n            i += 1\n        }\n        val largestPrime = primes.max\n\
    \        val largestFactor = factors.max\n        val largestPrimeFactor = if\
    \ (largestFactor == 1) largestPrime else largestPrime * largestFactor\n      \
    \  if (largestPrimeFactor == n) largestPrimeFactor else largestPrimeFactor\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmshrlmv9.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmshrlmv9.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmshrlmv9.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805737
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2l\n        while (i <= n) {\n            if (n % i == 0) {\n\
    \                factors += i\n                primes += i\n            }\n  \
    \          i += 1\n        }\n        val largestPrime = primes.max\n        factors.find(_\
    \ == largestPrime)\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuwwvkx9o.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpuwwvkx9o.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        factors +=\
    \ 3\n        factors += 5\n        factors += 7\n        factors += 11\n     \
    \   factors += 13\n        factors += 17\n        factors += 19\n        factors\
    \ += 23\n        factors += 29\n        factors += 31\n        factors += 37\n\
    \        factors += 41\n        factors += 43\n        factors += 47\n       \
    \ factors += 53\n        factors += 59\n        factors += 61\n        factors\
    \ += 67\n        factors += 71\n        factors += 73\n        factors += 79\n\
    \        factors += 83\n        factors += 89\n        factors += 97\n       \
    \ factors += 101\n        factors += 103\n        factors += 107\n        factors\
    \ += 109\n        factors += 113\n        factors += 127\n        factors += 131\n\
    \        factors += 137\n        factors += 139\n        factors += 149\n    \
    \    factors += 151\n        factors += 157\n        factors += 163\n        factors\
    \ += 167\n        factors += 173\n        factors += 179\n        factors += 181\n\
    \        factors += 191\n        factors += 193\n        factors += 197\n    \
    \    factors += 199\n        factors += 211\n        factors += 223\n        factors\
    \ += 227\n        factors += 229\n        factors += 233\n        factors += 239\n\
    \        factors += 241\n        factors += 247\n        factors += 249\n    \
    \    factors += 251\n        factors += 253\n        factors += 257\n        factors\
    \ += 263\n        factors += 269\n        factors += 271\n        factors += 277\n\
    \        factors += 281\n        factors += 283\n        factors += 293\n    \
    \    factors += 307\n        factors += 311\n        factors += 313\n        factors\
    \ += 317\n        factors += 323\n        factors += 329\n        factors += 331\n\
    \        factors += 337\n        factors += 347\n        factors += 349\n    \
    \    factors += 353\n        factors += 359\n        factors += 363\n        factors\
    \ += 369\n        factors += 373\n        factors += 379\n        factors += 383\n\
    \        factors += 389\n        factors += 397\n        factors += 401\n    \
    \    factors += 409\n        factors += 419\n        factors += 421\n        factors\
    \ += 431\n        factors += 433\n        factors += 439\n        factors += 443\n\
    \        factors += 449\n        factors += 457\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuw5tb0d3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805719
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2)\n            if(!isPrime(i)\
    \ && factors.contains(i)) factors += i\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw23n5b3q.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpw23n5b3q.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw23n5b3q.scala:12:16\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mif\e[0m(!isPrime(i)\
    \ && factors.contains(i)) factors += i\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659805742
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n / i) {\n            if (n % i == 0)\
    \ {\n                factors += i\n                primes += i\n            }\n\
    \            i += 1\n        }\n        val largest = factors.max\n        val\
    \ largestPrime = primes.max\n        if (largest == largestPrime) {\n        \
    \    return largest\n        }\n        largestPrime\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkpwb9cgu.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpkpwb9cgu.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805739
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i <= n / 2) {\n\
    \            if (n % i == 0) {\n                primes += i\n                n\
    \ /= i\n            }\n            i += 1\n        }\n        primes.last\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfh26pxw_.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpfh26pxw_.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805741
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2)\n            if\
    \ (n % i == 0)\n                factors += i\n        factors.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpin0ls5ke.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpin0ls5ke.scala:11:23 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805713
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val maxFactor = math.max(2, math.floor(math.sqrt(n)))\n\
    \        for(i <- 2 to maxFactor) {\n            if(n%i == 0) {\n            \
    \    factors += i\n                n /= i\n            }\n        }\n        if(n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph645umui.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph645umui.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to maxFactor)\
    \ {\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    (maxFactor : Double)\n\e[31m   |\e[0m       \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmph645umui.scala:15:18 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                n /= i\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e\
    [31m   |\e[0m                value /= is not a member of Long - did you mean n.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(n / _)\n        val isPrimeIterIter\
    \ = Iterator.iterate(isPrime)(_ / _)\n        val isPrimeIterIterIter = Iterator.iterate(isPrimeIter)(_\
    \ / _)\n        val isPrimeIterIterIterIter = Iterator.iterate(isPrimeIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter =\
    \ Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIter)(_ / _)\n     \
    \   val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIter)(_\
    \ / _)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter =\
    \ Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIterIter)(_ / _)\n\
    \        val isPri\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsxqe_5g8.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsxqe_5g8.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIterIterIter\e[0m = Iterator.iterate(isPrimeIterIterIterIterIterIter)(_\
    \ / _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIter is already defined\
    \ as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIter\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpsxqe_5g8.scala:22:12 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIter)(_ / _)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIter is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpsxqe_5g8.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIter)(_ / _)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIterIter is\
    \ already defined as \e[33mvalue"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplprsoeeq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        var maxFactor\
    \ = 0\n        var maxFactorPrime = 0\n        var maxFactorPrimePrime = 0\n \
    \       var maxFactorPrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrime = 0\n        var\
    \ maxFactorPrimePrimePrimePrimePrimePrimePrimePrime = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n    \
    \    var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n   \
    \     var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = 0\n\
    \        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = 0\n        var maxFactorPrimePrime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5rzgokni.scala:34:4 ----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp5rzgokni.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5rzgokni.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime is\
    \ already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp5rzgokni.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mvar\e[0m \e[36mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ is already defined as \e[33mvariable\e[0m \e[35mmaxFactorPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdp9xaodz.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpdp9xaodz.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.Set[Long]()\n        val factors = mutable.Set[Long]()\n        val\
    \ maxFactor = mutable.Set[Long]()\n        val maxFactors = mutable.Set[Long]()\n\
    \        val maxPrime = mutable.Set[Long]()\n        val maxPrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactor = mutable.Set[Long]()\n        val maxPrimeFactors\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrime = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimes = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrime\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrime = mutable.Set[Long]()\n        val\
    \ maxPrimeFactorPrimePrimePrimes = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrime = mutable.Set[Long]()\n      \
    \  val maxPrimeFactorPrimePrimePrimePrimes = mutable.Set[Long]()\n        val\
    \ maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrime =\
    \ mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val maxPrimeFactorPrimePrimePrimePrimePrime = mutable.Set[Long]()\n \
    \       val maxPrimeFactorPrimePrimePrimePrimePrimes = mutable.Set[Long]\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu4zbd5o6.scala:26:12 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorPrimePrimePrimePrime\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrime is already defined as \e\
    [33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrime\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu4zbd5o6.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeFactorPrimePrimePrimePrimes\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimes is already defined as\
    \ \e[33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrimes\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu4zbd5o6.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmaxPrimeFactorPrimePrimePrimePrimePrime\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimePrime is already defined\
    \ as \e[33mvalue\e[0m \e[35mmaxPrimeFactorPrimePrimePrimePrimePrime\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpu4zbd5o6.scala:31:12 ---------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mval\e[0m \e[36mmaxPrimeFactorPrimePrimePrimePrimePrimes\e\
    [0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxPrimeFactorPrimePrimePrimePrimePrimes is already defined\
    \ as"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n / i)\
    \ {\n            if (n % i == 0) {\n                factors += i\n           \
    \     n /= i\n            }\n            i += 1\n        }\n        if (n > 1)\
    \ {\n            factors += n\n        }\n        factors.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplprsoeeq.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplprsoeeq.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isPrimeIter\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter2 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter3 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter4\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter5 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter6 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter7\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter8 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter9 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter10\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter11 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter12 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter13\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter14 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter15 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter16\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter17 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter18 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter19\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter20 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter21 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter22\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter23 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter24 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter25\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter26 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter27 = mutable.ListBuffer[Boolean]()\n        val isPrimeIter28\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeIter29\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwhdqku5t.scala:42:4 ----------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhdqku5t.scala:13:26\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36misPrimeIter\e[0m = mutable.ListBuffer[\e[35mBoolean\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwhdqku5t.scala:14:27 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = mutable.ListBuffer[\e[35mBoolean\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e["
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var factor = 2l\n        while (n > 1) {\n\
    \            while (n % factor == 0) {\n                primes += factor\n   \
    \             n /= factor\n            }\n            factor += 1\n        }\n\
    \        primes.last\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprgpucrcq.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprgpucrcq.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i ==\
    \ 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphf45_g9_.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmphf45_g9_.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                factors += factor\n\
    \                n /= factor\n            } else {\n                factor +=\
    \ 1\n            }\n        }\n        factors.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5db8ss5m.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp5db8ss5m.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805745
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        var i = 2\n        while (i <= n\
    \ / i) {\n            if (n % i == 0) {\n                factors += i\n      \
    \          n /= i\n            }\n            i += 1\n        }\n        if (n\
    \ > 1) {\n            factors += n\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8duptis3.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8duptis3.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var maxFactor = 0\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime6\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime7 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime8 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime18\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime19 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime20 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime28 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrime29 = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime30\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrime31 = mutable.ArrayBuffer.empty[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5h1rid6p.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp5h1rid6p.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5h1rid6p.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5h1rid6p.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5h1rid6p.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36misPrime2\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5h1rid6p.scala:15:23 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36misPrime3\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                       Not fou"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var i = 2l\n        while (i < n) {\n   \
    \         if (n % i == 0l) {\n                primes += i\n                n /=\
    \ i\n            }\n            i += 1\n        }\n        primes.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfja91a_r.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpfja91a_r.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805747
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            if(n%i\
    \ == 0){\n                factors += i\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3lk116gw.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3lk116gw.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805734
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        var factor = 2\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors += factor\n\
    \                n /= factor\n            }\n            factor += 1\n       \
    \ }\n        factors.last\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4qebdjv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpv4qebdjv.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805746
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        for(i <- 2 to n by 2){\n            val\
    \ isPrime = n % i == 0\n            if(isPrime){\n                factors += i\n\
    \            }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph25711fp.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph25711fp.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805735
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).filter(_ % _\
    \ != 0l).filter(_ % _ != 1l).filter(_ % _ != 2l).filter(_ % _ != 3l).filter(_\
    \ % _ != 5l).filter(_ % _ != 7l).filter(_ % _ != 11l).filter(_ % _ != 13l).filter(_\
    \ % _ != 17l).filter(_ % _ != 19l).filter(_ % _ != 23l).filter(_ % _ != 29l).filter(_\
    \ % _ != 31l).filter(_ % _ != 37l).filter(_ % _ != 41l).filter(_ % _ != 43l).filter(_\
    \ % _ != 47l).filter(_ % _ != 53l).filter(_ % _ != 59l).filter(_ % _ != 61l).filter(_\
    \ % _ != 67l).filter(_ % _ != 71l).filter(_ % _ != 73l).filter(_ % _ != 79l).filter(_\
    \ % _ != 83l).filter(_ % _ != 89l).filter(_ % _ != 97l).filter(_ % _ != 101l).filter(_\
    \ % _ != 103l).filter(_ % _ != 107l).filter(_ % _ != 109l).filter(_ % _ != 113l).filter(_\
    \ % _ != 127l).filter(_ % _ != 131l).filter(_ % _ != 137l).filter(_ % _ != 139l).filter(_\
    \ % _ != 149l).filter(_ % _ != 151l).filter(_ % _ != 157l).filter(_ % _ != 163l).filter(_\
    \ % _ != 167l).filter(_ % _ != 173l).filter(_ % _ != 179l).filter(_ % _ != 181l).filter(_\
    \ % _ != 191l).filter(_ % _ != 193l).filter(_ % _ != 197l).filter(_ % _ != 199l).filter(_\
    \ % _ != 211l).filter(_ % _ != 223l).filter(_ % _ != 227l).filter(_ % _ != 229l).filter(_\
    \ % _ != 233l).filter(_ % _ != 239l).\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpocb20t6_.scala:14:4 ----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpocb20t6_.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpocb20t6_.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpocb20t6_.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpocb20t6_.scala:13:94 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ > \e[31m1l\e[0m).filter(_\
    \ % _ != \e[31m0l\e[0m).filter(_ % _ != \e[31m1l\e[0m).filter(_ % _ != \e[31m2l\e\
    [0m).filter(_ % _ != \e[31m3l\e[0m).filter(_ % _ != \e[31m5l\e[0m).filter(_ %\
    \ _ != \e[31m7l\e[0m).filter(_ % _ != \e[31m11l\e[0m).filter(_ % _ != \e[31m13l\e\
    [0m).filter(_ % _ != \e[31m17l\e[0m).filter(_ % _ != \e[31m19l\e[0m).filter(_\
    \ % _ != \e[31m23l\e[0m).filter(_ % _ != \e[31m29l\e[0m).filter(_ % _ != \e[31m31l\e\
    [0m).filter(_ % _ != \e[31m37l\e[0m).filter(_ % _ != \e[31m41l\e[0m"
  stdout: ''
  timestamp: 1659805748
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        var factor = 2\n        while (factor\
    \ <= n) {\n            if (n % factor == 0) {\n                primes += factor\n\
    \                n /= factor\n            }\n            else {\n            \
    \    factor += 1\n            }\n        }\n        primes.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvs9k42b3.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpvs9k42b3.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= factor\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member\
    \ of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805748
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l) ++ (2l).until(sqrt(n).toLong)\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        primes.foreach { prime =>\n     \
    \       val factor = (n / prime).toInt\n            if (factor != 1) {\n     \
    \           factors += prime\n            }\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjtcb5xk.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) ++ (\e[31m2l\e[0m).until(sqrt(n).toLong)\n\e[31m\e[31m   |\e[0m \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqjtcb5xk.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805744
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeIter = Iterator.iterate(n)(_ + 2).takeWhile(_ <= n).filter(_\
    \ % _ == 0)\n        val isPrimeIterIter = Iterator.iterate(isPrime)(_ + 1).takeWhile(_\
    \ <= isPrime.size)\n        val isPrimeIterIterIter = Iterator.iterate(isPrimeIterIter)(_\
    \ + 1).takeWhile(_ <= isPrimeIterIter.size)\n        val isPrimeIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIter)(_ + 1).takeWhile(_ <= isPrimeIterIterIterIter.size)\n\
    \        val isPrimeIterIterIterIterIterIter = Iterator.iterate(isPrimeIterIterIterIterIterIter)(_\
    \ + 1).takeWhile(_ <= isPrimeIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIter)(_ + 1).takeWhile(_ <=\
    \ isPrimeIterIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIter)(_ + 1).takeWhile(_\
    \ <= isPrimeIterIterIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIter)(_ + 1).takeWhile(_\
    \ <= isPrimeIterIterIterIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIter)(_ + 1).takeWhile(_\
    \ <= isPrimeIterIterIterIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIter)(_ + 1).takeWhile(_\
    \ <= isPrimeIterIterIterIterIterIterIterIterIterIter.size)\n        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIterIter)(_ +\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpe0rsyi2y.scala:22:143 --------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIterIter)(_\
    \ + \n\e[31m\e[31m   |\e[0m                                                  \
    \                                                                            \
    \                 ^\e[0m\n\e[31m   |\e[0m                                    \
    \   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpe0rsyi2y.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.iterate(isPrimeIterIterIterIterIterIterIterIterIterIter)(_ + \e\
    [31m1\e[0m).takeWhile(_ <= isPrimeIterIterIterIterIterIterIterIterIterIter.size)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0misPrimeIterIterIterIterIterIterIterIterIterIterIter is already\
    \ defined as \e[33mvalue\e[0m \e[35misPrimeIterIterIterIterIterIterIterIterIterIterIter\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpe0rsyi2y.scala:10:22 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe0rsyi2y.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ListBuffer[\e\
    [35mBoolean"
  stdout: ''
  timestamp: 1659805751
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var maxFactor = Long.MinValue\n        var maxFactorIndex\
    \ = -1\n        for (i <- 2 to n by 2)\n            if (n % i == 0) {\n      \
    \          factors += i\n                maxFactor = i\n                maxFactorIndex\
    \ = factors.size - 1\n            }\n        if (maxFactorIndex == -1)\n     \
    \       maxFactorIndex = 0\n        factors.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4qi6wym5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4qi6wym5.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n by \e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805749
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val primes\
    \ = mutable.ArrayBuffer(2l)\n        var factor = 2l\n        var maxFactor =\
    \ 2l\n        while (factor <= n) {\n            if (n % factor == 0) {\n    \
    \            primes += factor\n                maxFactor = factor\n          \
    \  }\n            factor += 1\n        }\n        if (primes.size == 1) {\n  \
    \          return primes.head\n        }\n        if (maxFactor == n) {\n    \
    \        return n\n        }\n        val largestPrime = primes.max\n        if\
    \ (largestPrime == n) {\n            return n\n        }\n        largestPrimeFactor(largestPrime)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfty608dm.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659805747
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        factors += 2\n        val i = 2\n\
    \        while (i < n) {\n            if (n % i == 0) {\n                factors\
    \ += i\n                n /= i\n            }\n            i += 1\n        }\n\
    \        if (n > 1) {\n            factors += n\n        }\n        factors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp46tumfj8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp46tumfj8.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp46tumfj8.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805750
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).takeWhile(_ %\
    \ _ != 0l).filter(_ > 1l).takeWhile(_ % _ != 0l)\n        val isPrimeIter2 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).takeWhile(_ % _ != 0l).filter(_ > 1l).takeWhile(_\
    \ % _ != 0l)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ > 1l).takeWhile(_ % _ != 0l).filter(_ > 1l).takeWhile(_ % _ !=\
    \ 0l)\n        val isPrimeIter4 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_\
    \ > 1l).takeWhile(_ % _ != 0l).filter(_ > 1l).takeWhile(_ % _ != 0l)\n       \
    \ val isPrimeIter5 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ >\
    \ 1l).takeWhile(_ % _ != 0l).filter(_ > 1l).takeWhile(_ % _ != 0l)\n        val\
    \ isPrimeIter6 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).takeWhile(_\
    \ % _ != 0l).filter(_ > 1l).takeWhile(_ % _ != 0l)\n        val isPrimeIter7 =\
    \ Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ > 1l).takeWhile(_ % _\
    \ != 0l).filter(_ > 1l).takeWhile(_ % _ != 0l)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ > 1l).takeWhile(_ % _ != 0l).filter(_ > 1l).takeWhile(_\
    \ % _ != 0l)\n        val isPrimeIter9 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ > 1l).\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0mktu_tk.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp0mktu_tk.scala:10:22 ------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp0mktu_tk.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp0mktu_tk.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmp0mktu_tk.scala:13:97 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ > \e[31m1l\e[0m).takeWhile(_\
    \ % _ != \e[31m0l\e[0m).filter(_ > \e[31m1l\e[0m).takeWhile(_ % _ != \e[31m0l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                                  \
    \                                               ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 Wrong number of parameters, expected: 1\n\e\
    [31m\e[31m-- [E086] Syntax Error: /tmp/tmp0mktu_tk.scala:13:135 --------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36"
  stdout: ''
  timestamp: 1659805750
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var maxFactor = 0\n        for(i <- 2 to n by\
    \ 2){\n            val factor = (n / i).toInt\n            if(factor > maxFactor){\n\
    \                maxFactor = factor\n                factors += factor\n     \
    \       }\n        }\n        factors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx1ydn6vv.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpx1ydn6vv.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m    \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659805751
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val primes = mutable.HashSet[Long]()\n  \
    \      val isPrime = mutable.HashSet[Boolean]()\n        val isPrimeIter = Iterator.continually(isPrime)\n\
    \        val isPrimeIterIter = Iterator.continually(isPrimeIter)\n        val\
    \ isPrimeIterIterIter = Iterator.continually(isPrimeIterIter)\n        val isPrimeIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIter)\n        val isPrimeIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIter)\n        val isPrimeIterIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIterIterIter)\n        val isPrimeIterIterIterIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIterIterIterIter)\n        val isPrimeIterIterIterIterIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIter)\n      \
    \  val isPrimeIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIter =\
    \ Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIterIterIter\
    \ = Iterator.continually(isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIterIterIter)\n\
    \        val isPrimeIterIterIterIterIterIterIterIterIterIterIterIterIterIter\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptcmk60ok.scala:28:4 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptcmk60ok.scala:10:22\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mfactors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptcmk60ok.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m  \
    \                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptcmk60ok.scala:12:22\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = mutable.HashSet[\e[35mBoolean\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmptcmk60ok.scala:18:67\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36misPrimeIterIterIterIterIterIter\e[0m = Iterator.continually(isPrimeIterIterIterIterIterIter)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \           ^\e[0m\n\e[31m   |\e[0m              Recursive \e[33mvalue\e[0m \e\
    [35misPrimeIterIterIterIterIterIter\e[0m needs type\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptcmk60ok.scala:19:75 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36misPrimeIterIterIterIterIterIterIterIter\e\
    [0m = Iterator.continually(is"
  stdout: ''
  timestamp: 1659805751
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ % _ != 0)\n       \
    \ val isPrimeIter2 = Iterator.iterate(2l)(_ + 2l).takeWhile(_ < n).filter(_ %\
    \ _ == 0)\n        val isPrimeIter3 = Iterator.iterate(2l)(_ + 2l).takeWhile(_\
    \ < n).filter(_ % _ == 0)\n        val isPrimeIter4 = Iterator.iterate(2l)(_ +\
    \ 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter5 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter6 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter7 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter8 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter9 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter10 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter11 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter12 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter13 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter14 = Iterator.iterate(2l)(_\
    \ + 2l).takeWhile(_ < n).filter(_ % _ == 0)\n        val isPrimeIter15 = Iterator.iterate(2l)(_\
    \ + 2l).take\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmgk2troe.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmgk2troe.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpmgk2troe.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E086] Syntax Error: /tmp/tmpmgk2troe.scala:13:79 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ != \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \            Wrong number of parameters, expected: 1\n\e[31m\e[31m-- [E086] Syntax\
    \ Error: /tmp/tmpmgk2troe.scala:14:80 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter2\e[0m = Iterator.iterate(\e\
    [31m2l\e[0m)(_ + \e[31m2l\e[0m).takeWhile(_ < n).filter(_ % _ == \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \             Wrong number of parameters, expec"
  stdout: ''
  timestamp: 1659805731
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.ArrayBuffer.empty[Long]\n        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeIter\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        var i = 2\n        while (i <=\
    \ n) {\n            if (isPrimeIter.contains(i)) {\n                factors +=\
    \ i\n                primes += i\n                isPrime += true\n          \
    \      isPrimeIter += true\n            }\n            i += 1\n        }\n   \
    \     val largestPrime = primes.max\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprnd0_kec.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmprnd0_kec.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmprnd0_kec.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36misPrime\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmprnd0_kec.scala:13:26 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36misPrimeIter\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mBoolean\e[0m]\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659805749
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var maxFactor = 0\n        var maxFactorIndex\
    \ = 0\n        var i = 2\n        while (i <= n / 2) {\n            if (n % i\
    \ == 0) {\n                factors += i\n                if (i > maxFactor) {\n\
    \                    maxFactor = i\n                    maxFactorIndex = factors.size\
    \ - 1\n                }\n            }\n            i += 1\n        }\n     \
    \   if (maxFactorIndex == factors.size - 1) {\n            maxFactorIndex\n  \
    \      } else {\n            factors(maxFactorIndex)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n\
    \    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4um6yvq6.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659805749
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val i = 2l\n        while(i <= n) {\n       \
    \     val isPrime = n % i == 0\n            if(!isPrime) {\n                factors.add(i)\n\
    \                n /= i\n            }\n            i += 1\n        }\n      \
    \  factors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l))\
    \ == (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpufw5gvg5.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpufw5gvg5.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufw5gvg5.scala:18:14\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805752
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        var largestPrimeFactor = Long.MaxValue\n    \
    \    var currentPrime = 1\n        while (n > 1) {\n            if (n % currentPrime\
    \ == 0) {\n                factors += currentPrime\n                n /= currentPrime\n\
    \            } else {\n                currentPrime += 1\n            }\n    \
    \    }\n        factors.toList.sorted.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4j7en953.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp4j7en953.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                n /= currentPrime\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a\
    \ member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659805752
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.Set[Long]()\n        val primes = mutable.Set[Long]()\n        val\
    \ n = n.toInt\n        val i = 2\n        while (i <= n / i) {\n            if\
    \ (n % i == 0) {\n                factors += i\n                primes += i\n\
    \            }\n            i += 1\n        }\n        factors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestPrimeFactor((15l)) ==\
    \ (5l));\n    assert(largestPrimeFactor((27l)) == (3l));\n    assert(largestPrimeFactor((63l))\
    \ == (7l));\n    assert(largestPrimeFactor((330l)) == (11l));\n    assert(largestPrimeFactor((13195l))\
    \ == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_539t2q4.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_539t2q4.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmp_539t2q4.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_539t2q4.scala:19:14 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean i.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659805752
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    // >>> largestPrimeFactor((13195l))\n    // (29l)\n    // >>> largestPrimeFactor((2048l))\n\
    \    // (2l)\n    def largestPrimeFactor(n : Long) : Long = {\n        val factors\
    \ = mutable.HashSet[Long]()\n        val i = 2\n        while (i <= n / i) {\n\
    \            if (n % i == 0) {\n                factors += i\n               \
    \ n /= i\n            }\n            i += 1\n        }\n        if (n > 1) {\n\
    \            factors += n\n        }\n        factors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestPrimeFactor((15l)) == (5l));\n    assert(largestPrimeFactor((27l))\
    \ == (3l));\n    assert(largestPrimeFactor((63l)) == (7l));\n    assert(largestPrimeFactor((330l))\
    \ == (11l));\n    assert(largestPrimeFactor((13195l)) == (29l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf4g0s8_8.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mfactors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpf4g0s8_8.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                n /= i\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf4g0s8_8.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659805752

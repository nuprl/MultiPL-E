language: scala
name: HumanEval_64_vowels_count
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzxk4naw1.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).size\n        vowelsCount\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsi6bqfhk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8y7282ge.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.filter(x => vowels.contains(x)).length\n        vowelsCount\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt9l7vvdm.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowels_count = s.length\n \
    \       val vowels_count_in_string = vowels.count(s => s.toLowerCase contains\
    \ s.toLowerCase)\n        vowels_count_in_string * vowels_count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpirj7eak6.scala:16:57 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowels_count_in_string\e\
    [0m = vowels.count(\e[36ms\e[0m => s.toLowerCase contains s.toLowerCase)\n\e[31m\e\
    [31m   |\e[0m                                                       ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toLowerCase is not a\
    \ member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n \
    \       vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyc9_grxy.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        while (lastChar != lastVowel) {\n    \
    \        if (lastChar == s.last) {\n                count += 1\n            }\n\
    \            lastChar = s.last\n        }\n        count + 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659793438
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n                count += 1\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgcma_sxf.scala:24)\n\tat Problem.main(tmpgcma_sxf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxzp6hij.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.count(vowels)\n \
    \       vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv194w1ux.scala:21)\n\tat Problem.main(tmpv194w1ux.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.count(x => vowels.contains(x))\n        vowels_count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgfbk7ge6.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.count(\e[36mx\e[0m => vowels.contains(x))\n\e[31m\e[31m   |\e[0m     \
    \                                                   ^\e[0m\n\e[31m   |\e[0m  \
    \                                                  Found:    (x : Char)\n\e[31m\
    \   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.count(vowels)\n \
    \       vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv194w1ux.scala:21)\n\tat Problem.main(tmpv194w1ux.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6q6im_xl.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e[0m\
    \                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels)\n        val vowelsCount2\
    \ = s.count(vowels.toUpperCase)\n        val vowelsCount3 = s.count(vowels.toLowerCase)\n\
    \        vowelsCount + vowelsCount2 + vowelsCount3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppi9a7q_0.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:    (vowels\
    \ : String)\n\e[31m   |\e[0m                                  Required: Char =>\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppi9a7q_0.scala:16:35\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e\
    [0m = s.count(vowels.toUpperCase)\n\e[31m\e[31m   |\e[0m                     \
    \              ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \             Found:    String\n\e[31m   |\e[0m                              \
    \     Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmppi9a7q_0.scala:17:35 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount3\e[0m = s.count(vowels.toLowerCase)\n\
    \e[31m\e[31m   |\e[0m                                   ^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    String\n\e[31m   |\e\
    [0m                                   Required: Char => Boolean\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n\
    \        val yCount = s.lastIndexOf('y')\n        val yCountCount = if (yCount\
    \ != -1) s.lastIndexOf('y', yCount) else s.length\n        val yCountCountCount\
    \ = if (yCountCount != -1) s.lastIndexOf('y', yCountCount + 1) else s.length\n\
    \        val yCountCountCountCount = if (yCountCountCount != -1) s.lastIndexOf('y',\
    \ yCountCountCount + 2) else s.length\n        val yCountCountCountCountCount\
    \ = if (yCountCountCountCount != -1) s.lastIndexOf('y', yCountCountCountCount\
    \ + 3) else s.length\n        val yCountCountCountCountCountCount = if (yCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCount + 4) else s.length\n  \
    \      val yCountCountCountCountCountCountCount = if (yCountCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCountCount + 5) else s.length\n\
    \        val yCountCountCountCountCountCountCountCount = if (yCountCountCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCountCountCount + 6) else s.length\n\
    \        val yCountCountCountCountCountCountCountCountCount = if (yCountCountCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCountCountCount + 7) else s.length\n\
    \        val yCountCountCountCountCountCountCountCountCountCount = if (yCountCountCountCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCountCountCountCount + 8) else\
    \ s.length\n        val yCountCountCountCountCountCountCountCountCountCountCount\
    \ = if (yCountCountCountCountCountCountCountCountCount != -1) s.lastIndexOf('y',\
    \ yCountCountCountCountCountCountCountCountCount + 9) else s.length\n        val\
    \ yCountCountCountCountCountCountCountCountCountCountCount = if (yCountCountCountCountCountCountCountCountCountCount\
    \ != -1) s.lastIndexOf('y', yCountCountCountCountCountCountCountCountCount + 10)\
    \ else s.length\n        val yCountCountCountCountCountCountCountCountCountCountCountCount\
    \ = if (yCountCountCountCountCountCountCountCountCountCount != -1) s.lastIndexOf('y',\
    \ yCountCountCountCountCountCountCountCountCountCount + 11) else s.length\n  \
    \      val yCountCountCountCountCountCountCountCountCountCountCountCount = if\
    \ (yCountCountCountCountCountCountCountCountCountCountCount != -1) s.\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphqjhgcmj.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmphqjhgcmj.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36myCountCountCountCountCountCountCountCountCountCountCount\e\
    [0m = \e[33mif\e[0m (yCountCountCountCountCountCountCountCountCountCount != -\e\
    [31m1\e[0m) s.lastIndexOf(\e[31m'y'\e[0m, yCountCountCountCountCountCountCountCountCount\
    \ + \e[31m10\e[0m) \e[33melse\e[0m s.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0myCountCountCountCountCountCountCountCountCountCountCount is\
    \ already defined as \e[33mvalue\e[0m \e[35myCountCountCountCountCountCountCountCountCountCountCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmphqjhgcmj.scala:29:12 ---------------------------\e[0m\e[0m\n\e\
    [31m29 |\e[0m        \e[33mval\e[0m \e[36myCountCountCountCountCountCountCountCountCountCountCountCount\e\
    [0m = \e[33mif\e[0m (yCountCountCountCountCountCountCountCountCountCountCount\
    \ != -\e[31m1\e[0m) s.\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0myCountCountCountCountCountCountCountCountCountCountCountCount\
    \ is already defined as \e[33mvalue\e[0m \e[35myCountCountCountCountCountCountCountCountCountCountCountCount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmphqjhgcmj.scala:15:34 --------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m "
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toList.filter(x =>\
    \ vowels.contains(x)).length\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp456cim3i.scala:21)\n\tat Problem.main(tmp456cim3i.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var vowelsSet = scala.collection.mutable.Set[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   count += 1\n                vowelsSet.add(c)\n            }\n        }\n \
    \       if (vowelsSet.size == s.length - 1) {\n            count += 1\n      \
    \  }\n        vowelsSet.size\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ks6mez_.scala:30)\n\tat Problem.main(tmp7ks6mez_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4eoqdizs.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        for(i <- 0 until s.length){\n        \
    \    val c = s.charAt(i)\n            if(vowels.contains(c)){\n              \
    \  count += 1\n            }\n            if(c == lastChar){\n               \
    \ count += 1\n            }\n        }\n        if(lastVowel == lastChar){\n \
    \           count += 1\n        }\n        count * vowels.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpn6msbfgh.scala:33)\n\tat Problem.main(tmpn6msbfgh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793435
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelCount(s)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyz241vdw.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyz241vdw.scala:18:28\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        count += s.length\
    \ - vowelCount(s)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: vowelCount\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(x => vowels.contains(x)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmx6aebxx.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (x : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzra9bu0d.scala:20)\n\tat Problem.main(tmpzra9bu0d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) ==\
    \ 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        for(i <- 0 until s.length)\n  \
    \          if(s.charAt(i) == 'y')\n                count += 1\n        count *\
    \ s.length\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpz2gc2v3n.scala:24)\n\tat Problem.main(tmpz2gc2v3n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashMap[String, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount.getOrElseUpdate(c, 0L) += 1\n            }\n\
    \        }\n        vowelsCount.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphn0zl_de.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphn0zl_de.scala:17:32\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e3zs8cc.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb0cy4ffx.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793439
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels.toCharArray)\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8l9x_71q.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels.toCharArray)\n\e[31m\e[31m   |\e[0m                     \
    \             ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \           Found:    Array[Char]\n\e[31m   |\e[0m                           \
    \       Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzdkr4czr.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzdkr4czr.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: vowelCount\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n           \
    \ if (vowels(i) == s.charAt(i))\n                vowelsCount += s.charAt(i)\n\
    \        vowelsCount.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5_ompy1_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- Error: /tmp/tmp5_ompy1_.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s.charAt(i))\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types String and Char cannot be compared with == or !=\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg68b2hu7.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelCount = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                vowelCount += 1\n        vowelCount\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph_xle7_g.scala:22)\n\tat Problem.main(tmph_xle7_g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n\
    \        vowelsCount + (if (s.endsWith(\"y\")) 1 else 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpblj56yyb.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels)\n       \
    \ vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbr3mj_fg.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:    (vowels\
    \ : String)\n\e[31m   |\e[0m                                  Required: Char =>\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqdo145d.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5xzu60qv.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        var count = 0\n        for (i <-\
    \ 0 until s.length)\n            if (vowels(i) == s.charAt(i))\n             \
    \   count += 1\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe7_mp52v.scala:22)\n\tat Problem.main(tmpe7_mp52v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzxk4naw1.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count + 1\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpepitxykr.scala:21)\n\tat Problem.main(tmpepitxykr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64u5su_p.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp64u5su_p.scala:17:32 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c)) {\n\e\
    [31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m   \
    \                             Found:    (c : Char)\n\e[31m   |\e[0m          \
    \                      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashMap[String, Long]()\n        for (c <- s) {\n            vowelsCount.getOrElse(c,\
    \ 0L) += 1\n        }\n        vowelsCount.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7xk1zjan.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793442
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        for(i <- 0 until s.length){\n        \
    \    if(vowels.contains(s.charAt(i))){\n                count += 1\n         \
    \   }\n            if(lastChar == s.charAt(i) && lastVowel == s.charAt(i)){\n\
    \                count += 1\n            }\n        }\n        count\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqweiesim.scala:30)\n\tat Problem.main(tmpqweiesim.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793446
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n   \
    \     var lastVowel = vowels.head\n        for (letter <- s) {\n            if\
    \ (vowels.contains(letter)) {\n                count += 1\n            } else\
    \ {\n                if (lastVowel == vowels.last) {\n                    count\
    \ += 1\n                }\n                lastVowel = vowels.head\n         \
    \   }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkd9d7gs5.scala:18:32\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (vowels.contains(letter))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    (letter : Char)\n\e[31m  \
    \ |\e[0m                                Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3bfk0673.scala:24)\n\tat Problem.main(tmp3bfk0673.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793447
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelsCount(s.substring(0,s.length-1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpugfadzqc.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelsCount(s.substring(\e\
    [31m0\e[0m,s.length-\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        value += is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793448
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c.toString)).size\n        vowelsCount = vowelsCount.toLong\n\
    \        count = count + vowelsCount\n        return count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwbrtrpht.scala:17:34\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        vowelsCount = vowelsCount.toLong\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      Found:    Long\n\e[31m   |\e[0m                     \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793450
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppvig_1wx.scala:21)\n\tat Problem.main(tmppvig_1wx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels.toCharArray)\n\
    \        vowelsCount + vowelsCount.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5zy1vczm.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels.toCharArray)\n\e[31m\e[31m   |\e[0m                     \
    \             ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \           Found:    Array[Char]\n\e[31m   |\e[0m                           \
    \       Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793450
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var lastVowel = s.last\n        var lastVowelIndex = s.length\
    \ - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex =\
    \ s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowelIndex = s.length - 1\n        var lastVowelIndex\
    \ = s.length - 1\n        var lastVowel\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy0faze4_.scala:72:4 ----------------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy0faze4_.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mlastVowelIndex\e[0m = s.length - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mlastVowelIndex\
    \ is already defined as \e[33mvariable\e[0m \e[35mlastVowelIndex\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpy0faze4_.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mvar\e[0m \e[36mlastVowelIndex\e[0m = s.length - \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mlastVowelIndex is already defined as \e[33mvariable\e[0m \e[35mlastVowelIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy0faze4_.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mvar\e[0m \e[36mlastVowelIndex\e[0m = s.length - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mlastVowelIndex is already defined as \e[33mvariable\e[0m \e[35mlastVowelIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy0faze4_.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mvar\e[0m \e[36mlastVowelIndex\e[0m = s.length - \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mlastVowelIndex is already defined as \e[33mvariable\e[0m \e[35mlastVowelIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tm"
  stdout: ''
  timestamp: 1659793452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for(c <- s) {\n            if(vowels.contains(c)) {\n               \
    \ vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb7h38x19.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpb7h38x19.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793449
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        return count\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4xxxi09q.scala:22)\n\tat Problem.main(tmp4xxxi09q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toSet\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppvig_1wx.scala:21)\n\tat Problem.main(tmppvig_1wx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793451
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n \
    \               count += 1\n            }\n        }\n        count\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg7fkbrr1.scala:25)\n\tat Problem.main(tmpg7fkbrr1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n           \
    \ if (vowels.contains(s.charAt(i)))\n                vowelsCount += s.charAt(i)\n\
    \        vowelsCount.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnwgn70v.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxnwgn70v.scala:17:40 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(s.charAt(i)))\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793452
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length){\n            val c = s.charAt(i)\n\
    \            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n \
    \               count += 1\n            }\n        }\n        count\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg7fkbrr1.scala:25)\n\tat Problem.main(tmpg7fkbrr1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.filter(x => vowels.contains(x)).size\n        vowelsCount\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpngv23yol.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e[0m\
    \                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793453
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64u5su_p.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp64u5su_p.scala:17:32 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c)) {\n\e\
    [31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m   \
    \                             Found:    (c : Char)\n\e[31m   |\e[0m          \
    \                      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e3zs8cc.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n\
    \        vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_2z30o7d.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_2z30o7d.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6q6im_xl.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m   |\e[0m\
    \                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.count(vowels)\n        val vowelsCount2\
    \ = s.count(vowels.toUpperCase)\n        val vowelsCount3 = s.count(vowels.toLowerCase)\n\
    \        vowelsCount + vowelsCount2 + vowelsCount3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppi9a7q_0.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:    (vowels\
    \ : String)\n\e[31m   |\e[0m                                  Required: Char =>\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppi9a7q_0.scala:16:35\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount2\e\
    [0m = s.count(vowels.toUpperCase)\n\e[31m\e[31m   |\e[0m                     \
    \              ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \             Found:    String\n\e[31m   |\e[0m                              \
    \     Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmppi9a7q_0.scala:17:35 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount3\e[0m = s.count(vowels.toLowerCase)\n\
    \e[31m\e[31m   |\e[0m                                   ^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    String\n\e[31m   |\e\
    [0m                                   Required: Char => Boolean\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c.toString)).size\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzra9bu0d.scala:20)\n\tat Problem.main(tmpzra9bu0d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && s(i)\
    \ != \"y\")\n                count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:37 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \     ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toList\n        var count = 0\n        for(i <- 0 until\
    \ s.length){\n            count += vowels.count(s.charAt(i).toChar)\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp28e6js_i.scala:17:18 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            count += vowels.count(s.charAt(i).toChar)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp28e6js_i.scala:17:46 --------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m            count += vowels.count(s.charAt(i).toChar)\n\e[31m\e\
    [31m   |\e[0m                                  ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                  Found:    Char\n\e[31m   |\e[0m  \
    \                                Required: Char => Boolean\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n  \
    \      for (c <- s) {\n            if (vowels.contains(c)) {\n               \
    \ vowelsCount += c\n            }\n        }\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphu14aiyn.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n   \
    \     var lastVowel = -1\n        for (i <- 0 until s.length - 1) {\n        \
    \    if (vowels(s(i))) {\n                count += 1\n                if (lastVowel\
    \ != -1) {\n                    if (s(i) == s(lastVowel)) {\n                \
    \        count += 1\n                    }\n                }\n              \
    \  lastVowel = s(i)\n            }\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3mwumdm1.scala:18:24\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\
    \ {\n\e[31m\e[31m   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m  \
    \                     Found:    Char\n\e[31m   |\e[0m                       Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).size\n        vowelsCount\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsi6bqfhk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(vowels.contains).size\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp10r7htvy.scala:15:35\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(vowels.contains).size\n\e[31m\e[31m   |\e[0m                  \
    \                 ^\e[0m\n\e[31m   |\e[0m                                   Found:\
    \    (elem : Char)\n\e[31m   |\e[0m                                   Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnlqq3r7b.scala:20)\n\tat Problem.main(tmpnlqq3r7b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793456
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') {\n                count += 1\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgcma_sxf.scala:24)\n\tat Problem.main(tmpgcma_sxf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i))\n    \
    \            count += 1\n        count \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpl6r_8mw4.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i))\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       var lastVowel = vowels(0)\n        var lastChar = s(0)\n        for (i\
    \ <- 1 to s.length-1) {\n            if (vowels(i) == lastVowel) {\n         \
    \       count += 1\n            } else {\n                count = 0\n        \
    \    }\n            lastChar = s(i)\n            lastVowel = vowels(i)\n     \
    \   }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_mzx9y4_.scala:30)\n\tat Problem.main(tmp_mzx9y4_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793457
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg68b2hu7.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3bfk0673.scala:24)\n\tat Problem.main(tmp3bfk0673.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793447
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set('a','e','i','o','u')\n        val vowels_count = s.length\n   \
    \     val vowels_count_in_string = vowels.count(s.charAt(s.length-1))\n      \
    \  vowels_count_in_string\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi2la9alj.scala:16:58\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowels_count_in_string\e\
    [0m = vowels.count(s.charAt(s.length-\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m   \
    \                                               ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                               Found:    Char\n\e\
    [31m   |\e[0m                                               Required: Char =>\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount(s.charAt(i)) += 1\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx2pn2w47.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels = mutable.Set[Char]()\n        var count = 0\n        for (i <- 0 until\
    \ s.length)\n            if (vowels.contains(s.charAt(i)))\n                count\
    \ += 1\n            else\n                vowels += s.charAt(i)\n        vowels.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4ps_i63_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp16l6quvd.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (c <- s) {\n            if (vowels.contains(c)) {\n                vowelsCount\
    \ += c\n            }\n        }\n        vowelsCount.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3e3zs8cc.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793438
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqdo145d.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzxk4naw1.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count + (s.charAt(s.length\
    \ - 1) == 'y' ? 1 : 0)\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd2rmphk2.scala:18:47 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count + (s.charAt(s.length - \e[31m1\e[0m) ==\
    \ \e[31m'y'\e[0m ? \e[31m1\e[0m : \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \                                    ^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                            value ? is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.Map[Char,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7omc5n7b.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793457
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxzp6hij.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,\
    \ Long]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n   \
    \             vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n\
    \        vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_2z30o7d.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp_2z30o7d.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793451
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for(i <- 0 until s.length)\n            if(vowels(i) == s(i))\n      \
    \          count += 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpwic2epc4.scala:17:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(vowels(i) == s(i))\n\e[31m\e\
    [31m   |\e[0m               ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelCount(s)\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyz241vdw.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member\
    \ of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyz241vdw.scala:18:28\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        count += s.length\
    \ - vowelCount(s)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: vowelCount\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793433
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(x\
    \ => vowels.contains(x))\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxoteujax.scala:15:55\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(\e[36mx\e[0m => vowels.contains(x))\n\e[31m\e[31m   |\e[0m     \
    \                                                  ^\e[0m\n\e[31m   |\e[0m   \
    \                                                 Found:    (x : Char)\n\e[31m\
    \   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg68b2hu7.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i)) {\n  \
    \              count += 1\n            }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp82s_4fip.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                count += 1\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6ae3lwk9.scala:23)\n\tat Problem.main(tmp6ae3lwk9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnlqq3r7b.scala:20)\n\tat Problem.main(tmpnlqq3r7b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793456
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels = mutable.Set[Char]()\n        var count = 0\n        for (c <- s) {\n\
    \            if (vowels.contains(c)) {\n                count += 1\n         \
    \   }\n            vowels += c\n        }\n        vowels.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcauq7q4f.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793459
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n   \
    \     for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                count += 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2cqqzce9.scala:17:40\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(s.charAt(i)))\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n \
    \       vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyc9_grxy.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashMap[String, Long]()\n        for (i <- 0 until s.length - 1) {\n\
    \            if (vowels(i) == s(i)) {\n                vowelsCount(s(i)) = vowelsCount(s(i))\
    \ + 1\n            }\n        }\n        vowelsCount.values.sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp1b8uzjg.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpp1b8uzjg.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793462
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.ListBuffer[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && s(i)\
    \ != 'y')\n                vowelsCount += s(i)\n        vowelsCount.length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxu2hnt0.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) >= 0)\n                count += 1\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpntjurks8.scala:24)\n\tat Problem.main(tmpntjurks8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpedm8ozvw.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793462
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set('a','e','i','o','u')\n        val vowelsCount = s.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfnqdi09o.scala:20)\n\tat Problem.main(tmpfnqdi09o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = mutable.Set[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpunmqhihj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpunmqhihj.scala:17:32 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c)) {\n\e\
    [31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m   \
    \                             Found:    (c : Char)\n\e[31m   |\e[0m          \
    \                      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzxk4naw1.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).size\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg8fbanun.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for(i <- 0 until s.length)\n            if(vowels(i) == s(i))\n      \
    \          count += 1\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpwic2epc4.scala:17:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(vowels(i) == s(i))\n\e[31m\e\
    [31m   |\e[0m               ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashMap[Char, Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbwncycsa.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793462
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(x\
    \ => vowels.contains(x))\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxoteujax.scala:15:55\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(\e[36mx\e[0m => vowels.contains(x))\n\e[31m\e[31m   |\e[0m     \
    \                                                  ^\e[0m\n\e[31m   |\e[0m   \
    \                                                 Found:    (x : Char)\n\e[31m\
    \   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[String]()\n  \
    \      for (c <- s) {\n            if (vowels.contains(c)) {\n               \
    \ vowelsCount += c\n            }\n        }\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphu14aiyn.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793452
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4eoqdizs.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) != -1)\n                count +=\
    \ 1\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6b8_ya46.scala:23)\n\tat Problem.main(tmp6b8_ya46.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowels_count =\
    \ mutable.Map[Char, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowels_count(c) = vowels_count(c) + 1\n            }\n  \
    \      }\n        vowels_count.values.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt1boj80b.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpt1boj80b.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                           Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toList.filter(x\
    \ => vowels.contains(x)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpglpddwmi.scala:15:63\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toList.filter(\e[36mx\e[0m => vowels.contains(x)).size\n\e[31m\e[31m \
    \  |\e[0m                                                               ^\e[0m\n\
    \e[31m   |\e[0m                                                    Found:    (x\
    \ : Char)\n\e[31m   |\e[0m                                                   \
    \ Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl684w623.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793463
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3bfk0673.scala:24)\n\tat Problem.main(tmp3bfk0673.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793447
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelsCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn7x7nsg5.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelsCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) != -1)\n                count +=\
    \ 1\n        count \n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppubtm98g.scala:24)\n\tat Problem.main(tmppubtm98g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        if (s.charAt(s.length\
    \ - 1) == 'y')\n            count += 1\n        count \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgn2wudbr.scala:24)\n\tat Problem.main(tmpgn2wudbr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n\
    \        val lastVowel = vowels.last\n        val lastVowelIndex = s.lastIndexOf(lastVowel)\n\
    \        if (lastVowelIndex == s.length - 1)\n            vowelsCount\n      \
    \  else\n            vowelsCount + vowelsCount(s.substring(lastVowelIndex + 1))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpts29t25c.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpts29t25c.scala:21:26 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            vowelsCount + vowelsCount(s.substring(lastVowelIndex\
    \ + \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          \e[33mvalue\e[0m \e[35mvowelsCount\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length){\n            if(vowels(i) == s.charAt(i)){\n\
    \                vowelsCount += s.charAt(i)\n            }\n        }\n      \
    \  vowelsCount.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgqj5rt24.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzdkr4czr.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzdkr4czr.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: vowelCount\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n \
    \       vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyc9_grxy.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793431
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzxk4naw1.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).size\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for(i <- 0 until s.length)\n            if(vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcib3sgjf.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(x\
    \ => vowels.contains(x))\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxoteujax.scala:15:55\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(\e[36mx\e[0m => vowels.contains(x))\n\e[31m\e[31m   |\e[0m     \
    \                                                  ^\e[0m\n\e[31m   |\e[0m   \
    \                                                 Found:    (x : Char)\n\e[31m\
    \   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelsCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn7x7nsg5.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelsCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowels_count = s.length\n        val vowels_count_map\
    \ = mutable.HashMap[String, Long]()\n        val vowels_count_list = mutable.ArrayBuffer.empty[String]\n\
    \        for (i <- 0 until s.length)\n        {\n            val c = s.charAt(i)\n\
    \            if (vowels.contains(c))\n            {\n                vowels_count_map.put(s.substring(i,i+1),\
    \ vowels_count_map.getOrElse(s.substring(i,i+1), 0L) + 1)\n                vowels_count_list\
    \ += s.substring(i,i+1)\n            }\n        }\n        vowels_count_map.toList.sortWith(_.compareTo(vowels_count_list.last)\
    \ < 0).last\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1gxrzfgg.scala:16:31 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowels_count_map\e[0m =\
    \ mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                               ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1gxrzfgg.scala:17:32 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36mvowels_count_list\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mString\e[0m]\n\e[31m\e[31m   |\e[0m                                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels(i) == s(i))\n                count += 1\n        count\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9lopv7uu.scala:22)\n\tat Problem.main(tmp9lopv7uu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for(i <- 0 until s.length)\n            if(vowels(i) == s.charAt(i))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwqq03fk6.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount(s.charAt(i)) += 1\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpasnlpkb4.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpasnlpkb4.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length)\n            if(s.charAt(i) ==\
    \ 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u')\n                count += 1\n        for(i <- 0 until s.length)\n  \
    \          if(s.charAt(i) == 'y')\n                count += 1\n        count *\
    \ s.length\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpz2gc2v3n.scala:24)\n\tat Problem.main(tmpz2gc2v3n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793442
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgqqdxmjk.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793434
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp16l6quvd.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount(s.charAt(i)) += 1\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx2pn2w47.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        val vowelsCount = mutable.ListBuffer[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64icf_5h.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793469
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowels_count = s.count(x =>\
    \ vowels.contains(x))\n        vowels_count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphbw17tsq.scala:20)\n\tat Problem.main(tmphbw17tsq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n           \
    \ if (vowels.contains(s.charAt(i)))\n                vowelsCount += s.charAt(i)\n\
    \        vowelsCount.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnwgn70v.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxnwgn70v.scala:17:40 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(s.charAt(i)))\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793452
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.contains(s.charAt(i)))\n                count += 1\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwthce_lg.scala:23)\n\tat Problem.main(tmpwthce_lg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp16l6quvd.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        var i = 0\n        while\
    \ (i < s.length){\n            if (vowels.indexOf(s.charAt(i)) != -1){\n     \
    \           count += 1\n            }\n            i += 1\n        }\n       \
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe9w289t7.scala:27)\n\tat Problem.main(tmpe9w289t7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.count(vowels.indexOf(_))\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg8r0d5ie.scala:15:48\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels.indexOf(_))\n\e[31m\e[31m   |\e[0m                      \
    \            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \         Found:    Int\n\e[31m   |\e[0m                                  Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels = mutable.Set[Char]()\n        var count = 0\n        for (c <- s) {\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                vowels += c\n            }\n        }\n        for (c <- vowels)\
    \ {\n            count += 1\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjya1do22.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashSet[Char]()\n    \
    \    for(i <- 0 until s.length)\n            if(vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcib3sgjf.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n   \
    \     for (i <- 0 until s.length)\n            if (vowels(s(i)))\n           \
    \     count += 1\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmdeifk1w.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(s(i)))\n\
    \e[31m\e[31m   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m       \
    \                Found:    Char\n\e[31m   |\e[0m                       Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n   \
    \     var lastVowel = vowels.last\n        for (v <- vowels) {\n            if\
    \ (s.endsWith(v)) {\n                count += 1\n                lastVowel = v\n\
    \            }\n        }\n        count + (lastVowel != vowels.last)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpoum_t6fs.scala:23:14 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        count + (lastVowel != vowels.last)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^\e[0m\n\e[31m   |\e[0m None of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35m+\e[0m in \e[33mclass\e[0m \e[35mInt\e[0m with types\n\
    \e[31m   |\e[0m  (x: Double): Double\n\e[31m   |\e[0m  (x: Float): Float\n\e[31m\
    \   |\e[0m  (x: Long): Long\n\e[31m   |\e[0m  (x: Int): Int\n\e[31m   |\e[0m \
    \ (x: Char): Int\n\e[31m   |\e[0m  (x: Short): Int\n\e[31m   |\e[0m  (x: Byte):\
    \ Int\n\e[31m   |\e[0m  (x: String): String\n\e[31m   |\e[0m match arguments (Boolean)\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793472
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowels_count = s.toCharArray.filter(c\
    \ => vowels.contains(c)).length\n        vowels_count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp79kgp5or.scala:20)\n\tat Problem.main(tmp79kgp5or.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpei5y8yvj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793473
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowels_count = s.toCharArray.filter(c\
    \ => vowels.contains(c)).size\n        vowels_count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpejxqs_35.scala:20)\n\tat Problem.main(tmpejxqs_35.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && s(i)\
    \ != \"y\")\n                count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:37 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \     ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelsCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn7x7nsg5.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelsCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set('a','e','i','o','u')\n        val vowelsCount = s.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfnqdi09o.scala:20)\n\tat Problem.main(tmpfnqdi09o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ s.toCharArray.filter(c => vowels.contains(c)).length\n        vowelsCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprqdo145d.scala:15:68\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^\e[0m\n\e[31m   |\e[0m                                                 \
    \   Found:    (c : Char)\n\e[31m   |\e[0m                                    \
    \                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount += c\n            }\n        }\n        vowelsCount.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp64u5su_p.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp64u5su_p.scala:17:32 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c)) {\n\e\
    [31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m   \
    \                             Found:    (c : Char)\n\e[31m   |\e[0m          \
    \                      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793444
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var lastVowel = s.charAt(s.length - 1)\n        var vowels\
    \ = \"aeiou\"\n        for (i <- 0 until s.length - 1) {\n            if (vowels.contains(s.charAt(i)))\
    \ {\n                count += 1\n            }\n            if (lastVowel == s.charAt(i)\
    \ && vowels.contains(s.charAt(i + 1))) {\n                count += 1\n       \
    \     }\n        }\n        count\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplcpnsa0s.scala:28)\n\tat Problem.main(tmplcpnsa0s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8y7282ge.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793430
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n \
    \       for (i <- 0 until s.length)\n            if (vowels(i) == s(i) && s(i)\
    \ != \"y\")\n                count += 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpzr395rb6.scala:17:37 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i) && s(i)\
    \ != \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \     ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793454
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.contains(s.charAt(i)))\n                count += 1\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwthce_lg.scala:23)\n\tat Problem.main(tmpwthce_lg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsCount = mutable.Map[Char,Long]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpz_1c41s_.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793441
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_count\
    \ = s.toCharArray.filter(c => vowels.contains(c)).length\n        vowels_count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzk3rea3.scala:15:69\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_count\e\
    [0m = s.toCharArray.filter(\e[36mc\e[0m => vowels.contains(c)).length\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^\e[0m\n\e[31m   |\e[0m                                                \
    \    Found:    (c : Char)\n\e[31m   |\e[0m                                   \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793445
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.Map[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n \
    \       vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpslujhp01.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count + (s.charAt(s.length\
    \ - 1) == 'y' ? 1 : 0)\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd2rmphk2.scala:18:47 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count + (s.charAt(s.length - \e[31m1\e[0m) ==\
    \ \e[31m'y'\e[0m ? \e[31m1\e[0m : \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \                                    ^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                            value ? is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659793459
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set('a','e','i','o','u')\n        val vowelsCount = s.filter(x => vowels.contains(x)).length\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfnqdi09o.scala:20)\n\tat Problem.main(tmpfnqdi09o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.count(vowels)\n\
    \        val lastVowel = vowels.last\n        val lastVowelIndex = s.lastIndexOf(lastVowel)\n\
    \        if (lastVowelIndex == s.length - 1)\n            vowelsCount + 1\n  \
    \      else\n            vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpidj9ydkm.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m               Found:    (vowels : scala.collection.mutable.Set[String])\n\
    \e[31m   |\e[0m               Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = mutable.HashMap[Char,\
    \ Int]()\n        for (c <- s) {\n            if (vowels.contains(c)) {\n    \
    \            vowelsCount(c) = vowelsCount(c) + 1\n            }\n        }\n \
    \       vowelsCount.values.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy24m1w54.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n           \
    \ if (vowels.contains(s.charAt(i)))\n                vowelsCount += s.charAt(i)\n\
    \        vowelsCount.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxnwgn70v.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxnwgn70v.scala:17:40 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(s.charAt(i)))\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                Found:    Char\n\e[31m   |\e[0m    \
    \                            Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793452
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(i <- 0 until s.length){\n            if(s.charAt(i) ==\
    \ 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i)\
    \ == 'u'){\n                count += 1\n            }\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsfjedexl.scala:24)\n\tat Problem.main(tmpsfjedexl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashSet[String]()\n        for (i <- 0 until s.length)\n           \
    \ if (vowels(i) == s(i))\n                vowelsCount += s(i)\n        vowelsCount.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr09m__7i.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- Error: /tmp/tmpr09m__7i.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) == s(i))\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpticg4ppj.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793432
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val vowelsCount = s.count(vowels)\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyi1b1l7f.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.count(vowels)\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:    (vowels\
    \ : Array[Char])\n\e[31m   |\e[0m                                  Required: Char\
    \ => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Int]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount(c) += 1\n            }\n        }\n        vowelsCount.values.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp16l6quvd.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793455
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        count += s.length -\
    \ vowelCount(s.substring(s.length - 1))\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzdkr4czr.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpzdkr4czr.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        count += s.length - vowelCount(s.substring(s.length\
    \ - \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: vowelCount\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659793443
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1\n        val vowels = s.toCharArray\n\
    \        vowels.filter(_ == 'a' || _ == 'e' || _ == 'i' || _ == 'o' || _ == 'u').length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpwsieg9xk.scala:19:22 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        vowels.filter(_ == \e[31m'a'\e[0m || _ == \e\
    [31m'e'\e[0m || _ == \e[31m'i'\e[0m || _ == \e[31m'o'\e[0m || _ == \e[31m'u'\e\
    [0m).length\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Wrong number of parameters, expected:\
    \ 1\n1 error found\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        val vowelsCount = mutable.HashSet[Char]()\n\
    \        for (c <- s) {\n            if (vowels.contains(c)) {\n             \
    \   vowelsCount += c\n            }\n        }\n        vowelsCount.size\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2wbv8z_a.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels = mutable.Set[Char]()\n        var count = 0\n        for (c <- s) {\n\
    \            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \                vowels += c\n            }\n        }\n        for (c <- vowels)\
    \ {\n            if (c == 'y') {\n                count += 1\n            }\n\
    \        }\n        count * vowels.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp021h17sz.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659793475
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = \"aeiou\"\n        var lastVowel = vowels.last\n\
    \        var lastChar = s.last\n        var lastCharIndex = s.length - 1\n   \
    \     var lastCharVowel = vowels(lastChar)\n        while (lastCharIndex > 0)\
    \ {\n            if (lastCharVowel == lastVowel) {\n                count += 1\n\
    \            }\n            lastCharIndex -= 1\n            lastChar = s.last\n\
    \            lastCharVowel = vowels(lastChar)\n        }\n        count\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: String index out of range: 101\n\
    \tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\
    \tat scala.collection.StringOps$.apply$extension(StringOps.scala:185)\n\tat Problem$.vowelsCount(tmpb5xadvzy.scala:19)\n\
    \tat Problem$.main(tmpb5xadvzy.scala:31)\n\tat Problem.main(tmpb5xadvzy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = s.toCharArray.filter(c => vowels.contains(c)).size\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprxik7arr.scala:20)\n\tat Problem.main(tmprxik7arr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = mutable.HashSet[String]()\n\
    \        for (i <- 0 until s.length)\n            if (vowels.contains(s.charAt(i)))\n\
    \                vowelsCount += s.charAt(i)\n        vowelsCount.size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp78mtt677.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashSet[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659793477
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val vowelsCount = s.toCharArray.filter(c =>\
    \ vowels.contains(c.toString)).size\n        vowelsCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbrfpgy06.scala:21)\n\tat Problem.main(tmpbrfpgy06.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793478
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var lastVowel = s.charAt(s.length - 1)\n        var lastVowelIsY\
    \ = (lastVowel == 'y')\n        var lastVowelIsYOrZ = (lastVowel == 'y' || lastVowel\
    \ == 'z')\n        for (i <- 0 until s.length)\n        {\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n            {\n                count += 1\n           \
    \ }\n            else if (s.charAt(i) == 'y')\n            {\n               \
    \ if (lastVowelIsY && lastVowelIsYOrZ)\n                {\n                  \
    \  count += 1\n                }\n                lastVowelIsY = false\n     \
    \           lastVowelIsYOrZ = false\n            }\n            else if (s.charAt(i)\
    \ == 'z')\n            {\n                if (lastVowelIsYOrZ)\n             \
    \   {\n                    count += 1\n                }\n                lastVowelIsYOrZ\
    \ = true\n            }\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpscdi4_i6.scala:46)\n\tat Problem.main(tmpscdi4_i6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount =\
    \ mutable.HashMap[String, Long]()\n        for (c <- s) {\n            if (vowels.contains(c))\
    \ {\n                vowelsCount.get(c) match {\n                    case Some(count)\
    \ =>\n                        vowelsCount.get(c) += 1\n                    case\
    \ None =>\n                        vowelsCount.get(c) += 1\n                }\n\
    \            }\n        }\n        vowelsCount.values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vmkt5dd.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mString\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3vmkt5dd.scala:17:32\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                Found:    (c : Char)\n\e[31m   |\e[0m     \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659793478

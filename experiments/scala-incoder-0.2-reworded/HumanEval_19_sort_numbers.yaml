name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n    // (\"\
  one three five\")\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        return sortedString", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedList = numberList.sortWith(_ < _)\n\
    \        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_.compareTo(_) <\
    \ 0)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n        val\
    \ result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").toList\n        val numbers = numberList.map(_.toInt)\n\
    \        val sortedNumbers = numbers.sortBy(_)\n        val sortedNumbersString\
    \ = sortedNumbers.mkString(\" \")\n        sortedNumbersString", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortBy(x => x)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedNumbers\
    \ = numberList.sortBy(_.toInt)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith((a, b) => a < b)\n        sortedList.mkString(\" \")",
  "        val nums = numbers.split(\" \").map(_.toInt)\n        val sorted = nums.sortBy(_.toInt)\n\
    \        val result = sorted.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       val sortedStrings = sortedNumbers.map(_.toString).mkString(\" \")\n  \
    \      sortedStrings", "        val numberArray = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString\
    \ = sortedArray.toList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedList = numberList.sortBy(_.toInt)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_.compareTo(_) < 0)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_.compareTo(_) < 0)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.mkString(\" \")", "        val nums = numbers.split(\" \").toList\n\
    \        nums.sortWith((a, b) => a.toInt < b.toInt)\n        nums.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith((a, b) => a.toInt < b.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val nums = numbers.split(\" \").toList\n    \
    \    val numsSorted = nums.sortWith(_.compareTo(_) < 0)\n        numsSorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(_.toInt)\n        val sorted\
    \ = nums.sortWith(_ < _)\n        sorted.mkString(\" \")", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val result = sortedList.mkString(\" \")\n        result", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedNumbers = numberList.sortBy(_.toInt)\n\
    \        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        val\
    \ sortedString = sortedList.mkString(\" \")\n        sortedString", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortBy(_)\n        val sortedString = sortedList.mkString(\" \"\
    )\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberList.sortWith(_.compareTo(_) < 0)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).toList\n        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val nums = numbers.split(\" \").toList\n    \
    \    val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(_.toInt)\n        val sorted\
    \ = nums.sortWith((a, b) => a < b)\n        sorted.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").toList\n        nums.sortWith(_ < _)\n     \
    \   nums.mkString(\" \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n\
    \        val sortedNumbers = numberList.sortBy(_.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n       \
    \ val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").toList\n        val numsSorted\
    \ = nums.sortWith((a, b) => a < b)\n        numsSorted.mkString(\" \")", "   \
    \     val numberList = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val sortedString = sortedList.mkString(\" \")\n        sortedString", " \
    \       val nums = numbers.split(\" \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n\
    \        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith((a, b) => a < b)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.toString", "        val nums\
    \ = numbers.split(\" \").toList\n        val numsSorted = nums.sortWith(_ < _)\n\
    \        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_.compareTo(_) <\
    \ 0)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       val sortedNumberString = sortedNumbers.mkString(\" \")\n        sortedNumberString",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").toList\n        val numsSorted\
    \ = nums.sortBy(_.toInt)\n        numsSorted.mkString(\" \")", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedList = numberList.sortBy(_.toInt)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val nums = numbers.split(\" \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n\
    \        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       val sortedString = sortedNumbers.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        return sortedString", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedNumbers = numberList.sortWith(_ <\
    \ _)\n        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val sortedString = sortedList.mkString(\" \")\n        sortedString", " \
    \       val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedList = numberList.sortBy(x => x)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    sortedList.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).toList\n        val sortedList = numberList.sortWith(_.compareTo(_) < 0)\n \
    \       sortedList.mkString(\" \")", "        val numberArray = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_ < _)\n  \
    \      val sortedString = sortedArray.toList.mkString(\" \")\n        sortedString",
  "        val nums = numbers.split(\" \").map(_.toInt)\n        val sorted = nums.sortBy(_.toInt)\n\
    \        val result = sorted.mkString(\" \")\n        result", "        val nums\
    \ = numbers.split(\" \").toList\n        val numsSorted = nums.sortWith((a, b)\
    \ => a < b)\n        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n    \
    \    val sortedString = sortedList.mkString(\" \")\n        sortedString", " \
    \       val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val nums = numbers.split(\" \").toList\n        nums.sortWith(_ < _)\n  \
    \      nums.mkString(\" \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberArray.sortWith(_ < _)\n        val sortedStrings\
    \ = sortedNumbers.map(_.toString).mkString(\" \")\n        sortedStrings", " \
    \       val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.toString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        val sortedString = sortedNumbers.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberArray = numbers.split(\" \").map(_.toInt)\n        val sortedArray\
    \ = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val nums = numbers.split(\" \").map(_.toInt)\n\
    \        val sorted = nums.sortWith(_ < _)\n        sorted.mkString(\" \")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortBy(_.toInt)\n        val sortedStrings = sortedNumbers.map(_.toString).mkString(\"\
    \ \")\n        sortedStrings", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").toList\n        val sortedNumbers = numberList.sortWith((a,\
    \ b) => a.toInt > b.toInt)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortBy(_)\n        sortedNumbers.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortBy(_.toInt)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberList.sortWith(_.compareTo(_) < 0)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt).toList\n        val sortedList = numberList.sortBy(x => x)\n  \
    \      sortedList.toString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(_.toInt)\n        val sorted = nums.sortBy(_.toInt)\n        val strings\
    \ = sorted.map(_.toString)\n        strings.mkString(\" \")", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val nums = numbers.split(\" \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n\
    \        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedNumbers\
    \ = numberList.sortWith((a, b) => a.toInt < b.toInt)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberArray = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString\
    \ = sortedArray.toString\n        sortedString.replaceAll(\"\\\\D\", \"\")", " \
    \       val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n       \
    \ val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString.trim", "        val nums = numbers.split(\" \").toList\n\
    \        val numsSorted = nums.sortBy(_.toInt)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortBy(_)\n        sortedList.toString",
  "        val nums = numbers.split(\" \").map(_.toInt)\n        val numsSorted =\
    \ nums.sortWith(_ < _)\n        val numsSortedString = numsSorted.mkString(\"\
    \ \")\n        numsSortedString", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedList = numberList.sortWith(_ < _)\n        val\
    \ sortedString = sortedList.mkString(\" \")\n        sortedString", "        val\
    \ numberList = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_.compareTo(_)\
    \ < 0)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_ < _)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n     \
    \   val sortedNumberString = sortedNumbers.mkString(\" \")\n        sortedNumberString",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortBy(_)\n        val sortedString = sortedList.mkString(\" \"\
    )\n        sortedString", "        val nums = numbers.split(\" \").map(_.toInt)\n\
    \        val sorted = nums.sortWith(_ < _)\n        val result = sorted.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n \
    \       val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberArray = numbers.split(\" \").map(_.toInt)\n       \
    \ val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt).toList\n\
    \        val sortedList = numberList.sortBy(_.toInt)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt).toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val numberArray = numbers.split(\" \").map(_.toInt).toArray\n        val\
    \ sortedArray = numberArray.sortWith(_ < _)\n        val sortedString = sortedArray.toString\n\
    \        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val nums = numbers.split(\" \").toList\n    \
    \    val numsSorted = nums.sortWith(_.compareTo(_) < 0)\n        numsSorted.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedNumbers.mkString(\" \")\n        sortedString", "        val numberArray\
    \ = numbers.split(\" \").toList\n        val sortedArray = numberArray.sortWith((a,\
    \ b) => a.toInt < b.toInt)\n        sortedArray.toList.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").toList\n        val numsSorted = nums.sortBy(_.toInt)\n\
    \        numsSorted.mkString(\" \")", "        val numberArray = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedArray = numberArray.sortWith(_ < _)\n  \
    \      val sortedString = sortedArray.toList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\"\
    \ \")\n        result", "        val numberArray = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedArray = numberArray.sortWith(_ < _)\n        val sortedString\
    \ = sortedArray.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        sortedList.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberList.sortWith(_ < _)\n \
    \       sortedNumbers.mkString(\" \")", "        val numberArray = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedNumbers = numberArray.sortWith(_ < _)\n\
    \        sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").toList\n        val sortedNumbers = numberList.sortWith(_ < _)\n       \
    \ sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\" \"\
    ).map(_.toInt).toList\n        val sortedList = numberList.sortBy(_.toInt)\n \
    \       sortedList.toString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedString = sortedNumbers.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").toList\n        val sortedList = numberList.sortWith(_.compareTo(_)\
    \ < 0)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        val sortedString\
    \ = sortedList.mkString(\" \")\n        sortedString", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val numberList = numbers.split(\" \").toList\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers =\
    \ numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "      \
    \  val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.toString",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val sortedString = sortedList.mkString(\"\
    \ \")\n        sortedString", "        val numberArray = numbers.split(\" \").toList\n\
    \        val sortedNumbers = numberArray.sortWith(_.compareTo(_) < 0)\n      \
    \  sortedNumbers.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        val sortedNumbersString\
    \ = sortedNumbers.mkString(\" \")\n        sortedNumbersString", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        val result = sortedList.mkString(\" \"\
    )\n        result", "        val numberList = numbers.split(\" \").map(_.toInt)\n\
    \        val sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt).toList\n        val sortedList\
    \ = numberList.sortBy(_.toInt)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList =\
    \ numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "        val\
    \ numberList = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortWith(_\
    \ < _)\n        val result = sortedList.mkString(\" \")\n        result", "  \
    \      val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").toList\n        val sortedList\
    \ = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")", "       \
    \ val numberList = numbers.split(\" \").toList\n        val sortedNumbers = numberList.sortWith(_\
    \ < _)\n        sortedNumbers.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").toList\n        val numsSorted = nums.sortWith((a, b) => a.toInt < b.toInt)\n\
    \        numsSorted.mkString(\" \")", "        val numberList = numbers.split(\"\
    \ \").map(_.toInt).toList\n        val sortedList = numberList.sortBy(_.toInt)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.toString", "   \
    \     val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\" \")", "    \
    \    val numberList = numbers.split(\" \").map(_.toInt)\n        val sortedNumbers\
    \ = numberList.sortWith(_ < _)\n        val sortedStrings = sortedNumbers.map(_.toString).mkString(\"\
    \ \")\n        sortedStrings", "        val numberArray = numbers.split(\" \"\
    ).toList\n        val sortedNumbers = numberArray.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val numberList = numbers.split(\" \").map(_.toInt)\n        val\
    \ sortedList = numberList.sortWith(_ < _)\n        sortedList.mkString(\" \")",
  "        val numberList = numbers.split(\" \").map(_.toInt).toList\n        val\
    \ sortedNumbers = numberList.sortWith(_ < _)\n        sortedNumbers.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").toList\n        val numsSorted\
    \ = nums.sortBy(_.toInt)\n        numsSorted.mkString(\" \")", "        val numberList\
    \ = numbers.split(\" \").map(_.toInt)\n        val sortedList = numberList.sortBy(_)\n\
    \        val sortedString = sortedList.mkString(\" \")\n        sortedString"]
stop_tokens:
- "\n    }\n"

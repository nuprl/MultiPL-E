name: HumanEval_162_string_to_md5
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a string 'text', return its md5 hash equivalent string.\n    // If\
  \ 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello world\"\
  ))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text : String)\
  \ : Option[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
  \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
  \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
  ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
  ));\n    }\n\n}\n"
completions: ["        if (text.isEmpty) None\n        else Some(md5(text))", "  \
    \      if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(_ => Integer.toHexString(_)).mkString\n\
    \        Option(md5)", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexString)", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val bytes = md5.digest(text.getBytes)\n            val hexString\
    \ = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n    \
    \    }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).map(_.toString))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5Hex)\n      \
    \  }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\" format _).mkString\n\
    \        Some(md5)", "        if (text.isEmpty) {\n            None\n        }\
    \ else {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n   \
    \         val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(md5)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text))", "        if (text.isEmpty)\
    \ None\n        else Some(md5(text))", "        if (text.isEmpty) {\n        \
    \    None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5String\
    \ = new String(digest)\n            Some(md5String)\n        }", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else {\n            val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes(\"UTF-8\"))\n        val hex = digest.map(\"%02x\"\
    .format(_)).mkString\n        Option(hex)", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val\
    \ hexString = digest.map(\"%02x\".format(_)).mkString\n        Option(hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ {\n            val md5 = new java.security.MessageDigest(\"MD5\")\n        \
    \    val digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(md5)\n        }", "        if (text.isEmpty)\
    \ None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\"\
    )\n            val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hex)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text).hexString)", "     \
    \   if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hexString = digest.map(\"%02x\".format(_)).mkString\n       \
    \     Some(hexString)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.Md5.digest(text))", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes(\"UTF-8\"))\n        val\
    \ md5 = digest.map(\"%02x\".format(_)).mkString\n        Option(md5)", "     \
    \   if (text.isEmpty) {\n            None\n        } else {\n            val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5String = new String(digest)\n            Some(md5String)\n\
    \        }", "        if (text.isEmpty) {\n            None\n        } else {\n\
    \            val md5 = new java.security.MessageDigest(\"MD5\")\n            val\
    \ digest = md5.digest(text.getBytes)\n            val md5 = digest.map(_.toHexString)\n\
    \            Some(md5)\n        }", "        if (text.isEmpty) None\n        else\
    \ Some(scala.util.hashing.Md5.hashString(text).hexString)", "        if (text.isEmpty)\
    \ None\n        else Some(md5(text))", "        if (text.isEmpty) {\n        \
    \    None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(_.toHexString)\n            Some(md5)\n        }", "        if\
    \ (text.isEmpty) None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        val md5 = MessageDigest.getInstance(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n\
    \        Some(md5)", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Hex\
    \ = digest.map(_.toHexString).mkString\n            Some(md5Hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5 = digest.map(\"%02x\".format(_)).mkString\n\
    \        Some(md5)", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_.toHexString)\n            Some(md5)\n    \
    \    }", "        if (text.isEmpty) None\n        else {\n            val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_.toHexString)\n            Some(md5)\n    \
    \    }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n\
    \        hexString.toUpperCase", "        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        val md5 = new java.security.MessageDigest(\"MD5\")\n      \
    \  val bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.digest(bytes)\n\
    \        val hexString = java.util.Arrays.toString(md5)\n        hexString.toUpperCase",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = MessageDigest.getInstance(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(text.map(_.toByte).map(_.md5).mkString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = MessageDigest.getInstance(\"MD5\")\n            val bytes = md5.digest(text.getBytes)\n\
    \            val hexString = bytes.map(\"%02x\".format(_)).mkString\n        \
    \    Some(hexString)\n        }", "        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n            val bytes = md5.digest(text.getBytes)\n            val hexString\
    \ = bytes.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n    \
    \    }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes(\"\
    UTF-8\"))\n            val hexString = digest.map(\"%02x\".format(_)).mkString\n\
    \            Some(hexString)\n        }", "        if (text.isEmpty) None\n  \
    \      else Some(scala.util.Md5.digest(text.getBytes))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.md5(text).digest)", "        if (text.isEmpty)\
    \ None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(_.toHexString)\n            Some(md5)\n        }", "        if\
    \ (text.isEmpty) {\n            None\n        } else {\n            val md5 =\
    \ new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n\
    \        }", "        if (text.isEmpty) {\n            None\n        } else {\n\
    \            val md5 = new java.security.MessageDigest(\"MD5\")\n            val\
    \ digest = md5.digest(text.getBytes)\n            val md5 = digest.map(\"%02x\"\
    .format(_)).mkString\n            Some(md5)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.hashString(text))", "        if (text.isEmpty)\
    \ None\n        else Some(md5(text))", "        if (text.isEmpty) None\n     \
    \   else Some(scala.util.hashing.Md5.hashString(text).hexString)", "        val\
    \ md5 = MessageDigest.getInstance(\"MD5\")\n        val bytes = text.getBytes(\"\
    UTF-8\")\n        val md5 = md5.digest(bytes)\n        val hex = Array[String](md5.take(32).map(_.toHexString).mkString,\
    \ md5.take(32).mkString)\n        Some(hex(0))", "        if (text.isEmpty) None\n\
    \        else Some(scala.util.hashing.Md5.hashString(text))", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val buffer\
    \ = new Array[Byte](128)\n        val digest = md5.digest(text.getBytes)\n   \
    \     digest.foreach(buffer += _)\n        val hex = digest.map(x => Integer.toHexString(x)).foldLeft(\"\
    \")((x,y) => x + y)\n        hex.take(32).mkString", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.stringToMd5(text))", "      \
    \  val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest = md5.digest(text.getBytes(\"\
    UTF-8\"))\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n \
    \       Option(hexString)", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val digest = md5.digest(text.getBytes)\n        val md5String\
    \ = new String(digest)\n        val md5Hash = md5String.substring(0, 8)\n    \
    \    Option(md5Hash)", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.digest(text.getBytes))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val md5String = new String(digest)\n  \
    \      val md5Hash = md5String.substring(0, 8)\n        Some(md5Hash)", "    \
    \    if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes(\"UTF-8\"))\n        val hex = digest.map(\"%02x\"\
    .format(_)).mkString\n        Option(hex)", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        val hash = md5.digest(bytes)\n\
    \        val hexString = hash.toString(\"hex\")\n        Some(hexString)", " \
    \       if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(x => Integer.toHexString(0xFF & x)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(text.md5())", "        if (text.isEmpty)\
    \ {\n            None\n        } else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hex\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n        }",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n\
    \        hexString.toUpperCase", "        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val bytes = text.getBytes\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        md5.update(bytes)\n        val md5Hash = md5.digest()\n      \
    \  val md5HashString = Array.ofDim[Byte](md5.digestSize)\n        md5.update(md5Hash,\
    \ 0, md5Hash.length)\n        md5.doFinal(md5HashString, 0, md5HashString.length)\n\
    \        Option(md5HashString.mkString)", "        if (text.isEmpty) None\n  \
    \      else Some(scala.util.Md5.digest(text.getBytes))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text.getBytes))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(md5)\n        }",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val hex = digest.map(\"%02x\".format(_)).mkString\n\
    \        Option(hex)", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.Md5.digest(text.getBytes))", "        if\
    \ (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else Some(md5(text))", "        if (text.isEmpty) None\n     \
    \   else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n       \
    \     val digest = md5.digest(text.getBytes)\n            val hex = digest.map(\"\
    %02x\".format(_)).mkString\n            Some(hex)\n        }", "        if (text.isEmpty)\
    \ None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexString)",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val bytes = text.getBytes(\"UTF-8\")\n            val digest\
    \ = md5.digest(bytes)\n            val md5 = digest.map(_ & 0xFF).map(\"%02x\"\
    .format(_)).mkString\n            Some(md5)\n        }", "        if (text.isEmpty)\
    \ None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val hexString\
    \ = digest.map(\"%02x\".format(_)).mkString\n            Some(hexString)\n   \
    \     }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hex)",
  "        if (text.isEmpty) None\n        else Some(md5(text))", "        if (text.isEmpty)\
    \ None\n        else {\n            val md5 = MessageDigest.getInstance(\"MD5\"\
    )\n            val bytes = text.getBytes(\"UTF-8\")\n            val hash = md5.digest(bytes)\n\
    \            val hex = hash.toString(\"hex\")\n            Some(hex)\n       \
    \ }", "        if (text.isEmpty) None\n        else {\n            val md5 = new\
    \ java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val hex = digest.map(\"%02x\".format(_)).mkString\n            Some(hex)\n\
    \        }", "        if (text.isEmpty) None\n        else Some(scala.util.Md5.hashString(text).hexValue)",
  "        if (text.isEmpty) {\n            None\n        } else {\n            val\
    \ md5 = new java.security.MessageDigest(\"MD5\")\n            val digest = md5.digest(text.getBytes)\n\
    \            val md5 = digest.map(_.toHexString)\n            Some(md5)\n    \
    \    }", "        if (text.isEmpty) None\n        else Some(text.map(_.toByte).map(_.md5).map(_.toString).mkString)",
  "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text))",
  "        if (text.isEmpty) None\n        else Some(scala.util.Md5.md5(text).hexValue)",
  "        if (text.isEmpty) None\n        else Some(text.map(_.hashCode).map(_.toString).mkString(\"\
    -\"))", "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val\
    \ bytes = text.getBytes(\"UTF-8\")\n        val md5 = md5.digest(bytes)\n    \
    \    val md5String = Array[Byte]().withDefaultValue(0) ++ md5.toArray\n      \
    \  val md5HexString = md5String.map(_.toHexString).mkString\n        Option(md5HexString)",
  "        val md5 = new java.security.MessageDigest(\"MD5\")\n        val digest\
    \ = md5.digest(text.getBytes)\n        val hexString = digest.map(\"%02x\".format(_)).mkString\n\
    \        Option(hexString)", "        if (text.isEmpty) None\n        else Some(scala.util.hashing.Md5.hashString(text).hexValue)"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorNum =\
    \ 0\n        var currentDivisor = 1\n        var currentDivisorNum = 1\n     \
    \   var currentNum = 1\n        var currentNumNum = 1\n        var currentNumNumNum\
    \ = 1\n        var currentNumNumNumNum = 1\n        var currentNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var currentNumNumNumNumNumNumNumNumNum\
    \ = 1\n        var currentNumNumNumNumNumNumNumNumNum = 1\n        var \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpjureqeo_.scala:54:11 ---------------------------\e\
    [0m\e[0m\n\e[31m54 |\e[0m        \e[33mvar\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpjureqeo_.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mcurrentNumNumNumNumNum\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjureqeo_.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mcurrentNumNumNumNumNumNum\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjureqeo_.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m \e[36mcurrentNumNumNumNumNumNumNum\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpjureqeo_.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m \e[36mcurrentNumNumNumNumNumNumNum\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcurrentNumNumNumNumNumNumNum is already defined as \e[33"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 317l\n\
    \        divisors += 323l\n        divisors += 329l\n        divisors += 331l\n\
    \        divisors += 337l\n        divisors += 341l\n        divisors += 347l\n\
    \        divisors += 353l\n        divisors += 359l\n        divisors += 361l\n\
    \        divisors += 367l\n        divisors += 373l\n        divisors += 379l\n\
    \        divisors += 381l\n        divisors += 383l\n        divisors += 389l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp18co4ccw.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp18co4ccw.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 4l\n        divisors += 6l\n        divisors\
    \ += 8l\n        divisors += 10l\n        divisors += 12l\n        divisors +=\
    \ 14l\n        divisors += 16l\n        divisors += 18l\n        divisors += 20l\n\
    \        divisors += 22l\n        divisors += 24l\n        divisors += 26l\n \
    \       divisors += 28l\n        divisors += 30l\n        divisors += 32l\n  \
    \      divisors += 34l\n        divisors += 36l\n        divisors += 38l\n   \
    \     divisors += 40l\n        divisors += 42l\n        divisors += 44l\n    \
    \    divisors += 46l\n        divisors += 48l\n        divisors += 50l\n     \
    \   divisors += 52l\n        divisors += 54l\n        divisors += 56l\n      \
    \  divisors += 58l\n        divisors += 60l\n        divisors += 62l\n       \
    \ divisors += 64l\n        divisors += 66l\n        divisors += 68l\n        divisors\
    \ += 70l\n        divisors += 72l\n        divisors += 74l\n        divisors +=\
    \ 76l\n        divisors += 78l\n        divisors += 80l\n        divisors += 82l\n\
    \        divisors += 84l\n        divisors += 86l\n        divisors += 88l\n \
    \       divisors += 90l\n        divisors += 92l\n        divisors += 94l\n  \
    \      divisors += 96l\n        divisors += 98l\n        divisors += 100l\n  \
    \      divisors += 102l\n        divisors += 104l\n        divisors += 106l\n\
    \        divisors += 108l\n        divisors += 110l\n        divisors += 112l\n\
    \        divisors += 114l\n        divisors += 116l\n        divisors += 118l\n\
    \        divisors += 120l\n        divisors += 122l\n        divisors += 124l\n\
    \        divisors += 126l\n        divisors += 128l\n        divisors += 130l\n\
    \        divisors += 132l\n        divisors += 134l\n        divisors += 136l\n\
    \        divisors += 138l\n        divisors += 140l\n        divisors += 142l\n\
    \        divisors += 144l\n        divisors += 146l\n        divisors += 148l\n\
    \        divisors += 150l\n        divisors += 152l\n        divisors += 154l\n\
    \        divisors += 156l\n        divisors += 158l\n        divisors += 160l\n\
    \        divisors += 162l\n        divisors += 164l\n        divisors += 166\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpimmuzd_g.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyk1uisoo.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpyk1uisoo.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorIndex\
    \ = 0\n        var divisor = 0\n        var divisorIndex = 0\n        var remainder\
    \ = 0\n        var remainderIndex = 0\n        var maxDivisorIndex = 0\n     \
    \   var maxDivisor = 0\n        var maxDivisorIndex = 0\n        var divisor =\
    \ 0\n        var divisorIndex = 0\n        var remainder = 0\n        var remainderIndex\
    \ = 0\n        var maxDivisorIndex = 0\n        var maxDivisor = 0\n        var\
    \ maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex = 0\n\
    \        var remainder = 0\n        var remainderIndex = 0\n        var maxDivisorIndex\
    \ = 0\n        var maxDivisor = 0\n        var maxDivisorIndex = 0\n        var\
    \ divisor = 0\n        var divisorIndex = 0\n        var remainder = 0\n     \
    \   var remainderIndex = 0\n        var maxDivisorIndex = 0\n        var maxDivisor\
    \ = 0\n        var maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex\
    \ = 0\n        var remainder = 0\n        var remainderIndex = 0\n        var\
    \ maxDivisorIndex = 0\n        var maxDivisor = 0\n        var maxDivisorIndex\
    \ = 0\n        var divisor = 0\n        var divisorIndex = 0\n        var remainder\
    \ = 0\n        var remainderIndex = 0\n        var maxDivisorIndex = 0\n     \
    \   var maxDivisor = 0\n        var maxDivisorIndex = 0\n        var divisor =\
    \ 0\n        var divisorIndex = 0\n        var remainder = 0\n        var remainderIndex\
    \ = 0\n        var maxDivisorIndex = 0\n        var maxDivisor = 0\n        var\
    \ maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex = 0\n\
    \        var remainder = 0\n        var remainderIndex = 0\n        var maxDivisorIndex\
    \ = 0\n        var maxDivisor = 0\n        var maxDivisorIndex = 0\n        var\
    \ divisor = 0\n        var divisorIndex = 0\n        var remainder = 0\n     \
    \   var remainderIndex = 0\n        var maxDivisorIndex = 0\n        var maxDivisor\
    \ = 0\n        var maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex\
    \ = 0\n        var remainder = 0\n        var remainderIndex = 0\n        var\
    \ maxDivisorIndex = 0\n        var maxDivisor = 0\n        var maxDivisorIndex\
    \ = 0\n        var divisor = 0\n        var divisorIndex = 0\n        var remainder\
    \ = 0\n        var remainderIndex = 0\n        var maxDivisorIndex = 0\n     \
    \   var maxDivisor = 0\n        var maxDivisorIndex = 0\n        var divisor =\
    \ 0\n        var divisorIndex = 0\n        var remainder = 0\n        var remainderIndex\
    \ = 0\n        var maxDivisorIndex = 0\n        var maxDivisor = 0\n        var\
    \ maxDivisorIndex = 0\n        var divisor = 0\n        var divisorIndex = 0\n\
    \        var remainder = 0\n        var remainderIndex = 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvne9s3pg.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisorIndex\e[0m = \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmaxDivisorIndex is already defined as \e[33mvariable\e[0m \e[35mmaxDivisorIndex\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvne9s3pg.scala:15:12 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mvar\e[0m \e[36mmaxDivisor\e[0m = \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmaxDivisor is already\
    \ defined as \e[33mvariable\e[0m \e[35mmaxDivisor\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvne9s3pg.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvne9s3pg.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mdivisor\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mdivisor\
    \ is already defined as \e[33mvariable\e[0m \e[35mdivisor\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvne9s3pg.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mdivisorIndex\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mdivisorIndex is already defined as \e[33mvariable\e[0m \e\
    [35mdivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overload"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 149\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 159\n        divisors += 161\n      \
    \  divisors += 163\n        divisors += 167\n        divisors += 173\n       \
    \ divisors += 179\n        divisors += 181\n        divisors += 191\n        divisors\
    \ += 193\n        divisors += 197\n        divisors += 199\n        divisors +=\
    \ 211\n        divisors += 223\n        divisors += 227\n        divisors += 229\n\
    \        divisors += 233\n        divisors += 239\n        divisors += 241\n \
    \       divisors += 243\n        divisors += 247\n        divisors += 249\n  \
    \      divisors += 251\n        divisors += 253\n        divisors += 257\n   \
    \     divisors += 263\n        divisors += 269\n        divisors += 271\n    \
    \    divisors += 277\n        divisors += 281\n        divisors += 283\n     \
    \   divisors += 293\n        divisors += 307\n        divisors += 311\n      \
    \  divisors += 313\n        divisors += 317\n        divisors += 323\n       \
    \ divisors += 329\n        divisors += 331\n        divisors += 337\n        divisors\
    \ += 343\n        divisors += 349\n        divisors += 353\n        divisors +=\
    \ 359\n        divisors += 363\n        divisors += 369\n        divisors += 373\n\
    \        divisors += 379\n        divisors += 383\n        divisors += 389\n \
    \       divisors += 393\n        divisors += 397\n        divisors += 401\n  \
    \      divisors += 407\n        divisors += 411\n        divisors += 413\n   \
    \     divisors += 417\n        divisors += 423\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpreb6ie4r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 107l\n        divisors += 109l\n   \
    \     divisors += 113l\n        divisors += 121l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 203l\n        divisors += 209l\n\
    \        divisors += 215l\n        divisors += 221l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 243l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 257l\n        divisors += 263l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 283l\n\
    \        divisors += 289l\n        divisors += 291l\n        divisors += 297l\n\
    \        divisors += 303l\n        divisors += 309l\n        divisors += 311l\n\
    \        divisors += 317l\n        divisors += 323l\n        divisors += 329l\n\
    \        divisors += 331l\n        divisors += 337l\n        divisors += 343l\n\
    \        divisors += 349l\n        divisors += 351l\n        divisors += 357l\n\
    \        divisors += 363l\n        divisors += 369l\n        divisors += 371l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_wbsll97.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_wbsll97.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmparg3awrb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 257l\n        divisors += 263l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 293l\n        divisors += 307l\n\
    \        divisors += 311l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 333l\n        divisors += 337l\n\
    \        divisors += 347l\n        divisors += 351l\n        divisors += 353l\n\
    \        divisors += 359l\n        divisors += 361l\n        divisors += 363l\n\
    \        divisors += 369l\n        divisors += 371l\n        divisors += 375l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpp5sgrv76.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp5sgrv76.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcja7l5mx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (d <- 1 to n by 2) {\n            if (n % d\
    \ == 0) {\n                divisors += d\n                if (divisors.size >\
    \ maxDivisor) {\n                    maxDivisor = divisors.size \n           \
    \     }\n            }\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp95v4f83x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp95v4f83x.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacmn6uhp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 223l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 247l\n        divisors += 251l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 289l\n        divisors += 293l\n        divisors += 307l\n\
    \        divisors += 311l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 347l\n        divisors += 353l\n\
    \        divisors += 359l\n        divisors += 363l\n        divisors += 369l\n\
    \        divisors += 371l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp00p2fxhw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 343l\n        divisors += 349l\n        divisors += 351l\n\
    \        divisors += 359l\n        divisors += 363l\n        divisors += 369l\n\
    \        divisors += 37\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyq3oyfq8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtxrbgv4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbtxrbgv4.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 149\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 323\n        divisors += 329\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 343\n       \
    \ divisors += 347\n        divisors += 353\n        divisors += 359\n        divisors\
    \ += 363\n        divisors += 369\n        divisors += 373\n        divisors +=\
    \ 379\n        divisors += 383\n        divisors += 389\n        divisors += 393\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 411\n        divisors += 413\n        divisors += 417\n  \
    \      divisors += 423\n        divisors += 429\n        divisors += 431\n   \
    \     divisors += 437\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc1z7m4c0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 317\n        divisors += 323\n        divisors += 329\n  \
    \      divisors += 337\n        divisors += 341\n        divisors += 347\n   \
    \     divisors += 353\n        divisors += 359\n        divisors += 367\n    \
    \    divisors += 373\n        divisors += 379\n        divisors += 383\n     \
    \   divisors += 389\n        divisors += 397\n        divisors += 401\n      \
    \  divisors += 409\n        divisors += 419\n        divisors += 429\n       \
    \ divisors += 431\n        divisors += 439\n        divisors += 447\n        divisors\
    \ += 451\n        divisors += 457\n        divisors += 461\n        divisors +=\
    \ 467\n        divisors += 473\n        divisors += 479\n        divisors += 483\n\
    \        divisors += 489\n        divisors += 49\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpubzma7zm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgnz846gb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpgnz846gb.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) {\n            if (n % i == 0) {\n             \
    \   divisors += i\n            }\n        }\n        divisors.max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpobd03ho9.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpobd03ho9.scala:10:26 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 149\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 413\n        divisors += 421\n \
    \       divisors += 427\n        divisors += 433\n        divisors += 439\n  \
    \      divisors += 443\n        divisors += 449\n        divisors += 457\n   \
    \     divisors += 461\n        divisors += 467\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo1vittem.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        var maxDivisorFactor = 0\n        for(i <- 1 to\
    \ n){\n            val divisor = i\n            divisors += divisor\n        \
    \    val divisorFactor = divisors.toList.filter(divisor => n % divisor == 0).length\n\
    \            if(divisorFactor > maxDivisorFactor){\n                maxDivisorFactor\
    \ = divisorFactor\n                maxDivisor = divisor\n            }\n     \
    \   }\n        maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtrrex0o.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbtrrex0o.scala:11:22 --------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa0o055pe.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 0 until n) divisors += i\n        divisors.toList.sortWith(_\
    \ < _).last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa3sngmof.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpa3sngmof.scala:10:26 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) divisors\
    \ += i\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m\
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 353l\n        divisors += 359l\n        divisors += 363l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv0xwxfft.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv0xwxfft.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp21x_n5h1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(d\
    \ <- 1 to n) divisors += d\n        divisors.toList.sortWith(_ < _).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3wcizdn7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3wcizdn7.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(d <- \e[31m1\e[0m to n) divisors\
    \ += d\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngf8_7v9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n) divisors += i\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvw6bojn7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvw6bojn7.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.head\n\
    \            divisors.remove(d)\n            if(d % 2 == 0) divisors.add(d+1)\n\
    \        }\n        divisors.last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7g0ubhmj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(61)\n\
    \        divisors.add(67)\n        divisors.add(73)\n        divisors.add(79)\n\
    \        divisors.add(83)\n        divisors.add(89)\n        divisors.add(97)\n\
    \        divisors.add(101)\n        divisors.add(107)\n        divisors.add(109)\n\
    \        divisors.add(111)\n        divisors.add(127)\n        divisors.add(131)\n\
    \        divisors.add(137)\n        divisors.add(139)\n        divisors.add(149)\n\
    \        divisors.add(151)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(257)\n        divisors.add(263)\n        divisors.add(269)\n\
    \        divisors.add(271)\n        divisors.add(277)\n        divisors.add(281)\n\
    \        divisors.add(283)\n        divisors.add(293)\n        divisors.add(307)\n\
    \        divisors.add(311)\n        divisors.add(313)\n        divisors.add(317)\n\
    \        divisors.add(331)\n        divisors.add(337)\n        divisors.add(347)\n\
    \        divisors.add(349)\n        divisors.add(353)\n        divisors.add(359)\n\
    \        divisors.add(361)\n        divisors.add(363)\n        divisors.add(369)\n\
    \        divisors.add(373)\n        divisors.add(379)\n        divisors.add(383)\n\
    \        divisors.add(389)\n        divisors.add(397)\n        divisors.add(401)\n\
    \        divisors.add(409)\n        divisors.add(419)\n        divisors.add(421)\n\
    \        divisors.add(427)\n        divisors.add(433)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp7ws3hvb0.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7ws3hvb0.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcja7l5mx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n by 2){\n            divisors += i\n        }\n        divisors.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp41sgy0zm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp41sgy0zm.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m){\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m      \
    \                Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2l\n        divisors += 3l\n        divisors += 5l\n    \
    \    divisors += 7l\n        divisors += 11l\n        divisors += 13l\n      \
    \  divisors += 17l\n        divisors += 19l\n        divisors += 23l\n       \
    \ divisors += 29l\n        divisors += 31l\n        divisors += 37l\n        divisors\
    \ += 41l\n        divisors += 43l\n        divisors += 47l\n        divisors +=\
    \ 53l\n        divisors += 59l\n        divisors += 61l\n        divisors += 67l\n\
    \        divisors += 71l\n        divisors += 73l\n        divisors += 79l\n \
    \       divisors += 83l\n        divisors += 89l\n        divisors += 97l\n  \
    \      divisors += 101l\n        divisors += 103l\n        divisors += 107l\n\
    \        divisors += 109l\n        divisors += 113l\n        divisors += 117l\n\
    \        divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2pllyxl2.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp2pllyxl2.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var largestDivisor = 0\n        var divisor = 0\n\
    \        var currentDivisor = 1\n        var currentDivisorIsEven = true\n   \
    \     for(i <- 1 to n){\n            divisor = i\n            currentDivisorIsEven\
    \ = true\n            while(divisor != 0){\n                currentDivisorIsEven\
    \ = currentDivisorIsEven && (divisor % 2 == 0)\n                divisor = divisor\
    \ / 2\n            }\n            if(currentDivisorIsEven){\n                largestDivisor\
    \ = i\n            }\n        }\n        largestDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppc5fwq86.scala:12:22\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqav4p92w.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqav4p92w.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcnkl9_zu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcnkl9_zu.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcja7l5mx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 149\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 343\n    \
    \    divisors += 349\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 393\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 423\n        divisors += 429\n        divisors += 431\n\
    \        divisors += 437\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp8e8gz9oy.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8e8gz9oy.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 1 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcnkl9_zu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcnkl9_zu.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbw_ab6a_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 327l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2e24cp_d.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2e24cp_d.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for(i <- 1 to n){\n            val d = i\n         \
    \   while(d % 2 == 0){\n                d /= 2\n            }\n            divisors\
    \ += d\n            if(divisors.size > maxDivisor){\n                maxDivisor\
    \ = divisors.last\n            }\n        }\n        maxDivisor\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf55meav3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpf55meav3.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf55meav3.scala:13:18\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val maxDivisor = divisors.max\n\
    \            divisors -= maxDivisor\n            if(maxDivisor % 2 == 0) {\n \
    \               return maxDivisor\n            }\n        }\n        return 0l\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpttvv9tva.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqkyho5x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDividend = 0\n\
    \        var maxDividendInner = 1\n        var maxDividendPower = 0\n        var\
    \ maxDividendPowerInner = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner\
    \ = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n\
    \        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n   \
    \     var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n      \
    \  var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n        var\
    \ maxDividendPower = 1\n        var maxDividendPowerInner = 1\n        var maxDividendPower\
    \ = 1\n        var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n\
    \        var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n   \
    \     var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n      \
    \  var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n        var\
    \ maxDividendPowerInner = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner\
    \ = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n\
    \        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n   \
    \     var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n      \
    \  var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n        var\
    \ maxDividendPower = 1\n        var maxDividendPowerInner = 1\n        var maxDividendPower\
    \ = 1\n        var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n\
    \        var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n   \
    \     var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n      \
    \  var maxDividendPowerInner = 1\n        var maxDividendPower = 1\n        var\
    \ maxDividendPowerInner = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner\
    \ = 1\n        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n\
    \        var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n   \
    \     var maxDividendPower = 1\n        var maxDividendPowerInner = 1\n      \
    \  var maxDividendPower = \n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpvrw4t6t0.scala:65:30 ---------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m        \e[33mvar\e[0m \e[36mmaxDividendPower\e[0m =\
    \ \n\e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m\
    \                              expression expected but \e[31m'}'\e[0m found\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvrw4t6t0.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDividendPower\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDividendPower is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDividendPower\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmpvrw4t6t0.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mmaxDividendPowerInner\e\
    [0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDividendPowerInner is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDividendPowerInner\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpvrw4t6t0.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mmaxDividendPower\e[0m =\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mmaxDividendPower is already defined as \e[33mvariable\e[0m \e[35mmaxDividendPower\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpvrw4t6t0.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mvar\e[0m \e[36mmaxDividendPowerInner\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDividendPowerInner is already defined as \e[33mvariable\e[0m \e[3"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 341\n        divisors += 343\n       \
    \ divisors += 347\n        divisors += 353\n        divisors += 359\n        divisors\
    \ += 363\n        divisors += 369\n        divisors += 373\n        divisors +=\
    \ 379\n        divisors += 383\n        divisors += 389\n        divisors += 397\n\
    \        divisors += 401\n        divisors += 407\n        divisors += 411\n \
    \       divisors += 413\n        divisors += 417\n        divisors += 419\n  \
    \      divisors += 421\n        divisors += 423\n        divisors += 427\n   \
    \     divisors += 431\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkeienig0.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 149\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 347\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 419\n        divisors +=\
    \ 421\n        divisors += 423\n        divisors += 427\n        divisors += 429\n\
    \        divisors += 431\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp06bnl_ee.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp06bnl_ee.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792467
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ val maxDivisor = mutable.Long.MaxValue\n        for(i <- 2 to n){\n        \
    \    val div = i / maxDivisor\n            if(divisors.contains(div)){\n     \
    \           divisors.remove(div)\n            }else{\n                divisors\
    \ += div\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpso4cx_om.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpso4cx_om.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpso4cx_om.scala:10:22 --------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 261l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnx49u3kw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8imbz8u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n) divisors += i\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvw6bojn7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvw6bojn7.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(10l)\n        divisors.add(15l)\n        divisors.add(20l)\n\
    \        divisors.add(25l)\n        divisors.add(30l)\n        divisors.add(35l)\n\
    \        divisors.add(40l)\n        divisors.add(45l)\n        divisors.add(50l)\n\
    \        divisors.add(55l)\n        divisors.add(60l)\n        divisors.add(65l)\n\
    \        divisors.add(70l)\n        divisors.add(75l)\n        divisors.add(80l)\n\
    \        divisors.add(85l)\n        divisors.add(90l)\n        divisors.add(95l)\n\
    \        divisors.add(100l)\n        divisors.add(105l)\n        divisors.add(110l)\n\
    \        divisors.add(115l)\n        divisors.add(120l)\n        divisors.add(125l)\n\
    \        divisors.add(130l)\n        divisors.add(135l)\n        divisors.add(140l)\n\
    \        divisors.add(145l)\n        divisors.add(150l)\n        divisors.add(155l)\n\
    \        divisors.add(160l)\n        divisors.add(165l)\n        divisors.add(170l)\n\
    \        divisors.add(175l)\n        divisors.add(180l)\n        divisors.add(185l)\n\
    \        divisors.add(190l)\n        divisors.add(195l)\n        divisors.add(200l)\n\
    \        divisors.add(205l)\n        divisors.add(210l)\n        divisors.add(215l)\n\
    \        divisors.add(220l)\n        divisors.add(225l)\n        divisors.add(230l)\n\
    \        divisors.add(235l)\n        divisors.add(240l)\n        divisors.add(245l)\n\
    \        divisors.add(250l)\n        divisors.add(255l)\n        divisors.add(260l)\n\
    \        divisors.add(265l)\n        divisors.add(270l)\n        divisors.add(275l)\n\
    \        divisors.add(280l)\n        divisors.add(285l)\n        divisors.add(290l)\n\
    \        divisors.add(295l)\n        divisors.add(300l)\n        divisors.add(305l)\n\
    \        divisors.add(310l)\n        divisors.add(315l)\n        divisors.add(320l)\n\
    \        divisors.add(325l)\n        divisors.add(330l)\n        divisors.add(335l)\n\
    \        divisors.add(340l)\n        divisors.add(345l)\n        divisors.add(350l)\n\
    \        divisors.add(355l)\n        divisors.add(360l)\n        divisors.add(365l)\n\
    \        divisors.add(370l)\n        divisors.add(375l)\n        divisors.add(380l)\n\
    \        divisors.add(385l)\n        divisors.add(390l)\n        divisors.add(395l)\n\
    \        divisors.add(400l)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5nx4wudx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp0bb5d6ac.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bb5d6ac.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 273l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpapj9sazd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors += 5l\n\
    \        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n    \
    \    divisors += 9l\n        divisors += 10l\n        divisors += 11l\n      \
    \  divisors += 12l\n        divisors += 13l\n        divisors += 14l\n       \
    \ divisors += 15l\n        divisors += 16l\n        divisors += 17l\n        divisors\
    \ += 18l\n        divisors += 19l\n        divisors += 20l\n        divisors +=\
    \ 21l\n        divisors += 22l\n        divisors += 23l\n        divisors += 24l\n\
    \        divisors += 25l\n        divisors += 26l\n        divisors += 27l\n \
    \       divisors += 28l\n        divisors += 29l\n        divisors += 30l\n  \
    \      divisors += 31l\n        divisors += 32l\n        divisors += 33l\n   \
    \     divisors += 34l\n        divisors += 35l\n        divisors += 36l\n    \
    \    divisors += 37l\n        divisors += 38l\n        divisors += 39l\n     \
    \   divisors += 40l\n        divisors += 41l\n        divisors += 42l\n      \
    \  divisors += 43l\n        divisors += 44l\n        divisors += 45l\n       \
    \ divisors += 46l\n        divisors += 47l\n        divisors += 48l\n        divisors\
    \ += 49l\n        divisors += 50l\n        divisors += 51l\n        divisors +=\
    \ 52l\n        divisors += 53l\n        divisors += 54l\n        divisors += 55l\n\
    \        divisors += 56l\n        divisors += 57l\n        divisors += 58l\n \
    \       divisors += 59l\n        divisors += 60l\n        divisors += 61l\n  \
    \      divisors += 62l\n        divisors += 63l\n        divisors += 64l\n   \
    \     divisors += 65l\n        divisors += 66l\n        divisors += 67l\n    \
    \    divisors += 68l\n        divisors += 69l\n        divisors += 70l\n     \
    \   divisors += 71l\n        divisors += 72l\n        divisors += 73l\n      \
    \  divisors += 74l\n        divisors += 75l\n        divisors += 76l\n       \
    \ divisors += 77l\n        divisors += 78l\n        divisors += 79l\n        divisors\
    \ += 80l\n        divisors += 81l\n        divisors += 82l\n        divisors +=\
    \ 83l\n        divisors += 84l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpw5lw9gq1.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 4l\n        divisors += 8l\n        divisors += 16l\n\
    \        divisors += 32l\n        divisors += 64l\n        divisors += 128l\n\
    \        divisors += 256l\n        divisors += 512l\n        divisors += 1024l\n\
    \        divisors += 2048l\n        divisors += 4096l\n        divisors += 8192l\n\
    \        divisors += 16384l\n        divisors += 32768l\n        divisors += 65536l\n\
    \        divisors += 131072l\n        divisors += 262144l\n        divisors +=\
    \ 524288l\n        divisors += 1048576l\n        divisors += 2097152l\n      \
    \  divisors += 4194304l\n        divisors += 8388608l\n        divisors += 16777216l\n\
    \        divisors += 33554432l\n        divisors += 67108864l\n        divisors\
    \ += 134217728l\n        divisors += 268435456l\n        divisors += 536870912l\n\
    \        divisors += 1073741824l\n        divisors += 2147483648l\n        divisors\
    \ += 4294967296l\n        divisors += 8589934592l\n        divisors += 17179869184l\n\
    \        divisors += 34359738368l\n        divisors += 68719476736l\n        divisors\
    \ += 137438953472l\n        divisors += 274877906944l\n        divisors += 549755813888l\n\
    \        divisors += 1099511627776l\n        divisors += 2199023255552l\n    \
    \    divisors += 4398046511104l\n        divisors += 8796093022208l\n        divisors\
    \ += 17592186044416l\n        divisors += 35184372088832l\n        divisors +=\
    \ 70368744177664l\n        divisors += 1374389534720l\n        divisors += 27487790694400l\n\
    \        divisors += 54975581388832l\n        divisors += 109951162777600l\n \
    \       divisors += 219902325555200l\n        divisors += 439804651110400l\n \
    \       divisors += 879609302220800l\n        divisors += 1759218604441600l\n\
    \        divisors += 3518437208883200l\n        divisors += 7036874417\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiejsn6ob.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpswi9uxzb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpswi9uxzb.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(10l)\n        divisors.add(15l)\n \
    \       divisors.add(20l)\n        divisors.add(25l)\n        divisors.add(30l)\n\
    \        divisors.add(35l)\n        divisors.add(40l)\n        divisors.add(45l)\n\
    \        divisors.add(50l)\n        divisors.add(55l)\n        divisors.add(60l)\n\
    \        divisors.add(65l)\n        divisors.add(70l)\n        divisors.add(75l)\n\
    \        divisors.add(80l)\n        divisors.add(85l)\n        divisors.add(90l)\n\
    \        divisors.add(95l)\n        divisors.add(100l)\n        divisors.add(105l)\n\
    \        divisors.add(110l)\n        divisors.add(115l)\n        divisors.add(120l)\n\
    \        divisors.add(125l)\n        divisors.add(130l)\n        divisors.add(135l)\n\
    \        divisors.add(140l)\n        divisors.add(145l)\n        divisors.add(150l)\n\
    \        divisors.add(155l)\n        divisors.add(160l)\n        divisors.add(165l)\n\
    \        divisors.add(170l)\n        divisors.add(175l)\n        divisors.add(180l)\n\
    \        divisors.add(185l)\n        divisors.add(190l)\n        divisors.add(195l)\n\
    \        divisors.add(200l)\n        divisors.add(205l)\n        divisors.add(210l)\n\
    \        divisors.add(215l)\n        divisors.add(220l)\n        divisors.add(225l)\n\
    \        divisors.add(230l)\n        divisors.add(235l)\n        divisors.add(240l)\n\
    \        divisors.add(245l)\n        divisors.add(250l)\n        divisors.add(255l)\n\
    \        divisors.add(260l)\n        divisors.add(265l)\n        divisors.add(270l)\n\
    \        divisors.add(275l)\n        divisors.add(280l)\n        divisors.add(285l)\n\
    \        divisors.add(290l)\n        divisors.add(295l)\n        divisors.add(300l)\n\
    \        divisors.add(305l)\n        divisors.add(310l)\n        divisors.add(315l)\n\
    \        divisors.add(320l)\n        divisors.add(325l)\n        divisors.add(330l)\n\
    \        divisors.add(335l)\n        divisors.add(340l)\n        divisors.add(345l)\n\
    \        divisors.add(350l)\n        divisors.add(355l)\n        divisors.add(360l)\n\
    \        divisors.add(365l)\n        divisors.add(370l)\n        divisors.add(375l)\n\
    \        divisors.add(380l)\n        divisors.add(385l)\n        divisors.add(390l)\n\
    \        divisors.add(395l)\n        divisors.add(400\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4wokzvhm.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4wokzvhm.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors += 2l\n        divisors +=\
    \ 3l\n        divisors += 4l\n        divisors += 5l\n        divisors += 6l\n\
    \        divisors += 7l\n        divisors += 8l\n        divisors += 9l\n    \
    \    divisors += 10l\n        divisors += 11l\n        divisors += 12l\n     \
    \   divisors += 13l\n        divisors += 14l\n        divisors += 15l\n      \
    \  divisors += 16l\n        divisors += 17l\n        divisors += 18l\n       \
    \ divisors += 19l\n        divisors += 20l\n        divisors += 21l\n        divisors\
    \ += 22l\n        divisors += 23l\n        divisors += 24l\n        divisors +=\
    \ 25l\n        divisors += 26l\n        divisors += 27l\n        divisors += 28l\n\
    \        divisors += 29l\n        divisors += 30l\n        divisors += 31l\n \
    \       divisors += 32l\n        divisors += 33l\n        divisors += 34l\n  \
    \      divisors += 35l\n        divisors += 36l\n        divisors += 37l\n   \
    \     divisors += 38l\n        divisors += 39l\n        divisors += 40l\n    \
    \    divisors += 41l\n        divisors += 42l\n        divisors += 43l\n     \
    \   divisors += 44l\n        divisors += 45l\n        divisors += 46l\n      \
    \  divisors += 47l\n        divisors += 48l\n        divisors += 49l\n       \
    \ divisors += 50l\n        divisors += 51l\n        divisors += 52l\n        divisors\
    \ += 53l\n        divisors += 54l\n        divisors += 55l\n        divisors +=\
    \ 56l\n        divisors += 57l\n        divisors += 58l\n        divisors += 59l\n\
    \        divisors += 60l\n        divisors += 61l\n        divisors += 62l\n \
    \       divisors += 63l\n        divisors += 64l\n        divisors += 65l\n  \
    \      divisors += 66l\n        divisors += 67l\n        divisors += 68l\n   \
    \     divisors += 69l\n        divisors += 70l\n        divisors += 71l\n    \
    \    divisors += 72l\n        divisors += 73l\n        divisors += 74l\n     \
    \   divisors += 75l\n        divisors += 76l\n        divisors += 77l\n      \
    \  divisors += 78l\n        divisors += 79l\n        divisors += 80l\n       \
    \ divisors += 81l\n        divisors += 82l\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppuitnel5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmppuitnel5.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 257l\n        divisors += 263l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 293l\n        divisors += 307l\n\
    \        divisors += 311l\n        divisors += 313l\n        divisors += 317l\n\
    \        divisors += 321l\n        divisors += 323l\n        divisors += 327l\n\
    \        divisors += 331l\n        divisors += 333l\n        divisors += 337l\n\
    \        divisors += 343l\n        divisors += 347l\n        divisors += 351l\n\
    \        divisors += 353l\n        divisors += 359l\n        divisors += 361l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdf2_38pk.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdf2_38pk.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 127l\n        divisors += 131l\n \
    \       divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp95l34mks.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp95l34mks.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n / 2\n        val divisors = mutable.HashSet[Long]()\n\
    \        divisors += 2\n        divisors += 3\n        divisors += 5\n       \
    \ divisors += 7\n        divisors += 11\n        divisors += 13\n        divisors\
    \ += 17\n        divisors += 19\n        divisors += 23\n        divisors += 29\n\
    \        divisors += 31\n        divisors += 37\n        divisors += 41\n    \
    \    divisors += 43\n        divisors += 47\n        divisors += 53\n        divisors\
    \ += 59\n        divisors += 61\n        divisors += 67\n        divisors += 71\n\
    \        divisors += 73\n        divisors += 79\n        divisors += 83\n    \
    \    divisors += 89\n        divisors += 97\n        divisors += 101\n       \
    \ divisors += 103\n        divisors += 107\n        divisors += 109\n        divisors\
    \ += 113\n        divisors += 127\n        divisors += 131\n        divisors +=\
    \ 137\n        divisors += 139\n        divisors += 147\n        divisors += 151\n\
    \        divisors += 157\n        divisors += 163\n        divisors += 167\n \
    \       divisors += 173\n        divisors += 179\n        divisors += 181\n  \
    \      divisors += 191\n        divisors += 197\n        divisors += 199\n   \
    \     divisors += 211\n        divisors += 223\n        divisors += 227\n    \
    \    divisors += 229\n        divisors += 233\n        divisors += 239\n     \
    \   divisors += 241\n        divisors += 243\n        divisors += 247\n      \
    \  divisors += 251\n        divisors += 257\n        divisors += 263\n       \
    \ divisors += 269\n        divisors += 271\n        divisors += 277\n        divisors\
    \ += 281\n        divisors += 283\n        divisors += 293\n        divisors +=\
    \ 307\n        divisors += 311\n        divisors += 313\n        divisors += 317\n\
    \        divisors += 323\n        divisors += 329\n        divisors += 331\n \
    \       divisors += 337\n        divisors += 343\n        divisors += 347\n  \
    \      divisors += 353\n        divisors += 359\n        divisors += 363\n   \
    \     divisors += 369\n        divisors += 373\n        divisors += 379\n    \
    \    divisors += 383\n        divisors += 389\n        divisors += 397\n     \
    \   divisors += 401\n        divisors += 407\n        divisors += 413\n      \
    \  divisors += 417\n        divisors += 423\n        divisors += 429\n       \
    \ divisors += 431\n        divisors += 437\n        divisors += 443\n        divisors\
    \ += 449\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3w27bo4.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for(i <- 1 to n){\n            val d = i\n         \
    \   while(d > 0){\n                if(d % 2 == 0){\n                    divisors\
    \ += d\n                    d /= 2\n                }\n                else{\n\
    \                    d /= 2\n                }\n            }\n        }\n   \
    \     divisors.toList.sortWith(_ < _).last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8iyytgz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpw8iyytgz.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw8iyytgz.scala:15:22\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpw8iyytgz.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorIndex\
    \ = 0\n        for (i <- 1 to n) {\n            if (n % i == 0) {\n          \
    \      if (maxDivisor < i) {\n                    maxDivisor = i\n           \
    \         maxDivisorIndex = i\n                }\n            }\n        }\n \
    \       maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn27lbkdi.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDividend = 0\n\
    \        var maxDividendDivisor = 0\n        var maxDividendDivisor2 = 0\n   \
    \     var maxDividendDivisor3 = 0\n        var maxDividendDivisor4 = 0\n     \
    \   var maxDividendDivisor5 = 0\n        var maxDividendDivisor6 = 0\n       \
    \ var maxDividendDivisor7 = 0\n        var maxDividendDivisor8 = 0\n        var\
    \ maxDividendDivisor9 = 0\n        var maxDividendDivisor10 = 0\n        var maxDividendDivisor11\
    \ = 0\n        var maxDividendDivisor12 = 0\n        var maxDividendDivisor13\
    \ = 0\n        var maxDividendDivisor14 = 0\n        var maxDividendDivisor15\
    \ = 0\n        var maxDividendDivisor16 = 0\n        var maxDividendDivisor17\
    \ = 0\n        var maxDividendDivisor18 = 0\n        var maxDividendDivisor19\
    \ = 0\n        var maxDividendDivisor20 = 0\n        var maxDividendDivisor21\
    \ = 0\n        var maxDividendDivisor22 = 0\n        var maxDividendDivisor23\
    \ = 0\n        var maxDividendDivisor24 = 0\n        var maxDividendDivisor25\
    \ = 0\n        var maxDividendDivisor26 = 0\n        var maxDividendDivisor27\
    \ = 0\n        var maxDividendDivisor28 = 0\n        var maxDividendDivisor29\
    \ = 0\n        var maxDividendDivisor30 = 0\n        var maxDividendDivisor31\
    \ = 0\n        var maxDividendDivisor32 = 0\n        var maxDividendDivisor33\
    \ = 0\n        var maxDividendDivisor34 = 0\n        var maxDividendDivisor35\
    \ = 0\n        var maxDividendDivisor36 = 0\n        var maxDividendDivisor37\
    \ = 0\n        var maxDividendDivisor38 = 0\n        var maxDividendDivisor39\
    \ = 0\n        var maxDividendDivisor40 = 0\n        var maxDividendDivisor41\
    \ = 0\n        var maxDividendDivisor42 = 0\n        var maxDividendDivisor43\
    \ = 0\n        var maxDividendDivisor44 = 0\n        var maxDividendDivisor45\
    \ = 0\n        var maxDividendDivisor46 = 0\n        var maxDividendDivisor47\
    \ = 0\n        var maxDividendDivisor48 = 0\n        var maxDividendDivisor49\
    \ = 0\n        var maxDividendDivisor50 = 0\n        var maxDividendDivisor51\
    \ = 0\n        var maxDividendDivisor52 = 0\n        var maxDividendDivisor53\
    \ = 0\n        var maxDividendDivisor54 = 0\n        var maxDividendDivisor55\
    \ = 0\n        var maxDividendDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpa7wsxg73.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpa7wsxg73.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toInt\n        val divisors =\
    \ mutable.ArrayBuffer.empty[Long]\n        for (d <- 2 to maxDivisor) {\n    \
    \        if (n % d == 0) {\n                divisors += d\n            }\n   \
    \     }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6yoimgm_.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa0o055pe.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 323\n        divisors += 329\n   \
    \     divisors += 331\n        divisors += 337\n        divisors += 341\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 423\n        divisors += 429\n        divisors += 433\n\
    \        divisors += 439\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxov19doz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792470
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = BigInt(n)\n        val divisors\
    \ = mutable.Set[Long]()\n        val divisorsSet = mutable.Set[Long]()\n     \
    \   val divisorsSet2 = mutable.Set[Long]()\n        val divisorsSet3 = mutable.Set[Long]()\n\
    \        val divisorsSet4 = mutable.Set[Long]()\n        val divisorsSet5 = mutable.Set[Long]()\n\
    \        val divisorsSet6 = mutable.Set[Long]()\n        val divisorsSet7 = mutable.Set[Long]()\n\
    \        val divisorsSet8 = mutable.Set[Long]()\n        val divisorsSet9 = mutable.Set[Long]()\n\
    \        val divisorsSet10 = mutable.Set[Long]()\n        val divisorsSet11 =\
    \ mutable.Set[Long]()\n        val divisorsSet12 = mutable.Set[Long]()\n     \
    \   val divisorsSet13 = mutable.Set[Long]()\n        val divisorsSet14 = mutable.Set[Long]()\n\
    \        val divisorsSet15 = mutable.Set[Long]()\n        val divisorsSet16 =\
    \ mutable.Set[Long]()\n        val divisorsSet17 = mutable.Set[Long]()\n     \
    \   val divisorsSet18 = mutable.Set[Long]()\n        val divisorsSet19 = mutable.Set[Long]()\n\
    \        val divisorsSet20 = mutable.Set[Long]()\n        val divisorsSet21 =\
    \ mutable.Set[Long]()\n        val divisorsSet22 = mutable.Set[Long]()\n     \
    \   val divisorsSet23 = mutable.Set[Long]()\n        val divisorsSet24 = mutable.Set[Long]()\n\
    \        val divisorsSet25 = mutable.Set[Long]()\n        val divisorsSet26 =\
    \ mutable.Set[Long]()\n        val divisorsSet27 = mutable.Set[Long]()\n     \
    \   val divisorsSet28 = mutable.Set[Long]()\n        val divisorsSet29 = mutable.Set[Long]()\n\
    \        val divisorsSet30 = mutable.Set[Long]()\n        val divisorsSet31 =\
    \ mutable.Set[Long]()\n        val divisorsSet32 = mutable.Set[Long]()\n     \
    \   val divisorsSet33 = mutable.Set[Long]()\n        val divisorsSet34 = \n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpdbzbboju.scala:43:27 ---------------------------\e\
    [0m\e[0m\n\e[31m43 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet34\e[0m = \n\e\
    [31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m        \
    \                   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbzbboju.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdbzbboju.scala:10:26 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbzbboju.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet2\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbzbboju.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mdivisorsSet3\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbzbboju.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mva"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toLong / 2\n        val divisors\
    \ = mutable.Set[Long]()\n        divisors += 2\n        divisors += 3\n      \
    \  divisors += 5\n        divisors += 7\n        divisors += 11\n        divisors\
    \ += 13\n        divisors += 17\n        divisors += 19\n        divisors += 23\n\
    \        divisors += 29\n        divisors += 31\n        divisors += 37\n    \
    \    divisors += 41\n        divisors += 43\n        divisors += 47\n        divisors\
    \ += 53\n        divisors += 59\n        divisors += 61\n        divisors += 67\n\
    \        divisors += 71\n        divisors += 73\n        divisors += 79\n    \
    \    divisors += 83\n        divisors += 89\n        divisors += 97\n        divisors\
    \ += 101\n        divisors += 103\n        divisors += 107\n        divisors +=\
    \ 109\n        divisors += 113\n        divisors += 127\n        divisors += 131\n\
    \        divisors += 137\n        divisors += 139\n        divisors += 147\n \
    \       divisors += 151\n        divisors += 157\n        divisors += 163\n  \
    \      divisors += 167\n        divisors += 173\n        divisors += 179\n   \
    \     divisors += 181\n        divisors += 191\n        divisors += 197\n    \
    \    divisors += 199\n        divisors += 211\n        divisors += 223\n     \
    \   divisors += 227\n        divisors += 229\n        divisors += 233\n      \
    \  divisors += 239\n        divisors += 241\n        divisors += 247\n       \
    \ divisors += 251\n        divisors += 257\n        divisors += 263\n        divisors\
    \ += 269\n        divisors += 271\n        divisors += 277\n        divisors +=\
    \ 281\n        divisors += 283\n        divisors += 293\n        divisors += 307\n\
    \        divisors += 311\n        divisors += 313\n        divisors += 317\n \
    \       divisors += 323\n        divisors += 329\n        divisors += 331\n  \
    \      divisors += 337\n        divisors += 343\n        divisors += 349\n   \
    \     divisors += 353\n        divisors += 359\n        divisors += 363\n    \
    \    divisors += 369\n        divisors += 373\n        divisors += 379\n     \
    \   divisors += 383\n        divisors += 389\n        divisors += 397\n      \
    \  divisors += 401\n        divisors += 407\n        divisors += 411\n       \
    \ divisors += 413\n        divisors += 417\n        divisors += 423\n        divisors\
    \ += 429\n        divisors += 433\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp89jnwj9d.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 205l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 215l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo_r_ve7v.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo_r_ve7v.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n by 2)\n            if (n % i == 0)\n               \
    \ divisors += i\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfuuq0qj1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfuuq0qj1.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 247\n        divisors += 251\n        divisors += 257\n \
    \       divisors += 263\n        divisors += 269\n        divisors += 271\n  \
    \      divisors += 277\n        divisors += 281\n        divisors += 283\n   \
    \     divisors += 293\n        divisors += 307\n        divisors += 311\n    \
    \    divisors += 313\n        divisors += 317\n        divisors += 323\n     \
    \   divisors += 329\n        divisors += 331\n        divisors += 337\n      \
    \  divisors += 341\n        divisors += 347\n        divisors += 353\n       \
    \ divisors += 359\n        divisors += 363\n        divisors += 369\n        divisors\
    \ += 373\n        divisors += 379\n        divisors += 383\n        divisors +=\
    \ 389\n        divisors += 397\n        divisors += 401\n        divisors += 407\n\
    \        divisors += 411\n        divisors += 413\n        divisors += 417\n \
    \       divisors += 419\n        divisors += 421\n        divisors += 423\n  \
    \      divisors += 427\n        divisors += 429\n        divisors += 431\n   \
    \     divisors += 433\n        divisors += 439\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwjcnsbjy.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792471
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val maxDivisor = n.toInt\n        val divisors =\
    \ mutable.Set[Long]()\n        for(i <- 1 to maxDivisor) {\n            val remainder\
    \ = n % i\n            if(remainder == 0) {\n                divisors += i\n \
    \           }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsptkxhdq.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorNum =\
    \ 0\n        var maxDivisorNumNum = 0\n        var maxDivisorNumNumNum = 0\n \
    \       var maxDivisorNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph82n4nz3.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmaxDivisorNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDivisorNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmaxDivisorNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDivisorNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNu"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 4l\n        divisors += 8l\n        divisors += 16l\n\
    \        divisors += 32l\n        divisors += 64l\n        divisors += 128l\n\
    \        divisors += 256l\n        divisors += 512l\n        divisors += 1024l\n\
    \        divisors += 2048l\n        divisors += 4096l\n        divisors += 8192l\n\
    \        divisors += 16384l\n        divisors += 32768l\n        divisors += 65536l\n\
    \        divisors += 131072l\n        divisors += 262144l\n        divisors +=\
    \ 524288l\n        divisors += 1048576l\n        divisors += 2097152l\n      \
    \  divisors += 4194304l\n        divisors += 8388608l\n        divisors += 16777216l\n\
    \        divisors += 33554432l\n        divisors += 67108864l\n        divisors\
    \ += 134217728l\n        divisors += 268435456l\n        divisors += 536870912l\n\
    \        divisors += 1073741824l\n        divisors += 2147483648l\n        divisors\
    \ += 4294967296l\n        divisors += 8589934592l\n        divisors += 17179869184l\n\
    \        divisors += 34359738368l\n        divisors += 68719476736l\n        divisors\
    \ += 137438953472l\n        divisors += 274877906944l\n        divisors += 549755813888l\n\
    \        divisors += 1099511627776l\n        divisors += 2199023255552l\n    \
    \    divisors += 4398046511104l\n        divisors += 8796093022208l\n        divisors\
    \ += 17592186044416l\n        divisors += 35184372088832l\n        divisors +=\
    \ 70368744177664l\n        divisors += 140737488355328l\n        divisors += 281474976710656l\n\
    \        divisors += 562949953421312l\n        divisors += 1125899906842624l\n\
    \        divisors += 2251799813685248l\n        divisors += 4503599627370496l\n\
    \        divisors += 9007199254740992l\n        divisors += 18014398509481984l\n\
    \        divisors += 36028797018963968l\n        divisors += 720\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_q0m5zux.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcja7l5mx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n) divisors += i\n        divisors.toList.sortWith(_ < _).last\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8wgj11aw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8wgj11aw.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 323\n        divisors += 329\n      \
    \  divisors += 331\n        divisors += 337\n        divisors += 341\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 411\n        divisors += 413\n        divisors += 417\n  \
    \      divisors += 423\n        divisors += 429\n        divisors += 433\n   \
    \     divisors += 439\n        divisors += 443\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjufgdyv8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 205l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 215l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 221l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 235l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 245l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 255l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 261l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpyimxnxhj.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyimxnxhj.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792472
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors -= d\n            divisors.add(d)\n        }\n        divisors.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpmr6ui6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(7)\n        divisors.add(11)\n        divisors.add(13)\n\
    \        divisors.add(17)\n        divisors.add(19)\n        divisors.add(23)\n\
    \        divisors.add(29)\n        divisors.add(31)\n        divisors.add(37)\n\
    \        divisors.add(43)\n        divisors.add(49)\n        divisors.add(53)\n\
    \        divisors.add(59)\n        divisors.add(61)\n        divisors.add(67)\n\
    \        divisors.add(73)\n        divisors.add(79)\n        divisors.add(83)\n\
    \        divisors.add(89)\n        divisors.add(97)\n        divisors.add(103)\n\
    \        divisors.add(109)\n        divisors.add(113)\n        divisors.add(127)\n\
    \        divisors.add(131)\n        divisors.add(137)\n        divisors.add(143)\n\
    \        divisors.add(149)\n        divisors.add(157)\n        divisors.add(163)\n\
    \        divisors.add(167)\n        divisors.add(173)\n        divisors.add(179)\n\
    \        divisors.add(181)\n        divisors.add(191)\n        divisors.add(193)\n\
    \        divisors.add(197)\n        divisors.add(199)\n        divisors.add(211)\n\
    \        divisors.add(223)\n        divisors.add(227)\n        divisors.add(229)\n\
    \        divisors.add(233)\n        divisors.add(239)\n        divisors.add(241)\n\
    \        divisors.add(243)\n        divisors.add(247)\n        divisors.add(251)\n\
    \        divisors.add(253)\n        divisors.add(257)\n        divisors.add(263)\n\
    \        divisors.add(269)\n        divisors.add(271)\n        divisors.add(277)\n\
    \        divisors.add(281)\n        divisors.add(283)\n        divisors.add(293)\n\
    \        divisors.add(307)\n        divisors.add(311)\n        divisors.add(313)\n\
    \        divisors.add(317)\n        divisors.add(331)\n        divisors.add(333)\n\
    \        divisors.add(337)\n        divisors.add(347)\n        divisors.add(349)\n\
    \        divisors.add(353)\n        divisors.add(359)\n        divisors.add(361)\n\
    \        divisors.add(363)\n        divisors.add(369)\n        divisors.add(373)\n\
    \        divisors.add(379)\n        divisors.add(383)\n        divisors.add(389)\n\
    \        divisors.add(397)\n        divisors.add(401)\n        divisors.add(409)\n\
    \        divisors.add(419)\n        divisors.add(421)\n        divisors.add(\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph5u6unow.scala:93:21 ---------------------------\e\
    [0m\e[0m\n\e[31m93 |\e[0m        divisors.add(\n\e[31m\e[31m   |\e[0m        \
    \             ^\e[0m\n\e[31m   |\e[0m                     expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmph5u6unow.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for(i <- 1 to n){\n            val div = i / 2\n   \
    \         if(divisors.contains(div)){\n                maxDivisor = div\n    \
    \        }\n            divisors += div\n        }\n        maxDivisor\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8yo71akt.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8yo71akt.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            if(n % d == 0) {\n                divisors.remove(d)\n          \
    \  } else {\n                divisors.add(d)\n            }\n        }\n     \
    \   divisors.last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplhajd8no.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n){\n            if((n % i) == 0){\n                divisors += i\n\
    \            }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph3vddrel.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmph3vddrel.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ largestDivisor = mutable.Set[Long]()\n        divisors.clear()\n        largestDivisor.clear()\n\
    \        var divisor = 0\n        var largestDivisor = 0\n        for(i <- 0 until\
    \ n){\n            divisor = i\n            divisors += divisor\n            largestDivisor\
    \ = divisor\n            while(divisor > 0){\n                if(divisors.contains(divisor)){\n\
    \                    divisors.remove(divisor)\n                    largestDivisor\
    \ = divisor\n                }\n                divisor = divisor / 2\n      \
    \      }\n        }\n        largestDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8d8lgrxu.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mlargestDivisor\e[0m = \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mlargestDivisor is already defined as \e[33mvalue\e[0m \e[35mlargestDivisor\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp8d8lgrxu.scala:8:23 -------------------------\e[0m\e[0m\n\
    \e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8d8lgrxu.scala:9:29 -------------------------\e[0m\e\
    [0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargestDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                             ^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                             Not found: mutable\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8d8lgrxu.scala:14:25 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp8d8lgrxu.scala:17:27\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            largestDivisor\
    \ = divisor\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            Reassignment to val largestDivisor\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmp8d8lgrxu.scala:21:35 -----------------------------\e"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 183l\n\
    \        divisors += 187l\n        divisors += 189l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 231l\n\
    \        divisors += 233l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpb5tynjq3.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb5tynjq3.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for(i <- 1 to n){\n            val currentDivisor\
    \ = i\n            while(currentDivisor > maxDivisor){\n                maxDivisor\
    \ += currentDivisor\n                divisors += currentDivisor\n            }\n\
    \        }\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6ygdzwe3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6ygdzwe3.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 413\n        divisors += 417\n        divisors += 423\n  \
    \      divisors += 429\n        divisors += 433\n        divisors += 439\n   \
    \     divisors += 443\n        divisors += 449\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2vgye4g9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        for (i <- 0 until n)\
    \ {\n            if (n % i == 0) {\n                divisors += i\n          \
    \      if (divisors.size > maxDivisor.length) {\n                    maxDivisor\
    \ = divisors\n                    maxDivisorIndex = divisors.indexWhere(_ == maxDivisor)\n\
    \                }\n            }\n        }\n        maxDivisor(maxDivisorIndex)\
    \ match {\n            case Some(maxDivisor) => maxDivisor\n            case None\
    \ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1grn367x.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1grn367x.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1grn367x.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1grn367x.scala:10:30 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1grn367x.scala:12:26 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052"
  stdout: ''
  timestamp: 1659792476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors -= d\n            if(d % 2 == 0) {\n                return\
    \ d\n            }\n        }\n        return 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1co331nx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792474
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxh_px17.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpaxh_px17.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 343l\n        divisors += 349l\n        divisors += 351l\n\
    \        divisors += 359l\n        divisors += 363l\n        divisors += 369l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpz6xb9v7g.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz6xb9v7g.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 289l\n\
    \        divisors += 293l\n        divisors += 297l\n        divisors += 301l\n\
    \        divisors += 303l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 321l\n\
    \        divisors += 323l\n        divisors += 327l\n        divisors += 331l\n\
    \        divisors += 333l\n        divisors += 337l\n        divisors += 341l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpmjwtl_6b.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmjwtl_6b.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (d <- 2 to n) if (n % d == 0) {\n          \
    \  divisors += d\n            if (divisors.size > maxDivisor) maxDivisor = divisors.last\n\
    \        }\n        maxDivisor\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi2pb1eam.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi2pb1eam.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e\
    [0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e\
    [0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            if((n % i) == 0){\n                divisors += i\n\
    \            }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_fwe60eb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp_fwe60eb.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 2 to n) divisors += i\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppeah3fqn.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmppeah3fqn.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var divisor = 0\n      \
    \  var divisorFactor = 0\n        var divisorFactorIndex = 0\n        var divisorFactorIndex2\
    \ = 0\n        var divisorFactorIndex3 = 0\n        var divisorFactorIndex4 =\
    \ 0\n        var divisorFactorIndex5 = 0\n        var divisorFactorIndex6 = 0\n\
    \        var divisorFactorIndex7 = 0\n        var divisorFactorIndex8 = 0\n  \
    \      var divisorFactorIndex9 = 0\n        var divisorFactorIndex10 = 0\n   \
    \     var divisorFactorIndex11 = 0\n        var divisorFactorIndex12 = 0\n   \
    \     var divisorFactorIndex13 = 0\n        var divisorFactorIndex14 = 0\n   \
    \     var divisorFactorIndex15 = 0\n        var divisorFactorIndex16 = 0\n   \
    \     var divisorFactorIndex17 = 0\n        var divisorFactorIndex18 = 0\n   \
    \     var divisorFactorIndex19 = 0\n        var divisorFactorIndex20 = 0\n   \
    \     var divisorFactorIndex21 = 0\n        var divisorFactorIndex22 = 0\n   \
    \     var divisorFactorIndex23 = 0\n        var divisorFactorIndex24 = 0\n   \
    \     var divisorFactorIndex25 = 0\n        var divisorFactorIndex26 = 0\n   \
    \     var divisorFactorIndex27 = 0\n        var divisorFactorIndex28 = 0\n   \
    \     var divisorFactorIndex29 = 0\n        var divisorFactorIndex30 = 0\n   \
    \     var divisorFactorIndex31 = 0\n        var divisorFactorIndex32 = 0\n   \
    \     var divisorFactorIndex33 = 0\n        var divisorFactorIndex34 = 0\n   \
    \     var divisorFactorIndex35 = 0\n        var divisorFactorIndex36 = 0\n   \
    \     var divisorFactorIndex37 = 0\n        var divisorFactorIndex38 = 0\n   \
    \     var divisorFactorIndex39 = 0\n        var divisorFactorIndex40 = 0\n   \
    \     var divisorFactorIndex41 = 0\n        var divisorFactorIndex42 = 0\n   \
    \     var divisorFactorIndex43 = 0\n        var divisorFactorIndex44 = 0\n   \
    \     var divisorFactorIndex45 = 0\n        var divisorFactorIndex46 = 0\n   \
    \     var divisorFactorIndex47 = 0\n        var divisorFactorIndex48 = 0\n   \
    \     var divisorFactorIndex49 = 0\n        var divisorFactorIndex50 = 0\n   \
    \     var divisorFactorIndex51 = 0\n        var divisorFactorIndex52 = 0\n   \
    \     var divisorFactorIndex53 = 0\n        var divisorFactorIndex54 = 0\n   \
    \     var divisorFactorIndex55 = 0\n        var divisorFactorIndex56 = 0\n   \
    \     var divisorFactorIndex57 = 0\n        var divisorFactorIndex58 = 0\n   \
    \     var divisorFactorIndex59 = 0\n        var divisorFactorIndex60 = 0\n   \
    \     var divisorFactorIndex61 = 0\n        var divisorFactorIndex62 = 0\n   \
    \     var divisorFactorIndex63 = 0\n        var divisorFactorIndex64 = 0\n   \
    \     var divisorFactorIndex65 = 0\n        var divisorFactorIndex66 = 0\n   \
    \     var divisorFactorIndex67 = 0\n        var divisorFactorIndex68 = 0\n   \
    \     var divisorFactorIndex69 = 0\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6i8g0q42.scala:83:5\
    \ ---------------------\e[0m\e[0m\n\e[31m83 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(d % 2 == 0) return d\n        }\n       \
    \ return -1\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpix7wzmni.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792476
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largestDivisor = 0l\n        for (d <- 2 to n) if (n % d == 0) divisors\
    \ += d\n        for (d <- divisors) {\n            if (d > largestDivisor) largestDivisor\
    \ = d\n        }\n        largestDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp72yr4vvy.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp72yr4vvy.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m   |\e[0m             \
    \          ^\e[0m\n\e[31m   |\e[0m                       Found:    (n : Long)\n\
    \e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (i <- 2 to n) divisors += i\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwi185uqi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwi185uqi.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 261l\n        divisors += 263l\n        divisors += 265l\n\
    \        divisors += 267l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp33apkh5y.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 253\n        divisors += 257\n        divisors += 263\n  \
    \      divisors += 269\n        divisors += 271\n        divisors += 277\n   \
    \     divisors += 281\n        divisors += 283\n        divisors += 293\n    \
    \    divisors += 307\n        divisors += 311\n        divisors += 313\n     \
    \   divisors += 317\n        divisors += 319\n        divisors += 323\n      \
    \  divisors += 327\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 341\n        divisors += 343\n        divisors += 347\n        divisors\
    \ += 353\n        divisors += 359\n        divisors += 363\n        divisors +=\
    \ 369\n        divisors += 373\n        divisors += 379\n        divisors += 383\n\
    \        divisors += 389\n        divisors += 397\n        divisors += 401\n \
    \       divisors += 407\n        divisors += 411\n        divisors += 413\n  \
    \      divisors += 417\n        divisors += 419\n        divisors += 423\n   \
    \     divisors += 429\n        divisors += 433\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiiuco2o6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var max = 0\n        var maxDivisor = 0\n      \
    \  for (i <- 1 to n) {\n            if (n % i == 0) {\n                if (maxDivisor\
    \ < i) {\n                    maxDivisor = i\n                }\n            \
    \    if (max < i) {\n                    max = i\n                }\n        \
    \    }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzteqpb93.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      if(d % 2 == 0) {\n                divisors.remove(d)\n            } else\
    \ {\n                divisors.add(d)\n            }\n        }\n        divisors.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplpxt9g6u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 4l\n        divisors += 6l\n        divisors\
    \ += 8l\n        divisors += 10l\n        divisors += 12l\n        divisors +=\
    \ 14l\n        divisors += 16l\n        divisors += 18l\n        divisors += 20l\n\
    \        divisors += 22l\n        divisors += 24l\n        divisors += 26l\n \
    \       divisors += 28l\n        divisors += 30l\n        divisors += 32l\n  \
    \      divisors += 34l\n        divisors += 36l\n        divisors += 38l\n   \
    \     divisors += 40l\n        divisors += 42l\n        divisors += 44l\n    \
    \    divisors += 46l\n        divisors += 48l\n        divisors += 50l\n     \
    \   divisors += 52l\n        divisors += 54l\n        divisors += 56l\n      \
    \  divisors += 58l\n        divisors += 60l\n        divisors += 62l\n       \
    \ divisors += 64l\n        divisors += 66l\n        divisors += 68l\n        divisors\
    \ += 70l\n        divisors += 72l\n        divisors += 74l\n        divisors +=\
    \ 76l\n        divisors += 78l\n        divisors += 80l\n        divisors += 82l\n\
    \        divisors += 84l\n        divisors += 86l\n        divisors += 88l\n \
    \       divisors += 90l\n        divisors += 92l\n        divisors += 94l\n  \
    \      divisors += 96l\n        divisors += 98l\n        divisors += 100l\n  \
    \      divisors += 102l\n        divisors += 104l\n        divisors += 106l\n\
    \        divisors += 108l\n        divisors += 110l\n        divisors += 112l\n\
    \        divisors += 114l\n        divisors += 116l\n        divisors += 118l\n\
    \        divisors += 120l\n        divisors += 122l\n        divisors += 124l\n\
    \        divisors += 126l\n        divisors += 128l\n        divisors += 130l\n\
    \        divisors += 132l\n        divisors += 134l\n        divisors += 136l\n\
    \        divisors += 138l\n        divisors += 140l\n        divisors += 142l\n\
    \        divisors += 144l\n        divisors += 146l\n        divisors += 148l\n\
    \        divisors += 150l\n        divisors += 152l\n        divisors += 154l\n\
    \        divisors += 156l\n        divisors += 158l\n        divisors += 160l\n\
    \        divisors += 162l\n        divisors += 164l\n        divisors += 166\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpimmuzd_g.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 317l\n\
    \        divisors += 323l\n        divisors += 329l\n        divisors += 331l\n\
    \        divisors += 337l\n        divisors += 343l\n        divisors += 349l\n\
    \        divisors += 351l\n        divisors += 359l\n        divisors += 363l\n\
    \        divisors += 369l\n        divisors += 371l\n        divisors += 377l\n\
    \        divisors += 381l\n        divisors += 383l\n        divisors += 389l\n\
    \        divisors += 39\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeiarzaed.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngf8_7v9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 263l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 293l\n        divisors += 307l\n\
    \        divisors += 311l\n        divisors += 313l\n        divisors += 317l\n\
    \        divisors += 319l\n        divisors += 323l\n        divisors += 327l\n\
    \        divisors += 331l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9urprtdh.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792477
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtxrbgv4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbtxrbgv4.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(4l)\n\
    \        divisors.add(5l)\n        divisors.add(6l)\n        divisors.add(7l)\n\
    \        divisors.add(8l)\n        divisors.add(9l)\n        divisors.add(10l)\n\
    \        divisors.add(11l)\n        divisors.add(12l)\n        divisors.add(13l)\n\
    \        divisors.add(14l)\n        divisors.add(15l)\n        divisors.add(16l)\n\
    \        divisors.add(17l)\n        divisors.add(18l)\n        divisors.add(19l)\n\
    \        divisors.add(20l)\n        divisors.add(21l)\n        divisors.add(22l)\n\
    \        divisors.add(23l)\n        divisors.add(24l)\n        divisors.add(25l)\n\
    \        divisors.add(26l)\n        divisors.add(27l)\n        divisors.add(28l)\n\
    \        divisors.add(29l)\n        divisors.add(30l)\n        divisors.add(31l)\n\
    \        divisors.add(32l)\n        divisors.add(33l)\n        divisors.add(34l)\n\
    \        divisors.add(35l)\n        divisors.add(36l)\n        divisors.add(37l)\n\
    \        divisors.add(38l)\n        divisors.add(39l)\n        divisors.add(40l)\n\
    \        divisors.add(41l)\n        divisors.add(42l)\n        divisors.add(43l)\n\
    \        divisors.add(44l)\n        divisors.add(45l)\n        divisors.add(46l)\n\
    \        divisors.add(47l)\n        divisors.add(48l)\n        divisors.add(49l)\n\
    \        divisors.add(50l)\n        divisors.add(51l)\n        divisors.add(52l)\n\
    \        divisors.add(53l)\n        divisors.add(54l)\n        divisors.add(55l)\n\
    \        divisors.add(56l)\n        divisors.add(57l)\n        divisors.add(58l)\n\
    \        divisors.add(59l)\n        divisors.add(60l)\n        divisors.add(61l)\n\
    \        divisors.add(62l)\n        divisors.add(63l)\n        divisors.add(64l)\n\
    \        divisors.add(65l)\n        divisors.add(66l)\n        divisors.add(67l)\n\
    \        divisors.add(68l)\n        divisors.add(69l)\n        divisors.add(70l)\n\
    \        divisors.add(71l)\n        divisors.add(72l)\n        divisors.add(73l)\n\
    \        divisors.add(74l)\n        divisors.add(75l)\n        divisors.add(76l)\n\
    \        divisors.add(77l)\n        divisors.add(78l)\n        divisors.add(79l)\n\
    \        divisors.add(80l)\n        divisors.add(81l)\n        divisors.add(82l)\n\
    \        divisors.add(83l)\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo4q5m7vf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpo4q5m7vf.scala:92:8 -------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcja7l5mx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(103l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(169l)\n\
    \        divisors.add(173l)\n        divisors.add(177l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(251l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(323l)\n        divisors.add(327l)\n\
    \        divisors.add(331l)\n        divisors.add(337l)\n        divisors.add(347l)\n\
    \        divisors.add(349l)\n        divisors.add(353l)\n        divisors.add(359l)\n\
    \        divisors.add(367l)\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi_r3yihc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        val maxDivisorIndex = mutable.Set[Int]()\n        divisors.update(n)\n\
    \        divisors.foreach { d =>\n            if (n % d == 0) {\n            \
    \    maxDivisor.add(d)\n                maxDivisorIndex.add(divisors.indexOf(d))\n\
    \            }\n        }\n        maxDivisor.foreach { d =>\n            if (maxDivisorIndex.contains(divisors.indexOf(d)))\
    \ {\n                maxDivisorIndex.remove(divisors.indexOf(d))\n           \
    \ }\n        }\n        maxDivisorIndex.foreach { i =>\n            if (maxDivisorIndex.contains(divisors.indexOf(n)))\
    \ {\n                maxDivisorIndex.remove(divisors.indexOf(n))\n           \
    \ }\n        }\n        maxDivisorIndex.head\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp183z6omj.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmaxDivisorIndex is already defined as \e[33mvalue\e[0m \e\
    [35mmaxDivisorIndex\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp183z6omj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp183z6omj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp183z6omj.scala:10:30 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 313l\n\
    \        divisors += 317l\n        divisors += 321l\n        divisors += 323l\n\
    \        divisors += 327l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisors += 363l\n        divisors += 369l\n        divisors += 373l\n\
    \        divisors += \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuqszbjxd.scala:88:19 ---------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuqszbjxd.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(n % d == 0) {\n                return d\n\
    \            }\n        }\n        -1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy69vh_fr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(7l)\n        divisors.add(11l)\n  \
    \      divisors.add(13l)\n        divisors.add(17l)\n        divisors.add(19l)\n\
    \        divisors.add(23l)\n        divisors.add(29l)\n        divisors.add(31l)\n\
    \        divisors.add(37l)\n        divisors.add(41l)\n        divisors.add(43l)\n\
    \        divisors.add(47l)\n        divisors.add(53l)\n        divisors.add(59l)\n\
    \        divisors.add(61l)\n        divisors.add(67l)\n        divisors.add(71l)\n\
    \        divisors.add(73l)\n        divisors.add(79l)\n        divisors.add(83l)\n\
    \        divisors.add(89l)\n        divisors.add(97l)\n        divisors.add(101l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(147l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(163l)\n        divisors.add(167l)\n\
    \        divisors.add(173l)\n        divisors.add(179l)\n        divisors.add(181l)\n\
    \        divisors.add(191l)\n        divisors.add(197l)\n        divisors.add(199l)\n\
    \        divisors.add(211l)\n        divisors.add(223l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(247l)\n        divisors.add(251l)\n        divisors.add(257l)\n\
    \        divisors.add(263l)\n        divisors.add(269l)\n        divisors.add(271l)\n\
    \        divisors.add(277l)\n        divisors.add(283l)\n        divisors.add(289l)\n\
    \        divisors.add(291l)\n        divisors.add(297l)\n        divisors.add(303l)\n\
    \        divisors.add(309l)\n        divisors.add(311l)\n        divisors.add(317l)\n\
    \        divisors.add(323l)\n        divisors.add(329l)\n        divisors.add(331l)\n\
    \        divisors.add(337l)\n        divisors.add(343l)\n        divisors.add(349l)\n\
    \        divisors.add(353l)\n        divisors.add(359l)\n        divisors.add(367l)\n\
    \        divisors.add(373l)\n        divisors.add(379l)\n        divisors.add(383l)\n\
    \        divisors.add(389l)\n        divisors.add(397l)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnoftelzx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for(i <- 1 to n){\n            val divisor = i\n   \
    \         while(divisor > 0){\n                if(divisors.contains(divisor)){\n\
    \                    divisor = divisor - 1\n                }else{\n         \
    \           divisors += divisor\n                    maxDivisor = divisor\n  \
    \              }\n            }\n        }\n        maxDivisor\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpomn2o1wu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpomn2o1wu.scala:10:22 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpomn2o1wu.scala:14:28 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                    divisor = divisor - \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                    Reassignment to val divisor\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors\
    \ += d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4kpef8o7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp4kpef8o7.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 297\n        divisors += 301\n     \
    \   divisors += 303\n        divisors += 307\n        divisors += 311\n      \
    \  divisors += 313\n        divisors += 317\n        divisors += 323\n       \
    \ divisors += 329\n        divisors += 331\n        divisors += 337\n        divisors\
    \ += 341\n        divisors += 343\n        divisors += 347\n        divisors +=\
    \ 353\n        divisors += 359\n        divisors += 363\n        divisors += 369\n\
    \        divisors += 373\n        divisors += 379\n        divisors += 383\n \
    \       divisors += 389\n        divisors += 393\n        divisors += 397\n  \
    \      divisors += 401\n        divisors += 403\n        divisors += 407\n   \
    \     divisors += 411\n        divisors += 413\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdsgl0rhr.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors += 2\n        divisors +=\
    \ 3\n        divisors += 5\n        divisors += 7\n        divisors += 11\n  \
    \      divisors += 13\n        divisors += 17\n        divisors += 19\n      \
    \  divisors += 23\n        divisors += 29\n        divisors += 31\n        divisors\
    \ += 37\n        divisors += 41\n        divisors += 43\n        divisors += 47\n\
    \        divisors += 53\n        divisors += 59\n        divisors += 61\n    \
    \    divisors += 67\n        divisors += 71\n        divisors += 73\n        divisors\
    \ += 79\n        divisors += 83\n        divisors += 89\n        divisors += 97\n\
    \        divisors += 101\n        divisors += 103\n        divisors += 107\n \
    \       divisors += 109\n        divisors += 113\n        divisors += 127\n  \
    \      divisors += 131\n        divisors += 137\n        divisors += 139\n   \
    \     divisors += 147\n        divisors += 151\n        divisors += 157\n    \
    \    divisors += 163\n        divisors += 167\n        divisors += 173\n     \
    \   divisors += 179\n        divisors += 181\n        divisors += 191\n      \
    \  divisors += 193\n        divisors += 197\n        divisors += 199\n       \
    \ divisors += 211\n        divisors += 223\n        divisors += 227\n        divisors\
    \ += 229\n        divisors += 233\n        divisors += 239\n        divisors +=\
    \ 241\n        divisors += 243\n        divisors += 247\n        divisors += 251\n\
    \        divisors += 253\n        divisors += 257\n        divisors += 263\n \
    \       divisors += 269\n        divisors += 271\n        divisors += 277\n  \
    \      divisors += 281\n        divisors += 283\n        divisors += 293\n   \
    \     divisors += 307\n        divisors += 311\n        divisors += 313\n    \
    \    divisors += 317\n        divisors += 323\n        divisors += 329\n     \
    \   divisors += 331\n        divisors += 337\n        divisors += 343\n      \
    \  divisors += 347\n        divisors += 353\n        divisors += 359\n       \
    \ divisors += 363\n        divisors += 369\n        divisors += 373\n        divisors\
    \ += 379\n        divisors += 383\n        divisors += 389\n        divisors +=\
    \ 397\n        divisors += 401\n        divisors += 407\n        divisors += 413\n\
    \        divisors += 421\n        divisors += 427\n        divisors += 433\n \
    \       divisors += 439\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf50lm6oq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpf50lm6oq.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpf50lm6oq.scala:101:8 ------------------------\e\
    [0m\e[0m\n\e[31m101 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659792479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 217l\n        divisors += 223l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 247l\n        divisors += 251l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 317l\n        divisors += 323l\n        divisors += 329l\n\
    \        divisors += 331l\n        divisors += 337l\n        divisors += 343l\n\
    \        divisors += 349l\n        divisors += 351l\n        divisors += 359l\n\
    \        divisors += 361l\n        divisors += 367l\n        divisors += 373l\n\
    \        divisors += 379l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjdyp43r1.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 253\n        divisors += 257\n        divisors +=\
    \ 263\n        divisors += 269\n        divisors += 271\n        divisors += 277\n\
    \        divisors += 281\n        divisors += 283\n        divisors += 293\n \
    \       divisors += 307\n        divisors += 311\n        divisors += 313\n  \
    \      divisors += 317\n        divisors += 319\n        divisors += 323\n   \
    \     divisors += 327\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 341\n        divisors += 343\n        divisors += 347\n     \
    \   divisors += 353\n        divisors += 359\n        divisors += 363\n      \
    \  divisors += 367\n        divisors += 373\n        divisors += 379\n       \
    \ divisors += 383\n        divisors += 389\n        divisors += 397\n        divisors\
    \ += 401\n        divisors += 407\n        divisors += 411\n        divisors +=\
    \ 413\n        divisors += 417\n        divisors += 419\n        divisors += 421\n\
    \        divisors += 423\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa8vpzpo5.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n) divisors += d\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfivuu0kw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpfivuu0kw.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) divisors\
    \ += d\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorValue\
    \ = n\n        var divisor = 0\n        for(i <- 1 to n) {\n            divisor\
    \ = i\n            while(divisor != 1) {\n                if(n % divisor == 0)\
    \ {\n                    maxDivisorValue = divisor\n                    maxDivisor\
    \ = divisor\n                }\n                divisor = divisor / 2\n      \
    \      }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1ao5v_rz.scala:11:22\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 351\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 395\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 423\n        divisors +=\
    \ 429\n        divisors += 431\n        divisors += 437\n        divisors += 443\n\
    \        divisors += 449\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5gskftvt.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp5gskftvt.scala:102:8 ------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(d % 2 == 0) {\n                return d\n\
    \            }\n        }\n        return -1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy561owsc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors += 2\n        divisors +=\
    \ 3\n        divisors += 5\n        divisors += 7\n        divisors += 11\n  \
    \      divisors += 13\n        divisors += 17\n        divisors += 19\n      \
    \  divisors += 23\n        divisors += 29\n        divisors += 31\n        divisors\
    \ += 37\n        divisors += 41\n        divisors += 43\n        divisors += 47\n\
    \        divisors += 53\n        divisors += 59\n        divisors += 61\n    \
    \    divisors += 67\n        divisors += 71\n        divisors += 73\n        divisors\
    \ += 79\n        divisors += 83\n        divisors += 89\n        divisors += 97\n\
    \        divisors += 101\n        divisors += 103\n        divisors += 107\n \
    \       divisors += 109\n        divisors += 113\n        divisors += 127\n  \
    \      divisors += 131\n        divisors += 137\n        divisors += 139\n   \
    \     divisors += 147\n        divisors += 151\n        divisors += 157\n    \
    \    divisors += 163\n        divisors += 167\n        divisors += 173\n     \
    \   divisors += 179\n        divisors += 181\n        divisors += 191\n      \
    \  divisors += 193\n        divisors += 197\n        divisors += 199\n       \
    \ divisors += 211\n        divisors += 223\n        divisors += 227\n        divisors\
    \ += 229\n        divisors += 233\n        divisors += 239\n        divisors +=\
    \ 241\n        divisors += 243\n        divisors += 247\n        divisors += 251\n\
    \        divisors += 253\n        divisors += 257\n        divisors += 263\n \
    \       divisors += 269\n        divisors += 271\n        divisors += 277\n  \
    \      divisors += 281\n        divisors += 283\n        divisors += 293\n   \
    \     divisors += 297\n        divisors += 303\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 393\n        divisors += 397\n\
    \        divisors += 401\n        divisors += 407\n        divisors += 411\n \
    \       divisors += 413\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvbpbsjsz.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvbpbsjsz.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvbpbsjsz.scala:101:8 ------------------------\e\
    [0m\e[0m\n\e[31m101 |\e[0m        divisor\n\e[31m\e[31m    |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m    |\e[0m        Not found: divisor\n\e[31m    |\e[0m\n\e[31m    |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ divisor = n / 2\n        while (divisor > 0) {\n            if (n % divisor\
    \ == 0) {\n                divisors += divisor\n            }\n            divisor\
    \ /= 2\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnk61dvgq.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpnk61dvgq.scala:14:20 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            divisor /= \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member\
    \ of Long - did you mean divisor.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacmn6uhp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 107l\n        divisors += 113l\n   \
    \     divisors += 119l\n        divisors += 121l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 141l\n        divisors += 147l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 161l\n        divisors += 167l\n\
    \        divisors += 173l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 197l\n        divisors += 203l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 217l\n\
    \        divisors += 223l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 283l\n        divisors += 289l\n        divisors += 291l\n\
    \        divisors += 297l\n        divisors += 303l\n        divisors += 309l\n\
    \        divisors += 311l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 343l\n        divisors += 349l\n        divisors += 351l\n\
    \        divisors += 357l\n        divisors += 363l\n        divisors += 369l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv9q15jnp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpv9q15jnp.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 263l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 281l\n        divisors += 283l\n        divisors += 293l\n\
    \        divisors += 307l\n        divisors += 311l\n        divisors += 313l\n\
    \        divisors += 317l\n        divisors += 323l\n        divisors += 329l\n\
    \        divisors += 331l\n        divisors += 337l\n        divisors += 343l\n\
    \        divisors += 349l\n        divisors += 351l\n        divisors += 359l\n\
    \        divisors += 363\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps8yyn6vi.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var max = 0\n        var maxDivisor = 0\n      \
    \  for (i <- 1 to n) {\n            if (n % i == 0) {\n                if (maxDivisor\
    \ < i) {\n                    max = i\n                    maxDivisor = i\n  \
    \              }\n            }\n        }\n        max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcdyrexba.scala:10:23\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val maxDivisor\
    \ = divisors.max\n            divisors.remove(maxDivisor)\n            if(maxDivisor\
    \ % 2 == 0) divisors.add(maxDivisor)\n        }\n        divisors.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7cdgp7gu.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj7lx9k3.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngf8_7v9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaxh_px17.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpaxh_px17.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792475
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 347\n        divisors += 349\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 395\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 411\n        divisors += 413\n        divisors +=\
    \ 417\n        divisors += 423\n        divisors += 429\n        divisors += 433\n\
    \        divisors += 439\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsl_ynst.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(n % d == 0) {\n                return d\n\
    \            }\n        }\n        return n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz8tvro3h.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ val maxDivisor = mutable.Long.MaxValue\n        for(i <- 1 to n){\n        \
    \    val d = i\n            while(d > 1){\n                if(d % 2 == 0){\n \
    \                   divisors += d\n                    d /= 2\n              \
    \  }\n                else{\n                    d /= 2\n                }\n \
    \           }\n        }\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxgct5sb6.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpxgct5sb6.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpxgct5sb6.scala:10:22 --------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxgct5sb6.scala:15:22\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                    d /=\
    \ \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value /= is not a member of Int - did you mean d.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpxgct5sb6.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    d /= \e[31m2\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ /= is not a member of Int - did you mean d.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 193\n        divisors += 197\n        divisors\
    \ += 199\n        divisors += 211\n        divisors += 223\n        divisors +=\
    \ 227\n        divisors += 229\n        divisors += 233\n        divisors += 239\n\
    \        divisors += 241\n        divisors += 243\n        divisors += 247\n \
    \       divisors += 251\n        divisors += 253\n        divisors += 257\n  \
    \      divisors += 263\n        divisors += 269\n        divisors += 271\n   \
    \     divisors += 277\n        divisors += 281\n        divisors += 283\n    \
    \    divisors += 293\n        divisors += 307\n        divisors += 311\n     \
    \   divisors += 313\n        divisors += 317\n        divisors += 323\n      \
    \  divisors += 329\n        divisors += 331\n        divisors += 337\n       \
    \ divisors += 343\n        divisors += 347\n        divisors += 353\n        divisors\
    \ += 359\n        divisors += 363\n        divisors += 369\n        divisors +=\
    \ 373\n        divisors += 379\n        divisors += 383\n        divisors += 389\n\
    \        divisors += 397\n        divisors += 401\n        divisors += 407\n \
    \       divisors += 413\n        divisors += 421\n        divisors += 427\n  \
    \      divisors += 433\n        divisors += 439\n        divisors += 443\n   \
    \     divisors += 449\n        divisors += 457\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1r138i2w.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors.remove(d)\n            if(n % d == 0) {\n              \
    \  return d\n            }\n            divisors.add(d)\n        }\n        return\
    \ n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx9l2969k.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ largest = mutable.Set[Long]()\n        divisors += 2l\n        divisors += 3l\n\
    \        divisors += 5l\n        divisors += 7l\n        divisors += 11l\n   \
    \     divisors += 13l\n        divisors += 17l\n        divisors += 19l\n    \
    \    divisors += 23l\n        divisors += 29l\n        divisors += 31l\n     \
    \   divisors += 37l\n        divisors += 41l\n        divisors += 43l\n      \
    \  divisors += 47l\n        divisors += 53l\n        divisors += 59l\n       \
    \ divisors += 61l\n        divisors += 67l\n        divisors += 71l\n        divisors\
    \ += 73l\n        divisors += 79l\n        divisors += 83l\n        divisors +=\
    \ 89l\n        divisors += 97l\n        divisors += 101l\n        divisors +=\
    \ 103l\n        divisors += 107l\n        divisors += 109l\n        divisors +=\
    \ 113l\n        divisors += 127l\n        divisors += 131l\n        divisors +=\
    \ 137l\n        divisors += 139l\n        divisors += 149l\n        divisors +=\
    \ 151l\n        divisors += 157l\n        divisors += 163l\n        divisors +=\
    \ 167l\n        divisors += 173l\n        divisors += 179l\n        divisors +=\
    \ 181l\n        divisors += 191l\n        divisors += 193l\n        divisors +=\
    \ 197l\n        divisors += 199l\n        divisors += 201l\n        divisors +=\
    \ 203l\n        divisors += 207l\n        divisors += 209l\n        divisors +=\
    \ 211l\n        divisors += 213l\n        divisors += 217l\n        divisors +=\
    \ 223l\n        divisors += 227l\n        divisors += 229l\n        divisors +=\
    \ 233l\n        divisors += 239l\n        divisors += 241l\n        divisors +=\
    \ 243l\n        divisors += 247l\n        divisors += 251l\n        divisors +=\
    \ 253l\n        divisors += 257l\n        divisors += 263l\n        divisors +=\
    \ 269l\n        divisors += 271l\n        divisors += 277l\n        divisors +=\
    \ 281l\n        divisors += 283l\n        divisors += 293l\n        divisors +=\
    \ 307l\n        divisors += 311l\n        divisors += 313l\n        divisors +=\
    \ 317l\n        divisors += 323l\n        divisors += 327l\n        divisors +=\
    \ 331l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf4pvtl7r.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpf4pvtl7r.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mlargest\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors -= d\n            if(n % d == 0) {\n                return\
    \ d\n            }\n            divisors.add(d)\n        }\n        return n\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp593nc0d.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 247\n        divisors += 251\n        divisors\
    \ += 257\n        divisors += 263\n        divisors += 269\n        divisors +=\
    \ 271\n        divisors += 277\n        divisors += 281\n        divisors += 283\n\
    \        divisors += 293\n        divisors += 307\n        divisors += 311\n \
    \       divisors += 313\n        divisors += 317\n        divisors += 323\n  \
    \      divisors += 329\n        divisors += 337\n        divisors += 341\n   \
    \     divisors += 347\n        divisors += 353\n        divisors += 359\n    \
    \    divisors += 363\n        divisors += 369\n        divisors += 373\n     \
    \   divisors += 379\n        divisors += 383\n        divisors += 389\n      \
    \  divisors += 397\n        divisors += 401\n        divisors += 407\n       \
    \ divisors += 411\n        divisors += 419\n        divisors += 423\n        divisors\
    \ += 429\n        divisors += 433\n        divisors += 439\n        divisors +=\
    \ 443\n        divisors += 449\n        divisors += 457\n        divisors += 461\n\
    \        divisors += 467\n        divisors += 47\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqgtr0ie8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 4l\n        divisors += 8l\n        divisors\
    \ += 16l\n        divisors += 32l\n        divisors += 64l\n        divisors +=\
    \ 128l\n        divisors += 256l\n        divisors += 512l\n        divisors +=\
    \ 1024l\n        divisors += 2048l\n        divisors += 4096l\n        divisors\
    \ += 8192l\n        divisors += 16384l\n        divisors += 32768l\n        divisors\
    \ += 65536l\n        divisors += 131072l\n        divisors += 262144l\n      \
    \  divisors += 524288l\n        divisors += 1048576l\n        divisors += 2097152l\n\
    \        divisors += 4194304l\n        divisors += 8388608l\n        divisors\
    \ += 16777216l\n        divisors += 33554432l\n        divisors += 67108864l\n\
    \        divisors += 134217728l\n        divisors += 268435456l\n        divisors\
    \ += 536870912l\n        divisors += 1073741824l\n        divisors += 2147483648l\n\
    \        divisors += 4294967296l\n        divisors += 8589934592l\n        divisors\
    \ += 17179869184l\n        divisors += 34359738368l\n        divisors += 68719476736l\n\
    \        divisors += 137438953472l\n        divisors += 274877906944l\n      \
    \  divisors += 549755813888l\n        divisors += 1099511627776l\n        divisors\
    \ += 2199023255552l\n        divisors += 43980465111072l\n        divisors +=\
    \ 8796093022208l\n        divisors += 17592186044416l\n        divisors += 35184372088832l\n\
    \        divisors += 70368744177664l\n        divisors += 140737488355328l\n \
    \       divisors += 281474976710656l\n        divisors += 562949953421312l\n \
    \       divisors += 1125899906842624l\n        divisors += 2251799813685248l\n\
    \        divisors += 4503599627370496l\n        divisors += 9007199254740992l\n\
    \        divisors += 18014398509481984l\n        divisors += 36028797018963968l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvv4jg0mb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpvv4jg0mb.scala:64:8 -------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorFactor\
    \ = 0\n        var maxDivisorFactorIndex = 0\n        var maxDivisorFactorIndex2\
    \ = 0\n        var maxDivisorFactorIndex3 = 0\n        var maxDivisorFactorIndex4\
    \ = 0\n        var maxDivisorFactorIndex5 = 0\n        var maxDivisorFactorIndex6\
    \ = 0\n        var maxDivisorFactorIndex7 = 0\n        var maxDivisorFactorIndex8\
    \ = 0\n        var maxDivisorFactorIndex9 = 0\n        var maxDivisorFactorIndex10\
    \ = 0\n        var maxDivisorFactorIndex11 = 0\n        var maxDivisorFactorIndex12\
    \ = 0\n        var maxDivisorFactorIndex13 = 0\n        var maxDivisorFactorIndex14\
    \ = 0\n        var maxDivisorFactorIndex15 = 0\n        var maxDivisorFactorIndex16\
    \ = 0\n        var maxDivisorFactorIndex17 = 0\n        var maxDivisorFactorIndex18\
    \ = 0\n        var maxDivisorFactorIndex19 = 0\n        var maxDivisorFactorIndex20\
    \ = 0\n        var maxDivisorFactorIndex21 = 0\n        var maxDivisorFactorIndex22\
    \ = 0\n        var maxDivisorFactorIndex23 = 0\n        var maxDivisorFactorIndex24\
    \ = 0\n        var maxDivisorFactorIndex25 = 0\n        var maxDivisorFactorIndex26\
    \ = 0\n        var maxDivisorFactorIndex27 = 0\n        var maxDivisorFactorIndex28\
    \ = 0\n        var maxDivisorFactorIndex29 = 0\n        var maxDivisorFactorIndex30\
    \ = 0\n        var maxDivisorFactorIndex31 = 0\n        var maxDivisorFactorIndex32\
    \ = 0\n        var maxDivisorFactorIndex33 = 0\n        var maxDivisorFactorIndex34\
    \ = 0\n        var maxDivisorFactorIndex35 = 0\n        var maxDivisorFactorIndex36\
    \ = 0\n        var maxDivisorFactorIndex37 = 0\n        var maxDivisorFactorIndex38\
    \ = 0\n        var maxDivisorFactorIndex39 = 0\n        var maxDivisorFactorIndex40\
    \ = 0\n        var maxDivisorFactorIndex41 = 0\n        var maxDivisorFactorIndex42\
    \ = 0\n        var maxDivisorFactorIndex43 = 0\n        var maxDivisorFactorIndex44\
    \ = 0\n        var maxDivisorFactorIndex45 = 0\n        var maxDivisorFactorIndex46\
    \ = 0\n        var maxDivisorFactorIndex47 = 0\n        var maxDivisorFactorIndex48\
    \ = 0\n        var maxDivisorFactorIndex49 = 0\n        var maxDivisorFactorIndex50\
    \ = 0\n        var maxDivisorFactorIndex51 = 0\n        var maxDivisorFactorIndex52\
    \ = 0\n        var maxDivisorFactorIndex53 = 0\n        var maxDivisorFactorIndex54\
    \ = 0\n        var maxDivisorFactorIndex55 = 0\n        var maxDivisorFactor\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyk1uisoo.scala:66:4 ----------------------------\e\
    [0m\e[0m\n\e[31m66 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpyk1uisoo.scala:66:5 ---------------------\e[0m\e[0m\n\e[31m66 |\e[0m\
    \    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\
    \e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1)\n        divisors.add(2)\n        divisors.add(3)\n        divisors.add(5)\n\
    \        divisors.add(10)\n        divisors.add(20)\n        divisors.add(50)\n\
    \        divisors.add(100)\n        divisors.add(1000)\n        divisors.add(10000)\n\
    \        divisors.add(100000)\n        divisors.add(1000000)\n        divisors.add(10000000)\n\
    \        divisors.add(100000000)\n        divisors.add(1000000000)\n        divisors.add(10000000000)\n\
    \        divisors.add(100000000000)\n        divisors.add(1000000000000)\n   \
    \     divisors.add(10000000000000)\n        divisors.add(100000000000000)\n  \
    \      divisors.add(1000000000000000)\n        divisors.add(10000000000000000)\n\
    \        divisors.add(100000000000000000)\n        divisors.add(1000000000000000000)\n\
    \        divisors.add(10000000000000000000)\n        divisors.add(100000000000000000000)\n\
    \        divisors.add(1000000000000000000000)\n        divisors.add(10000000000000000000000)\n\
    \        divisors.add(100000000000000000000000)\n        divisors.add(1000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000)\n        divisors.add(100000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000)\n        divisors.add(10000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(10000000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000000)\n\
    \        divisors.add(100000000000000000000000000000000000000000)\n        divisors.add(1000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000)\n\
    \        divisors.add(1000000000000000000000000000000000000000000000)\n      \
    \  divisors.add(10000000000000000000000000000000000000000000000)\n        divisors.add(100000000000000000000000000000000000000000000000)\n\
    \        divisors.add(10000000000000000000000000000000000000000)\n        divisors.add(10000000000000000000000000000000000000000\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplulz6x8p.scala:71:4 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplulz6x8p.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(10l)\n        divisors.add(15l)\n \
    \       divisors.add(20l)\n        divisors.add(25l)\n        divisors.add(30l)\n\
    \        divisors.add(35l)\n        divisors.add(40l)\n        divisors.add(45l)\n\
    \        divisors.add(50l)\n        divisors.add(55l)\n        divisors.add(60l)\n\
    \        divisors.add(65l)\n        divisors.add(70l)\n        divisors.add(75l)\n\
    \        divisors.add(80l)\n        divisors.add(85l)\n        divisors.add(90l)\n\
    \        divisors.add(95l)\n        divisors.add(100l)\n        divisors.add(105l)\n\
    \        divisors.add(110l)\n        divisors.add(115l)\n        divisors.add(120l)\n\
    \        divisors.add(125l)\n        divisors.add(130l)\n        divisors.add(135l)\n\
    \        divisors.add(140l)\n        divisors.add(145l)\n        divisors.add(150l)\n\
    \        divisors.add(155l)\n        divisors.add(160l)\n        divisors.add(165l)\n\
    \        divisors.add(170l)\n        divisors.add(175l)\n        divisors.add(180l)\n\
    \        divisors.add(185l)\n        divisors.add(190l)\n        divisors.add(195l)\n\
    \        divisors.add(200l)\n        divisors.add(205l)\n        divisors.add(210l)\n\
    \        divisors.add(215l)\n        divisors.add(220l)\n        divisors.add(225l)\n\
    \        divisors.add(230l)\n        divisors.add(235l)\n        divisors.add(240l)\n\
    \        divisors.add(245l)\n        divisors.add(250l)\n        divisors.add(255l)\n\
    \        divisors.add(260l)\n        divisors.add(265l)\n        divisors.add(270l)\n\
    \        divisors.add(275l)\n        divisors.add(280l)\n        divisors.add(285l)\n\
    \        divisors.add(290l)\n        divisors.add(295l)\n        divisors.add(300l)\n\
    \        divisors.add(305l)\n        divisors.add(310l)\n        divisors.add(315l)\n\
    \        divisors.add(320l)\n        divisors.add(325l)\n        divisors.add(330l)\n\
    \        divisors.add(335l)\n        divisors.add(340l)\n        divisors.add(345l)\n\
    \        divisors.add(350l)\n        divisors.add(355l)\n        divisors.add(360l)\n\
    \        divisors.add(365l)\n        divisors.add(370l)\n        divisors.add(375l)\n\
    \        divisors.add(380l)\n        divisors.add(385l)\n        divisors.add(390l)\n\
    \        divisors.add(395l)\n        divisors.add(400\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4wokzvhm.scala:92:4 ----------------------------\e\
    [0m\e[0m\n\e[31m92 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4wokzvhm.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792469
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val divisor\
    \ = divisors.min\n            divisors -= divisor\n            if(divisor % 2\
    \ == 0) {\n                divisors.add(divisor)\n            }\n        }\n \
    \       divisors.last\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm62if23o.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqav4p92w.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqav4p92w.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var maxDivisor = 0\n        var maxDivisorNum =\
    \ 0\n        var maxDivisorNumNum = 0\n        var maxDivisorNumNumNum = 0\n \
    \       var maxDivisorNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum\
    \ = 0\n        var maxDivisorNumNumNumNumNumNumNumNumNumNumNum = 0\n        var\
    \ maxDivisorNumNumNumNumNumNumNum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmph82n4nz3.scala:44:4 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmaxDivisorNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDivisorNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m \
    \  |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mmaxDivisorNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e[0m\
    \ \e[35mmaxDivisorNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:20:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNumNumNumNumNum is already defined as \e[33mvariable\e\
    [0m \e[35mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmph82n4nz3.scala:21:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mmaxDivisorNumNumNumNumNumNumNumNumNum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmaxDivisorNumNumNumNumNu"
  stdout: ''
  timestamp: 1659792473
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        for (d <- 2 to n by 2)\n            if (n % d == 0)\n               \
    \ divisors += d\n        divisors.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp95amwcqp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp95amwcqp.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2eutbj_z.scala:89:19 ---------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisors += \n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2eutbj_z.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.Set[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m     \
    \                  ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for (d <- 1 to n by 2) {\n            if (n % d == 0)\
    \ {\n                divisors += d\n                if (d > maxDivisor) {\n  \
    \                  maxDivisor = d\n                }\n            }\n        }\n\
    \        maxDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp07rf0368.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp07rf0368.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e\
    [31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 273l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        divisors += 289l\n        divisors += 293l\n\
    \        divisors += 297l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw8imbz8u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        val maxDivisorIndex = mutable.Set[Int]()\n\
    \        divisors.clear()\n        maxDivisor.clear()\n        maxDivisorIndex.clear()\n\
    \        divisors += 2l\n        divisors += 3l\n        divisors += 5l\n    \
    \    divisors += 7l\n        divisors += 11l\n        divisors += 13l\n      \
    \  divisors += 17l\n        divisors += 19l\n        divisors += 23l\n       \
    \ divisors += 29l\n        divisors += 31l\n        divisors += 37l\n        divisors\
    \ += 41l\n        divisors += 43l\n        divisors += 47l\n        divisors +=\
    \ 53l\n        divisors += 59l\n        divisors += 61l\n        divisors += 67l\n\
    \        divisors += 71l\n        divisors += 73l\n        divisors += 79l\n \
    \       divisors += 83l\n        divisors += 89l\n        divisors += 97l\n  \
    \      divisors += 101l\n        divisors += 103l\n        divisors += 107l\n\
    \        divisors += 109l\n        divisors += 113l\n        divisors += 117l\n\
    \        divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmcvzb1tb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmcvzb1tb.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpmcvzb1tb.scala:10:30 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisorIndex\e[0m = mutable.Set[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659792484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 193\n        divisors += 197\n     \
    \   divisors += 199\n        divisors += 211\n        divisors += 223\n      \
    \  divisors += 227\n        divisors += 229\n        divisors += 233\n       \
    \ divisors += 239\n        divisors += 241\n        divisors += 243\n        divisors\
    \ += 247\n        divisors += 251\n        divisors += 253\n        divisors +=\
    \ 257\n        divisors += 263\n        divisors += 269\n        divisors += 271\n\
    \        divisors += 277\n        divisors += 281\n        divisors += 283\n \
    \       divisors += 293\n        divisors += 307\n        divisors += 311\n  \
    \      divisors += 313\n        divisors += 317\n        divisors += 323\n   \
    \     divisors += 329\n        divisors += 331\n        divisors += 337\n    \
    \    divisors += 343\n        divisors += 347\n        divisors += 353\n     \
    \   divisors += 359\n        divisors += 363\n        divisors += 369\n      \
    \  divisors += 373\n        divisors += 379\n        divisors += 383\n       \
    \ divisors += 389\n        divisors += 397\n        divisors += 401\n        divisors\
    \ += 407\n        divisors += 413\n        divisors += 421\n        divisors +=\
    \ 431\n        divisors += 437\n        divisors += 443\n        divisors += 449\n\
    \        divisors += 457\n        divisors += \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpif3mi4c5.scala:102:19 --------------------------\e\
    [0m\e[0m\n\e[31m102 |\e[0m        divisors += \n\e[31m\e[31m    |\e[0m       \
    \            ^\e[0m\n\e[31m    |\e[0m                   expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m    |\e[0m\n\e[31m    |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpif3mi4c5.scala:8:23 -------------------------\e[0m\e[0m\n\e[31m8 |\e\
    [0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m  |\e[0m      \
    \                 Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 127l\n        divisors += 131l\n\
    \        divisors += 137l\n        divisors += 139l\n        divisors += 141l\n\
    \        divisors += 143l\n        divisors += 147l\n        divisors += 149l\n\
    \        divisors += 151l\n        divisors += 153l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplyuohyr4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n by 2)\n            divisors += i\n        divisors.max\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmcc2p8jm.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmcc2p8jm.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m       \
    \               Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 211l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 329l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 341l\n        divisors += 343l\n        divisors += 347l\n\
    \        divisors += 351l\n        divisors += 353l\n        divisors += 359l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsenoxeyo.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpsenoxeyo.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        divisors += 267l\n        divisors += 269l\n\
    \        divisors += 271l\n        divisors += 277l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 293l\n        divisors += 297l\n\
    \        divisors += 301l\n        divisors += 303l\n        divisors += 307l\n\
    \        divisors += 309l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2ygo0zvc.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var maxDivisor = 0\n        for (i <- 2 to n) {\n            if (n % i == 0)\
    \ {\n                divisors += i\n                if (divisors.max() < maxDivisor)\
    \ {\n                    maxDivisor = divisors.max\n                }\n      \
    \      }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjvoucq2j.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpjvoucq2j.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        var max = 0\n        var maxDivisor = 0\n      \
    \  var currentDivisor = 0\n        for (i <- 1 to n) {\n            currentDivisor\
    \ = i\n            while (currentDivisor % 2 == 0) {\n                currentDivisor\
    \ = currentDivisor / 2\n            }\n            if (currentDivisor > max) {\n\
    \                max = currentDivisor\n                maxDivisor = i\n      \
    \      }\n        }\n        maxDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp22dt1s8j.scala:11:23\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(4l)\n        divisors.add(5l)\n        divisors.add(6l)\n   \
    \     divisors.add(7l)\n        divisors.add(8l)\n        divisors.add(9l)\n \
    \       divisors.add(10l)\n        divisors.add(11l)\n        divisors.add(12l)\n\
    \        divisors.add(13l)\n        divisors.add(14l)\n        divisors.add(15l)\n\
    \        divisors.add(16l)\n        divisors.add(17l)\n        divisors.add(18l)\n\
    \        divisors.add(19l)\n        divisors.add(20l)\n        divisors.add(21l)\n\
    \        divisors.add(22l)\n        divisors.add(23l)\n        divisors.add(24l)\n\
    \        divisors.add(25l)\n        divisors.add(26l)\n        divisors.add(27l)\n\
    \        divisors.add(28l)\n        divisors.add(29l)\n        divisors.add(30l)\n\
    \        divisors.add(31l)\n        divisors.add(32l)\n        divisors.add(33l)\n\
    \        divisors.add(34l)\n        divisors.add(35l)\n        divisors.add(36l)\n\
    \        divisors.add(37l)\n        divisors.add(38l)\n        divisors.add(39l)\n\
    \        divisors.add(40l)\n        divisors.add(41l)\n        divisors.add(42l)\n\
    \        divisors.add(43l)\n        divisors.add(44l)\n        divisors.add(45l)\n\
    \        divisors.add(46l)\n        divisors.add(47l)\n        divisors.add(48l)\n\
    \        divisors.add(49l)\n        divisors.add(50l)\n        divisors.add(51l)\n\
    \        divisors.add(52l)\n        divisors.add(53l)\n        divisors.add(54l)\n\
    \        divisors.add(55l)\n        divisors.add(56l)\n        divisors.add(57l)\n\
    \        divisors.add(58l)\n        divisors.add(59l)\n        divisors.add(60l)\n\
    \        divisors.add(61l)\n        divisors.add(62l)\n        divisors.add(63l)\n\
    \        divisors.add(64l)\n        divisors.add(65l)\n        divisors.add(66l)\n\
    \        divisors.add(67l)\n        divisors.add(68l)\n        divisors.add(69l)\n\
    \        divisors.add(70l)\n        divisors.add(71l)\n        divisors.add(72l)\n\
    \        divisors.add(73l)\n        divisors.add(74l)\n        divisors.add(75l)\n\
    \        divisors.add(76l)\n        divisors.add(77l)\n        divisors.add(78l)\n\
    \        divisors.add(79l)\n        divisors.add(80l)\n        divisors.add(81l)\n\
    \        divisors.add(82l)\n        divisors.add(83l)\n        \n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n \
    \   assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpacmn6uhp.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792461
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 231l\n        divisors += 233l\n        divisors += 237l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbw_ab6a_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 141l\n        divisors += 143l\n        divisors += 147l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 153l\n\
    \        divisors += 157l\n        divisors += 159l\n        divisors += 161l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 169l\n\
    \        divisors += 173l\n        divisors += 177l\n        divisors += 179l\n\
    \        divisors += 181l\n        divisors += 191l\n        divisors += 193l\n\
    \        divisors += 197l\n        divisors += 199l\n        divisors += 201l\n\
    \        divisors += 203l\n        divisors += 207l\n        divisors += 209l\n\
    \        divisors += 211l\n        divisors += 213l\n        divisors += 217l\n\
    \        divisors += 219l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 249l\n        divisors += 251l\n        divisors += 253l\n\
    \        divisors += 257l\n        divisors += 259l\n        divisors += 263l\n\
    \        divisors += 267l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 273l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpapj9sazd.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792468
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n){\n            divisors += i\n        }\n        divisors.max\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) ==\
    \ (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgncnujx_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgncnujx_.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m                     \
    \ Found:    (n : Long)\n\e[31m  |\e[0m                      Required: Int\n\e\
    [31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(n)\n        while(divisors.nonEmpty) {\n            val d = divisors.min\n\
    \            divisors.remove(d)\n            if(n % d == 0) {\n              \
    \  return d\n            }\n            divisors.add(d)\n        }\n        return\
    \ n\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx9l2969k.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 127l\n   \
    \     divisors += 131l\n        divisors += 137l\n        divisors += 139l\n \
    \       divisors += 147l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 233l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisors += 243l\n        divisors += 247l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 263l\n        divisors += 269l\n        divisors += 271l\n\
    \        divisors += 277l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 293l\n        divisors += 307l\n        divisors += 311l\n\
    \        divisors += 313l\n        divisors += 317l\n        divisors += 323l\n\
    \        divisors += 327l\n        divisors += 331l\n        divisors += 337l\n\
    \        divisors += 343l\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpene8b6qw.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors.add(1l)\n        divisors.add(2l)\n        divisors.add(3l)\n     \
    \   divisors.add(5l)\n        divisors.add(7l)\n        divisors.add(11l)\n  \
    \      divisors.add(13l)\n        divisors.add(17l)\n        divisors.add(19l)\n\
    \        divisors.add(23l)\n        divisors.add(29l)\n        divisors.add(31l)\n\
    \        divisors.add(37l)\n        divisors.add(41l)\n        divisors.add(43l)\n\
    \        divisors.add(47l)\n        divisors.add(53l)\n        divisors.add(59l)\n\
    \        divisors.add(61l)\n        divisors.add(67l)\n        divisors.add(71l)\n\
    \        divisors.add(73l)\n        divisors.add(79l)\n        divisors.add(83l)\n\
    \        divisors.add(89l)\n        divisors.add(97l)\n        divisors.add(101l)\n\
    \        divisors.add(103l)\n        divisors.add(107l)\n        divisors.add(109l)\n\
    \        divisors.add(113l)\n        divisors.add(127l)\n        divisors.add(131l)\n\
    \        divisors.add(137l)\n        divisors.add(139l)\n        divisors.add(149l)\n\
    \        divisors.add(151l)\n        divisors.add(157l)\n        divisors.add(159l)\n\
    \        divisors.add(161l)\n        divisors.add(163l)\n        divisors.add(167l)\n\
    \        divisors.add(169l)\n        divisors.add(173l)\n        divisors.add(177l)\n\
    \        divisors.add(179l)\n        divisors.add(181l)\n        divisors.add(191l)\n\
    \        divisors.add(193l)\n        divisors.add(197l)\n        divisors.add(199l)\n\
    \        divisors.add(211l)\n        divisors.add(223l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(251l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(323l)\n        divisors.add(329l)\n\
    \        divisors.add(331l)\n        divisors.add(337l)\n        divisors.add(343l)\n\
    \        divisors.add(349l)\n        divisors.add(353l)\n        divisors.add(359l)\n\
    \        divisors.add(367l)\n        divisors.add(373\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptvhloxcw.scala:89:4 ----------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptvhloxcw.scala:8:23\
    \ -------------------------\e[0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e\
    [36mdivisors\e[0m = mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m \
    \                      ^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not\
    \ found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 4l\n        divisors\
    \ += 5l\n        divisors += 6l\n        divisors += 7l\n        divisors += 8l\n\
    \        divisors += 9l\n        divisors += 10l\n        divisors += 11l\n  \
    \      divisors += 12l\n        divisors += 13l\n        divisors += 14l\n   \
    \     divisors += 15l\n        divisors += 16l\n        divisors += 17l\n    \
    \    divisors += 18l\n        divisors += 19l\n        divisors += 20l\n     \
    \   divisors += 21l\n        divisors += 22l\n        divisors += 23l\n      \
    \  divisors += 24l\n        divisors += 25l\n        divisors += 26l\n       \
    \ divisors += 27l\n        divisors += 28l\n        divisors += 29l\n        divisors\
    \ += 30l\n        divisors += 31l\n        divisors += 32l\n        divisors +=\
    \ 33l\n        divisors += 34l\n        divisors += 35l\n        divisors += 36l\n\
    \        divisors += 37l\n        divisors += 38l\n        divisors += 39l\n \
    \       divisors += 40l\n        divisors += 41l\n        divisors += 42l\n  \
    \      divisors += 43l\n        divisors += 44l\n        divisors += 45l\n   \
    \     divisors += 46l\n        divisors += 47l\n        divisors += 48l\n    \
    \    divisors += 49l\n        divisors += 50l\n        divisors += 51l\n     \
    \   divisors += 52l\n        divisors += 53l\n        divisors += 54l\n      \
    \  divisors += 55l\n        divisors += 56l\n        divisors += 57l\n       \
    \ divisors += 58l\n        divisors += 59l\n        divisors += 60l\n        divisors\
    \ += 61l\n        divisors += 62l\n        divisors += 63l\n        divisors +=\
    \ 64l\n        divisors += 65l\n        divisors += 66l\n        divisors += 67l\n\
    \        divisors += 68l\n        divisors += 69l\n        divisors += 70l\n \
    \       divisors += 71l\n        divisors += 72l\n        divisors += 73l\n  \
    \      divisors += 74l\n        divisors += 75l\n        divisors += 76l\n   \
    \     divisors += 77l\n        divisors += 78l\n        divisors += 79l\n    \
    \    divisors += 80l\n        divisors += 81l\n        divisors += 82l\n     \
    \   divisors += 83l\n        divisors += 84l\n        \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngf8_7v9.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792465
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for(i\
    \ <- 1 to n) divisors += i\n        divisors.toList.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvw6bojn7.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvw6bojn7.scala:9:22 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) divisors\
    \ += i\n\e[31m\e[31m  |\e[0m                      ^\e[0m\n\e[31m  |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                      Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792466
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors += 7l\n\
    \        divisors += 11l\n        divisors += 13l\n        divisors += 17l\n \
    \       divisors += 19l\n        divisors += 23l\n        divisors += 29l\n  \
    \      divisors += 31l\n        divisors += 37l\n        divisors += 41l\n   \
    \     divisors += 43l\n        divisors += 47l\n        divisors += 53l\n    \
    \    divisors += 59l\n        divisors += 61l\n        divisors += 67l\n     \
    \   divisors += 71l\n        divisors += 73l\n        divisors += 79l\n      \
    \  divisors += 83l\n        divisors += 89l\n        divisors += 97l\n       \
    \ divisors += 101l\n        divisors += 103l\n        divisors += 107l\n     \
    \   divisors += 109l\n        divisors += 113l\n        divisors += 117l\n   \
    \     divisors += 121l\n        divisors += 123l\n        divisors += 127l\n \
    \       divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 235l\n        divisors += 237l\n        divisors += 239l\n\
    \        divisors += 241l\n        divisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcj_hv2n8.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpcj_hv2n8.scala:89:8 -------------------------\e\
    [0m\e[0m\n\e[31m89 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 1 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkl93lxd_.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpkl93lxd_.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m1\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(103l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(169l)\n\
    \        divisors.add(173l)\n        divisors.add(177l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(251l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(323l)\n        divisors.add(327l)\n\
    \        divisors.add(331l)\n        divisors.add(337l)\n        divisors.add(347l)\n\
    \        divisors.add(349l)\n        divisors.add(353l)\n        divisors.add(359l)\n\
    \        divisors.add(363l)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf89hiubb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ var largestDivisor = 0\n        var currentDivisor = 0\n        var currentDivisorRemainder\
    \ = 0\n        var currentDivisorDivisor = 0\n        var currentDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainder = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisorRemainderDivisor = 0\n        var currentDivisorDivisorRemainderDivisor\
    \ = 0\n        var currentDivisorDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7y7aiimh.scala:53:4 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7y7aiimh.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorDivisorRemainderDivisor\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mcurrentDivisorDivisorRemainderDivisor is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorDivisorRemainderDivisor\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7y7aiimh.scala:17:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorDivisorRemainderDivisor\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mcurrentDivisorDivisorRemainderDivisor is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorDivisorRemainderDivisor\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7y7aiimh.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorDivisorRemainderDivisor\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mcurrentDivisorDivisorRemainderDivisor is already defined as \e[33mvariable\e\
    [0m \e[35mcurrentDivisorDivisorRemainderDivisor\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7y7aiimh.scala:19:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mcurrentDivisorDivisorRemainderDivisor\e[0m = \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ divisorsCount = mutable.Map[Long, Int]()\n        val maxDivisor = mutable.Long.MaxValue\n\
    \        val maxDivisorCount = 0\n        for(i <- 1 to n by 2){\n           \
    \ val div = i / 2\n            if(divisors.contains(div) && divisorsCount(div)\
    \ > maxDivisorCount){\n                maxDivisor = div\n                maxDivisorCount\
    \ = divisorsCount(div)\n            }\n            divisors += div\n         \
    \   divisorsCount(div) += 1\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6tf7c5qf.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp6tf7c5qf.scala:9:28 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdivisorsCount\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m  |\e[0m                       \
    \     ^^^^^^^\e[0m\n\e[31m  |\e[0m                            Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6tf7c5qf.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mmaxDivisor\e[0m = mutable.Long.MaxValue\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6tf7c5qf.scala:12:22\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n by \e[31m2\e[0m){\n\e[31m\e[31m   |\e[0m                     \
    \ ^\e[0m\n\e[31m   |\e[0m                      Found:    (n : Long)\n\e[31m  \
    \ |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmp6tf7c5qf.scala:15:27 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                maxDivisor = div\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp6tf7c5qf.scala:16:32\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                maxDivisorC"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        val\
    \ maxDivisor = mutable.Set[Long]()\n        divisors.clear()\n        maxDivisor.clear()\n\
    \        divisors += 2l\n        divisors += 3l\n        divisors += 5l\n    \
    \    divisors += 7l\n        divisors += 11l\n        divisors += 13l\n      \
    \  divisors += 17l\n        divisors += 19l\n        divisors += 23l\n       \
    \ divisors += 29l\n        divisors += 31l\n        divisors += 37l\n        divisors\
    \ += 41l\n        divisors += 43l\n        divisors += 47l\n        divisors +=\
    \ 53l\n        divisors += 59l\n        divisors += 61l\n        divisors += 67l\n\
    \        divisors += 71l\n        divisors += 73l\n        divisors += 79l\n \
    \       divisors += 83l\n        divisors += 89l\n        divisors += 97l\n  \
    \      divisors += 101l\n        divisors += 103l\n        divisors += 107l\n\
    \        divisors += 109l\n        divisors += 113l\n        divisors += 117l\n\
    \        divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisor\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplq_jxged.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplq_jxged.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                         Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplq_jxged.scala:88:8 -------------------------\e\
    [0m\e[0m\n\e[31m88 |\e[0m        divisor\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: divisor\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ val maxDivisor = mutable.Long.MinValue\n        for(i <- 1 to n) {\n       \
    \     val d = i\n            while(d % 2 == 0) {\n                d /= 2\n   \
    \         }\n            divisors += d\n            if(d > maxDivisor) {\n   \
    \             maxDivisor = d\n            }\n        }\n        maxDivisor\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp95rh_ioj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp95rh_ioj.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmaxDivisor\e[0m = mutable.Long.MinValue\n\
    \e[31m\e[31m  |\e[0m                         ^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                     Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp95rh_ioj.scala:10:22 --------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp95rh_ioj.scala:13:18\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m                d /= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value /= is not a member of Int - did you mean d.!=?\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmp95rh_ioj.scala:17:27 -----------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m                maxDivisor = d\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val maxDivisor\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659792488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprdhlb9fj.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmprdhlb9fj.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors\
    \ += 2\n        divisors += 3\n        divisors += 5\n        divisors += 7\n\
    \        divisors += 11\n        divisors += 13\n        divisors += 17\n    \
    \    divisors += 19\n        divisors += 23\n        divisors += 29\n        divisors\
    \ += 31\n        divisors += 37\n        divisors += 41\n        divisors += 43\n\
    \        divisors += 47\n        divisors += 53\n        divisors += 59\n    \
    \    divisors += 61\n        divisors += 67\n        divisors += 71\n        divisors\
    \ += 73\n        divisors += 79\n        divisors += 83\n        divisors += 89\n\
    \        divisors += 97\n        divisors += 101\n        divisors += 103\n  \
    \      divisors += 107\n        divisors += 109\n        divisors += 113\n   \
    \     divisors += 127\n        divisors += 131\n        divisors += 137\n    \
    \    divisors += 139\n        divisors += 147\n        divisors += 151\n     \
    \   divisors += 157\n        divisors += 163\n        divisors += 167\n      \
    \  divisors += 173\n        divisors += 179\n        divisors += 181\n       \
    \ divisors += 191\n        divisors += 197\n        divisors += 199\n        divisors\
    \ += 211\n        divisors += 223\n        divisors += 227\n        divisors +=\
    \ 229\n        divisors += 233\n        divisors += 239\n        divisors += 241\n\
    \        divisors += 243\n        divisors += 247\n        divisors += 251\n \
    \       divisors += 257\n        divisors += 263\n        divisors += 269\n  \
    \      divisors += 271\n        divisors += 277\n        divisors += 281\n   \
    \     divisors += 283\n        divisors += 293\n        divisors += 307\n    \
    \    divisors += 311\n        divisors += 313\n        divisors += 317\n     \
    \   divisors += 323\n        divisors += 329\n        divisors += 331\n      \
    \  divisors += 337\n        divisors += 343\n        divisors += 347\n       \
    \ divisors += 353\n        divisors += 359\n        divisors += 363\n        divisors\
    \ += 369\n        divisors += 373\n        divisors += 379\n        divisors +=\
    \ 383\n        divisors += 389\n        divisors += 397\n        divisors += 401\n\
    \        divisors += 407\n        divisors += 413\n        divisors += 417\n \
    \       divisors += 423\n        divisors += 429\n        divisors += 433\n  \
    \      divisors += 439\n        divisors += 443\n        divisors += 449\n   \
    \     divisors += 457\n        divisors += 461\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rfzbziy.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 163l\n        divisors += 167l\n        divisors += 173l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 205l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 273l\n\
    \        divisors += 277l\n        divisors += 279l\n        divisors += 281l\n\
    \        divisors += 283l\n        divisors += 287l\n        divisors += 289l\n\
    \        divisors += 293l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgiua59ch.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(n)\n\
    \        while(divisors.nonEmpty) {\n            val d = divisors.min\n      \
    \      divisors -= d\n            if(n % d == 0) {\n                return d\n\
    \            }\n        }\n        return n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz8tvro3h.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 343\n        divisors += 349\n    \
    \    divisors += 353\n        divisors += 359\n        divisors += 363\n     \
    \   divisors += 369\n        divisors += 373\n        divisors += 379\n      \
    \  divisors += 383\n        divisors += 389\n        divisors += 397\n       \
    \ divisors += 401\n        divisors += 407\n        divisors += 411\n        divisors\
    \ += 413\n        divisors += 417\n        divisors += 419\n        divisors +=\
    \ 421\n        divisors += 423\n        divisors += 427\n        divisors += 429\n\
    \        divisors += 433\n        divisors += 4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdkjmpvhv.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        divisors.add(1l)\n\
    \        divisors.add(2l)\n        divisors.add(3l)\n        divisors.add(5l)\n\
    \        divisors.add(7l)\n        divisors.add(11l)\n        divisors.add(13l)\n\
    \        divisors.add(17l)\n        divisors.add(19l)\n        divisors.add(23l)\n\
    \        divisors.add(29l)\n        divisors.add(31l)\n        divisors.add(37l)\n\
    \        divisors.add(41l)\n        divisors.add(43l)\n        divisors.add(47l)\n\
    \        divisors.add(53l)\n        divisors.add(59l)\n        divisors.add(61l)\n\
    \        divisors.add(67l)\n        divisors.add(71l)\n        divisors.add(73l)\n\
    \        divisors.add(79l)\n        divisors.add(83l)\n        divisors.add(89l)\n\
    \        divisors.add(97l)\n        divisors.add(101l)\n        divisors.add(103l)\n\
    \        divisors.add(107l)\n        divisors.add(109l)\n        divisors.add(113l)\n\
    \        divisors.add(127l)\n        divisors.add(131l)\n        divisors.add(137l)\n\
    \        divisors.add(139l)\n        divisors.add(149l)\n        divisors.add(151l)\n\
    \        divisors.add(157l)\n        divisors.add(159l)\n        divisors.add(161l)\n\
    \        divisors.add(163l)\n        divisors.add(167l)\n        divisors.add(169l)\n\
    \        divisors.add(173l)\n        divisors.add(177l)\n        divisors.add(179l)\n\
    \        divisors.add(181l)\n        divisors.add(191l)\n        divisors.add(193l)\n\
    \        divisors.add(197l)\n        divisors.add(199l)\n        divisors.add(211l)\n\
    \        divisors.add(223l)\n        divisors.add(227l)\n        divisors.add(229l)\n\
    \        divisors.add(233l)\n        divisors.add(239l)\n        divisors.add(241l)\n\
    \        divisors.add(251l)\n        divisors.add(257l)\n        divisors.add(263l)\n\
    \        divisors.add(269l)\n        divisors.add(271l)\n        divisors.add(277l)\n\
    \        divisors.add(281l)\n        divisors.add(283l)\n        divisors.add(293l)\n\
    \        divisors.add(307l)\n        divisors.add(311l)\n        divisors.add(313l)\n\
    \        divisors.add(317l)\n        divisors.add(323l)\n        divisors.add(327l)\n\
    \        divisors.add(331l)\n        divisors.add(337l)\n        divisors.add(347l)\n\
    \        divisors.add(349l)\n        divisors.add(353l)\n        divisors.add(359l)\n\
    \        divisors.add(363l)\n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) ==\
    \ (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf89hiubb.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2\n        divisors += 3\n        divisors += 5\n        divisors\
    \ += 7\n        divisors += 11\n        divisors += 13\n        divisors += 17\n\
    \        divisors += 19\n        divisors += 23\n        divisors += 29\n    \
    \    divisors += 31\n        divisors += 37\n        divisors += 41\n        divisors\
    \ += 43\n        divisors += 47\n        divisors += 53\n        divisors += 59\n\
    \        divisors += 61\n        divisors += 67\n        divisors += 71\n    \
    \    divisors += 73\n        divisors += 79\n        divisors += 83\n        divisors\
    \ += 89\n        divisors += 97\n        divisors += 101\n        divisors +=\
    \ 103\n        divisors += 107\n        divisors += 109\n        divisors += 113\n\
    \        divisors += 127\n        divisors += 131\n        divisors += 137\n \
    \       divisors += 139\n        divisors += 147\n        divisors += 151\n  \
    \      divisors += 157\n        divisors += 163\n        divisors += 167\n   \
    \     divisors += 173\n        divisors += 179\n        divisors += 181\n    \
    \    divisors += 191\n        divisors += 197\n        divisors += 199\n     \
    \   divisors += 211\n        divisors += 223\n        divisors += 227\n      \
    \  divisors += 229\n        divisors += 233\n        divisors += 239\n       \
    \ divisors += 241\n        divisors += 243\n        divisors += 247\n        divisors\
    \ += 251\n        divisors += 257\n        divisors += 263\n        divisors +=\
    \ 269\n        divisors += 271\n        divisors += 277\n        divisors += 281\n\
    \        divisors += 283\n        divisors += 293\n        divisors += 307\n \
    \       divisors += 311\n        divisors += 313\n        divisors += 317\n  \
    \      divisors += 323\n        divisors += 329\n        divisors += 331\n   \
    \     divisors += 337\n        divisors += 341\n        divisors += 343\n    \
    \    divisors += 347\n        divisors += 353\n        divisors += 359\n     \
    \   divisors += 363\n        divisors += 369\n        divisors += 373\n      \
    \  divisors += 379\n        divisors += 383\n        divisors += 389\n       \
    \ divisors += 397\n        divisors += 401\n        divisors += 407\n        divisors\
    \ += 411\n        divisors += 413\n        divisors += 417\n        divisors +=\
    \ 423\n        divisors += 429\n        divisors += 433\n        divisors += 439\n\
    \        divisors += 443\n        divisors += 44\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpokmibm7p.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 117l\n \
    \       divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 171l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 183l\n        divisors += 187l\n        divisors += 189l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 221l\n        divisors += 223l\n        divisors += 227l\n\
    \        divisors += 229l\n        divisors += 231l\n        divisors += 233l\n\
    \        divisors += 237l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l)) == (1l));\n\
    \    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa0o055pe.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792464
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.ArrayBuffer.empty[Long]\n\
    \        divisors += 2l\n        divisors += 3l\n        divisors += 5l\n    \
    \    divisors += 7l\n        divisors += 11l\n        divisors += 13l\n      \
    \  divisors += 17l\n        divisors += 19l\n        divisors += 23l\n       \
    \ divisors += 29l\n        divisors += 31l\n        divisors += 37l\n        divisors\
    \ += 41l\n        divisors += 43l\n        divisors += 47l\n        divisors +=\
    \ 53l\n        divisors += 59l\n        divisors += 61l\n        divisors += 67l\n\
    \        divisors += 71l\n        divisors += 73l\n        divisors += 79l\n \
    \       divisors += 83l\n        divisors += 89l\n        divisors += 97l\n  \
    \      divisors += 101l\n        divisors += 103l\n        divisors += 107l\n\
    \        divisors += 109l\n        divisors += 113l\n        divisors += 117l\n\
    \        divisors += 121l\n        divisors += 123l\n        divisors += 127l\n\
    \        divisors += 129l\n        divisors += 131l\n        divisors += 137l\n\
    \        divisors += 139l\n        divisors += 141l\n        divisors += 143l\n\
    \        divisors += 147l\n        divisors += 149l\n        divisors += 151l\n\
    \        divisors += 153l\n        divisors += 157l\n        divisors += 159l\n\
    \        divisors += 161l\n        divisors += 163l\n        divisors += 167l\n\
    \        divisors += 169l\n        divisors += 173l\n        divisors += 177l\n\
    \        divisors += 179l\n        divisors += 181l\n        divisors += 191l\n\
    \        divisors += 193l\n        divisors += 197l\n        divisors += 199l\n\
    \        divisors += 201l\n        divisors += 203l\n        divisors += 207l\n\
    \        divisors += 209l\n        divisors += 211l\n        divisors += 213l\n\
    \        divisors += 217l\n        divisors += 219l\n        divisors += 223l\n\
    \        divisors += 227l\n        divisors += 229l\n        divisors += 233l\n\
    \        divisors += 239l\n        divisors += 241l\n        divisors += 243l\n\
    \        divisors += 247l\n        divisors += 249l\n        divisors += 251l\n\
    \        divisors += 253l\n        divisors += 257l\n        divisors += 259l\n\
    \        divisors += 263l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjnd6h9_f.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659792487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        var\
    \ maxDivisor = 0\n        for (i <- 1 to n){\n            val divisor = i / 2\n\
    \            if (divisor % 2 == 0){\n                divisors += divisor\n   \
    \         }\n            if (divisors.contains(divisor)){\n                maxDivisor\
    \ = divisor\n            }\n        }\n        maxDivisor\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgxbbms3s.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpgxbbms3s.scala:10:23 --------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n){\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ for (d <- 2 to n by 2) {\n            if (n % d == 0) {\n                divisors\
    \ += d\n            }\n        }\n        divisors.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpojcs719v.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpojcs719v.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) {\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m  |\e[0m                     \
    \  Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n) if (n % d == 0) divisors += d\n        divisors.max\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(largestDivisor((3l)) == (1l));\n\
    \    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l)) ==\
    \ (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbtxrbgv4.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbtxrbgv4.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n) \e[33mif\e\
    [0m (n % d == \e[31m0\e[0m) divisors += d\n\e[31m\e[31m  |\e[0m              \
    \         ^\e[0m\n\e[31m  |\e[0m                       Found:    (n : Long)\n\e\
    [31m  |\e[0m                       Required: Int\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792463
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.Set[Long]()\n        for\
    \ (d <- 2 to n by 2)\n            if (n % d == 0)\n                divisors +=\
    \ d\n        divisors.max\n    }\n    def main(args: Array[String]) = {\n    assert(largestDivisor((3l))\
    \ == (1l));\n    assert(largestDivisor((7l)) == (1l));\n    assert(largestDivisor((10l))\
    \ == (5l));\n    assert(largestDivisor((100l)) == (50l));\n    assert(largestDivisor((49l))\
    \ == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnpzadwxx.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnpzadwxx.scala:9:23 ---------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mfor\e[0m (d <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m)\n\e[31m\e[31m  |\e[0m                       ^\e[0m\n\e[31m  |\e[0m      \
    \                 Found:    (n : Long)\n\e[31m  |\e[0m                       Required:\
    \ Int\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659792478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n    // >>> largestDivisor((15l))\n    // (5l)\n    def largestDivisor(n\
    \ : Long) : Long = {\n        val divisors = mutable.HashSet[Long]()\n       \
    \ divisors += 2l\n        divisors += 3l\n        divisors += 5l\n        divisors\
    \ += 7l\n        divisors += 11l\n        divisors += 13l\n        divisors +=\
    \ 17l\n        divisors += 19l\n        divisors += 23l\n        divisors += 29l\n\
    \        divisors += 31l\n        divisors += 37l\n        divisors += 41l\n \
    \       divisors += 43l\n        divisors += 47l\n        divisors += 53l\n  \
    \      divisors += 59l\n        divisors += 61l\n        divisors += 67l\n   \
    \     divisors += 71l\n        divisors += 73l\n        divisors += 79l\n    \
    \    divisors += 83l\n        divisors += 89l\n        divisors += 97l\n     \
    \   divisors += 101l\n        divisors += 103l\n        divisors += 107l\n   \
    \     divisors += 109l\n        divisors += 113l\n        divisors += 127l\n \
    \       divisors += 131l\n        divisors += 137l\n        divisors += 139l\n\
    \        divisors += 149l\n        divisors += 151l\n        divisors += 157l\n\
    \        divisors += 159l\n        divisors += 161l\n        divisors += 163l\n\
    \        divisors += 167l\n        divisors += 169l\n        divisors += 173l\n\
    \        divisors += 177l\n        divisors += 179l\n        divisors += 181l\n\
    \        divisors += 191l\n        divisors += 193l\n        divisors += 197l\n\
    \        divisors += 199l\n        divisors += 201l\n        divisors += 203l\n\
    \        divisors += 207l\n        divisors += 209l\n        divisors += 211l\n\
    \        divisors += 213l\n        divisors += 217l\n        divisors += 219l\n\
    \        divisors += 223l\n        divisors += 227l\n        divisors += 229l\n\
    \        divisors += 233l\n        divisors += 239l\n        divisors += 241l\n\
    \        divisors += 243l\n        divisors += 247l\n        divisors += 249l\n\
    \        divisors += 251l\n        divisors += 253l\n        divisors += 257l\n\
    \        divisors += 259l\n        divisors += 263l\n        divisors += 267l\n\
    \        divisors += 269l\n        divisors += 271l\n        divisors += 277l\n\
    \        divisors += 279l\n        divisors += 281l\n        divisors += 283l\n\
    \        divisors += 287l\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(largestDivisor((3l)) == (1l));\n    assert(largestDivisor((7l))\
    \ == (1l));\n    assert(largestDivisor((10l)) == (5l));\n    assert(largestDivisor((100l))\
    \ == (50l));\n    assert(largestDivisor((49l)) == (7l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7i9wqe3u.scala:8:23 -------------------------\e\
    [0m\e[0m\n\e[31m8 |\e[0m        \e[33mval\e[0m \e[36mdivisors\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                       ^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                       Not found: mutable\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659792487

name: HumanEval_75_is_multiply_prime
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n    // and false otherwise.\n    // Knowing that (a) is less\
  \ then 100. \n    // Example:\n    // >>> isMultiplyPrime((30l))\n    // (true)\n\
  \    // 30 = 2 * 3 * 5\n    def isMultiplyPrime(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isMultiplyPrime((5l))\
  \ == (false));\n    assert(isMultiplyPrime((30l)) == (true));\n    assert(isMultiplyPrime((8l))\
  \ == (true));\n    assert(isMultiplyPrime((10l)) == (false));\n    assert(isMultiplyPrime((125l))\
  \ == (true));\n    assert(isMultiplyPrime((105l)) == (true));\n    assert(isMultiplyPrime((126l))\
  \ == (false));\n    assert(isMultiplyPrime((729l)) == (false));\n    assert(isMultiplyPrime((891l))\
  \ == (false));\n    assert(isMultiplyPrime((1001l)) == (true));\n    }\n\n}\n"
completions: ["        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ < a)\n        primesCount < 3", "        val\
    \ primes = mutable.Set[Long]()\n        val primeFactors = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime4 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime7 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime10 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime13 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime16 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime19 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime22 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime25 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime28 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime29 = ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p != 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p != 0).forall(p => a % p\
    \ == 0)\n        isPrime", "        val primes = mutable.ListBuffer(2, 3, 5, 7)\n\
    \        val isPrime = mutable.ListBuffer(false, false, false, false)\n      \
    \  val isMultiplyPrime = mutable.ListBuffer(false, false, false, false)\n    \
    \    val isMultiplyPrime2 = mutable.ListBuffer(false, false, false, false)\n \
    \       val isMultiplyPrime3 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.size\n        val isPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplyPrime = primes.exists(a % _ == 0 && a != 1)\n\
    \        val isMultiplyPrime2 = primes.exists(a % _ == 0 && a != 1 && a != 3)\n\
    \        val isMultiplyPrime3 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5)\n        val isMultiplyPrime4 = primes.exists(a % _ == 0 && a != 1 &&\
    \ a != 3 && a != 5 && a != 7)\n        val isMultiplyPrime5 = primes.exists(a\
    \ % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11)\n        val isMultiplyPrime6\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13)\n        val isMultiplyPrime7 = primes.exists(a % _ == 0 && a !=\
    \ 1 && a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a != 17)\n        val\
    \ isMultiplyPrime8 = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 &&\
    \ a != 7 && a != 11 && a != 13 && a != 17 && a != 19)\n        val isMultiplyPrime9\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23)\n        val isMultiplyPrime10\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29)\n        val isMultiplyPrime11\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11\
    \ && a != 13 && a != 17 && a != 19 && a != 23 && a != 29 && a != 31)\n       \
    \ val isMultiplyPrime12 = primes.exists(a % _ == ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isMultiplyPrime\
    \ = a % primes(primesCount-1) == 0\n        primesCount match {\n            case\
    \ 0 => isMultiplyPrime\n            case _ => {\n                val isPrime =\
    \ primes.takeWhile(p => a % p == 0).size == primesCount\n                isMultiplyPrime\
    \ && isPrime\n            }\n        }", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(a % _ == 0)\n        val\
    \ isMultiplication = a % 3 == 0\n        val isMultiplyPrime = a % 2 == 0\n  \
    \      val isMultiplyPrime2 = a % 5 == 0\n        val isMultiplyPrime3 = a % 7\
    \ == 0\n        val isMultiplyPrime5 = a % 11 == 0\n        val isMultiplyPrime7\
    \ = a % 13 == 0\n        val isMultiplyPrime11 = a % 17 == 0\n        val isMultiplyPrime13\
    \ = a % 19 == 0\n        val isMultiplyPrime17 = a % 23 == 0\n        val isMultiplyPrime19\
    \ = a % 29 == 0\n        val isMultiplyPrime23 = a % 31 == 0\n        val isMultiplyPrime29\
    \ = a % 37 == 0\n        val isMultiplyPrime31 = a % 41 == 0\n        val isMultiplyPrime37\
    \ = a % 43 == 0\n        val isMultiplyPrime41 = a % 47 == 0\n        val isMultiplyPrime43\
    \ = a % 53 == 0\n        val isMultiplyPrime47 = a % 59 == 0\n        val isMultiplyPrime53\
    \ = a % 61 == 0\n        val isMultiplyPrime59 = a % 67 == 0\n        val isMultiplyPrime61\
    \ = a % 71 == 0\n        val isMultiplyPrime67 = a % 73 == 0\n        val isMultiplyPrime71\
    \ = a % 79 == 0\n        val isMultiplyPrime73 = a % 83 == 0\n        val isMultiplyPrime79\
    \ = a % 89 == 0\n        val isMultiplyPrime83 = a % 97 == 0\n        val isMultiplyPrime89\
    \ = a % 101\n        val isMultiplyPrime97 = a % 103\n        val isMultiplyPrime101\
    \ = a % 107\n        val isMultiplyPrime103 = a % 109\n        val isMultiplyPrime107\
    \ = a % 113\n        val isMultiplyPrime109 = a % 117\n        val isMultiplyPrime113\
    \ = a % 121\n        val isMultiplyPrime117 = a % 123\n        val isMultiplyPrime",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.toSet.contains(a)\n        val isMultiplyPrime = primes.toSet.subsetOf(primes.toSet.filter(_\
    \ % _ == a))\n        isPrime && isMultiplyPrime", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesSet = primes.toSet\n        val isPrime = primes.exists(a =>\
    \ a <= a)\n        val isMultiplyPrime = primes.exists(a => a <= a && primesSet.contains(a\
    \ * a))\n        isPrime && isMultiplyPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = mutable.ArrayBuffer(false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val primesCount = primes.size\n        var isMultiplyPrime\
    \ = true\n        for (i <- 2 to primesCount) {\n            if (a % primes(i)\
    \ == 0) {\n                isMultiplyPrime = false\n                break\n  \
    \          }\n        }\n        return isMultiplyPrime", "        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        for (i <- 2 to a) {\n            if (a % i == 0) {\n                primes\
    \ += i\n                isPrime += true\n            }\n        }\n        primes.toList.forall(p\
    \ => isPrime(p))", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ < a)\n        primesCount < 3", "        val\
    \ primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.exists(a\
    \ % _ == 0)\n        val isMultiplication = a % 2 == 0 && a % 3 == 0\n       \
    \ val isMultiplicationPrime = primes.exists(a % _ == 0)\n        val isMultiplicationPrime2\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime3 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime4 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime5 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime6\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime7 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime8 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime9 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime10\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime11 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime12 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime13 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime14 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime15\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime16 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime17 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime18 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime19 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime20\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime21 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime22 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime23 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime24 = primes.exists(a % _", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val isPrime = primes.takeWhile(p => a % p != 0).forall(p => a % p == 0)\n\
    \        primes.takeWhile(p => a % p != 0).forall(p => a % p == 0) && isPrime",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Int]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty", "        val primes = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isMultiplyPrime = a % primes.last.equals(0)\n   \
    \     if (isMultiplyPrime) {\n            for (i <- primes.indices) {\n      \
    \          if (a % primes(i) == 0) {\n                    primes.remove(i)\n \
    \                   primesCount -= 1\n                }\n            }\n     \
    \   }\n        primes.size == primesCount", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ > a)\n        primesCount\
    \ <= 3", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ > a)\n        primesCount < 3", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplication = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplying = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyingPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMulti", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val isPrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n \
    \       val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Boolean]()\n        val isPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Boolean]()\n       \
    \ val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n   \
    \     val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val n = a\n        val i = 2\n        while (i <= n / 2) {\n        \
    \    if (n % i == 0) {\n                primes += i\n                n /= i\n\
    \            }\n            i += 1\n        }\n        primes.forall(x => a %\
    \ x == 0)", "        val primes = mutable.Set[Long]()\n        val primesSet =\
    \ mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n        val\
    \ isPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Boolean]()\n        val is", " \
    \       val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Boolean]()\n        val isMultiply", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.size\n        val isPrime = primes.takeWhile(_ < a).forall(a\
    \ % _ == 0)\n        val isMultiplyPrime = primes.takeWhile(_ < a).forall(a %\
    \ _ == 0)\n        val isMultiplyPrime2 = primes.takeWhile(_ < a).forall(a % _\
    \ == 0)\n        val isMultiplyPrime3 = primes.takeWhile(_ < a).forall(a % _ ==\
    \ 0)\n        val isMultiplyPrime4 = primes.takeWhile(_ < a).forall(a % _ == 0)\n\
    \        val isMultiplyPrime5 = primes.takeWhile(_ < a).forall(a % _ == 0)\n \
    \       val isMultiplyPrime6 = primes.takeWhile(_ < a).forall(a % _ == 0)\n  \
    \      val isMultiplyPrime7 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime8 = primes.takeWhile(_ < a).forall(a % _ == 0)\n    \
    \    val isMultiplyPrime9 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime10 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime11 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime12 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime13 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime14 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime15 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime16 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime17 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime18 = primes.takeWhile(_ < a).forall(a % _ == 0)\n     \
    \   val isMultiplyPrime19 = primes.takeWhile(_ < a).forall(a % _ == ", "     \
    \   val primes = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime28 = mut",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val isPrime = primes.takeWhile(p => a % p == 0).length == primes.length\n\
    \        val isMultiplication = a % primes.head == 0\n        val isMultiplyPrime\
    \ = isPrime && isMultiplication\n        isMultiplyPrime", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount = primes.count(_\
    \ < a)\n        primesCount < 3", "        val primes = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ < a)\n        primesCount < 3", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount = primes.length\n\
    \        val isMultiplyPrime = a % primes.last.equals(0)\n        primes.drop(primesCount\
    \ - 1).foreach(p => {\n            if (a % p.equals(0)) {\n                isMultiplyPrime\
    \ = false\n            }\n        })\n        isMultiplyPrime", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount = primes.count(_\
    \ < a)\n        primesCount < 3", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        for (i <- 2 to a)\
    \ {\n            if (a % i == 0) {\n                primes += i\n            \
    \    isPrime += true\n            }\n        }\n        primes.toList.forall(x\
    \ => isPrime.contains(true))", "        val primes = mutable.Set[Long]()\n   \
    \     val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, ", " \
    \       val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount <= 2", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.size\n        val isMultiplyPrime = a % primes(primesCount\
    \ - 1) != 0\n        primes.clear()\n        primesCount\n        isMultiplyPrime",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p == 0).length\
    \ == primes.length\n        primes.takeWhile(p => a % p == 0).forall(p => isPrime)",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val isPrime = mutable.ArrayBuffer(false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ListBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val isPrime = mutable.ListBuffer(false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primesCount = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer.empty[Long]\n      \
    \  val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime3\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime7\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime11\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime15\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime19\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime23\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime27\
    \ = mutable.ArrayBuffer.empty", "        val primes = mutable.ArrayBuffer(2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97)\n        val isPrime = primes.toSet.contains(a)\n        val isMultiplicationPrime\
    \ = primes.toSet.subsetOf(primes.toSet).contains(a * a)\n        isPrime && isMultiplicationPrime",
  "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primeFactors = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime = mutable.Set[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime3 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime6 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime9 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime12 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime15 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime18 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime21 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime24 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrime27 = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Boolean]()\n        val isMultiplyPrime29\
    \ = ", "        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n        val\
    \ isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ListBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ListBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.exists(x => a % x == 0)\n        val isMultiplyPrime = primes.exists(x\
    \ => a % x == 0 && isPrime)\n        isMultiplyPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ListBuffer[Long]()\n \
    \       val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = primes.takeWhile(x => a % x == 0).length\
    \ == primesCount\n        isPrime", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        for (i <- 2 to a/2)\
    \ {\n            if (a % i == 0) {\n                primes += i\n            \
    \    isPrime += true\n            }\n        }\n        primes.toList.forall(x\
    \ => isPrime.contains(x))", "        val primes = mutable.ArrayBuffer(2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val primesSet = primes.toSet\n        val isPrime = primes.forall(x\
    \ => a % x == 0)\n        val isMultiplyPrime = primes.forall(x => a % x == 0\
    \ && isPrime)\n        isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime29 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime41 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime51 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime61 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime73 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime83 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89\
    \ = mutable.ListBuffer[Boolean]()\n        val isMulti", "        val primes =\
    \ mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.forall(x => a % x == 0)\n        val isMultiplyPrime = primes.forall(x\
    \ => a % x == 0 && isPrime)\n        isMultiplyPrime", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primesCount = primes.count(_ > a)\n        primesCount < 3", "    \
    \    val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ListBuffer(2, 3, 5, 7)\n    \
    \    var isPrime = true\n        for(i <- primes.indices) {\n            val isPrime\
    \ = primes(i) * primes(i) * primes(i) <= a\n            if(isPrime) primes.remove(i)\n\
    \            else isPrime = false\n        }\n        isPrime", "        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime29\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime31 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime37 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime41\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime43 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime47 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime51\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime53 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime59 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime61\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime67 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime71 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime73\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime79 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime81 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime83\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime89 = mutable.ListBuffer[Boolean]()\n\
    \        val isMulti", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n     \
    \   val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n  \
    \      val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.size\n        val isPrime = primes.takeWhile(_\
    \ < a).forall(a % _ == 0)\n        val isMultiplyPrime = primes.takeWhile(_ <\
    \ a).forall(a % _ == 0)\n        val isMultiplyPrime2 = primes.takeWhile(_ < a).forall(a\
    \ % _ == 0)\n        val isMultiplyPrime3 = primes.takeWhile(_ < a).forall(a %\
    \ _ == 0)\n        val isMultiplyPrime4 = primes.takeWhile(_ < a).forall(a % _\
    \ == 0)\n        val isMultiplyPrime5 = primes.takeWhile(_ < a).forall(a % _ ==\
    \ 0)\n        val isMultiplyPrime6 = primes.takeWhile(_ < a).forall(a % _ == 0)\n\
    \        val isMultiplyPrime7 = primes.takeWhile(_ < a).forall(a % _ == 0)\n \
    \       val isMultiplyPrime8 = primes.takeWhile(_ < a).forall(a % _ == 0)\n  \
    \      val isMultiplyPrime9 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime10 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime11 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime12 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime13 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime14 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime15 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime16 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime17 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime18 = primes.takeWhile(_ < a).forall(a % _ == 0)\n   \
    \     val isMultiplyPrime19 = primes.takeWhile(_ < a).forall(a % _ == ", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(x => a % x == 0)\n        val isMultiplication = isPrime &&\
    \ a % primes.last == 0\n        isMultiplication", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime = primes.exists(a % _ == 0)\n        val isMultiplicationPrime2\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime3 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime4 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime5 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime6\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime7 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime8 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime9 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime10\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime11 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime12 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime13 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime14 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime15\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime16 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime17 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime18 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime19 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime20\
    \ = primes.exists(a % _ == 0)\n        val isMultiplicationPrime21 = primes.exists(a\
    \ % _ == 0)\n        val isMultiplicationPrime22 = primes.exists(a % _ == 0)\n\
    \        val isMultiplicationPrime23 = primes.exists(a % _ == 0)\n        val\
    \ isMultiplicationPrime24 = primes.exists(a % _ == 0)\n        val isMultiplicationPrime25\
    \ = primes.", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primesCount = primes.count(_ < a)\n        primesCount <= 3 && primesCount\
    \ >= 2", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, ", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a)\n        primesCount\
    \ < 3", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ > a)\n        primesCount < 3", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.exists(a % _\
    \ == 0 && a != 1)\n        val isMultiplyPrime2 = primes.exists(a % _ == 0 &&\
    \ a != 1 && a != 3)\n        val isMultiplyPrime3 = primes.exists(a % _ == 0 &&\
    \ a != 1 && a != 3 && a != 5)\n        val isMultiplyPrime4 = primes.exists(a\
    \ % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7)\n        val isMultiplyPrime5\
    \ = primes.exists(a % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11)\n\
    \        val isMultiplyPrime6 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5 && a != 7 && a != 11 && a != 13)\n        val isMultiplyPrime7 = primes.exists(a\
    \ % _ == 0 && a != 1 && a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a\
    \ != 17)\n        val isMultiplyPrime8 = primes.exists(a % _ == 0 && a != 1 &&\
    \ a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a != 17 && a != 19)\n  \
    \      val isMultiplyPrime9 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5 && a != 7 && a != 11 && a != 13 && a != 17 && a != 19 && a != 23)\n \
    \       val isMultiplyPrime10 = primes.exists(a % _ == 0 && a != 1 && a != 3 &&\
    \ a != 5 && a != 7 && a != 11 && a != 13 && a != 17 && a != 19 && a != 23 && a\
    \ != 29)\n        val isMultiplyPrime11 = primes.exists(a % _ == 0 && a != 1 &&\
    \ a != 3 && a != 5 && a != 7 && a != 11 && a != 13 && a != 17 && a != 19 && a\
    \ != 23 && a != 29 && a != 31)\n        val isMultiplyPrime12 = primes.exists(a ",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.length\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesSet = primes.toSet\n        val isPrime =\
    \ primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.exists(a =>\
    \ primesSet.contains(a * a))\n        isMultiplyPrime", "        val primes =\
    \ mutable.ArrayBuffer.empty[Long]\n        val primeFactors = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime4 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime8 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime12 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime16 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime20 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime24 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime27 = mutable.ArrayBuffer.empty", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime = primes.exists(x\
    \ => a % x == 0)\n        val isMultiplicationPrime = primes.exists(x => a % x\
    \ == 0 && a % x == x)\n        val isMultiplicationPrime2 = primes.exists(x =>\
    \ a % x == 0 && a % x == x - 1)\n        val isMultiplicationPrime3 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 2)\n        val isMultiplicationPrime4 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 3)\n        val isMultiplicationPrime5 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 4)\n        val isMultiplicationPrime6 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 5)\n        val isMultiplicationPrime7 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 6)\n        val isMultiplicationPrime8 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 7)\n        val isMultiplicationPrime9 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 8)\n        val isMultiplicationPrime10 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 9)\n        val isMultiplicationPrime11 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 10)\n        val isMultiplicationPrime12 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 11)\n        val isMultiplicationPrime13 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 12)\n        val isMultiplicationPrime14 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 13)\n        val isMultiplicationPrime15 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 14)\n        val isMultiplicationPrime16 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 15)\n        val isMultiplicationPrime17 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 16)\n        val isMultiplicationPrime18 = primes.exists(x\
    \ => a % x == 0 && a % x == x - 17)\n        val isMultiplicationPrime19 = primes.exists(x\
    \ => a % x == ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n     \
    \   val primesCount = primes.count(_ > a)\n        primesCount < 3", "       \
    \ val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a) \n        primesCount < 3", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.Set[Long]()\n        val isPrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n \
    \       val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimePrimePrimePrime = mutable.Set[Long]()\n        val\
    \ isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime",
  "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.count(_ < a)\n        primesCount < 3", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primesCount = primes.count(_ < a)\n        primesCount < 3", "    \
    \    val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount\
    \ = primes.size\n        val isPrime = a <= 100\n        val isMultiplyPrime =\
    \ primes.exists(x => a % x == 0)\n        if (isPrime && isMultiplyPrime) {\n\
    \            return true\n        } else {\n            return false\n       \
    \ }", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val primesSet = mutable.Set[Long](2,\
    \ 3, 5, 7)\n        val isMultiplyPrime = mutable.Set[Long]()\n        for (i\
    \ <- primes.indices) {\n            if (primes(i) * primes(i) == a) {\n      \
    \          isMultiplyPrime += primes(i)\n            }\n        }\n        primes.toSet.size\
    \ == isMultiplyPrime.toSet.size && primes.toSet.size == primesSet.size", "   \
    \     val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.count(_ < a) \n        primesCount\
    \ < 3", "        val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime2 = mutable.Set[Long]()\n        val isMultiplyPrime3\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime4 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime5 = mutable.Set[Long]()\n        val isMultiplyPrime6\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime7 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime8 = mutable.Set[Long]()\n        val isMultiplyPrime9\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime10 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime11 = mutable.Set[Long]()\n        val isMultiplyPrime12\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime13 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime14 = mutable.Set[Long]()\n        val isMultiplyPrime15\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime16 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime17 = mutable.Set[Long]()\n        val isMultiplyPrime18\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime19 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime20 = mutable.Set[Long]()\n        val isMultiplyPrime21\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime22 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime23 = mutable.Set[Long]()\n        val isMultiplyPrime24\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime25 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime26 = mutable.Set[Long]()\n        val isMultiplyPrime27\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime28 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime29 = mutable.Set[Long]()\n        val isMultiply",
  "        val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer(2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n      \
    \  val primesCount = primes.count(_ < a)\n        primesCount <= 3", "       \
    \ val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val primesCount = primes.count(_ > a)\n        primesCount < 3", "  \
    \      val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime2 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime3 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime4 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime5 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime6 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime7 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime8 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime9 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime10 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime11 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime12 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime13 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime14 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime15 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime16 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime17 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime18 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime19 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime20 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime21 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime22 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime23 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime24 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime25 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val isMultiplyPrime26 = mutable.ArrayBuffer(false,\
    \ false, false, false)\n        val ", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime2 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime3 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime4\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime5 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime7 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime8\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime9 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime11 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime12\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime13 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime15 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime16\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime17 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime19 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime20\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime21 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime23 = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime24\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isMultiplyPrime25 = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isMultiplyPrime27 = mutable.ArrayBuffer.empty", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        for (i <- 2 to (a/3))\
    \ {\n            if (a % i == 0) {\n                primes += i\n            \
    \    isPrime += true\n            }\n        }\n        primes.toList == primes.filter(x\
    \ => isPrime.contains(true)).map(x => true).filter(x => !isPrime.contains(true)).map(x\
    \ => false)", "        val primes = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28 = mut", "   \
    \     val primes = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrime2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime4 = mutable.Set[Long]()\n        val isMultiplyPrime5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime7 = mutable.Set[Long]()\n        val isMultiplyPrime8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime10 = mutable.Set[Long]()\n        val isMultiplyPrime11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime13 = mutable.Set[Long]()\n        val isMultiplyPrime14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime16 = mutable.Set[Long]()\n        val isMultiplyPrime17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime19 = mutable.Set[Long]()\n        val isMultiplyPrime20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime22 = mutable.Set[Long]()\n        val isMultiplyPrime23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime25 = mutable.Set[Long]()\n        val isMultiplyPrime26\
    \ = mutable.Set[Long]()\n        val isMultiplyPrime27 = mutable.Set[Long]()\n\
    \        val isMultiplyPrime28 = mutable.Set[Long]()\n        val isMultiplyPrime29\
    \ = mutable.Set[Long]()\n        val isMultiply", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(a % _ == 0)\n        val\
    \ isMultiplication = a % 3 == 0\n        val isLessThan100 = a < 100\n       \
    \ val isMultiplyPrime = a % 3 == 0 && isPrime && isMultiplication && isLessThan100\n\
    \        return isMultiplyPrime", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Boolean]()\n\
    \        val isPrimeSet = mutable.Set[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimeSet = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimeSet\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrime = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.Set[Boolean]()\n        val isMultiplyPrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n  \
    \      val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n    \
    \    val isMultiplyPrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n      \
    \  val isMultiplyPrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n   \
    \     val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = mutable.Set[Boolean]()\n\
    \        val isMultiplyPrimePrimePrimePrimePrimePrimePrime", "        val primes\
    \ = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val primesCount = primes.length\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, ", "        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val isPrime = mutable.Set[Long]()\n        val isPrimeSet = mutable.Set[Long]()\n\
    \        val isMultiplyPrime = mutable.Set[Long]()\n        val isMultiplyPrimeSet\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet2 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n        val isMultiplyPrimeSet4\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet5 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n        val isMultiplyPrimeSet7\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet8 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n        val isMultiplyPrimeSet10\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet11 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n        val isMultiplyPrimeSet13\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet14 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n        val isMultiplyPrimeSet16\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet17 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n        val isMultiplyPrimeSet19\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet20 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n        val isMultiplyPrimeSet22\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet23 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n        val isMultiplyPrimeSet25\
    \ = mutable.Set[Long]()\n        val is", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.ListBuffer[Long]()\n        val primesCount\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimeCount = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrimePrime = mutable.ListBuffer[Boolean]()\n        val\
    \ isMultiplyPrimePrimeCount = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime28\
    \ = mut", "        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val isPrime = mutable.Set[Long]()\n\
    \        val isPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrime = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet = mutable.Set[Long]()\n        val isMultiplyPrimeSet2\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet3 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet4 = mutable.Set[Long]()\n        val isMultiplyPrimeSet5\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet6 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet7 = mutable.Set[Long]()\n        val isMultiplyPrimeSet8\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet9 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet10 = mutable.Set[Long]()\n        val isMultiplyPrimeSet11\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet12 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet13 = mutable.Set[Long]()\n        val isMultiplyPrimeSet14\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet15 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet16 = mutable.Set[Long]()\n        val isMultiplyPrimeSet17\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet18 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet19 = mutable.Set[Long]()\n        val isMultiplyPrimeSet20\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet21 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet22 = mutable.Set[Long]()\n        val isMultiplyPrimeSet23\
    \ = mutable.Set[Long]()\n        val isMultiplyPrimeSet24 = mutable.Set[Long]()\n\
    \        val isMultiplyPrimeSet25 = mutable.Set[Long]()\n        val is", "  \
    \      val primes = mutable.ListBuffer[Long]()\n        val primeFactors = mutable.ListBuffer[Long]()\n\
    \        val isPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime27 = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.exists(x => a % x == 0)\n    \
    \    val isMultiplyPrime = primes.exists(x => a % x == 0 && isPrime)\n       \
    \ isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97)\n        val primesCount = primes.length\n        val isPrime = mutable.ArrayBuffer(false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n  \
    \      val primesCount = primes.count(_ > a)\n        primesCount <= 3", "   \
    \     val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ListBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p == 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p == 0).forall(p => a % p\
    \ == 0) && isPrime", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97)\n        val primesSet = primes.toSet\n        val isPrime = a % primes.toSet.size\
    \ == 0\n        val isMultiplicationPrime = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime2 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime3 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime4 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime5 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime6 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime7 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime8 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime9 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime10 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime11 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime12 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime13 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime14 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime15 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime16 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime17 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime18 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime19 = primes.toSet.subsetOf(primesSet).size\
    \ == 3\n        val isMultiplicationPrime20 = primes.toSet.subsetOf(primesSet).",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = mutable.ArrayBuffer(false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = primes.exists(a % _ == 0)\n        val isMultiplication\
    \ = a % 3 == 0\n        isPrime && isMultiplication", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7)\n      \
    \  val isPrime = mutable.ArrayBuffer(false, false, false, false)\n        val\
    \ isMultiplyPrime = mutable.ArrayBuffer(false, false, false, false)\n        val\
    \ isMultiplyPrime2 = mutable.ArrayBuffer(false, false, false, false)\n       \
    \ val isMultiplyPrime3 = mutable.ArrayBuffer(false, false, false, false)\n   \
    \     val isMultiplyPrime4 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime5 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime6 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime7 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime8 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime9 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime10 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime11 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime12 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime13 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime14 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime15 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime16 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime17 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime18 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime19 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime20 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime21 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime22 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime23 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime24 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime25 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val isMultiplyPrime26 = mutable.ArrayBuffer(false, false, false, false)\n\
    \        val ", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n\
    \        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val ", "        val primes = mutable.ListBuffer[Long]()\n        val\
    \ primesCount = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[",
  "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)\n        val isPrime\
    \ = primes.exists(a % _ == 0)\n        val isMultiplyPrime = primes.forall(a %\
    \ _ == 0)\n        isPrime && isMultiplyPrime", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val isPrime = primes.takeWhile(p => a % p != 0).forall(p\
    \ => a % p == 0)\n        primes.takeWhile(p => a % p != 0).forall(p => a % p\
    \ == 0) && isPrime", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, ", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer[", "        val primes = mutable.ArrayBuffer(2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97)\n        val isPrime = mutable.ArrayBuffer(false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, false, false, false, false, false,\
    \ false, false, false, false, false, false, ", "        val primes = mutable.ArrayBuffer(2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97)\n        val primesCount = primes.size\n        val isMultiplyPrime\
    \ = a % primes.head == 0\n        primes.dropWhile(p => p < a).takeWhile(p =>\
    \ p < a).foreach(p => isMultiplyPrime = p < a && isMultiplyPrime)\n        isMultiplyPrime",
  "        val primes = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime2\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime5\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime8\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime11\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime14\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime17\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime20\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime23\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime26\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime28 = mut", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primeFactors = mutable.ListBuffer[Long]()\n        val isPrime =\
    \ mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime2 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime3\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime4 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime5 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime6\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime7 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime8 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime9\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime10 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime11 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime12\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime13 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime14 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime15\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime16 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime17 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime18\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime19 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime20 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime21\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime22 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime23 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime24\
    \ = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime25 = mutable.ListBuffer[Boolean]()\n\
    \        val isMultiplyPrime26 = mutable.ListBuffer[Boolean]()\n        val isMultiplyPrime27\
    \ = mutable.ListBuffer["]
stop_tokens:
- "\n    }\n"

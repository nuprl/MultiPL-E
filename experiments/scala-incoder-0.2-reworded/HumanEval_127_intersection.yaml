name: HumanEval_127_intersection
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given two intervals,\n    // where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n    // The given intervals are\
  \ closed which means that the interval (start, end)\n    // includes both start\
  \ and end.\n    // For each given interval, it is assumed that its start is less\
  \ or equal its end.\n    // Your task is to determine whether the length of intersection\
  \ of these two \n    // intervals is a prime number.\n    // Example, the intersection\
  \ of the intervals (1, 3), (2, 4) is (2, 3)\n    // which its length is 1, which\
  \ not a prime number.\n    // If the length of the intersection is a prime number,\
  \ return \"YES\",\n    // otherwise, return \"NO\".\n    // If the two intervals\
  \ don't intersect, return \"NO\".\n    // [input/output] samples:\n    // >>> intersection(((1l,\
  \ 2l)), ((2l, 3l)))\n    // (\"NO\")\n    // >>> intersection(((-1l, 1l)), ((0l,\
  \ 4l)))\n    // (\"NO\")\n    // >>> intersection(((-3l, -1l)), ((-5l, 5l)))\n \
  \   // (\"YES\")\n    def intersection(interval1 : Tuple2[Long, Long], interval2\
  \ : Tuple2[Long, Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(intersection(((1l,\
  \ 2l)), ((2l, 3l))).equals((\"NO\")));\n    assert(intersection(((-1l, 1l)), ((0l,\
  \ 4l))).equals((\"NO\")));\n    assert(intersection(((-3l, -1l)), ((-5l, 5l))).equals((\"\
  YES\")));\n    assert(intersection(((-2l, 2l)), ((-4l, 0l))).equals((\"YES\")));\n\
  \    assert(intersection(((-11l, 2l)), ((-1l, -1l))).equals((\"NO\")));\n    assert(intersection(((1l,\
  \ 2l)), ((3l, 5l))).equals((\"NO\")));\n    assert(intersection(((1l, 2l)), ((1l,\
  \ 2l))).equals((\"NO\")));\n    assert(intersection(((-2l, -2l)), ((-3l, -2l))).equals((\"\
  NO\")));\n    }\n\n}\n"
completions: ["        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            val start5 = start3\n            val end5 = end3\n \
    \           val start6 = start4\n            val end6 = end4\n            val\
    \ start7 = start5\n            val end7 = end5\n            val start8 = start6\n\
    \            val end8 = end6\n            val start9 = start7\n            val\
    \ end9 = end7\n            val start10 = start8\n            val end10 = end8\n\
    \            val start11 = start9\n            val end11 = end9\n            val\
    \ start12 = start10\n            val end12 = end10\n            val start13 =\
    \ start11\n            val end13 = end11\n            val start14 = start12\n\
    \            val end14 = end12\n            val start15 = start13\n          \
    \  val end15 = end13\n            val start16 = start14\n            val end16\
    \ = end14\n            val start17 = start15\n            val end17 = end15\n\
    \            val start18 = start16\n            val end18 = end16\n          \
    \  val start19 = start17\n            val end19 = end17\n            val start20\
    \ = start18\n            val end20 = end18\n            val start21 = start19\n\
    \            val end21 = end19\n            val start22 = start20\n          \
    \  val end22 = end20\n            val start23 = start21\n            val end23\
    \ = end21\n            val start24 = start22\n            val end24 = end22\n\
    \            val start25 = start23\n            val end25 = end23\n          \
    \  val start26 = start24\n            val end26 = end24\n            val start27\
    \ = start25\n            val end27 = end25\n            val start28 = start26\n\
    \            val end28 = end26\n            val start29 = start27\n          \
    \  val end29 = end27\n            val start30 = start28\n            val end30\
    \ = end28\n            val start31 = start29\n            val end31 = end29\n\
    \            val start32 = start30\n            val end32 = end30\n          \
    \  val start33 = start31\n            val end33 = end", "        val start = interval1._1\n\
    \        val end = interval2._1\n        val start2 = interval2._2\n        val\
    \ end2 = interval1._2\n        val start3 = interval1._1\n        val end3 = interval2._1\n\
    \        val start4 = interval2._2\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._1\n        val end5 = interval2._1\n        val start6 =\
    \ interval2._2\n        val end6 = interval1._2\n        val start7 = interval1._1\n\
    \        val end7 = interval2._1\n        val start8 = interval2._2\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._1\n        val end9 = interval2._1\n\
    \        val start10 = interval2._2\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._1\n        val end11 = interval2._1\n        val start12\
    \ = interval2._2\n        val end12 = interval1._2\n        val start13 = interval1._1\n\
    \        val end13 = interval2._1\n        val start14 = interval2._2\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._1\n        val end15\
    \ = interval2._1\n        val start16 = interval2._2\n        val end16 = interval1._2\n\
    \        val start17 = interval1._1\n        val end17 = interval2._1\n      \
    \  val start18 = interval2._2\n        val end18 = interval1._2\n        val start19\
    \ = interval1._1\n        val end19 = interval2._1\n        val start20 = interval2._2\n\
    \        val end20 = interval1._2\n        val start21 = interval1._1\n      \
    \  val end21 = interval2._1\n        val start22 = interval2._2\n        val end22\
    \ = interval1._2\n        val start23 = interval1._1\n        val end23 = interval2._1\n\
    \        val start24 = interval2._2\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._1\n        val end25 = interval2._1\n        val start26\
    \ = interval2._2\n        val end26 = interval1._2\n        val start27 = interval1._1\n\
    \        val end27 = interval2._1\n        val start28 = interval2._2\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._1\n        val end29\
    \ = interval2._1\n        val start30 = interval2._2\n        val end30 = interval1.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start > start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n    \
    \        return \"YES\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val startMinusEnd = end - start\n        val start2MinusEnd2\
    \ = end2 - start2\n        val startMinusEnd2 = start2 - start\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd2\
    \ = end - start\n        val startMinusEnd2 = end - start2\n        val start2MinusEnd\
    \ = end - start\n        val startMinusEnd", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd\
    \ <= 0 || start2MinusEnd2 <= 0) {\n            return \"NO\"\n        }\n    \
    \    if (startMinusEnd > start2MinusEnd2) {\n            return \"NO\"\n     \
    \   }\n        if (startMinusEnd == start2MinusEnd2) {\n            if (start\
    \ < end) {\n                return \"NO\"\n            }\n            else {\n\
    \                return \"YES\"\n            }\n        }\n        val startMinusEnd2\
    \ = start2 - end2\n        if (startMinusEnd2 <= 0) {\n            return \"NO\"\
    \n        }\n        if (startMinusEnd2 > startMinusEnd) {\n            return\
    \ \"NO\"\n        }\n        if (startMinusEnd2 == startMinusEnd) {\n        \
    \    if (start < end) {\n                return \"NO\"\n            }\n      \
    \      else {\n                return \"YES\"\n            }\n        }\n    \
    \    val startMinusEnd = start - end\n        if (startMinusEnd <= 0) {\n    \
    \        return \"NO\"\n        }\n        if (startMinusEnd > start2MinusEnd2)\
    \ {\n            return \"NO\"\n        }\n        if (startMinusEnd == start2MinusEnd2)\
    \ {\n            if (start < end) {\n                return \"NO\"\n         \
    \   }\n            else {\n                return \"YES\"\n            }\n   \
    \     }\n        val startMinusEnd2 = start2 - end2\n        if (startMinusEnd2\
    \ <= 0) {\n            return \"NO\"\n        }\n        if (startMinusEnd2 >\
    \ startMinusEnd) {\n            return \"NO\"\n        }\n        if (startMinusEnd2\
    \ == startMinusEnd) {\n            if (start < end) {\n                return\
    \ \"NO\"\n            }\n            else {\n                return \"YES\"\n\
    \            }\n        }\n        val startMinusEnd = start - end\n        if\
    \ (startMinusEnd <= 0) {\n            return \"NO\"\n        }\n        if (startMinusEnd\
    \ > start2MinusEnd2) {\n            return \"NO\"\n        }\n        if (startMinusEnd\
    \ == start2MinusEnd2) {\n            if (start < end) {\n                return\
    \ \"NO\"\n            }\n            else {\n                return \"YES\"\n\
    \            }\n        }\n        val startMinusEnd2 = start2 - end2\n      \
    \  if (startMinusEnd2 <= 0) {\n            return \"NO\"\n        }\n        if\
    \ (startMinusEnd2 > startMinusEnd) {\n            return \"NO\"\n        }\n \
    \       if (startMinusEnd2 == startMinusEnd) {", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.max(start, start2)\n        val\
    \ end = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMin = math.min(start, start2)\n        val startMax = math.max(start,\
    \ start2)\n        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startMin2 = math.min(start2, end2)\n        val startMax2\
    \ = math.max(start2, end2)\n        val endMin2 = math.min(end2, start2)\n   \
    \     val endMax2 = math.max(end2, start2)\n        val startMin3 = math.min(start2,\
    \ end2)\n        val startMax3 = math.max(start2, end2)\n        val endMin3 =\
    \ math.min(end2, start2)\n        val endMax3 = math.max(end2, start2)\n     \
    \   val startMin4 = math.min(start2, end2)\n        val startMax4 = math.max(start2,\
    \ end2)\n        val endMin4 = math.min(end2, start2)\n        val endMax4 = math.max(end2,\
    \ start2)\n        val startMin5 = math.min(start2, end2)\n        val startMax5\
    \ = math.max(start2, end2)\n        val endMin5 = math.min(end2, start2)\n   \
    \     val endMax5 = math.max(end2, start2)\n        val startMin6 = math.min(start2,\
    \ end2)\n        val startMax6 = math.max(start2, end2)\n        val endMin6 =\
    \ math.min(end2, start2)\n        val endMax6 = math.max(end2, start2)\n     \
    \   val startMin7 = math.min(start2, end2)\n        val startMax7 = math.max(start2,\
    \ end2)\n        val endMin7 = math.min(end2, start2)\n        val endMax7 = math.max(end2,\
    \ start2)\n        val startMin8 = math.min(start2, end2)\n        val startMax8\
    \ = math.max(start2, end2)\n        val endMin8 = math.min(end2, start2)\n   \
    \     val endMax8 = math.max(end2, start2)\n        val startMin9 = math.min(start2,\
    \ end2)\n        val startMax9 = math.max(start2, end2)\n        val endMin9 =\
    \ math.min(end2, start2)\n        val endMax9 = math.max(end2, start2)\n     \
    \   val startMin10 = math.min(start2, end2)\n        val startMax10 = math.max(start2,\
    \ end2)\n        val endMin10 = math.min(end2, start2)\n        val endMax10 =\
    \ math.max(end2, start2)\n        val startMin11 = math.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        val isPrime = length2 %\
    \ length == 0 && length2 != 0\n        if (isPrime) {\n            return \"YES\"\
    \n        } else {\n            return \"NO\"\n        }", "        val start\
    \ = interval1._1\n        val end = interval2._1\n        val start2 = interval2._2\n\
    \        val end2 = interval1._2\n        val start3 = interval1._1\n        val\
    \ end3 = interval2._1\n        val start4 = interval2._2\n        val end4 = interval1._2\n\
    \        val start5 = interval1._1\n        val end5 = interval2._1\n        val\
    \ start6 = interval2._2\n        val end6 = interval1._2\n        val start7 =\
    \ interval1._1\n        val end7 = interval2._1\n        val start8 = interval2._2\n\
    \        val end8 = interval1._2\n        val start9 = interval1._1\n        val\
    \ end9 = interval2._1\n        val start10 = interval2._2\n        val end10 =\
    \ interval1._2\n        val start11 = interval1._1\n        val end11 = interval2._1\n\
    \        val start12 = interval2._2\n        val end12 = interval1._2\n      \
    \  val start13 = interval1._1\n        val end13 = interval2._1\n        val start14\
    \ = interval2._2\n        val end14 = interval1._2\n        val start15 = interval1._1\n\
    \        val end15 = interval2._1\n        val start16 = interval2._2\n      \
    \  val end16 = interval1._2\n        val start17 = interval1._1\n        val end17\
    \ = interval2._1\n        val start18 = interval2._2\n        val end18 = interval1._2\n\
    \        val start19 = interval1._1\n        val end19 = interval2._1\n      \
    \  val start20 = interval2._2\n        val end20 = interval1._2\n        val start21\
    \ = interval1._1\n        val end21 = interval2._1\n        val start22 = interval2._2\n\
    \        val end22 = interval1._2\n        val start23 = interval1._1\n      \
    \  val end23 = interval2._1\n        val start24 = interval2._2\n        val end24\
    \ = interval1._2\n        val start25 = interval1._1\n        val end25 = interval2._1\n\
    \        val start26 = interval2._2\n        val end26 = interval1._2\n      \
    \  val start27 = interval1._1\n        val end27 = interval2._1\n        val start28\
    \ = interval2._2\n        val end28 = interval1._2\n        val start29 = interval1._1\n\
    \        val end29 = interval2._1\n        val start30 = interval2._2\n      \
    \  val end30 = interval1.", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = math.max(start, start2)\n        val end3 = math.min(end,\
    \ end2)\n        val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMin = math.min(start, start2)\n        val startMax = math.max(start,\
    \ start2)\n        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val length = endMax - startMax\n        val isPrime = length\
    \ == 2 || length == 3 && startMin == startMax && endMin == endMax\n        if\
    \ (isPrime) {\n            \"YES\"\n        } else {\n            \"NO\"\n   \
    \     }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd2 = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd2 = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start2 - end\n        val startMinusEnd2\
    \ = start - end2\n        val start2MinusEnd = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 > end4 && start4 > end3) {\n            \
    \    val start5 = start4\n                val end5 = end4\n                if\
    \ (start5 > end5) {\n                    val start6 = start5\n               \
    \     val end6 = end5\n                    if (start6 > end6) {\n            \
    \            val start7 = start6\n                        val end7 = end6\n  \
    \                      if (start7 > end7) {\n                            val start8\
    \ = start7\n                            val end8 = end7\n                    \
    \        if (start8 > end8) {\n                                val start9 = start8\n\
    \                                val end9 = end8\n                           \
    \     if (start9 > end9) {\n                                    val start10 =\
    \ start9\n                                    val end10 = end9\n             \
    \                       if (start10 > end10) {\n                             \
    \           val start11 = start10\n                                        val\
    \ end11 = end10\n                                        if (start11 > end11)\
    \ {\n                                            val start12 = start11\n     \
    \                                       val end12 = end11\n                  \
    \                          if (start12 > end12) {\n                          \
    \                      return \"NO\"\n                                       \
    \     } else {\n                                                return \"YES\"\
    \n                                            }\n                            \
    \            } else {\n                                            return \"YES\"\
    \n                                        }\n                                \
    \    } else {\n                                        return \"YES\"\n      \
    \                              }\n                                } else {\n \
    \                                   return \"YES\"\n                         \
    \       }\n                            } else {\n                            \
    \    return \"YES\"\n                            }\n                        }\
    \ else {\n                            return \"YES\"\n                       \
    \ }\n                    } else {\n                        return \"YES\"\n  \
    \                  }\n                } else {\n                    return \"\
    YES\"\n                }\n            } else {\n                return \"YES\"\
    \n            }\n        } else {\n            return \"YES\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length == 0 ||\
    \ length2 == 0) {\n            \"NO\"\n        } else if (length2 == 1) {\n  \
    \          if (length == 1) {\n                \"YES\"\n            } else {\n\
    \                \"NO\"\n            }\n        } else {\n            val start3\
    \ = start + length\n            val end3 = end - length\n            val start4\
    \ = start2 + length2\n            val end4 = end2 - length2\n            if (start3\
    \ > end4 || start4 > end3) {\n                \"NO\"\n            } else {\n \
    \               val start5 = start3 + length2\n                val end5 = end3\
    \ - length2\n                if (start5 > end4 || start5 > end3) {\n         \
    \           \"NO\"\n                } else {\n                    val start6 =\
    \ start5 + length2\n                    val end6 = end5 - length2\n          \
    \          if (start6 > end4 || start6 > end3) {\n                        \"NO\"\
    \n                    } else {\n                        val start7 = start6 +\
    \ length2\n                        val end7 = end6 - length2\n               \
    \         if (start7 > end4 || start7 > end3) {\n                            \"\
    NO\"\n                        } else {\n                            val start8\
    \ = start7 + length2\n                            val end8 = end7 - length2\n\
    \                            if (start8 > end4 || start8 > end3) {\n         \
    \                       \"NO\"\n                            } else {\n       \
    \                         \"YES\"\n                            }\n           \
    \             }\n                    }\n                }\n            }\n   \
    \     }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            if (start3 < end4 && start4 <\
    \ end3) {\n                val start5 = start3\n                val end5 = end3\n\
    \                val start6 = start4\n                val end6 = end4\n      \
    \          if (start5 < end6 && start6 < end5) {\n                    val start7\
    \ = start5\n                    val end7 = end5\n                    val start8\
    \ = start6\n                    val end8 = end6\n                    if (start7\
    \ < end8 && start8 < end7) {\n                        val start9 = start7\n  \
    \                      val end9 = end7\n                        val start10 =\
    \ start8\n                        val end10 = end8\n                        if\
    \ (start9 < end10 && start10 < end9) {\n                            val start11\
    \ = start9\n                            val end11 = end9\n                   \
    \         val start12 = start10\n                            val end12 = end10\n\
    \                            if (start11 < end12 && start12 < end11) {\n     \
    \                           val start13 = start11\n                          \
    \      val end13 = end11\n                                val start14 = start12\n\
    \                                val end14 = end12\n                         \
    \       if (start13 < end14 && start14 < end13) {\n                          \
    \          val start15 = start13\n                                    val end15\
    \ = end13\n                                    val start16 = start14\n       \
    \                             val end16 = end14\n                            \
    \        if (start15 < end16 && start16 < end15) {\n                         \
    \               val start17 = start15\n                                      \
    \  val end17 = end15\n                                        val start18 = start16\n\
    \                                        val end18 = end16\n                 \
    \                       if (start17 < end18 && start18 < end17) {\n          \
    \                                  val start19 = start17\n                   \
    \                         val end19 = end17\n                                \
    \            val start20 = start18\n                                         \
    \   val end20 = end18\n                                            if (start19\
    \ < end20 && start20 < end19) {\n                                            \
    \    return \"YES\"\n                                            } else {\n  \
    \                                              return \"NO\"\n               \
    \                             }\n                                        } else\
    \ {\n                                            return \"NO\"\n             \
    \                           }\n                                    } else {\n\
    \                                        return \"NO\"\n                     \
    \               }\n                                } else {\n                \
    \                    return \"NO\"\n                                }\n      \
    \                      } else {\n                                return \"NO\"\
    \n                            }\n                        } else {\n          \
    \                  return \"NO\"\n                        }\n                \
    \    } else {\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       val startMinusEnd2MinusEnd = startMinusEnd - start2\n        val startMinusEnd2MinusEnd2\
    \ = startMinusEnd2 - start2\n        val startMinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2MinusEnd2\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd - start2\n    \
    \    val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd =\
    \ startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 - start2\n     \
    \   val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2Min", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else {\n            if (length2 == 1) {\n                if (length\
    \ == 1) {\n                    \"YES\"\n                } else {\n           \
    \         \"NO\"\n                }\n            } else {\n                val\
    \ mid = (start + end2) / 2\n                if (length == 1) {\n             \
    \       if (mid == start2) {\n                        \"YES\"\n              \
    \      } else {\n                        \"NO\"\n                    }\n     \
    \           } else {\n                    if (mid < start2) {\n              \
    \          \"NO\"\n                    } else {\n                        if (mid\
    \ > end2) {\n                            \"NO\"\n                        } else\
    \ {\n                            val mid2 = (mid + end2) / 2\n               \
    \             if (mid2 == start2) {\n                                \"YES\"\n\
    \                            } else {\n                                \"NO\"\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd = start2 - end2\n        val startMinusEnd2\
    \ = start2 - start\n        val endMinusStart2 = end - start2\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart2 = end - start2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start\n        val endMinusStart1\
    \ = end - start\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd1\
    \ = start2 - start\n        val endMinusStart1 = end - start\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd1 = start2 - start", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     val length2 = end2 - start2\n        val isPrime = length == 2 || length\
    \ == length2\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        if (startMinusEnd < 0 || start2MinusEnd2 < 0 || start2MinusEnd2\
    \ > startMinusEnd) {\n            return \"NO\"\n        }\n        if (start2MinusEnd2\
    \ == 0) {\n            return \"YES\"\n        }\n        val startMinusEnd2 =\
    \ start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = end - start\n        val start2MinusEnd2 = end2 - start2\n \
    \       val startMinusEnd2 = start2 - start\n        val startMinusEnd2MinusEnd\
    \ = start2MinusEnd2 - startMinusEnd\n        val startMinusEnd2MinusEnd2 = startMinusEnd2\
    \ - start2MinusEnd\n        val startMinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd\
    \ - startMinusEnd2MinusEnd\n        val startMinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd - startMinusEnd2MinusEnd2MinusEnd2\n     \
    \   val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2 = startMinusEnd2MinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\
    \ - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\n        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2 - startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2\n\
    \        val startMinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd2MinusEnd\
    \ = startMinusEnd2MinusEnd", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start > start2 && end < end2) {\n          \
    \  val temp = start\n            start = start2\n            start2 = temp\n \
    \       }\n        if (start < start2 && end > end2) {\n            val temp =\
    \ start\n            start = start2\n            start2 = temp\n        }\n  \
    \      if (start < start2 && end < end2) {\n            val temp = start\n   \
    \         start = start2\n            start2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"YES\"\n        }\n       \
    \ if (start > start2 && end > end2) {\n            val temp = start\n        \
    \    start = start2\n            start2 = temp\n        }\n        if (start <\
    \ start2 && end > end2) {\n            val temp = start\n            start = start2\n\
    \            start2 = temp\n        }\n        if (start < start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"YES\"\n        }\n        if (start > start2 && end < end2) {\n \
    \           val temp = start\n            start = start2\n            start2 =\
    \ temp\n        }\n        if (start < start2 && end < end2) {\n            val\
    \ temp = start\n            start = start2\n            start2 = temp\n      \
    \  }\n        if (start < start2 && end > end2) {\n            val temp = start\n\
    \            start = start2\n            start2 = temp\n        }\n        if\
    \ (start == start2 && end == end2) {\n            return \"YES\"\n        }\n\
    \        if (start > start2 && end > end2) {\n            val temp = start\n \
    \           start = start2\n            start2 = temp\n        }\n        if (start\
    \ < start2 && end < end2) {\n            val temp = start\n            start =\
    \ start2\n            start2 = temp\n        }\n        if (start == start2 &&\
    \ end == end2) {\n            return \"YES\"\n        }\n        if (start > start2\
    \ && end > end2) {\n            val temp = start\n            start = start2\n\
    \            start2 = temp\n        }\n        if (start < start2 && end < end2)\
    \ {\n            val temp = start\n            start = start2\n            start2\
    \ = temp\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"YES\"\n        }\n        if (start ", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.max(start, start2)\n        val\
    \ end = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\"\n \
    \       else if (length == 1) \"YES\"\n        else if (length == 2 && start <=\
    \ end) \"YES\"\n        else if (length == 2 && start > end) \"NO\"\n        else\
    \ if (length == 2 && start < end2 && end > start2) \"YES\"\n        else if (length\
    \ == 2 && start < end2 && end < start2) \"NO\"\n        else if (length == 2 &&\
    \ start < end2 && end > start2 && start < end) \"YES\"\n        else if (length\
    \ == 2 && start < end2 && end < start2 && start > end) \"NO\"\n        else if\
    \ (length == 2 && start < end2 && end > start2 && start > end2) \"YES\"\n    \
    \    else if (length == 2 && start < end2 && end < start2 && start < end2) \"\
    NO\"\n        else if (length == 2 && start < end2 && end > start2 && start >\
    \ end2 && end < start2) \"YES\"\n        else if (length == 2 && start < end2\
    \ && end < start2 && start < end2 && end > start2) \"NO\"\n        else if (length\
    \ == 2 && start < end2 && end > start2 && start > end2 && end < start2) \"YES\"\
    \n        else if (length == 2 && start < end2 && end < start2 && start < end2\
    \ && end > start2 && start < end) \"YES\"\n        else if (length == 2 && start\
    \ < end2 && end > start2 && start > end2 && end < start2 && start > end) \"NO\"\
    \n        else if (length == 2 && start < end2 && end < start2 && start < end2\
    \ && end > start2 && start < end2 && end < start2) \"YES\"\n        else if (length\
    \ == 2 && start < end2 && end > start2 && start > end2 && end < start2 && start\
    \ > end2 && end < start2) \"NO\"\n        else if (length == 2 && start < end2\
    \ && end < start2 && start < end2 && end > start2 && start < end2 && end > start2)\
    \ \"YES\"\n        else if (length == 2 && start < end2 && end > start2 && start\
    \ < end2 && end < start2 && start > end2 && end < start2) \"NO\"\n        else\
    \ if (length == 2 && start < end2 && end < start2 && start < end2 && end > start2\
    \ && start < end2 && end > start2 && start < end) \"YES\"\n        else if (length\
    \ == 2 && start < end2 && end > start2 && start < end2 && end < start2 && start ",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval1._2\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == 1) {\n            return \"YES\"\n        }\n        val primes = mutable.Set[Long]()\n\
    \        val primes2 = mutable.Set[Long]()\n        val primes3 = mutable.Set[Long]()\n\
    \        val primes4 = mutable.Set[Long]()\n        val primes5 = mutable.Set[Long]()\n\
    \        val primes6 = mutable.Set[Long]()\n        val primes7 = mutable.Set[Long]()\n\
    \        val primes8 = mutable.Set[Long]()\n        val primes9 = mutable.Set[Long]()\n\
    \        val primes10 = mutable.Set[Long]()\n        val primes11 = mutable.Set[Long]()\n\
    \        val primes12 = mutable.Set[Long]()\n        val primes13 = mutable.Set[Long]()\n\
    \        val primes14 = mutable.Set[Long]()\n        val primes15 = mutable.Set[Long]()\n\
    \        val primes16 = mutable.Set[Long]()\n        val primes17 = mutable.Set[Long]()\n\
    \        val primes18 = mutable.Set[Long]()\n        val primes19 = mutable.Set[Long]()\n\
    \        val primes20 = mutable.Set[Long]()\n        val primes21 = mutable.Set[Long]()\n\
    \        val primes22 = mutable.Set[Long]()\n        val primes23 = mutable.Set[Long]()\n\
    \        val primes24 = mutable.Set[Long]()\n        val primes25 = mutable.Set[Long]()\n\
    \        val primes26 = mutable.Set[Long]()\n        val primes27 = mutable.Set[Long]()\n\
    \        val primes28 = mutable.Set[Long]()\n        val prime", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     val start5 = start3\n            val end5 = end3\n            val start6\
    \ = start4\n            val end6 = end4\n            val start7 = start5\n   \
    \         val end7 = end5\n            val start8 = start6\n            val end8\
    \ = end6\n            val start9 = start7\n            val end9 = end7\n     \
    \       val start10 = start8\n            val end10 = end8\n            val start11\
    \ = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length == length2) {\n            return \"YES\"\n   \
    \     }\n        val prime = length * length2\n        if (prime == length) {\n\
    \            return \"YES\"\n        }\n        if (prime % length == 0) {\n \
    \           return \"YES\"\n        }\n        return \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval2._1\n        val start2 = interval1._2\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length == length2) {\n            \"YES\"\n\
    \        } else {\n            val start3 = math.max(start, start2)\n        \
    \    val end3 = math.min(end, end2)\n            val start4 = math.max(start,\
    \ start3)\n            val end4 = math.min(end, end3)\n            val length3\
    \ = end4 - start4\n            if (length3 == 0) {\n                \"NO\"\n \
    \           } else if (length3 == 1) {\n                \"YES\"\n            }\
    \ else {\n                val start5 = math.max(start, start4)\n             \
    \   val end5 = math.min(end, end4)\n                val start6 = math.max(start,\
    \ start5)\n                val end6 = math.min(end, end5)\n                val\
    \ length5 = end6 - start6\n                if (length5 == 0 || length5 == 1) {\n\
    \                    \"NO\"\n                } else if (length5 == 2) {\n    \
    \                \"YES\"\n                } else {\n                    val start7\
    \ = math.max(start, start6)\n                    val end7 = math.min(end, end6)\n\
    \                    val start8 = math.max(start, start7)\n                  \
    \  val end8 = math.min(end, end7)\n                    val length7 = end8 - start8\n\
    \                    if (length7 == 0 || length7 == 1) {\n                   \
    \     \"NO\"\n                    } else if (length7 == 2) {\n               \
    \         \"YES\"\n                    } else {\n                        val start9\
    \ = math.max(start, start8)\n                        val end9 = math.min(end,\
    \ end8)\n                        val start10 = math.max(start, start9)\n     \
    \                   val end10 = math.min(end, end9)\n                        val\
    \ length9 = end10 - start10\n                        if (length9 == 0 || length9\
    \ == 1) {\n                            \"NO\"\n                        } else\
    \ if (length9 == 2) {\n                            \"YES\"\n                 \
    \       } else {\n                            val start11 = math.max(start, start10)\n\
    \                            val end11 = math.min(end, end10)\n              \
    \              val start12 = math.max(start, start11)\n                      \
    \      val end12 = math.min(end, end11)\n                            val length11\
    \ = end12 - start12\n                            if (length11 == 0 || length11\
    \ == 1) {\n                                \"NO\"\n                          \
    \  } else if (length11 == 2) {\n                                \"YES\"\n    \
    \                        } else {\n                                val start13\
    \ = math.max(start, start12)\n                                val end13 = math.min(end,\
    \ end12)\n                                val start14 = math.max(start, start13)\n\
    \                                val end14 = math.min(end, end13)\n          \
    \                      val length13 = end14 - start14\n                      \
    \          if (length13 == 0 || length13", "        val start = interval1._1\n\
    \        val end = interval2._1\n        val start2 = interval2._2\n        val\
    \ end2 = interval1._2\n        val start3 = interval1._1\n        val end3 = interval2._1\n\
    \        val start4 = interval2._2\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._1\n        val end5 = interval2._1\n        val start6 =\
    \ interval2._2\n        val end6 = interval1._2\n        val start7 = interval1._1\n\
    \        val end7 = interval2._1\n        val start8 = interval2._2\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._1\n        val end9 = interval2._1\n\
    \        val start10 = interval2._2\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._1\n        val end11 = interval2._1\n        val start12\
    \ = interval2._2\n        val end12 = interval1._2\n        val start13 = interval1._1\n\
    \        val end13 = interval2._1\n        val start14 = interval2._2\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._1\n        val end15\
    \ = interval2._1\n        val start16 = interval2._2\n        val end16 = interval1._2\n\
    \        val start17 = interval1._1\n        val end17 = interval2._1\n      \
    \  val start18 = interval2._2\n        val end18 = interval1._2\n        val start19\
    \ = interval1._1\n        val end19 = interval2._1\n        val start20 = interval2._2\n\
    \        val end20 = interval1._2\n        val start21 = interval1._1\n      \
    \  val end21 = interval2._1\n        val start22 = interval2._2\n        val end22\
    \ = interval1._2\n        val start23 = interval1._1\n        val end23 = interval2._1\n\
    \        val start24 = interval2._2\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._1\n        val end25 = interval2._1\n        val start26\
    \ = interval2._2\n        val end26 = interval1._2\n        val start27 = interval1._1\n\
    \        val end27 = interval2._1\n        val start28 = interval2._2\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._1\n        val end29\
    \ = interval2._1\n        val start30 = interval2._2\n        val end30 = interval1.",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        ", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end > end2) {\n            return \"NO\"\n        }\n  \
    \      if (start > start2 && end == end2) {\n            return \"NO\"\n     \
    \   }\n        if (start > start2 && end > end2) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            val start5 = start3\n            val end5 = end3\n \
    \           val start6 = start4\n            val end6 = end4\n            val\
    \ start7 = start5\n            val end7 = end5\n            val start8 = start6\n\
    \            val end8 = end6\n            val start9 = start7\n            val\
    \ end9 = end7\n            val start10 = start8\n            val end10 = end8\n\
    \            val start11 = start9\n            val end11 = end9\n            val\
    \ start12 = start10\n            val end12 = end10\n            val start13 =\
    \ start11\n            val end13 = end11\n            val start14 = start12\n\
    \            val end14 = end12\n            val start15 = start13\n          \
    \  val end15 = end13\n            val start16 = start14\n            val end16\
    \ = end14\n            val start17 = start15\n            val end17 = end15\n\
    \            val start18 = start16\n            val end18 = end16\n          \
    \  val start19 = start17\n            val end19 = end17\n            val start20\
    \ = start18\n            val end20 = end18\n            val start21 = start19\n\
    \            val end21 = end19\n            val start22 = start20\n          \
    \  val end22 = end20\n            val start23 = start21\n            val end23\
    \ = end21\n            val start24 = start22\n            val end24 = end22\n\
    \            val start25 = start23\n            val end25 = end23\n          \
    \  val start26 = start24\n            val end26 = end24\n            val start27\
    \ = start25\n            val end27 = end25\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            if (start < start2)\
    \ {\n                val start3 = start2\n                val end3 = end2\n  \
    \              val start4 = start\n                val end4 = end\n          \
    \      if (start3 < end4) {\n                    if (start3 < start4) {\n    \
    \                    if (end3 > end4) {\n                            if (end3\
    \ < end) {\n                                if (end3 > start) {\n            \
    \                        if (end3 > end) {\n                                 \
    \       return \"YES\"\n                                    } else {\n       \
    \                                 return \"NO\"\n                            \
    \        }\n                                } else {\n                       \
    \             return \"NO\"\n                                }\n             \
    \               } else {\n                                return \"NO\"\n    \
    \                        }\n                        } else {\n               \
    \             return \"NO\"\n                        }\n                    }\
    \ else {\n                        return \"NO\"\n                    }\n     \
    \           } else {\n                    return \"NO\"\n                }\n \
    \           } else {\n                return \"NO\"\n            }\n        }\
    \ else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == length2\n        if (isPrime)\
    \ {\n            return \"YES\"\n        } else {\n            return \"NO\"\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length2 == 1) {\n            if (length == 1) {\n                \"YES\"\n\
    \            } else {\n                \"NO\"\n            }\n        } else {\n\
    \            val start3 = start + length\n            val end3 = end2 + length2\n\
    \            val start4 = start2 + length2\n            val end4 = end - length2\n\
    \            if (start3 > end4) {\n                \"NO\"\n            } else\
    \ if (start3 < end4) {\n                \"YES\"\n            } else {\n      \
    \          if (length2 % length == 0) {\n                    \"YES\"\n       \
    \         } else {\n                    \"NO\"\n                }\n          \
    \  }\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        val isPrime = length2 % length == 0\n        if (isPrime) {\n       \
    \     return \"YES\"\n        } else {\n            return \"NO\"\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val isPrime = length == 2 || length == 3 && start % length == 0 && end\
    \ % length == 0\n        if (isPrime) {\n            \"YES\"\n        } else {\n\
    \            \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     val isPrime = length == 2 || length == 3 && length != 1 && length != 0\n\
    \        if (isPrime) {\n            \"YES\"\n        } else {\n            \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        var isPrime = true\n        var isPrime2\
    \ = true\n        var isPrime3 = true\n        var isPrime4 = true\n        var\
    \ isPrime5 = true\n        var isPrime6 = true\n        var isPrime7 = true\n\
    \        var isPrime8 = true\n        var isPrime9 = true\n        var isPrime10\
    \ = true\n        var isPrime11 = true\n        var isPrime12 = true\n       \
    \ var isPrime13 = true\n        var isPrime14 = true\n        var isPrime15 =\
    \ true\n        var isPrime16 = true\n        var isPrime17 = true\n        var\
    \ isPrime18 = true\n        var isPrime19 = true\n        var isPrime20 = true\n\
    \        var isPrime21 = true\n        var isPrime22 = true\n        var isPrime23\
    \ = true\n        var isPrime24 = true\n        var isPrime25 = true\n       \
    \ var isPrime26 = true\n        var isPrime27 = true\n        var isPrime28 =\
    \ true\n        var isPrime29 = true\n        var isPrime30 = true\n        var\
    \ isPrime31 = true\n        var isPrime32 = true\n        var isPrime33 = true\n\
    \        var isPrime34 = true\n        var isPrime35 = true\n        var isPrime36\
    \ = true\n        var isPrime37 = true\n        var isPrime38 = true\n       \
    \ var isPrime39 = true\n        var isPrime40 = true\n        var isPrime41 =\
    \ true\n        var isPrime42 = true\n        var isPrime43 = true\n        var\
    \ isPrime44 = true\n        var isPrime45 = true\n        var isPrime46 = true\n\
    \        var isPrime47 = true\n        var isPrime48 = true\n        var isPrime49\
    \ = true\n        var isPrime50 = true\n        var isPrime51 = true\n       \
    \ var isPrime52 = true\n        var isPrime53 = true\n        var isPrime54 =\
    \ true\n        var isPrime55 = true\n        var isPrime56 = true\n        var\
    \ isPrime57 = true\n        var isPrime58 = true\n        var isPrime59 = true\n\
    \        var isPrime60 = true\n        var isPrime61 = true\n        var isPrime6",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start3\n        val end4 = end3\n\
    \        val start5 = start4\n        val end5 = end4\n        val start6 = start5\n\
    \        val end6 = end5\n        val start7 = start6\n        val end7 = end6\n\
    \        val start8 = start7\n        val end8 = end7\n        val start9 = start8\n\
    \        val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else if (length ==\
    \ 1) \"YES\" else \"NO\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        val prime = length.toInt\n\
    \        if (prime == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else if (length == 1) \"YES\"\
    \ else \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        val isPrime\
    \ = length == 2 || length == 3 && length == math.ceil(length / 2)\n        if\
    \ (isPrime) {\n            \"YES\"\n        } else {\n            \"NO\"\n   \
    \     }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start == start2 && end != end2) {\n            return \"\
    NO\"\n        }\n        if (start != start2 && end == end2) {\n            return\
    \ \"NO\"\n        }\n        if (start != start2 && end != end2) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            if (start3 > end4) {\n      \
    \          val temp = start3\n                start3 = end4\n                end4\
    \ = temp\n            }\n            if (start4 > end3) {\n                val\
    \ temp = start4\n                start4 = end3\n                end3 = temp\n\
    \            }\n            if (start3 == start4 && end3 == end4) {\n        \
    \        return \"YES\"\n            }\n            if (start3 == start4 && end3\
    \ != end4) {\n                return \"NO\"\n            }\n            if (start3\
    \ != start4 && end3 == end4) {\n                return \"NO\"\n            }\n\
    \            if (start3 != start4 && end3 != end4) {\n                val start5\
    \ = start4\n                val end5 = end4\n                val start6 = start3\n\
    \                val end6 = end3\n                if (start5 > end6) {\n     \
    \               val temp = start5\n                    start5 = end6\n       \
    \             end6 = temp\n                }\n                if (start6 > end5)\
    \ {\n                    val temp = start6\n                    start6 = end5\n\
    \                    end5 = temp\n                }\n                if (start5\
    \ == start6 && end5 == end6) {\n                    return \"YES\"\n         \
    \       }\n                if (start5 == start6 && end5 != end6) {\n         \
    \           return \"NO\"\n                }\n                if (start5 != start6\
    \ && end5 == end6) {\n                    return \"NO\"\n                }\n \
    \               if (start5 != start6 && end5 != end6) {\n                    val\
    \ start7 = start6\n                    val end7 = end6\n                    val\
    \ start8 = start5\n                    val end8 = end5\n                    if\
    \ (start7 > end8) {\n                        val temp = start7\n             \
    \           start7 = end8\n                        end8 = temp\n             \
    \       }\n                    if (start8 > end7) {\n                        val\
    \ temp = start8\n                        start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val result = length * length2\n        val isPrime =\
    \ result % 2 == 0\n        if (isPrime) {\n            \"YES\"\n        } else\
    \ {\n            \"NO\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0) {\n            if (length == 0) {\n    \
    \            return \"NO\"\n            } else {\n                return \"YES\"\
    \n            }\n        }\n        val primes = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes2 = mutable.ArrayBuffer.empty[Int]\n        val primes3 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes4 = mutable.ArrayBuffer.empty[Int]\n        val primes5 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes6 = mutable.ArrayBuffer.empty[Int]\n        val primes7 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes8 = mutable.ArrayBuffer.empty[Int]\n        val primes9 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes10 = mutable.ArrayBuffer.empty[Int]\n        val primes11 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes12 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes13 = mutable.ArrayBuffer.empty[Int]\n        val primes14 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes15 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes16 = mutable.ArrayBuffer.empty[Int]\n        val primes17 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes18 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes19 = mutable.ArrayBuffer.empty[Int]\n        val primes20 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes21 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes22 = mutable.ArrayBuffer.empty[Int]\n        val primes23 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes24 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes25 = mutable.ArrayBuffer.empty[Int]\n        val primes26 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes27 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes28 = mutable.ArrayBuffer.empty[Int]\n        val primes29 =\
    \ mutable.ArrayBuffer.empty[Int]\n        val primes30 = mutable.ArrayBuffer.empty[Int]\n\
    \        val primes31 = mutable.", "        val start = interval1._1\n       \
    \ val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ math.max(start, start2)\n        val end3 = math.min(end, end2)\n        val\
    \ start4 = math.max(start, start3)\n        val end4 = math.min(end, end3)\n \
    \       val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            \"NO\"\n        } else if (length == length2) {\n     \
    \       \"YES\"\n        } else {\n            val mid = (start + end) / 2\n \
    \           val mid2 = start2 + end2\n            val mid3 = mid / 2\n       \
    \     val mid4 = mid3 / 2\n            val mid5 = mid4 / 2\n            val mid6\
    \ = mid5 / 2\n            val mid7 = mid6 / 2\n            val mid8 = mid7 / 2\n\
    \            val mid9 = mid8 / 2\n            val mid10 = mid9 / 2\n         \
    \   val mid11 = mid10 / 2\n            val mid12 = mid11 / 2\n            val\
    \ mid13 = mid12 / 2\n            val mid14 = mid13 / 2\n            val mid15\
    \ = mid14 / 2\n            val mid16 = mid15 / 2\n            val mid17 = mid16\
    \ / 2\n            val mid18 = mid17 / 2\n            val mid19 = mid18 / 2\n\
    \            val mid20 = mid19 / 2\n            val mid21 = mid20 / 2\n      \
    \      val mid22 = mid21 / 2\n            val mid23 = mid22 / 2\n            val\
    \ mid24 = mid23 / 2\n            val mid25 = mid24 / 2\n            val mid26\
    \ = mid25 / 2\n            val mid27 = mid26 / 2\n            val mid28 = mid27\
    \ / 2\n            val mid29 = mid28 / 2\n            val mid30 = mid29 / 2\n\
    \            val mid31 = mid30 / 2\n            val mid32 = mid31 / 2\n      \
    \      val mid33 = mid32 / 2\n            val mid34 = mid33 / 2\n            val\
    \ mid35 = mid34 / 2\n            val mid36 = mid35 / 2\n            val mid37\
    \ = mid36 / 2\n            val mid38 = mid37 / 2\n            val mid39 = mid38\
    \ / 2\n            val mid40 = mid39 / 2\n            val mid41 = mid40 / 2\n\
    \            val mid42 = mid41 / 2\n            val mid43 = mid42 / 2\n      \
    \      val mid44 = mid43 / 2\n            val mid45 = mid44 / 2\n            val\
    \ mid46 = ", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else (length == length2 ? \"YES\" : \"NO\")", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.max(start, start2)\n\
    \        val end = math.min(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start > end) {\n            val temp = start\n\
    \            start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"YES\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start > start2 &&\
    \ end < end2) {\n            return \"NO\"\n        }\n        if (start < start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start < start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start > start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start < start2 && end < end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start > start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n\
    \            return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end < end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start > start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd2\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start2 - end\n        val startMinusEnd2 = start - end2\n        val start2MinusEnd\
    \ = start", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = math.max(start, start2)\n        val\
    \ end3 = math.min(end, end2)\n        val start4 = math.max(start, start3)\n \
    \       val end4 = math.min(end, end3)\n        val start5 = math.max(start, start4)\n\
    \        val end5 = math.min(end, end4)\n        val start6 = math.max(start,\
    \ start5)\n        val end6 = math.min(end, end5)\n        val start7 = math.max(start,\
    \ start6)\n        val end7 = math.min(end, end6)\n        val start8 = math.max(start,\
    \ start7)\n        val end8 = math.min(end, end7)\n        val start9 = math.max(start,\
    \ start8)\n        val end9 = math.min(end, end8)\n        val start10 = math.max(start,\
    \ start9)\n        val end10 = math.min(end, end9)\n        val start11 = math.max(start,\
    \ start10)\n        val end11 = math.min(end, end10)\n        val start12 = math.max(start,\
    \ start11)\n        val end12 = math.min(end, end11)\n        val start13 = math.max(start,\
    \ start12)\n        val end13 = math.min(end, end12)\n        val start14 = math.max(start,\
    \ start13)\n        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\"\n        else if (length2 > length)\
    \ \"YES\"\n        else if (length2 < length) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else intersection(interval1, interval2)", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 < end4 && start4 < end3) {\n            \
    \    val start5 = start3\n                val end5 = end3\n                val\
    \ start6 = start4\n                val end6 = end4\n                if (start5\
    \ < end6 && start6 < end5) {\n                    val start7 = start5\n      \
    \              val end7 = end5\n                    val start8 = start6\n    \
    \                val end8 = end6\n                    if (start7 < end8 && start8\
    \ < end7) {\n                        val start9 = start7\n                   \
    \     val end9 = end7\n                        val start10 = start8\n        \
    \                val end10 = end8\n                        if (start9 < end10\
    \ && start10 < end9) {\n                            val start11 = start9\n   \
    \                         val end11 = end9\n                            val start12\
    \ = start10\n                            val end12 = end10\n                 \
    \           if (start11 < end12 && start12 < end11) {\n                      \
    \          val start13 = start11\n                                val end13 =\
    \ end11\n                                val start14 = start12\n             \
    \                   val end14 = end12\n                                if (start13\
    \ < end14 && start14 < end13) {\n                                    val start15\
    \ = start13\n                                    val end15 = end13\n         \
    \                           val start16 = start14\n                          \
    \          val end16 = end14\n                                    if (start15\
    \ < end16 && start16 < end15) {\n                                        val start17\
    \ = start15\n                                        val end17 = end15\n     \
    \                                   val start18 = start16\n                  \
    \                      val end18 = end16\n                                   \
    \     if (start17 < end18 && start18 < end17) {\n                            \
    \                return \"YES\"\n                                        } else\
    \ {\n                                            return \"NO\"\n             \
    \                           }\n                                    } else {\n\
    \                                        return \"NO\"\n                     \
    \               }\n                                } else {\n                \
    \                    return \"NO\"\n                                }\n      \
    \                      } else {\n                                return \"NO\"\
    \n                            }\n                        } else {\n          \
    \                  return \"NO\"\n                        }\n                \
    \    } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    return \"NO\"\n               \
    \ }\n            } else {\n                return \"NO\"\n            }\n    \
    \    } else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        if (length == 1) {\n            if (length2\
    \ == 1) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (length2 == 1) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        if (length\
    \ == 2) {\n            if (length2 == 2) {\n                return \"YES\"\n \
    \           } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (length2 == 2) {\n            if (length == 0) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (length == 3) {\n            if (length2 == 3)\
    \ {\n                return \"YES\"\n            } else {\n                return\
    \ \"NO\"\n            }\n        }\n        if (length2 == 3) {\n            if\
    \ (length == 0) {\n                return \"NO\"\n            } else {\n     \
    \           return \"YES\"\n            }\n        }\n        if (length == 4)\
    \ {\n            if (length2 == 4) {\n                return \"YES\"\n       \
    \     } else {\n                return \"NO\"\n            }\n        }\n    \
    \    if (length2 == 4) {\n            if (length == 0) {\n                return\
    \ \"NO\"\n            } else {\n                return \"YES\"\n            }\n\
    \        }\n        if (length == 5) {\n            if (length2 == 5) {\n    \
    \            return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        }\n        if (length2 == 5) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 6) {\n   \
    \         if (length2 == 6) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        if (length2\
    \ == 6) {\n            if (length == 0) {\n                return \"NO\"\n   \
    \         } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (length == 7) {\n            if (length2 == 7) {\n               \
    \ return \"YES\"\n            } else {\n                return \"NO\"\n      \
    \      }\n        }\n        if (length2 == 7) {\n            if (length == 0)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (length == 8) {\n            if\
    \ (length2 == 8) {\n                return \"YES\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (length2 ==\
    \ 8) {\n            if (length == 0) {\n                return \"NO\"\n      \
    \      } else {\n                return \"YES\"\n            }\n        }\n  \
    \      if (length == 9) {\n            if (length2 == 9) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            val start3 = start2\n\
    \            val end3 = end2\n            val start4 = start\n            val\
    \ end4 = end\n            if (start3 < end4 && start4 < end3) {\n            \
    \    val start5 = start3\n                val end5 = end3\n                val\
    \ start6 = start4\n                val end6 = end4\n                if (start5\
    \ < end6 && start6 < end5) {\n                    val start7 = start5\n      \
    \              val end7 = end5\n                    val start8 = start6\n    \
    \                val end8 = end6\n                    if (start7 < end8 && start8\
    \ < end7) {\n                        val start9 = start7\n                   \
    \     val end9 = end7\n                        val start10 = start8\n        \
    \                val end10 = end8\n                        if (start9 < end10\
    \ && start10 < end9) {\n                            val start11 = start9\n   \
    \                         val end11 = end9\n                            val start12\
    \ = start10\n                            val end12 = end10\n                 \
    \           if (start11 < end12 && start12 < end11) {\n                      \
    \          val start13 = start11\n                                val end13 =\
    \ end11\n                                val start14 = start12\n             \
    \                   val end14 = end12\n                                if (start13\
    \ < end14 && start14 < end13) {\n                                    val start15\
    \ = start13\n                                    val end15 = end13\n         \
    \                           val start16 = start14\n                          \
    \          val end16 = end14\n                                    if (start15\
    \ < end16 && start16 < end15) {\n                                        val start17\
    \ = start15\n                                        val end17 = end15\n     \
    \                                   val start18 = start16\n                  \
    \                      val end18 = end16\n                                   \
    \     if (start17 < end18 && start18 < end17) {\n                            \
    \                return \"YES\"\n                                        } else\
    \ {\n                                            return \"NO\"\n             \
    \                           }\n                                    } else {\n\
    \                                        return \"NO\"\n                     \
    \               }\n                                } else {\n                \
    \                    return \"NO\"\n                                }\n      \
    \                      } else {\n                                return \"NO\"\
    \n                            }\n                        } else {\n          \
    \                  return \"NO\"\n                        }\n                \
    \    } else {\n                        return \"NO\"\n                    }\n\
    \                } else {\n                    return \"NO\"\n               \
    \ }\n            } else {\n                return \"NO\"\n            }\n    \
    \    } else {\n            return \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val start3 = start + length\n            val end3 = start + length2\n\
    \            val start4 = start2 + length2\n            val end4 = start2 + length\n\
    \            val start5 = start2 + length\n            val end5 = start2 + length2\n\
    \            val start6 = start2 + length2\n            val end6 = start2 + length\n\
    \            val start7 = start2 + length\n            val end7 = start2 + length2\n\
    \            val start8 = start2 + length2\n            val end8 = start2 + length\n\
    \            val start9 = start2 + length\n            val end9 = start2 + length2\n\
    \            val start10 = start2 + length2\n            val end10 = start2 +\
    \ length\n            val start11 = start2 + length\n            val end11 = start2\
    \ + length2\n            val start12 = start2 + length2\n            val end12\
    \ = start2 + length\n            val start13 = start2 + length\n            val\
    \ end13 = start2 + length2\n            val start14 = start2 + length2\n     \
    \       val end14 = start2 + length\n            val start15 = start2 + length\n\
    \            val end15 = start2 + length2\n            val start16 = start2 +\
    \ length2\n            val end16 = start2 + length\n            val start17 =\
    \ start2 + length\n            val end17 = start2 + length2\n            val start18\
    \ = start2 + length2\n            val end18 = start2 + length\n            val\
    \ start19 = start2 + length\n            val end19 = start2 + length2\n      \
    \      val start20 = start2 + length2\n            val end20 = start2 + length\n\
    \            val start21 = start2 + length\n            val end21 = start2 + length2\n\
    \            val start22 = start2 + length2\n            val end22 = start2 +\
    \ length\n            val start23 = start2 + length\n            val end23 = start2\
    \ + length2\n            val start24 = start2 + length2\n            val end24\
    \ = start2 + length\n            val start25 = start2 + length\n            val\
    \ end25 = start2 + length2\n            val start26 = start2 + length2\n     \
    \       val end26 = start2 + length\n            val start27 = start2 + length\n",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval2._1\n        val\
    \ start2 = interval2._2\n        val end2 = interval1._2\n        val start3 =\
    \ interval1._1\n        val end3 = interval2._1\n        val start4 = interval2._2\n\
    \        val end4 = interval1._2\n        val start5 = interval1._1\n        val\
    \ end5 = interval2._1\n        val start6 = interval2._2\n        val end6 = interval1._2\n\
    \        val start7 = interval1._1\n        val end7 = interval2._1\n        val\
    \ start8 = interval2._2\n        val end8 = interval1._2\n        val start9 =\
    \ interval1._1\n        val end9 = interval2._1\n        val start10 = interval2._2\n\
    \        val end10 = interval1._2\n        val start11 = interval1._1\n      \
    \  val end11 = interval2._1\n        val start12 = interval2._2\n        val end12\
    \ = interval1._2\n        val start13 = interval1._1\n        val end13 = interval2._1\n\
    \        val start14 = interval2._2\n        val end14 = interval1._2\n      \
    \  val start15 = interval1._1\n        val end15 = interval2._1\n        val start16\
    \ = interval2._2\n        val end16 = interval1._2\n        val start17 = interval1._1\n\
    \        val end17 = interval2._1\n        val start18 = interval2._2\n      \
    \  val end18 = interval1._2\n        val start19 = interval1._1\n        val end19\
    \ = interval2._1\n        val start20 = interval2._2\n        val end20 = interval1._2\n\
    \        val start21 = interval1._1\n        val end21 = interval2._1\n      \
    \  val start22 = interval2._2\n        val end22 = interval1._2\n        val start23\
    \ = interval1._1\n        val end23 = interval2._1\n        val start24 = interval2._2\n\
    \        val end24 = interval1._2\n        val start25 = interval1._1\n      \
    \  val end25 = interval2._1\n        val start26 = interval2._2\n        val end26\
    \ = interval1._2\n        val start27 = interval1._1\n        val end27 = interval2._1\n\
    \        val start28 = interval2._2\n        val end28 = interval1._2\n      \
    \  val start29 = interval1._1\n        val end29 = interval2._1\n        val start30\
    \ = interval2._2\n        val end30 = interval1.", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val mid = (start + end) / 2\n            val mid2 = start2 +\
    \ end2\n            val mid3 = mid / 2\n            val mid4 = mid2 / 2\n    \
    \        val mid5 = mid3 / 2\n            val mid6 = mid4 / 2\n            val\
    \ mid7 = mid5 / 2\n            val mid8 = mid6 / 2\n            val mid9 = mid7\
    \ / 2\n            val mid10 = mid8 / 2\n            val mid11 = mid9 / 2\n  \
    \          val mid12 = mid10 / 2\n            val mid13 = mid11 / 2\n        \
    \    val mid14 = mid12 / 2\n            val mid15 = mid13 / 2\n            val\
    \ mid16 = mid14 / 2\n            val mid17 = mid15 / 2\n            val mid18\
    \ = mid16 / 2\n            val mid19 = mid17 / 2\n            val mid20 = mid18\
    \ / 2\n            val mid21 = mid19 / 2\n            val mid22 = mid20 / 2\n\
    \            val mid23 = mid21 / 2\n            val mid24 = mid22 / 2\n      \
    \      val mid25 = mid23 / 2\n            val mid26 = mid24 / 2\n            val\
    \ mid27 = mid25 / 2\n            val mid28 = mid26 / 2\n            val mid29\
    \ = mid27 / 2\n            val mid30 = mid28 / 2\n            val mid31 = mid29\
    \ / 2\n            val mid32 = mid30 / 2\n            val mid33 = mid31 / 2\n\
    \            val mid34 = mid32 / 2\n            val mid35 = mid33 / 2\n      \
    \      val mid36 = mid34 / 2\n            val mid37 = mid35 / 2\n            val\
    \ mid38 = mid36 / 2\n            val mid39 = mid37 / 2\n            val mid40\
    \ = mid38 / 2\n            val mid41 = mid39 / 2\n            val mid42 = mid40\
    \ / 2\n            val mid43 = mid41 / 2\n            val mid44 = mid42 / 2\n\
    \            val mid45 = mid43 / 2\n            val mid46 = mid", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length == length2) {\n            \"YES\"\n\
    \        } else {\n            val start3 = start2 + 1\n            val end3 =\
    \ end2 - 1\n            val start4 = start2 + 1\n            val end4 = end2 -\
    \ 1\n            val start5 = start2 + 1\n            val end5 = end2 - 1\n  \
    \          val start6 = start2 + 1\n            val end6 = end2 - 1\n        \
    \    val start7 = start2 + 1\n            val end7 = end2 - 1\n            val\
    \ start8 = start2 + 1\n            val end8 = end2 - 1\n            val start9\
    \ = start2 + 1\n            val end9 = end2 - 1\n            val start10 = start2\
    \ + 1\n            val end10 = end2 - 1\n            val start11 = start2 + 1\n\
    \            val end11 = end2 - 1\n            val start12 = start2 + 1\n    \
    \        val end12 = end2 - 1\n            val start13 = start2 + 1\n        \
    \    val end13 = end2 - 1\n            val start14 = start2 + 1\n            val\
    \ end14 = end2 - 1\n            val start15 = start2 + 1\n            val end15\
    \ = end2 - 1\n            val start16 = start2 + 1\n            val end16 = end2\
    \ - 1\n            val start17 = start2 + 1\n            val end17 = end2 - 1\n\
    \            val start18 = start2 + 1\n            val end18 = end2 - 1\n    \
    \        val start19 = start2 + 1\n            val end19 = end2 - 1\n        \
    \    val start20 = start2 + 1\n            val end20 = end2 - 1\n            val\
    \ start21 = start2 + 1\n            val end21 = end2 - 1\n            val start22\
    \ = start2 + 1\n            val end22 = end2 - 1\n            val start23 = start2\
    \ + 1\n            val end23 = end2 - 1\n            val start24 = start2 + 1\n\
    \            val end24 = end2 - 1\n            val start25 = start2 + 1\n    \
    \        val end25 = end2 - 1\n            val start26 = start2 + 1\n        \
    \    val end26 = end2 - 1\n            val start27 = start2 + 1\n            val\
    \ end27 = end2 - 1\n            val start28 = start2 + 1\n            val end28",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                return \"NO\"\n            } else\
    \ {\n                return \"YES\"\n            }\n        }\n        val prime\
    \ = length / length2\n        if (prime == 0) {\n            return \"NO\"\n \
    \       }\n        if (prime == 1) {\n            return \"YES\"\n        }\n\
    \        if (prime == 2) {\n            if (length < length2) {\n            \
    \    return \"NO\"\n            } else {\n                return \"YES\"\n   \
    \         }\n        }\n        if (prime == 3) {\n            if (length < length2)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (prime == 4) {\n            if\
    \ (length < length2) {\n                return \"NO\"\n            } else {\n\
    \                return \"YES\"\n            }\n        }\n        if (prime ==\
    \ 5) {\n            if (length < length2) {\n                return \"NO\"\n \
    \           } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (prime == 6) {\n            if (length < length2) {\n            \
    \    return \"NO\"\n            } else {\n                return \"YES\"\n   \
    \         }\n        }\n        if (prime == 7) {\n            if (length < length2)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (prime == 8) {\n            if\
    \ (length < length2) {\n                return \"NO\"\n            } else {\n\
    \                return \"YES\"\n            }\n        }\n        if (prime ==\
    \ 9) {\n            if (length < length2) {\n                return \"NO\"\n \
    \           } else {\n                return \"YES\"\n            }\n        }\n\
    \        if (prime == 10) {\n            if (length < length2) {\n           \
    \     return \"NO\"\n            } else {\n                return \"YES\"\n  \
    \          }\n        }\n        if (prime == 11) {\n            if (length <\
    \ length2) {\n                return \"NO\"\n            } else {\n          \
    \      return \"YES\"\n            }\n        }\n        if (prime == 12) {\n\
    \            if (length < length2) {\n                return \"NO\"\n        \
    \    } else {\n                return \"YES\"\n            }\n        }\n    \
    \    if (prime == 13) {\n            if (length < length2) {\n               \
    \ return \"NO\"\n            } else {\n                return \"YES\"\n      \
    \      }\n        }\n        if (prime == 14) {\n            if (length < length2)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        }\n        if (prime == 15) {\n            if\
    \ (length < length2) {\n                return \"NO\"\n            } else {\n\
    \                return \"YES\"\n            }\n        }\n        if (prime ==\
    \ 16) {\n            if (length < length2) {\n                return \"NO\"\n\
    \            } else {\n                return \"YES", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.min(start, start2)\n        val\
    \ end = math.max(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else {\n\
    \            if (length == length2) {\n                if (start <= end2) {\n\
    \                    \"YES\"\n                } else {\n                    \"\
    NO\"\n                }\n            } else {\n                if (start <= end2)\
    \ {\n                    if (length == 1) {\n                        \"YES\"\n\
    \                    } else {\n                        \"NO\"\n              \
    \      }\n                } else {\n                    if (length == 1) {\n \
    \                       \"NO\"\n                    } else {\n               \
    \         \"YES\"\n                    }\n                }\n            }\n \
    \       }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else (length == length2 ? \"YES\" : \"NO\")", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start >\
    \ end) {\n            val temp = start\n            start = end\n            end\
    \ = temp\n        }\n        if (start2 > end2) {\n            val temp = start2\n\
    \            start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"YES\"\n        }\n       \
    \ if (start == start2 && end != end2) {\n            return \"NO\"\n        }\n\
    \        if (start != start2 && end == end2) {\n            return \"NO\"\n  \
    \      }\n        if (start != start2 && end != end2) {\n            val start\
    \ = interval1._1\n            val end = interval1._2\n            val start2 =\
    \ interval2._1\n            val end2 = interval2._2\n            if (start > end)\
    \ {\n                val temp = start\n                start = end\n         \
    \       end = temp\n            }\n            if (start2 > end2) {\n        \
    \        val temp = start2\n                start2 = end2\n                end2\
    \ = temp\n            }\n            if (start == start2 && end == end2) {\n \
    \               return \"YES\"\n            }\n            if (start == start2\
    \ && end != end2) {\n                return \"NO\"\n            }\n          \
    \  if (start != start2 && end == end2) {\n                return \"NO\"\n    \
    \        }\n            if (start != start2 && end != end2) {\n              \
    \  val start = interval1._1\n                val end = interval1._2\n        \
    \        val start2 = interval2._1\n                val end2 = interval2._2\n\
    \                if (start > end) {\n                    val temp = start\n  \
    \                  start = end\n                    end = temp\n             \
    \   }\n                if (start2 > end2) {\n                    val temp = start2\n\
    \                    start2 = end2\n                    end2 = temp\n        \
    \        }\n                if (start == start2 && end == end2) {\n          \
    \          return \"YES\"\n                }\n                if (start == start2\
    \ && end != end2) {\n                    return \"NO\"\n                }\n  \
    \              if (start != start2 && end == end2) {\n                    return\
    \ \"NO\"\n                }\n                if (start != start2 && end != end2)\
    \ {\n                    val start = interval1._1\n                    val end\
    \ = interval1._2\n                    val start2 = interval2._1\n            \
    \        val end2 = interval2._2\n                    if (start > end) {\n   \
    \                     val temp = start\n                        start = end\n\
    \                        end = temp\n                    }\n                 \
    \   if (start2 > end2) {\n                        val temp = start2\n        \
    \                start2 = end2\n                        end2 = temp\n        \
    \            }\n                    if (start == start2 && end == end2) {\n  \
    \                      return \"YES\"\n                    }\n               \
    \     if (start == start2 && end != end", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        if (start == start2 && end == end2) {\n            return\
    \ \"YES\"\n        }\n        if (start > start2 && end > end2) {\n          \
    \  return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n   \
    \         return \"NO\"\n        }\n        if (start == start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end ==\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end < end2) {\n            return \"NO\"\n        }\n        if (start == start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start == start2 && end < end2) {\n            return \"NO\"\n        }\n  \
    \      if (start > start2 && end < end2) {\n            return \"NO\"\n      \
    \  }\n        if (start < start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end > end2) {\n          \
    \  return \"NO\"\n        }\n        if (start > start2 && end == end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end < end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ < end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end == end2) {\n            return \"NO\"\n        }\n        if (start\
    \ > start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start < start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start == start2 && end > end2) {\n            return \"NO\"\n      \
    \  }\n        if (start > start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start < start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start == start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start =\
    \ math.max(start, start2)\n        val end = math.min(end, end2)\n        val\
    \ length = end - start\n        val primes = mutable.Set[Long]()\n        val\
    \ primes2 = mutable.Set[Long]()\n        val primes3 = mutable.Set[Long]()\n \
    \       val primes4 = mutable.Set[Long]()\n        val primes5 = mutable.Set[Long]()\n\
    \        val primes6 = mutable.Set[Long]()\n        val primes7 = mutable.Set[Long]()\n\
    \        val primes8 = mutable.Set[Long]()\n        val primes9 = mutable.Set[Long]()\n\
    \        val primes10 = mutable.Set[Long]()\n        val primes11 = mutable.Set[Long]()\n\
    \        val primes12 = mutable.Set[Long]()\n        val primes13 = mutable.Set[Long]()\n\
    \        val primes14 = mutable.Set[Long]()\n        val primes15 = mutable.Set[Long]()\n\
    \        val primes16 = mutable.Set[Long]()\n        val primes17 = mutable.Set[Long]()\n\
    \        val primes18 = mutable.Set[Long]()\n        val primes19 = mutable.Set[Long]()\n\
    \        val primes20 = mutable.Set[Long]()\n        val primes21 = mutable.Set[Long]()\n\
    \        val primes22 = mutable.Set[Long]()\n        val primes23 = mutable.Set[Long]()\n\
    \        val primes24 = mutable.Set[Long]()\n        val primes25 = mutable.Set[Long]()\n\
    \        val primes26 = mutable.Set[Long]()\n        val primes27 = mutable.Set[Long]()\n\
    \        val primes28 = mutable.Set[Long]()\n        val primes29 = mutable.Set[Long]()\n\
    \        val primes30 = mutable.Set[Long]()\n        val primes31 = mutable.Set[Long]()\n\
    \        val primes32 = mutable.Set[Long]()\n        val primes33 = mutable.Set[Long]()\n\
    \        val primes34 = mutable.Set[Long]", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length2 % length == 0 \n        if (isPrime)\
    \ {\n            \"YES\"\n        } else {\n            \"NO\"\n        }", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     val start5 = start3\n            val end5 = end3\n            val start6\
    \ = start4\n            val end6 = end4\n            val start7 = start5\n   \
    \         val end7 = end5\n            val start8 = start6\n            val end8\
    \ = end6\n            val start9 = start7\n            val end9 = end7\n     \
    \       val start10 = start8\n            val end10 = end8\n            val start11\
    \ = start9\n            val end11 = end9\n            val start12 = start10\n\
    \            val end12 = end10\n            val start13 = start11\n          \
    \  val end13 = end11\n            val start14 = start12\n            val end14\
    \ = end12\n            val start15 = start13\n            val end15 = end13\n\
    \            val start16 = start14\n            val end16 = end14\n          \
    \  val start17 = start15\n            val end17 = end15\n            val start18\
    \ = start16\n            val end18 = end16\n            val start19 = start17\n\
    \            val end19 = end17\n            val start20 = start18\n          \
    \  val end20 = end18\n            val start21 = start19\n            val end21\
    \ = end19\n            val start22 = start20\n            val end22 = end20\n\
    \            val start23 = start21\n            val end23 = end21\n          \
    \  val start24 = start22\n            val end24 = end22\n            val start25\
    \ = start23\n            val end25 = end23\n            val start26 = start24\n\
    \            val end26 = end24\n            val start27 = start25\n          \
    \  val end27 = end25\n            val start28 = start26\n            val end28\
    \ = end26\n            val start29 = start27\n            val end29 = end27\n\
    \            val start30 = start28\n            val end30 = end28\n          \
    \  val start31 = start29\n            val end31 = end29\n            val start32\
    \ = start30\n            val end32 = end30\n            val start33 = start31\n\
    \            val end33 = end", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start < end2 && start2 < end) {\n            if (start < start2)\
    \ {\n                val start3 = start2\n                val end3 = end2\n  \
    \              val start4 = start\n                val end4 = end\n          \
    \      if (start3 < end4) {\n                    if (start3 < start4) {\n    \
    \                    val start5 = start4\n                        val end5 = end4\n\
    \                        if (start5 < end5) {\n                            val\
    \ start6 = start5\n                            val end6 = end5\n             \
    \               if (start6 < end6) {\n                                val start7\
    \ = start6\n                                val end7 = end6\n                \
    \                if (start7 < end7) {\n                                    val\
    \ start8 = start7\n                                    val end8 = end7\n     \
    \                               if (start8 < end8) {\n                       \
    \                 if (start8 < start) {\n                                    \
    \        val start9 = start8\n                                            val\
    \ end9 = end8\n                                            if (start9 < end9)\
    \ {\n                                                if (start9 < start2) {\n\
    \                                                    val start10 = start9\n  \
    \                                                  val end10 = end9\n        \
    \                                            if (start10 < end10) {\n        \
    \                                                if (start10 < start) {\n    \
    \                                                        val start11 = start10\n\
    \                                                            val end11 = end10\n\
    \                                                            if (start11 < end11)\
    \ {\n                                                                val start12\
    \ = start11\n                                                                val\
    \ end12 = end11\n                                                            \
    \    if (start12 < end12) {\n                                                \
    \                    if (start12 < start) {\n                                \
    \                                        val start13 = start12\n             \
    \                                                           val end13 = end12\n\
    \                                                                        if (start13\
    \ < end13) {\n                                                               \
    \             if (start13 < start2) {\n                                      \
    \                                          val start14 = start13\n           \
    \                                                                     val end14\
    \ = end13\n                                                                  \
    \              if (start14 < end14) {\n                                      \
    \                                              if (start14 < start) {\n      \
    \                                                                            \
    \      val start15 = start14\n                                               \
    \                                         val end15 = end14\n                \
    \                                                                        if (start15\
    \ < end15) {\n                                                               \
    \                             if (start15 < start2) {\n                      \
    \                                                                          val\
    \ start16 = start15\n                                                        \
    \                                        val end16 = end15\n                 \
    \                                                                            \
    \   if (start16 < end16) {\n                                                 \
    \                                                   if (start16 < start) {\n \
    \                                                                            \
    \                           val start17 = start16\n                          \
    \                                                                            \
    \  val end17 = end16\n                                                       \
    \                                                 if (start17 < end17) {\n   \
    \                                                                            \
    \                             if (start17 < start2) {\n                      \
    \                                                                            \
    \              val start18 = start17\n                                       \
    \                                                                         val\
    \ end18 = end17\n                                                            \
    \                                                    if (start18 < end18) {\n\
    \                                                                            \
    \                                        if (start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val startMinusEnd = start - end\n        val start2MinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start", "        val start = interval1._1\n   \
    \     val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        if (start > end) {\n            val temp = start\n \
    \           start = end\n            end = temp\n        }\n        if (start2\
    \ > end2) {\n            val temp = start2\n            start2 = end2\n      \
    \      end2 = temp\n        }\n        if (start == start2 && end == end2) {\n\
    \            return \"NO\"\n        }\n        val length = end - start\n    \
    \    val length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n\
    \            return \"NO\"\n        }\n        val isPrime = length == 2 || length\
    \ == 3 && length2 % length == 0 || length2 % length == 1 && length % length2 ==\
    \ 0\n        if (isPrime) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.max(start, start2)\n        val end = math.min(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval2._2\n        val end2 = interval1._2\n        val start3 = interval1._3\n\
    \        val end3 = interval2._3\n        val start4 = interval1._4\n        val\
    \ end4 = interval2._4\n        val start5 = interval1._5\n        val end5 = interval2._5\n\
    \        val start6 = interval1._6\n        val end6 = interval2._6\n        val\
    \ start7 = interval1._7\n        val end7 = interval2._7\n        val start8 =\
    \ interval1._8\n        val end8 = interval2._8\n        val start9 = interval1._9\n\
    \        val end9 = interval2._9\n        val start10 = interval1._10\n      \
    \  val end10 = interval2._10\n        val start11 = interval1._11\n        val\
    \ end11 = interval2._11\n        val start12 = interval1._12\n        val end12\
    \ = interval2._12\n        val start13 = interval1._13\n        val end13 = interval2._13\n\
    \        val start14 = interval1._14\n        val end14 = interval2._14\n    \
    \    val start15 = interval1._15\n        val end15 = interval2._15\n        val\
    \ start16 = interval1._16\n        val end16 = interval2._16\n        val start17\
    \ = interval1._17\n        val end17 = interval2._17\n        val start18 = interval1._18\n\
    \        val end18 = interval2._18\n        val start19 = interval1._19\n    \
    \    val end19 = interval2._19\n        val start20 = interval1._20\n        val\
    \ end20 = interval2._20\n        val start21 = interval1._21\n        val end21\
    \ = interval2._21\n        val start22 = interval1._22\n        val end22 = interval2._22\n\
    \        val start23 = interval1._23\n        val end23 = interval2._23\n    \
    \    val start24 = interval1._24\n        val end24 = interval2._24\n        val\
    \ start25 = interval1._25\n        val end25 = interval2._25\n        val start26\
    \ = interval1._26\n        val end26 = interval2._26\n        val start27 = interval1._27\n\
    \        val end27 = interval2._27\n        val start28 = interval1._", "    \
    \    val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start = math.min(start, start2)\n        val end = math.max(end, end2)\n   \
    \     val length = end - start\n        if (length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val start3 = start2\n            val end3 = end2\n\
    \            val start4 = start\n            val end4 = end\n            if (start3\
    \ < end4 && start4 < end3) {\n                val start5 = start3\n          \
    \      val end5 = end3\n                val start6 = start4\n                val\
    \ end6 = end4\n                if (start5 < end6 && start6 < end5) {\n       \
    \             val start7 = start5\n                    val end7 = end5\n     \
    \               val start8 = start6\n                    val end8 = end6\n   \
    \                 if (start7 < end8 && start8 < end7) {\n                    \
    \    val start9 = start7\n                        val end9 = end7\n          \
    \              val start10 = start8\n                        val end10 = end8\n\
    \                        if (start9 < end10 && start10 < end9) {\n           \
    \                 val start11 = start9\n                            val end11\
    \ = end9\n                            val start12 = start10\n                \
    \            val end12 = end10\n                            if (start11 < end12\
    \ && start12 < end11) {\n                                val start13 = start11\n\
    \                                val end13 = end11\n                         \
    \       val start14 = start12\n                                val end14 = end12\n\
    \                                if (start13 < end14 && start14 < end13) {\n \
    \                                   val start15 = start13\n                  \
    \                  val end15 = end13\n                                    val\
    \ start16 = start14\n                                    val end16 = end14\n \
    \                                   if (start15 < end16 && start16 < end15) {\n\
    \                                        val start17 = start15\n             \
    \                           val end17 = end15\n                              \
    \          val start18 = start16\n                                        val\
    \ end18 = end16\n                                        if (start17 < end18 &&\
    \ start18 < end17) {\n                                            return \"YES\"\
    \n                                        } else {\n                         \
    \                   return \"NO\"\n                                        }\n\
    \                                    } else {\n                              \
    \          return \"NO\"\n                                    }\n            \
    \                    } else {\n                                    return \"NO\"\
    \n                                }\n                            } else {\n  \
    \                              return \"NO\"\n                            }\n\
    \                        } else {\n                            return \"NO\"\n\
    \                        }\n                    } else {\n                   \
    \     return \"NO\"\n                    }\n                } else {\n       \
    \             return \"NO\"\n                }\n            } else {\n       \
    \         return \"NO\"\n            }\n        } else {\n            return \"\
    NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            (s\"NO\")\n        } else if (start == end) {\n\
    \            (s\"NO\")\n        } else if (start2 > end2) {\n            (s\"\
    NO\")\n        } else if (start2 == end2) {\n            (s\"YES\")\n        }\
    \ else {\n            val start3 = start2\n            val end3 = end2\n     \
    \       val start4 = start\n            val end4 = end\n            val start5\
    \ = start3\n            val end5 = end3\n            val start6 = start4\n   \
    \         val end6 = end4\n            val start7 = start5\n            val end7\
    \ = end5\n            val start8 = start6\n            val end8 = end6\n     \
    \       val start9 = start7\n            val end9 = end7\n            val start10\
    \ = start8\n            val end10 = end8\n            val start11 = start9\n \
    \           val end11 = end9\n            val start12 = start10\n            val\
    \ end12 = end10\n            val start13 = start11\n            val end13 = end11\n\
    \            val start14 = start12\n            val end14 = end12\n          \
    \  val start15 = start13\n            val end15 = end13\n            val start16\
    \ = start14\n            val end16 = end14\n            val start17 = start15\n\
    \            val end17 = end15\n            val start18 = start16\n          \
    \  val end18 = end16\n            val start19 = start17\n            val end19\
    \ = end17\n            val start20 = start18\n            val end20 = end18\n\
    \            val start21 = start19\n            val end21 = end19\n          \
    \  val start22 = start20\n            val end22 = end20\n            val start23\
    \ = start21\n            val end23 = end21\n            val start24 = start22\n\
    \            val end24 = end22\n            val start25 = start23\n          \
    \  val end25 = end23\n            val start26 = start24\n            val end26\
    \ = end24\n            val start27 = start25\n            val end27 = end25\n\
    \            val start28 = start26\n            val end28 = end26\n          \
    \  val start29 = start27\n            val end29 = end27\n            val start30\
    \ = start28\n            val end30 = end28\n            val start31 = start29\n\
    \            ", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start1 = interval1._2\n        val end1 = interval2._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val start3 =\
    \ interval1._1\n        val end3 = interval1._2\n        val start4 = interval2._1\n\
    \        val end4 = interval2._2\n        val start5 = interval1._1\n        val\
    \ end5 = interval1._2\n        val start6 = interval2._1\n        val end6 = interval2._2\n\
    \        val start7 = interval1._1\n        val end7 = interval1._2\n        val\
    \ start8 = interval2._1\n        val end8 = interval2._2\n        val start9 =\
    \ interval1._1\n        val end9 = interval1._2\n        val start10 = interval2._1\n\
    \        val end10 = interval2._2\n        val start11 = interval1._1\n      \
    \  val end11 = interval1._2\n        val start12 = interval2._1\n        val end12\
    \ = interval2._2\n        val start13 = interval1._1\n        val end13 = interval1._2\n\
    \        val start14 = interval2._1\n        val end14 = interval2._2\n      \
    \  val start15 = interval1._1\n        val end15 = interval1._2\n        val start16\
    \ = interval2._1\n        val end16 = interval2._2\n        val start17 = interval1._1\n\
    \        val end17 = interval1._2\n        val start18 = interval2._1\n      \
    \  val end18 = interval2._2\n        val start19 = interval1._1\n        val end19\
    \ = interval1._2\n        val start20 = interval2._1\n        val end20 = interval2._2\n\
    \        val start21 = interval1._1\n        val end21 = interval1._2\n      \
    \  val start22 = interval2._1\n        val end22 = interval2._2\n        val start23\
    \ = interval1._1\n        val end23 = interval1._2\n        val start24 = interval2._1\n\
    \        val end24 = interval2._2\n        val start25 = interval1._1\n      \
    \  val end25 = interval1._2\n        val start26 = interval2._1\n        val end26\
    \ = interval2._2\n        val start27 = interval1._1\n        val end27 = interval1._2\n\
    \        val start28 = interval2._1\n        val end28 = interval2._2\n      \
    \  val start29 = interval1._1\n        val end29 = interval1._2\n", "        val\
    \ start = interval1._1\n        val end = interval2._1\n        val start2 = interval2._2\n\
    \        val end2 = interval2._2\n        val start1 = interval1._2\n        val\
    \ end1 = interval1._2\n        val start3 = interval1._2\n        val end3 = interval1._2\n\
    \        val start4 = interval1._2\n        val end4 = interval1._2\n        val\
    \ start5 = interval1._2\n        val end5 = interval1._2\n        val start6 =\
    \ interval1._2\n        val end6 = interval1._2\n        val start7 = interval1._2\n\
    \        val end7 = interval1._2\n        val start8 = interval1._2\n        val\
    \ end8 = interval1._2\n        val start9 = interval1._2\n        val end9 = interval1._2\n\
    \        val start10 = interval1._2\n        val end10 = interval1._2\n      \
    \  val start11 = interval1._2\n        val end11 = interval1._2\n        val start12\
    \ = interval1._2\n        val end12 = interval1._2\n        val start13 = interval1._2\n\
    \        val end13 = interval1._2\n        val start14 = interval1._2\n      \
    \  val end14 = interval1._2\n        val start15 = interval1._2\n        val end15\
    \ = interval1._2\n        val start16 = interval1._2\n        val end16 = interval1._2\n\
    \        val start17 = interval1._2\n        val end17 = interval1._2\n      \
    \  val start18 = interval1._2\n        val end18 = interval1._2\n        val start19\
    \ = interval1._2\n        val end19 = interval1._2\n        val start20 = interval1._2\n\
    \        val end20 = interval1._2\n        val start21 = interval1._2\n      \
    \  val end21 = interval1._2\n        val start22 = interval1._2\n        val end22\
    \ = interval1._2\n        val start23 = interval1._2\n        val end23 = interval1._2\n\
    \        val start24 = interval1._2\n        val end24 = interval1._2\n      \
    \  val start25 = interval1._2\n        val end25 = interval1._2\n        val start26\
    \ = interval1._2\n        val end26 = interval1._2\n        val start27 = interval1._2\n\
    \        val end27 = interval1._2\n        val start28 = interval1._2\n      \
    \  val end28 = interval1._2\n        val start29 = interval1._2\n        val end29\
    \ = interval1._2\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        val isPrime\
    \ = length2 % length == 0\n        if (isPrime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start > end) {\n            val\
    \ temp = start\n            start = end\n            end = temp\n        }\n \
    \       if (start2 > end2) {\n            val temp = start2\n            start2\
    \ = end2\n            end2 = temp\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end > end2) {\n            return \"NO\"\n       \
    \ }\n        if (start == start2 && end == end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end > end2) {\n            return\
    \ \"NO\"\n        }\n        if (start == start2 && end == end2) {\n         \
    \   return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n  \
    \          return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start == start2 && end\
    \ == end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end > end2) {\n            return \"NO\"\n        }\n        if (start\
    \ == start", "        val start = interval1._1\n        val end = interval2._1\n\
    \        val start2 = interval1._2\n        val end2 = interval2._2\n        if\
    \ (start < end) {\n            if (start2 < end2) {\n                val start3\
    \ = start2\n                val end3 = end2\n                val start4 = start\n\
    \                val end4 = end\n                if (start3 < end4) {\n      \
    \              val start5 = start3\n                    val end5 = end3\n    \
    \                val start6 = start4\n                    val end6 = end4\n  \
    \                  if (start5 < end6) {\n                        val start7 =\
    \ start5\n                        val end7 = end5\n                        val\
    \ start8 = start6\n                        val end8 = end6\n                 \
    \       if (start7 < end8) {\n                            val start9 = start7\n\
    \                            val end9 = end7\n                            val\
    \ start10 = start8\n                            val end10 = end8\n           \
    \                 if (start9 < end10) {\n                                val start11\
    \ = start9\n                                val end11 = end9\n               \
    \                 val start12 = start10\n                                val end12\
    \ = end10\n                                if (start11 < end12) {\n          \
    \                          val start13 = start11\n                           \
    \         val end13 = end11\n                                    val start14 =\
    \ start12\n                                    val end14 = end12\n           \
    \                         if (start13 < end14) {\n                           \
    \             val start15 = start13\n                                        val\
    \ end15 = end13\n                                        val start16 = start14\n\
    \                                        val end16 = end14\n                 \
    \                       if (start15 < end16) {\n                             \
    \               val start17 = start15\n                                      \
    \      val end17 = end15\n                                            val start18\
    \ = start16\n                                            val end18 = end16\n \
    \                                           if (start17 < end18) {\n         \
    \                                       return \"YES\"\n                     \
    \                       }\n                                        }\n       \
    \                             }\n                                }\n         \
    \                   }\n                        }\n                    }\n    \
    \            }\n            }\n        }\n        \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) {\n            if (length\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (length == 1) {\n   \
    \         if (length2 == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        }\n        val start3\
    \ = start + length\n        val end3 = end + length\n        val start4 = start2\
    \ + length2\n        val end4 = end2 + length2\n        if (start3 <= start4 &&\
    \ end3 >= end4) {\n            if (start3 % length2 == 0) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (start3 >= start4 && end3 <= end4) {\n            if (start3\
    \ % length2 == 0) {\n                return \"NO\"\n            } else {\n   \
    \             return \"YES\"\n            }\n        }\n        if (start3 <=\
    \ start4 && end3 >= end4) {\n            if (start3 % length2 == 0) {\n      \
    \          return \"NO\"\n            } else {\n                return \"NO\"\n\
    \            }\n        }\n        if (start3 >= start4 && end3 <= end4) {\n \
    \           if (start3 % length2 == 0) {\n                return \"YES\"\n   \
    \         } else {\n                return \"NO\"\n            }\n        }\n\
    \        if (start3 <= start4 && end3 >= end4) {\n            if (start3 % length2\
    \ == 0) {\n                return \"NO\"\n            } else {\n             \
    \   return \"YES\"\n            }\n        }\n        if (start3 >= start4 &&\
    \ end3 <= end4) {\n            if (start3 % length2 == 0) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        }\n        if (start3 <= start4 && end3 >= end4) {\n            if (start3\
    \ % length2 == 0) {\n                return \"NO\"\n            } else {\n   \
    \             return \"NO\"\n            }\n        }\n        if (start3 >= start4\
    \ && end3 <= end4) {\n            if (start3 % length2 == 0) {\n             \
    \   return \"YES\"\n            } else {\n                return \"NO\"\n    \
    \        }\n        }\n        if (start3 <= start4 && end3 >= end4) {\n     \
    \       if (start3 % length2 == 0) {\n                return \"NO\"\n        \
    \    } else {\n                return \"NO\"\n            }\n        }\n     \
    \   if (start3 >= start4 && end3 <= end4) {\n            if (start3 % length2\
    \ == 0) {\n                return \"YES\"\n            } else {\n            \
    \    return \"NO\"\n            }\n        }\n        if (start3 <= start4 &&\
    \ end3 >= end4) {\n", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMin = math.min(start, start2)\n        val startMax = math.max(start, start2)\n\
    \        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startIntersection = math.max(startMin, endMin)\n        val\
    \ endIntersection = math.min(endMax, startMax)\n        val intersectionLength\
    \ = endIntersection - startIntersection\n        val isPrime = intersectionLength\
    \ == math.ceil(intersectionLength / 2)\n        if (isPrime) {\n            \"\
    YES\"\n        } else {\n            \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val length = end - start\n            val length2 = end2 - start2\n\
    \            if (length2 == 0) {\n                if (length == 0) \"NO\" else\
    \ \"YES\"\n            } else if (length2 == 1) {\n                if (length\
    \ == 1) \"YES\" else \"NO\"\n            } else {\n                if (length\
    \ == 1) \"NO\" else \"YES\"\n            }\n        } else {\n            \"NO\"\
    \n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = math.max(start, start2)\n        val end3 = math.min(end, end2)\n \
    \       val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   val isPrime = length2 % length == 0\n        if (isPrime) {\n            \"\
    YES\"\n        } else {\n            \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) \n\
    \            \"NO\" \n        else if (start > end2 && start2 < end) \n      \
    \      \"NO\" \n        else if (start < end2 && start2 > end) \n            \"\
    YES\" \n        else if (start > end2 && start2 > end) \n            \"YES\" \n\
    \        else \n            \"NO\"", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val length = end - start\n        val length2 = end2\
    \ - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) {\n            val start3 = start2\n            val end3\
    \ = end2\n            val start4 = start\n            val end4 = end\n       \
    \     if (start3 < end4 && start4 < end3) {\n                val start5 = start3\n\
    \                val end5 = end3\n                val start6 = start4\n      \
    \          val end6 = end4\n                if (start5 < end6 && start6 < end5)\
    \ {\n                    val start7 = start5\n                    val end7 = end5\n\
    \                    val start8 = start6\n                    val end8 = end6\n\
    \                    if (start7 < end8 && start8 < end7) {\n                 \
    \       val start9 = start7\n                        val end9 = end7\n       \
    \                 val start10 = start8\n                        val end10 = end8\n\
    \                        if (start9 < end10 && start10 < end9) {\n           \
    \                 val start11 = start9\n                            val end11\
    \ = end9\n                            val start12 = start10\n                \
    \            val end12 = end10\n                            if (start11 < end12\
    \ && start12 < end11) {\n                                val start13 = start11\n\
    \                                val end13 = end11\n                         \
    \       val start14 = start12\n                                val end14 = end12\n\
    \                                if (start13 < end14 && start14 < end13) {\n \
    \                                   val start15 = start13\n                  \
    \                  val end15 = end13\n                                    val\
    \ start16 = start14\n                                    val end16 = end14\n \
    \                                   if (start15 < end16 && start16 < end15) {\n\
    \                                        val start17 = start15\n             \
    \                           val end17 = end15\n                              \
    \          val start18 = start16\n                                        val\
    \ end18 = end16\n                                        if (start17 < end18 &&\
    \ start18 < end17) {\n                                            val start19\
    \ = start17\n                                            val end19 = end17\n \
    \                                           val start20 = start18\n          \
    \                                  val end20 = end18\n                       \
    \                     if (start19 < end20 && start20 < end19) {\n            \
    \                                    return \"YES\"\n                        \
    \                    } else {\n                                              \
    \  return \"NO\"\n                                            }\n            \
    \                            } else {\n                                      \
    \      return \"NO\"\n                                        }\n            \
    \                        } else {\n                                        return\
    \ \"NO\"\n                                    }\n                            \
    \    } else {\n                                    return \"NO\"\n           \
    \                     }\n                            } else {\n              \
    \                  return \"NO\"\n                            }\n            \
    \            } else {\n                            return \"NO\"\n           \
    \             }\n                    } else {\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) \"\
    NO\" else \"YES\"\n        } else if (length == 0) \"NO\" else \"YES\"", "   \
    \     val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length == length2) \"YES\"\n        else if\
    \ (length < length2) \"NO\"\n        else if (length2 < length) \"NO\"\n     \
    \   else intersection2(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start < end2 &&\
    \ start2 < end) {\n            val length = end - start\n            val length2\
    \ = end2 - start2\n            if (length == length2) {\n                if (length\
    \ == 1) {\n                    return \"YES\"\n                } else {\n    \
    \                return \"NO\"\n                }\n            } else {\n    \
    \            return \"NO\"\n            }\n        } else {\n            return\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start > start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start > start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n    \
    \        return \"YES\"\n        }", "        val start = interval1._1\n     \
    \   val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start = math.max(start, start2)\n        val end\
    \ = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = start2\n        val end3 = end2\n        val start4 = start3\n\
    \        val end4 = end3\n        val start5 = start4\n        val end5 = end4\n\
    \        val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = math.max(start, start2)\n        val end3 = math.min(end,\
    \ end2)\n        val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        val isPrime = length == 2 ||\
    \ length == 3 || length == 5 || length == 7 || length == 11 || length == 13 ||\
    \ length == 17 || length == 23 || length == 29 || length == 37 || length == 43\
    \ || length == 49 || length == 57 || length == 73 || length == 79 || length ==\
    \ 87 || length == 93 || length == 99 || length == 113 || length == 137 || length\
    \ == 153 || length == 177 || length == 235 || length == 277 || length == 337 ||\
    \ length == 397 || length == 473 || length == 529 || length == 593 || length ==\
    \ 677 || length == 767 || length == 833 || length == 927 || length == 1019 ||\
    \ length == 1093 || length == 1179 || length == 1267 || length == 1357 || length\
    \ == 1433 || length == 1527 || length == 1619 || length == 1699 || length == 1773\
    \ || length == 1867 || length == 1933 || length == 1997 || length == 2067 || length\
    \ == 2153 || length == 2237 || length == 2287 || length == 2343 || length == 2399\
    \ || length == 2459 || length == 2527 || length == 2593 || length == 2667 || length\
    \ == 2733 || length == 2797 || length == 2867 || length == 2927 || length == 2973\n\
    \        if (start < end) {\n            if (isPrime) {\n                return\
    \ \"YES\"\n            } else {\n                return \"NO\"\n            }\n\
    \        } else {\n            if (isPrime) {\n                return \"NO\"\n\
    \            } else {\n                return \"YES\"\n            }\n       \
    \ }", "        val start = interval1._1\n        val end = interval1._2\n    \
    \    val start2 = interval2._1\n        val end2 = interval2._2\n        val start\
    \ = math.min(start, start2)\n        val end = math.max(end, end2)\n        val\
    \ length = end - start\n        val isPrime = length == 2 || length == 3 || length\
    \ == 5 || length == 7 || length == 11 || length == 13 || length == 17 || length\
    \ == 23 || length == 29 || length == 37 || length == 43 || length == 49 || length\
    \ == 57 || length == 73 || length == 79 || length == 87 || length == 97 || length\
    \ == 113 || length == 127\n        if (isPrime) {\n            return \"YES\"\n\
    \        } else {\n            return \"NO\"\n        }", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else if (length ==\
    \ 1) \"YES\" else \"NO\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.max(start, start2)\n        val end = math.min(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0 || length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval2._1\n        val start2 = interval1._2\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val start3 = start2 + 1\n            val end3 = end2 - 1\n  \
    \          val start4 = start2 + 1\n            val end4 = end2 - 1\n        \
    \    val start5 = start2 + 1\n            val end5 = end2 - 1\n            val\
    \ start6 = start2 + 1\n            val end6 = end2 - 1\n            val start7\
    \ = start2 + 1\n            val end7 = end2 - 1\n            val start8 = start2\
    \ + 1\n            val end8 = end2 - 1\n            val start9 = start2 + 1\n\
    \            val end9 = end2 - 1\n            val start10 = start2 + 1\n     \
    \       val end10 = end2 - 1\n            val start11 = start2 + 1\n         \
    \   val end11 = end2 - 1\n            val start12 = start2 + 1\n            val\
    \ end12 = end2 - 1\n            val start13 = start2 + 1\n            val end13\
    \ = end2 - 1\n            val start14 = start2 + 1\n            val end14 = end2\
    \ - 1\n            val start15 = start2 + 1\n            val end15 = end2 - 1\n\
    \            val start16 = start2 + 1\n            val end16 = end2 - 1\n    \
    \        val start17 = start2 + 1\n            val end17 = end2 - 1\n        \
    \    val start18 = start2 + 1\n            val end18 = end2 - 1\n            val\
    \ start19 = start2 + 1\n            val end19 = end2 - 1\n            val start20\
    \ = start2 + 1\n            val end20 = end2 - 1\n            val start21 = start2\
    \ + 1\n            val end21 = end2 - 1\n            val start22 = start2 + 1\n\
    \            val end22 = end2 - 1\n            val start23 = start2 + 1\n    \
    \        val end23 = end2 - 1\n            val start24 = start2 + 1\n        \
    \    val end24 = end2 - 1\n            val start25 = start2 + 1\n            val\
    \ end25 = end2 - 1\n            val start26 = start2 + 1\n            val end26\
    \ = end2 - 1\n            val start27 = start2 + 1\n            val end27 = end2\
    \ - 1\n            val start28 = start2 + 1\n            val end28", "       \
    \ val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) \"NO\"\
    \ else length == length2 ? \"YES\" : \"NO\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        if (start < end2 && start2 < end) {\n         \
    \   val start3 = start2\n            val end3 = end2\n            val start4 =\
    \ start\n            val end4 = end\n            val start5 = start3\n       \
    \     val end5 = end3\n            val start6 = start4\n            val end6 =\
    \ end4\n            val start7 = start5\n            val end7 = end5\n       \
    \     val start8 = start6\n            val end8 = end6\n            val start9\
    \ = start7\n            val end9 = end7\n            val start10 = start8\n  \
    \          val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val length =\
    \ end - start\n        val length2 = end2 - start2\n        if (length2 == 0)\
    \ {\n            if (length == 0) \"NO\" else \"YES\"\n        } else if (length2\
    \ == 1) {\n            if (length == 0) \"NO\" else \"YES\"\n        } else if\
    \ (length2 == 2) {\n            if (length == 0) \"NO\" else \"YES\"\n       \
    \ } else if (length2 > 2) {\n            if (length == 0) \"NO\" else \"YES\"\n\
    \        } else {\n            if (length == 0) \"NO\" else \"YES\"\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length == 0 || length2\
    \ == 0) {\n            \"NO\"\n        } else if (length2 == 1) {\n          \
    \  if (length == 1) {\n                \"YES\"\n            } else {\n       \
    \         \"NO\"\n            }\n        } else {\n            val mid = length\
    \ / 2\n            val mid2 = length2 / 2\n            if (mid == mid2) {\n  \
    \              if (start < start2) {\n                    \"YES\"\n          \
    \      } else {\n                    \"NO\"\n                }\n            }\
    \ else {\n                if (start < start2) {\n                    \"NO\"\n\
    \                } else {\n                    \"YES\"\n                }\n  \
    \          }\n        }", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val startMinusEnd = start - end\n  \
    \      val start2MinusEnd2 = start2 - end2\n        val startMinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val startMinusEnd2\
    \ = start2 - end2\n        val startMinusEnd2 = start2 - end2\n        val start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length == 0 || length2 == 0) {\n            \"NO\"\
    \n        } else if (length == length2) {\n            \"YES\"\n        } else\
    \ {\n            val start3 = start2 + length\n            val end3 = end2 + length\n\
    \            val start4 = start2 + length2\n            val end4 = end2 + length2\n\
    \            if (start3 > end4 || start4 > end3) {\n                \"NO\"\n \
    \           } else if (start3 < end4 && start4 < end3) {\n                \"YES\"\
    \n            } else {\n                val start5 = start3 + length\n       \
    \         val end5 = end3 + length\n                val start6 = start3 + length2\n\
    \                val end6 = end3 + length2\n                if (start5 > end6\
    \ || start6 > end5) {\n                    \"NO\"\n                } else if (start5\
    \ < end6 && start6 < end5) {\n                    \"YES\"\n                } else\
    \ {\n                    \"NO\"\n                }\n            }\n        }",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) {\n                \"NO\"\n            } else {\n\
    \                \"YES\"\n            }\n        } else {\n            if (length\
    \ == 1) {\n                if (length2 == 1) {\n                    \"YES\"\n\
    \                } else {\n                    \"NO\"\n                }\n   \
    \         } else {\n                if (length2 == 1) {\n                    if\
    \ (length == 0) {\n                        \"NO\"\n                    } else\
    \ {\n                        \"YES\"\n                    }\n                }\
    \ else {\n                    if (length == 0) {\n                        \"NO\"\
    \n                    } else {\n                        if (length == 1) {\n \
    \                           if (length2 == 0) {\n                            \
    \    \"NO\"\n                            } else {\n                          \
    \      \"YES\"\n                            }\n                        } else\
    \ {\n                            if (length == 1) {\n                        \
    \        if (length2 == 1) {\n                                    \"YES\"\n  \
    \                              } else {\n                                    \"\
    NO\"\n                                }\n                            } else {\n\
    \                                if (length == 1) {\n                        \
    \            if (length2 == 1) {\n                                        \"YES\"\
    \n                                    } else {\n                             \
    \           \"NO\"\n                                    }\n                  \
    \              } else {\n                                    if (length2 == 1)\
    \ {\n                                        if (length == 0) {\n            \
    \                                \"NO\"\n                                    \
    \    } else {\n                                            \"YES\"\n         \
    \                               }\n                                    } else\
    \ {\n                                        if (length == 0) {\n            \
    \                                \"NO\"\n                                    \
    \    } else {\n                                            if (length == 1) {\n\
    \                                                if (length2 == 0) {\n       \
    \                                             \"NO\"\n                       \
    \                         } else {\n                                         \
    \           \"YES\"\n                                                }\n     \
    \                                       } else {\n                           \
    \                     if (length == 1) {\n                                   \
    \                 if (length2 == 1) {\n                                      \
    \                  \"YES\"\n                                                 \
    \   } else {\n                                                        \"NO\"\n\
    \                                                    }\n                     \
    \                           } else {\n                                       \
    \             if (length == 1) {\n                                           \
    \             if (length2 == 0) {\n                                          \
    \                  \"NO\"\n                                        } else {\n\
    \                                                            \"YES\"\n       \
    \                                 }\n                                        \
    \            } else {\n                                                      \
    \  if (length == 1) {\n                                                      \
    \      if (length2 == 1) {\n                                                 \
    \               \"YES\"\n                                                    \
    \        } else {\n                                                          \
    \      \"NO\"\n                                                            }\n\
    \                                                        } else {\n          \
    \                                                  if (length == 1) {\n      \
    \                                                          if (length2 == 0) {\n\
    \                                                                    \"NO\"\n\
    \                                                                } else {\n  \
    \                                                                  \"YES\"\n \
    \                                                               }\n          \
    \                                                  } else {\n                \
    \                                                if (length == 1) {\n        \
    \                                                            if (length2 == 1)\
    \ {\n                                                                        \"\
    YES\"\n                                                                    } else\
    \ {\n                                                                        \"\
    NO\"\n                                                                    }\n\
    \                                                                } else {\n  \
    \                                                                  if (length\
    \ == 1) {\n                                                                  \
    \                      if (length2 == 0) {\n                                 \
    \                                           \"NO\"\n                         \
    \                               } else {\n                                   \
    \                                         \"YES\"\n                          \
    \                                              }\n                           \
    \                                         } else {\n                         \
    \                                               if (length == 1) {\n         \
    \                                                                   if (length2\
    \ == 1) {\n                                                                  \
    \              \"YES\"\n                                                     \
    \                       } else {\n                                           \
    \                                     \"NO\"\n                               \
    \                                             }\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) \"\
    NO\" else \"YES\"\n        } else if (length2 == 1) {\n            if (length\
    \ == 1) \"YES\" else \"NO\"\n        } else {\n            val mid = start + (length\
    \ / 2)\n            val mid2 = start2 + (length2 / 2)\n            if (length2\
    \ % 2 == 0) \"YES\" else \"NO\"\n        }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start = math.max(start, start2)\n        val\
    \ end = math.min(end, end2)\n        val length = end - start\n        if (length\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length2 == 0 || length == 0) \"NO\" else \"YES\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        if (start < end2 && start2 < end) {\n\
    \            val start3 = start2\n            val end3 = end2\n            val\
    \ start4 = start\n            val end4 = end\n            val start5 = start3\n\
    \            val end5 = end3\n            val start6 = start4\n            val\
    \ end6 = end4\n            val start7 = start5\n            val end7 = end5\n\
    \            val start8 = start6\n            val end8 = end6\n            val\
    \ start9 = start7\n            val end9 = end7\n            val start10 = start8\n\
    \            val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start29\n          \
    \  val end31 = end29\n            val start32 = start30\n            val end32\
    \ = end30\n            val start33 = start31\n            val end33 = end", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        val startMin\
    \ = math.min(start, start2)\n        val startMax = math.max(start, start2)\n\
    \        val endMin = math.min(end, end2)\n        val endMax = math.max(end,\
    \ end2)\n        val startMin2 = math.min(start2, end2)\n        val startMax2\
    \ = math.max(start2, end2)\n        val endMin2 = math.min(end2, start2)\n   \
    \     val endMax2 = math.max(end2, start2)\n        val startMin3 = math.min(start2,\
    \ end2)\n        val startMax3 = math.max(start2, end2)\n        val endMin3 =\
    \ math.min(end2, start2)\n        val endMax3 = math.max(end2, start2)\n     \
    \   val startMin4 = math.min(start2, end2)\n        val startMax4 = math.max(start2,\
    \ end2)\n        val endMin4 = math.min(end2, start2)\n        val endMax4 = math.max(end2,\
    \ start2)\n        val startMin5 = math.min(start2, end2)\n        val startMax5\
    \ = math.max(start2, end2)\n        val endMin5 = math.min(end2, start2)\n   \
    \     val endMax5 = math.max(end2, start2)\n        val startMin6 = math.min(start2,\
    \ end2)\n        val startMax6 = math.max(start2, end2)\n        val endMin6 =\
    \ math.min(end2, start2)\n        val endMax6 = math.max(end2, start2)\n     \
    \   val startMin7 = math.min(start2, end2)\n        val startMax7 = math.max(start2,\
    \ end2)\n        val endMin7 = math.min(end2, start2)\n        val endMax7 = math.max(end2,\
    \ start2)\n        val startMin8 = math.min(start2, end2)\n        val startMax8\
    \ = math.max(start2, end2)\n        val endMin8 = math.min(end2, start2)\n   \
    \     val endMax8 = math.max(end2, start2)\n        val startMin9 = math.min(start2,\
    \ end2)\n        val startMax9 = math.max(start2, end2)\n        val endMin9 =\
    \ math.min(end2, start2)\n        val endMax9 = math.max(end2, start2)\n     \
    \   val startMin10 = math.min(start2, end2)\n        val startMax10 = math.max(start2,\
    \ end2)\n        val endMin10 = math.min(end2, start2)\n        val endMax10 =\
    \ math.max(end2, start2)\n        val startMin11 = math.", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length == 1) {\n            \"YES\"\n      \
    \  } else if (length2 == 1) {\n            \"YES\"\n        } else if (length\
    \ == length2) {\n            if (length == 1) {\n                \"YES\"\n   \
    \         } else if (length2 == 1) {\n                \"YES\"\n            } else\
    \ {\n                \"NO\"\n            }\n        } else {\n            if (length\
    \ == 1) {\n                \"NO\"\n            } else if (length2 == 1) {\n  \
    \              \"NO\"\n            } else {\n                if (length2 > length)\
    \ {\n                    val temp = length\n                    length = length2\n\
    \                    length2 = temp\n                }\n                val temp\
    \ = length2\n                length2 = length\n                length = temp\n\
    \                val temp = start\n                start = start2\n          \
    \      start2 = temp\n                val temp = end\n                end = end2\n\
    \                end2 = temp\n                val temp = start2\n            \
    \    start2 = start\n                start = temp\n                val temp =\
    \ end2\n                end2 = end\n                end = temp\n             \
    \   val temp = length\n                length = length2\n                length2\
    \ = temp\n                val temp = length2\n                length2 = length\n\
    \                length = temp\n                val temp = start\n           \
    \     start = start2\n                start2 = temp\n                val temp\
    \ = end\n                end = end2\n                end2 = temp\n           \
    \     val temp = start2\n                start2 = start\n                start\
    \ = temp\n                val temp = end2\n                end2 = end\n      \
    \          end = temp\n                val temp = length\n                length\
    \ = length2\n                length2 = temp\n                val temp = length2\n\
    \                length2 = length\n                length = temp\n           \
    \     val temp = start\n                start = start2\n                start2\
    \ = temp\n                val temp = end\n                end = end2\n       \
    \         end2 = temp\n                val temp = start2\n                start2\
    \ = start\n                start = temp\n                val temp = end2\n   \
    \             end2 = end\n                end = temp\n                val temp\
    \ = length\n                length = length2\n                length2 = temp\n\
    \                val temp = length2\n                length2 = length\n      \
    \          length = temp\n                val temp = start\n                start\
    \ = start2\n                start2 = temp\n                val temp = end\n  \
    \              end = end2\n                end2 = temp\n                val temp\
    \ = start2\n                start2 = start\n                start = temp\n   \
    \             val temp = end2\n                end2 = end\n                end\
    \ = temp\n                val temp = length\n                length = length2\n\
    \                length2 = temp\n", "        val start = interval1._1\n      \
    \  val end = interval1._2\n        val start2 = interval2._1\n        val end2\
    \ = interval2._2\n        val start3 = start2\n        val end3 = end2\n     \
    \   val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length == 1) {\n            \"YES\"\n        } else if (length2 == 1) {\n \
    \           \"YES\"\n        } else if (length == length2) {\n            if (length\
    \ == 1) {\n                \"YES\"\n            } else {\n                \"NO\"\
    \n            }\n        } else {\n            if (length == 1) {\n          \
    \      \"NO\"\n            } else {\n                \"YES\"\n            }\n\
    \        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else length == length2 ? \"YES\" : \"NO\"", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = math.max(start, start2)\n\
    \        val end3 = math.min(end, end2)\n        val start4 = math.max(start,\
    \ start3)\n        val end4 = math.min(end, end3)\n        if (start4 < end4)\
    \ {\n            if (end4 < start3) {\n                if (end3 < start2) {\n\
    \                    if (end2 < start) {\n                        if (end1 < end)\
    \ {\n                            return \"NO\"\n                        }\n  \
    \                  }\n                }\n            }\n        }\n        return\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        if\
    \ (start > end) {\n            val temp = start\n            start = end\n   \
    \         end = temp\n        }\n        if (start2 > end2) {\n            val\
    \ temp = start2\n            start2 = end2\n            end2 = temp\n        }\n\
    \        if (start == start2 && end == end2) {\n            return \"YES\"\n \
    \       }\n        if (start > start2 && end > end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start > start2 && end < end2) {\n           \
    \ return \"NO\"\n        }\n        if (start < start2 && end > end2) {\n    \
    \        return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n\
    \            return \"NO\"\n        }\n        if (start > start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start < start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end > end2) {\n            return \"NO\"\n        }\n        if (start > start2\
    \ && end < end2) {\n            return \"NO\"\n        }\n        if (start <\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end > end2) {\n            return \"NO\"\n        }\n        if\
    \ (start > start2 && end < end2) {\n            return \"NO\"\n        }\n   \
    \     if (start < start2 && end < end2) {\n            return \"NO\"\n       \
    \ }\n        if (start < start2 && end > end2) {\n            return \"NO\"\n\
    \        }\n        if (start > start2 && end < end2) {\n            return \"\
    NO\"\n        }\n        if (start < start2 && end < end2) {\n            return\
    \ \"NO\"\n        }\n        if (start < start2 && end > end2) {\n           \
    \ return \"NO\"\n        }\n        if (start > start2 && end < end2) {\n    \
    \        return \"NO\"\n        }\n        if (start < start2 && end < end2) {\n\
    \            return \"NO\"\n        }\n        if (start < start2 && end > end2)\
    \ {\n            return \"NO\"\n        }\n        if (start > start2 && end <\
    \ end2) {\n            return \"NO\"\n        }\n        if (start < start2 &&\
    \ end < end2) {\n            return \"NO\"\n        }\n        if (start < start2\
    \ && end > end2) {\n            return \"NO\"\n        }\n        if (start >\
    \ start2 && end < end2) {\n            return \"NO\"\n        }\n        if (start\
    \ < start2 && end < end2) {\n            return \"NO\"\n        }\n        if\
    \ (start < start2 && end > end2) {\n            return \"NO\"\n        }\n   \
    \     if (start > start", "        val start = interval1._1\n        val end =\
    \ interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start3 = math.max(start, start2)\n        val end3 = math.min(end,\
    \ end2)\n        val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        val start5 = math.max(start, start4)\n        val end5 = math.min(end,\
    \ end4)\n        val start6 = math.max(start, start5)\n        val end6 = math.min(end,\
    \ end5)\n        val start7 = math.max(start, start6)\n        val end7 = math.min(end,\
    \ end6)\n        val start8 = math.max(start, start7)\n        val end8 = math.min(end,\
    \ end7)\n        val start9 = math.max(start, start8)\n        val end9 = math.min(end,\
    \ end8)\n        val start10 = math.max(start, start9)\n        val end10 = math.min(end,\
    \ end9)\n        val start11 = math.max(start, start10)\n        val end11 = math.min(end,\
    \ end10)\n        val start12 = math.max(start, start11)\n        val end12 =\
    \ math.min(end, end11)\n        val start13 = math.max(start, start12)\n     \
    \   val end13 = math.min(end, end12)\n        val start14 = math.max(start, start13)\n\
    \        val end14 = math.min(end, end13)\n        val start15 = math.max(start,\
    \ start14)\n        val end15 = math.min(end, end14)\n        val start16 = math.max(start,\
    \ start15)\n        val end16 = math.min(end, end15)\n        val start17 = math.max(start,\
    \ start16)\n        val end17 = math.min(end, end16)\n        val start18 = math.max(start,\
    \ start17)\n        val end18 = math.min(end, end17)\n        val start19 = math.max(start,\
    \ start18)\n        val end19 = math.min(end, end18)\n        val start20 = math.max(start,\
    \ start19)\n        val end20 = math.min(end, end19)\n        val start21 = math.max(start,\
    \ start20)\n        val end21 = math.min(end, end20)\n        val start22 = math.max(start,\
    \ start21)\n        val end22 = math.min(end, end21)\n        val start23 = math.max(start,\
    \ start22)\n        val end23 = math.min(end, end22)\n        val start24 = math.max(start,\
    \ start23)\n        val end24 = math.min(end, end23)\n        val start25 = math.max(start,\
    \ start24)\n        val end", "        val start = interval1._1\n        val end\
    \ = interval2._1\n        val start2 = interval2._2\n        val end2 = interval2._2\n\
    \        val start1 = interval1._2\n        val end1 = interval1._2\n        val\
    \ start3 = interval1._2\n        val end3 = interval1._2\n        val start4 =\
    \ interval1._2\n        val end4 = interval1._2\n        val start5 = interval1._2\n\
    \        val end5 = interval1._2\n        val start6 = interval1._2\n        val\
    \ end6 = interval1._2\n        val start7 = interval1._2\n        val end7 = interval1._2\n\
    \        val start8 = interval1._2\n        val end8 = interval1._2\n        val\
    \ start9 = interval1._2\n        val end9 = interval1._2\n        val start10\
    \ = interval1._2\n        val end10 = interval1._2\n        val start11 = interval1._2\n\
    \        val end11 = interval1._2\n        val start12 = interval1._2\n      \
    \  val end12 = interval1._2\n        val start13 = interval1._2\n        val end13\
    \ = interval1._2\n        val start14 = interval1._2\n        val end14 = interval1._2\n\
    \        val start15 = interval1._2\n        val end15 = interval1._2\n      \
    \  val start16 = interval1._2\n        val end16 = interval1._2\n        val start17\
    \ = interval1._2\n        val end17 = interval1._2\n        val start18 = interval1._2\n\
    \        val end18 = interval1._2\n        val start19 = interval1._2\n      \
    \  val end19 = interval1._2\n        val start20 = interval1._2\n        val end20\
    \ = interval1._2\n        val start21 = interval1._2\n        val end21 = interval1._2\n\
    \        val start22 = interval1._2\n        val end22 = interval1._2\n      \
    \  val start23 = interval1._2\n        val end23 = interval1._2\n        val start24\
    \ = interval1._2\n        val end24 = interval1._2\n        val start25 = interval1._2\n\
    \        val end25 = interval1._2\n        val start26 = interval1._2\n      \
    \  val end26 = interval1._2\n        val start27 = interval1._2\n        val end27\
    \ = interval1._2\n        val start28 = interval1._2\n        val end28 = interval1._2\n\
    \        val start29 = interval1._2\n        val end29 = interval1._2\n", "  \
    \      val start = interval1._1\n        val end = interval2._1\n        val start2\
    \ = interval1._2\n        val end2 = interval2._2\n        val start = math.min(start,\
    \ start2)\n        val end = math.max(end, end2)\n        val length = end - start\n\
    \        val primes = mutable.Set[Long]()\n        val primes2 = mutable.Set[Long]()\n\
    \        val primes3 = mutable.Set[Long]()\n        val primes4 = mutable.Set[Long]()\n\
    \        val primes5 = mutable.Set[Long]()\n        val primes6 = mutable.Set[Long]()\n\
    \        val primes7 = mutable.Set[Long]()\n        val primes8 = mutable.Set[Long]()\n\
    \        val primes9 = mutable.Set[Long]()\n        val primes10 = mutable.Set[Long]()\n\
    \        val primes11 = mutable.Set[Long]()\n        val primes12 = mutable.Set[Long]()\n\
    \        val primes13 = mutable.Set[Long]()\n        val primes14 = mutable.Set[Long]()\n\
    \        val primes15 = mutable.Set[Long]()\n        val primes16 = mutable.Set[Long]()\n\
    \        val primes17 = mutable.Set[Long]()\n        val primes18 = mutable.Set[Long]()\n\
    \        val primes19 = mutable.Set[Long]()\n        val primes20 = mutable.Set[Long]()\n\
    \        val primes21 = mutable.Set[Long]()\n        val primes22 = mutable.Set[Long]()\n\
    \        val primes23 = mutable.Set[Long]()\n        val primes24 = mutable.Set[Long]()\n\
    \        val primes25 = mutable.Set[Long]()\n        val primes26 = mutable.Set[Long]()\n\
    \        val primes27 = mutable.Set[Long]()\n        val primes28 = mutable.Set[Long]()\n\
    \        val primes29 = mutable.Set[Long]()\n        val primes30 = mutable.Set[Long]()\n\
    \        val primes31 = mutable.Set[Long]()\n        val primes32 = mutable.Set[Long]()\n\
    \        val primes33 = mutable.Set[Long]()\n        val primes34 = mutable.Set[Long]",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0) {\n  \
    \          if (length == 0) \"NO\" else \"YES\"\n        } else {\n          \
    \  val isPrime = length2 % length == 0 \n            if (isPrime) \"YES\" else\
    \ \"NO\"\n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) {\n            val start = interval1._1\n            val end = interval1._2\n\
    \            val length = end - start\n            if (length == 1) {\n      \
    \          return \"YES\"\n            } else {\n                return \"NO\"\
    \n            }\n        } else if (length2 == 1) {\n            val start = interval1._1\n\
    \            val end = interval1._2\n            val length = end - start\n  \
    \          val start2 = interval2._1\n            val end2 = interval2._2\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        } else if (length2\
    \ == 2) {\n            val start = interval1._1\n            val end = interval1._2\n\
    \            val length = end - start\n            val start2 = interval2._1\n\
    \            val end2 = interval2._2\n            if (length == 1) {\n       \
    \         return \"YES\"\n            } else {\n                return \"NO\"\n\
    \            }\n        } else if (length2 == 3) {\n            val start = interval1._1\n\
    \            val end = interval1._2\n            val length = end - start\n  \
    \          val start2 = interval2._1\n            val end2 = interval2._2\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        } else if (length2\
    \ == 4) {\n            val start = interval1._1\n            val end = interval1._2\n\
    \            val length = end - start\n            val start2 = interval2._1\n\
    \            val end2 = interval2._2\n            if (length == 1) {\n       \
    \         return \"YES\"\n            } else {\n                return \"NO\"\n\
    \            }\n        } else if (length2 == 5) {\n            val start = interval1._1\n\
    \            val end = interval1._2\n            val length = end - start\n  \
    \          val start2 = interval2._1\n            val end2 = interval2._2\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }\n        } else if (length2\
    \ == 6) {\n            val start = interval1._1\n            val end = interval1._2\n\
    \            val length = end - start\n            val start2 = interval2._1\n\
    \            val end2 = interval2._2\n            if (length == 1) {\n       \
    \         return \"YES\"\n            } else {\n                return \"NO\"\n\
    \            }\n        } else if (length2 == 7) {\n            val start = interval1._1\n\
    \            val end = interval1._2\n            val length = end - start\n  \
    \          val start2 = interval2._1\n            val end2 = interval2._2\n  \
    \          if (length == 1) {\n                return \"YES\"\n            } else\
    \ {\n                return \"NO\"\n            }", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        val isPrime = length == 2 || length == length2\n    \
    \    if (isPrime) {\n            \"YES\"\n        } else {\n            \"NO\"\
    \n        }", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ startMinusEnd = start - end\n        val start2MinusEnd2 = start2 - end2\n \
    \       if (startMinusEnd > 0 && start2MinusEnd2 > 0) {\n            if (startMinusEnd\
    \ > start2MinusEnd2) {\n                val startMinusEnd2 = start2MinusEnd2 -\
    \ startMinusEnd\n                if (startMinusEnd2 % 2 == 0) {\n            \
    \        if (startMinusEnd2 == 2) {\n                        \"YES\"\n       \
    \             } else {\n                        \"NO\"\n                    }\n\
    \                } else {\n                    if (startMinusEnd2 == 2) {\n  \
    \                      \"NO\"\n                    } else {\n                \
    \        \"YES\"\n                    }\n                }\n            } else\
    \ {\n                val startMinusEnd2 = start2MinusEnd2 - startMinusEnd\n  \
    \              if (startMinusEnd2 % 2 == 0) {\n                    if (startMinusEnd2\
    \ == 2) {\n                        \"NO\"\n                    } else {\n    \
    \                    \"YES\"\n                    }\n                } else {\n\
    \                    if (startMinusEnd2 == 2) {\n                        \"YES\"\
    \n                    } else {\n                        \"NO\"\n             \
    \       }\n                }\n            }\n        } else {\n            if\
    \ (startMinusEnd > 0 && start2MinusEnd2 > 0) {\n                val startMinusEnd2\
    \ = start2MinusEnd2 - startMinusEnd\n                if (startMinusEnd2 % 2 ==\
    \ 0) {\n                    if (startMinusEnd2 == 2) {\n                     \
    \   \"NO\"\n                    } else {\n                        \"YES\"\n  \
    \                  }\n                } else {\n                    if (startMinusEnd2\
    \ == 2) {\n                        \"YES\"\n                    } else {\n   \
    \                     \"NO\"\n                    }\n                }\n     \
    \       } else {\n                if (startMinusEnd > 0 && start2MinusEnd2 > 0)\
    \ {\n                    val startMinusEnd2 = start2MinusEnd2 - startMinusEnd\n\
    \                    if (startMinusEnd2 % 2 == 0) {\n                        if\
    \ (startMinusEnd2 == 2) {\n                            \"NO\"\n              \
    \          } else {\n                            \"YES\"\n                   \
    \     }\n                    } else {\n                        if (startMinusEnd2\
    \ == 2) {\n                            \"YES\"\n                        } else\
    \ {\n                            \"NO\"\n                        }\n         \
    \           }\n                } else {\n                    if (startMinusEnd\
    \ > 0 && start2MinusEnd2 > 0) {\n                        val startMinusEnd2 =\
    \ start2MinusEnd2 - startMinusEnd\n                        if (startMinusEnd2\
    \ % 2 == 0) {\n                            if (startMinusEnd2 == 2) {\n      \
    \                          \"NO\"\n                            } else {\n    \
    \                            \"YES\"\n                            }\n        \
    \                } else {\n                            if (startMinusEnd2 == 2)\
    \ {\n                                \"YES\"\n                            } else\
    \ {\n                                \"NO\"\n                            }\n \
    \                       }\n                    } else {", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start = math.min(start, start2)\n\
    \        val end = math.max(end, end2)\n        val length = end - start\n   \
    \     if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start3 = start2\n\
    \        val end3 = end2\n        val start4 = start\n        val end4 = end\n\
    \        val start5 = start3\n        val end5 = end3\n        val start6 = start4\n\
    \        val end6 = end4\n        val start7 = start5\n        val end7 = end5\n\
    \        val start8 = start6\n        val end8 = end6\n        val start9 = start7\n\
    \        val end9 = end7\n        val start10 = start8\n        val end10 = end8\n\
    \        val start11 = start9\n        val end11 = end9\n        val start12 =\
    \ start10\n        val end12 = end10\n        val start13 = start11\n        val\
    \ end13 = end11\n        val start14 = start12\n        val end14 = end12\n  \
    \      val start15 = start13\n        val end15 = end13\n        val start16 =\
    \ start14\n        val end16 = end14\n        val start17 = start15\n        val\
    \ end17 = end15\n        val start18 = start16\n        val end18 = end16\n  \
    \      val start19 = start17\n        val end19 = end17\n        val start20 =\
    \ start18\n        val end20 = end18\n        val start21 = start19\n        val\
    \ end21 = end19\n        val start22 = start20\n        val end22 = end20\n  \
    \      val start23 = start21\n        val end23 = end21\n        val start24 =\
    \ start22\n        val end24 = end22\n        val start25 = start23\n        val\
    \ end25 = end23\n        val start26 = start24\n        val end26 = end24\n  \
    \      val start27 = start25\n        val end27 = end25\n        val start28 =\
    \ start26\n        val end28 = end26\n        val start29 = start27\n        val\
    \ end29 = end27\n        val start30 = start28\n        val end30 = end28\n  \
    \      val start31 = start29\n        val end31 = end29\n        val start32 =\
    \ start30\n        val end32 = end30\n        val start33 = start31\n        val\
    \ end33 = end31\n        val start34 = start32\n", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) \"NO\" else if (length == 1) \"YES\"\
    \ else intersection(interval1, interval2)", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val length = end -\
    \ start\n        val length2 = end2 - start2\n        if (length2 == 0 || length\
    \ == 0) \"NO\"\n        else if (length == 1) \"YES\"\n        else if (length2\
    \ == 1) \"YES\"\n        else if (length == length2) \"YES\"\n        else if\
    \ (length < length2) \"NO\"\n        else intersection2(interval1, interval2)",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            (s\"NO\")\n        } else if (start < start2) {\n            (s\"\
    NO\")\n        } else if (end > end2) {\n            (s\"NO\")\n        } else\
    \ if (start == start2 && end == end2) {\n            (s\"YES\")\n        } else\
    \ {\n            val start3 = start2\n            val end3 = end2\n          \
    \  val start4 = start\n            val end4 = end\n            val start5 = start3\n\
    \            val end5 = end3\n            val start6 = start4\n            val\
    \ end6 = end4\n            val start7 = start5\n            val end7 = end5\n\
    \            val start8 = start6\n            val end8 = end6\n            val\
    \ start9 = start7\n            val end9 = end7\n            val start10 = start8\n\
    \            val end10 = end8\n            val start11 = start9\n            val\
    \ end11 = end9\n            val start12 = start10\n            val end12 = end10\n\
    \            val start13 = start11\n            val end13 = end11\n          \
    \  val start14 = start12\n            val end14 = end12\n            val start15\
    \ = start13\n            val end15 = end13\n            val start16 = start14\n\
    \            val end16 = end14\n            val start17 = start15\n          \
    \  val end17 = end15\n            val start18 = start16\n            val end18\
    \ = end16\n            val start19 = start17\n            val end19 = end17\n\
    \            val start20 = start18\n            val end20 = end18\n          \
    \  val start21 = start19\n            val end21 = end19\n            val start22\
    \ = start20\n            val end22 = end20\n            val start23 = start21\n\
    \            val end23 = end21\n            val start24 = start22\n          \
    \  val end24 = end22\n            val start25 = start23\n            val end25\
    \ = end23\n            val start26 = start24\n            val end26 = end24\n\
    \            val start27 = start25\n            val end27 = end25\n          \
    \  val start28 = start26\n            val end28 = end26\n            val start29\
    \ = start27\n            val end29 = end27\n            val start30 = start28\n\
    \            val end30 = end28\n            val start31 = start", "        val\
    \ start = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val start3 = start2\n        val end3 = end2\n\
    \        val start4 = start3\n        val end4 = end3\n        val start5 = start4\n\
    \        val end5 = end4\n        val start6 = start5\n        val end6 = end5\n\
    \        val start7 = start6\n        val end7 = end6\n        val start8 = start7\n\
    \        val end8 = end7\n        val start9 = start8\n        val end9 = end8\n\
    \        val start10 = start9\n        val end10 = end9\n        val start11 =\
    \ start10\n        val end11 = end10\n        val start12 = start11\n        val\
    \ end12 = end11\n        val start13 = start12\n        val end13 = end12\n  \
    \      val start14 = start13\n        val end14 = end13\n        val start15 =\
    \ start14\n        val end15 = end14\n        val start16 = start15\n        val\
    \ end16 = end15\n        val start17 = start16\n        val end17 = end16\n  \
    \      val start18 = start17\n        val end18 = end17\n        val start19 =\
    \ start18\n        val end19 = end18\n        val start20 = start19\n        val\
    \ end20 = end19\n        val start21 = start20\n        val end21 = end20\n  \
    \      val start22 = start21\n        val end22 = end21\n        val start23 =\
    \ start22\n        val end23 = end22\n        val start24 = start23\n        val\
    \ end24 = end23\n        val start25 = start24\n        val end25 = end24\n  \
    \      val start26 = start25\n        val end26 = end25\n        val start27 =\
    \ start26\n        val end27 = end26\n        val start28 = start27\n        val\
    \ end28 = end27\n        val start29 = start28\n        val end29 = end28\n  \
    \      val start30 = start29\n        val end30 = end29\n        val start31 =\
    \ start30\n        val end31 = end30\n        val start32 = start31\n        val\
    \ end32 = end31\n        val start33 = start32\n        val end33 = end32\n  \
    \      val start34 = start", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val startMinusEnd = start - end\n        val start2MinusEnd2 = start2\
    \ - end2\n        val startMinusEnd2 = start2 - start\n        val endMinusStart\
    \ = end - start\n        val end2MinusStart2 = end2 - start2\n        val endMinusStart2\
    \ = end2 - end\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd2\
    \ = start2 - start2\n        val startMinusEnd2 = start2 - start2\n        val\
    \ endMinusStart2 = end2 - start2\n        val end2MinusStart2 = end2 - start2\n\
    \        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd2 = start2\
    \ - start2\n        val startMinusEnd2 = start2 - start2\n        val endMinusStart2\
    \ = end2 - start2\n        val end2MinusStart2 = end2 - start2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - start2\n        val\
    \ startMinusEnd2 = start2 - start2\n        val endMinusStart2 = end2 - start2\n\
    \        val end2MinusStart2 = end2 - start2\n        val startMinusEnd2 = start2\
    \ - end2\n        val start2MinusEnd2 = start2 - start2\n        val startMinusEnd2\
    \ = start2 - start2\n        val endMinusStart2 = end2 - start2\n        val end2MinusStart2\
    \ = end2 - start2\n        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd2\
    \ = start2 - start2\n        val startMinusEnd2 = start2 - start2\n        val\
    \ endMinusStart2 = end2 - start2\n        val end2MinusStart2 = end2 - start2\n\
    \        val startMinusEnd2 = start2 - end2\n        val start2MinusEnd2 = start2\
    \ - start2\n        val startMinusEnd2 = start2 - start2\n        val endMinusStart2\
    \ = end2 - start2\n        val end2MinusStart2 = end2 - start2\n        val startMinusEnd2\
    \ = start2 - end2\n        val start2MinusEnd2 = start2 - start2\n        val\
    \ startMinusEnd2 = start2 - start2\n        val endMinusStart", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length == 0 || length2 == 0) {\n      \
    \      \"NO\"\n        } else if (length == length2) {\n            \"YES\"\n\
    \        } else {\n            val mid = (start + end) / 2\n            val mid2\
    \ = start2 + end2\n            val mid3 = mid / 2\n            val mid4 = mid3\
    \ / 2\n            val mid5 = mid4 / 2\n            val mid6 = mid5 / 2\n    \
    \        val mid7 = mid6 / 2\n            val mid8 = mid7 / 2\n            val\
    \ mid9 = mid8 / 2\n            val mid10 = mid9 / 2\n            val mid11 = mid10\
    \ / 2\n            val mid12 = mid11 / 2\n            val mid13 = mid12 / 2\n\
    \            val mid14 = mid13 / 2\n            val mid15 = mid14 / 2\n      \
    \      val mid16 = mid15 / 2\n            val mid17 = mid16 / 2\n            val\
    \ mid18 = mid17 / 2\n            val mid19 = mid18 / 2\n            val mid20\
    \ = mid19 / 2\n            val mid21 = mid20 / 2\n            val mid22 = mid21\
    \ / 2\n            val mid23 = mid22 / 2\n            val mid24 = mid23 / 2\n\
    \            val mid25 = mid24 / 2\n            val mid26 = mid25 / 2\n      \
    \      val mid27 = mid26 / 2\n            val mid28 = mid27 / 2\n            val\
    \ mid29 = mid28 / 2\n            val mid30 = mid29 / 2\n            val mid31\
    \ = mid30 / 2\n            val mid32 = mid31 / 2\n            val mid33 = mid32\
    \ / 2\n            val mid34 = mid33 / 2\n            val mid35 = mid34 / 2\n\
    \            val mid36 = mid35 / 2\n            val mid37 = mid36 / 2\n      \
    \      val mid38 = mid37 / 2\n            val mid39 = mid38 / 2\n            val\
    \ mid40 = mid39 / 2\n            val mid41 = mid40 / 2\n            val mid42\
    \ = mid41 / 2\n            val mid43 = mid42 / 2\n            val mid44 = mid43\
    \ / 2\n            val mid45 = mid44 / 2\n            val mid46 = ", "       \
    \ val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val startMinusEnd =\
    \ start - end\n        val start2MinusEnd2 = start2 - end2\n        if (startMinusEnd\
    \ > 0 && start2MinusEnd2 > 0) {\n            if (startMinusEnd > start2MinusEnd2)\
    \ {\n                return \"NO\"\n            } else {\n                return\
    \ \"YES\"\n            }\n        } else {\n            return \"NO\"\n      \
    \  }", "        val start = interval1._1\n        val end = interval1._2\n   \
    \     val start2 = interval2._1\n        val end2 = interval2._2\n        if (start\
    \ > end) {\n            val temp = start\n            start = end\n          \
    \  end = temp\n        }\n        if (start2 > end2) {\n            val temp =\
    \ start2\n            start2 = end2\n            end2 = temp\n        }\n    \
    \    if (start == start2 && end == end2) {\n            return \"NO\"\n      \
    \  }\n        val length = end - start\n        val length2 = end2 - start2\n\
    \        if (length == 0 || length2 == 0) {\n            return \"NO\"\n     \
    \   }\n        if (length == 1) {\n            if (length2 == 1) {\n         \
    \       return \"YES\"\n            }\n            return \"NO\"\n        }\n\
    \        if (length2 == 1) {\n            return \"NO\"\n        }\n        val\
    \ m = length / length2\n        if (m == 0) {\n            return \"NO\"\n   \
    \     }\n        val n = length / m\n        val k = length2 / m\n        val\
    \ a = m * k\n        val b = m * n\n        val c = m * k * n\n        val d =\
    \ m * k * n\n        val e = m * k * n\n        val f = m * k * n\n        val\
    \ g = m * k * n\n        val h = m * k * n\n        val i = m * k * n\n      \
    \  val j = m * k * n\n        val k = m * k * n\n        val l = m * k * n\n \
    \       val m = m * k * n\n        val n = m * k * n\n        val k = m * k *\
    \ n\n        val l = m * k * n\n        val m = m * k * n\n        val n = m *\
    \ k * n\n        val k = m * k * n\n        val l = m * k * n\n        val m =\
    \ m * k * n\n        val n = m * k * n\n        val k = m * k * n\n        val\
    \ l = m * k * n\n        val m = m * k * n\n        val n = m * k * n\n      \
    \  val k = m * k * n\n        val l = m * k * n\n        val m = m * k * n\n \
    \       val n = m * k * n\n        val k = m * k * n\n        val l = m * k *\
    \ n\n        val m = m * k * n\n        val n = m * k * n\n        val k = m *\
    \ k * n\n        val l = m * k * n\n        val m = m", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0) {\n            if (length == 0) {\n\
    \                return \"NO\"\n            } else {\n                return \"\
    YES\"\n            }\n        }\n        val isPrime = length2 % length == 0\n\
    \        if (isPrime) {\n            return \"YES\"\n        } else {\n      \
    \      return \"NO\"\n        }", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val length = end - start\n        val length2 = end2 - start2\n     \
    \   if (length == 0 || length2 == 0) {\n            \"NO\"\n        } else if\
    \ (length == length2) {\n            \"YES\"\n        } else {\n            val\
    \ m = length / length2\n            val n = length % length2\n            val\
    \ m = if (m == 0) 1 else m\n            val n = if (n == 0) 1 else n\n       \
    \     val start = start + m\n            val end = end + n\n            val start2\
    \ = start2 + m\n            val end2 = end2 + n\n            val start3 = start2\
    \ + m\n            val end3 = end2 + n\n            val start4 = start3 + m\n\
    \            val end4 = end3 + n\n            val start5 = start4 + m\n      \
    \      val end5 = end4 + n\n            val start6 = start5 + m\n            val\
    \ end6 = end5 + n\n            val start7 = start6 + m\n            val end7 =\
    \ end6 + n\n            val start8 = start7 + m\n            val end8 = end7 +\
    \ n\n            val start9 = start8 + m\n            val end9 = end8 + n\n  \
    \          val start10 = start9 + m\n            val end10 = end9 + n\n      \
    \      val start11 = start10 + m\n            val end11 = end10 + n\n        \
    \    val start12 = start11 + m\n            val end12 = end11 + n\n          \
    \  val start13 = start12 + m\n            val end13 = end12 + n\n            val\
    \ start14 = start13 + m\n            val end14 = end13 + n\n            val start15\
    \ = start14 + m\n            val end15 = end14 + n\n            val start16 =\
    \ start15 + m\n            val end16 = end15 + n\n            val start17 = start16\
    \ + m\n            val end17 = end16 + n\n            val start18 = start17 +\
    \ m\n            val end18 = end17 + n\n            val start19 = start18 + m\n\
    \            val end19 = end18 + n\n            val start20 = start19 + m\n  \
    \          val end20 = end19 + n\n            val start21 = start20 + m\n    \
    \        val end21 = end20 + n\n            val start22 = start21 + m\n      \
    \      val end22 = end21 + n\n            val start23 = ", "        val start\
    \ = interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val length = end - start\n        val\
    \ length2 = end2 - start2\n        if (length2 == 0) \"NO\" else \"YES\"", " \
    \       val start = interval1._1\n        val end = interval1._2\n        val\
    \ start2 = interval2._1\n        val end2 = interval2._2\n        if (start <\
    \ end2 && start2 < end) \n            s\"YES\"\n        else\n            s\"\
    NO\"", "        val start = interval1._1\n        val end = interval1._2\n   \
    \     val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length2\
    \ == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n        val end\
    \ = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        if (start > end) {\n            val temp = start\n            start =\
    \ end\n            end = temp\n        }\n        if (start2 > end2) {\n     \
    \       val temp = start2\n            start2 = end2\n            end2 = temp\n\
    \        }\n        val length = end - start\n        val length2 = end2 - start2\n\
    \        if (length == 0 || length2 == 0) {\n            return \"NO\"\n     \
    \   }\n        val isPrime = length == 2 || length == 3 && isPrime(length2)\n\
    \        if (isPrime) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = math.max(start, start2)\n        val end3 = math.min(end, end2)\n \
    \       val start4 = math.max(start, start3)\n        val end4 = math.min(end,\
    \ end3)\n        if (start4 < end4) {\n            if (start2 < end2) {\n    \
    \            if (start3 < end3) {\n                    if (start4 < end4) {\n\
    \                        if (start2 <= end2 && start3 >= end3) {\n           \
    \                 if (start2 <= end3 && start3 >= end4) {\n                  \
    \              if (start2 <= end4 && start3 >= end4) {\n                     \
    \               if (start2 <= end4 && start3 >= end4) {\n                    \
    \                    if (start2 <= end4 && start3 >= end4) {\n               \
    \                             if (start2 <= end4 && start3 >= end4) {\n      \
    \                                          if (start2 <= end4 && start3 >= end4)\
    \ {\n                                                    return \"YES\"\n    \
    \                                            }\n                             \
    \               }\n                                        }\n               \
    \                     }\n                                }\n                 \
    \           }\n                        }\n                    }\n            \
    \    }\n            }\n        }\n        return \"NO\"", "        val start =\
    \ interval1._1\n        val end = interval1._2\n        val start2 = interval2._1\n\
    \        val end2 = interval2._2\n        val start3 = start2\n        val end3\
    \ = end2\n        val start4 = start3\n        val end4 = end3\n        val start5\
    \ = start4\n        val end5 = end4\n        val start6 = start5\n        val\
    \ end6 = end5\n        val start7 = start6\n        val end7 = end6\n        val\
    \ start8 = start7\n        val end8 = end7\n        val start9 = start8\n    \
    \    val end9 = end8\n        val start10 = start9\n        val end10 = end9\n\
    \        val start11 = start10\n        val end11 = end10\n        val start12\
    \ = start11\n        val end12 = end11\n        val start13 = start12\n      \
    \  val end13 = end12\n        val start14 = start13\n        val end14 = end13\n\
    \        val start15 = start14\n        val end15 = end14\n        val start16\
    \ = start15\n        val end16 = end15\n        val start17 = start16\n      \
    \  val end17 = end16\n        val start18 = start17\n        val end18 = end17\n\
    \        val start19 = start18\n        val end19 = end18\n        val start20\
    \ = start19\n        val end20 = end19\n        val start21 = start20\n      \
    \  val end21 = end20\n        val start22 = start21\n        val end22 = end21\n\
    \        val start23 = start22\n        val end23 = end22\n        val start24\
    \ = start23\n        val end24 = end23\n        val start25 = start24\n      \
    \  val end25 = end24\n        val start26 = start25\n        val end26 = end25\n\
    \        val start27 = start26\n        val end27 = end26\n        val start28\
    \ = start27\n        val end28 = end27\n        val start29 = start28\n      \
    \  val end29 = end28\n        val start30 = start29\n        val end30 = end29\n\
    \        val start31 = start30\n        val end31 = end30\n        val start32\
    \ = start31\n        val end32 = end31\n        val start33 = start32\n      \
    \  val end33 = end32\n        val start34 = start", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\" else \"YES\"",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        if (start > end) {\n\
    \            val temp = start\n            start = end\n            end = temp\n\
    \        }\n        if (start2 > end2) {\n            val temp = start2\n    \
    \        start2 = end2\n            end2 = temp\n        }\n        if (start\
    \ == start2 && end == end2) {\n            return \"NO\"\n        }\n        val\
    \ length = end - start\n        val length2 = end2 - start2\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\"\n        }\n        if (length\
    \ == 1) {\n            return \"YES\"\n        }\n        if (length2 == 1) {\n\
    \            return \"YES\"\n        }\n        if (length == length2) {\n   \
    \         return \"YES\"\n        }\n        if (length < length2) {\n       \
    \     val temp = length\n            length = length2\n            length2 = temp\n\
    \        }\n        val prime = length\n        val prime2 = length2\n       \
    \ if (prime == 1) {\n            return \"YES\"\n        }\n        if (prime2\
    \ == 1) {\n            return \"YES\"\n        }\n        if (prime == prime2)\
    \ {\n            return \"YES\"\n        }\n        if (prime < prime2) {\n  \
    \          val temp = prime\n            prime = prime2\n            prime2 =\
    \ temp\n        }\n        if (prime == 2) {\n            return \"YES\"\n   \
    \     }\n        if (prime == 3) {\n            return \"YES\"\n        }\n  \
    \      if (prime == 5) {\n            return \"YES\"\n        }\n        if (prime\
    \ == 7) {\n            return \"YES\"\n        }\n        if (prime == 11) {\n\
    \            return \"YES\"\n        }\n        if (prime == 13) {\n         \
    \   return \"YES\"\n        }\n        if (prime == 17) {\n            return\
    \ \"YES\"\n        }\n        if (prime == 19) {\n            return \"YES\"\n\
    \        }\n        if (prime == 23) {\n            return \"YES\"\n        }\n\
    \        if (prime == 29) {\n            return \"YES\"\n        }\n        if\
    \ (prime == 31) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ 37) {\n            return \"YES\"\n        }\n        if (prime == 41) {\n \
    \           return \"YES\"\n        }\n        if (prime == 43) {\n          \
    \  return \"YES\"\n        }\n        if (prime == 47) {\n            return \"\
    YES\"\n        }\n        if (prime == 53) {\n            return \"YES\"\n   \
    \     }\n        if (prime == 59) {\n            return \"YES\"\n        }\n \
    \       if (prime == 61) {\n            return \"YES\"\n        }\n        if\
    \ (prime == 67) {\n            return \"YES\"\n        }\n        if (prime ==\
    \ 71) {\n            return \"YES\"\n        }\n        if (prime == 73) {\n \
    \           return \"YES\"\n        }\n        if (prime == 79) {\n          \
    \  return \"YES\"\n        }\n", "        val start = interval1._1\n        val\
    \ end = interval1._2\n        val start2 = interval2._1\n        val end2 = interval2._2\n\
    \        val start = math.min(start, start2)\n        val end = math.max(end,\
    \ end2)\n        val length = end - start\n        if (length == 0) \"NO\" else\
    \ \"YES\"", "        val start = interval1._1\n        val end = interval1._2\n\
    \        val start2 = interval2._1\n        val end2 = interval2._2\n        val\
    \ start3 = start2\n        val end3 = end2\n        val start4 = start3\n    \
    \    val end4 = end3\n        val start5 = start4\n        val end5 = end4\n \
    \       val start6 = start5\n        val end6 = end5\n        val start7 = start6\n\
    \        val end7 = end6\n        val start8 = start7\n        val end8 = end7\n\
    \        val start9 = start8\n        val end9 = end8\n        val start10 = start9\n\
    \        val end10 = end9\n        val start11 = start10\n        val end11 =\
    \ end10\n        val start12 = start11\n        val end12 = end11\n        val\
    \ start13 = start12\n        val end13 = end12\n        val start14 = start13\n\
    \        val end14 = end13\n        val start15 = start14\n        val end15 =\
    \ end14\n        val start16 = start15\n        val end16 = end15\n        val\
    \ start17 = start16\n        val end17 = end16\n        val start18 = start17\n\
    \        val end18 = end17\n        val start19 = start18\n        val end19 =\
    \ end18\n        val start20 = start19\n        val end20 = end19\n        val\
    \ start21 = start20\n        val end21 = end20\n        val start22 = start21\n\
    \        val end22 = end21\n        val start23 = start22\n        val end23 =\
    \ end22\n        val start24 = start23\n        val end24 = end23\n        val\
    \ start25 = start24\n        val end25 = end24\n        val start26 = start25\n\
    \        val end26 = end25\n        val start27 = start26\n        val end27 =\
    \ end26\n        val start28 = start27\n        val end28 = end27\n        val\
    \ start29 = start28\n        val end29 = end28\n        val start30 = start29\n\
    \        val end30 = end29\n        val start31 = start30\n        val end31 =\
    \ end30\n        val start32 = start31\n        val end32 = end31\n        val\
    \ start33 = start32\n        val end33 = end32\n        val start34 = start",
  "        val start = interval1._1\n        val end = interval1._2\n        val start2\
    \ = interval2._1\n        val end2 = interval2._2\n        val start = math.max(start,\
    \ start2)\n        val end = math.min(end, end2)\n        val length = end - start\n\
    \        if (length == 0) \"NO\" else \"YES\"", "        val start = interval1._1\n\
    \        val end = interval1._2\n        val start2 = interval2._1\n        val\
    \ end2 = interval2._2\n        val length = end - start\n        val length2 =\
    \ end2 - start2\n        if (length2 == 0 || length == 0) \"NO\"\n        else\
    \ if (length2 == 1) \"YES\"\n        else if (length == 1) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\"\n        else\
    \ if (length < length2) \"NO\"\n        else if (length == length2) \"YES\"\n\
    \        else if (length < length2) \"NO\"\n        else if (length == length2)\
    \ \"YES\"\n        else if (length < length2) \"NO\"\n        else if (length\
    \ == length2) \"YES\"\n        else if (length < length2) \"NO\"\n        else\
    \ if (length == length2) \"YES\"\n        else if (length < length2) \"NO\"\n\
    \        else if (length == length2) \"YES\"\n        else if (length < length2)\
    \ \"NO\"\n        else if (length == length2) \"YES\"\n        else if (length\
    \ < length2) \"NO\"\n        else if (length == length2) \"YES\""]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppgwxp907.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmppgwxp907.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen(_)).sorted\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgyaqv2j5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxzoyyi3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortWith(_\
    \ < _).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk46ek988.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(x => if (!seen.add(x)) numbers\
    \ -= x)\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphobffvjc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmphobffvjc.scala:10:55 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (!seen.add(x)) numbers -= x)\n\e[31m\e[31m   |\e[0m                        \
    \                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not\
    \ a member of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n)))\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr5ucsz10.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpr5ucsz10.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortWith(_\
    \ < _)\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg3ygd1qa.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb1rl21y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen.add)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_mfexx1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen.add)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_mfexx1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen += n\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9s91vtcb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9s91vtcb.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen.add(n)\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtc6ruek.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwtc6ruek.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        val result = numbers.filterNot(n => seen.contains(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpigyb7hgw.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpye98akb1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpye98akb1.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    } else {\n                seen += number\n            }\n        }\n    \
    \    numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprgffpbbl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmprgffpbbl.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    }\n            else {\n                seen += number\n            }\n  \
    \      }\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf9cod2hb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpf9cod2hb.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen += n\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pr54kmi.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0pr54kmi.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortWith(_\
    \ < _)\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg3ygd1qa.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(-_)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbzonsc1w.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n))\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6g5wizyl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    }\n            else {\n                seen += number\n            }\n  \
    \      }\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf9cod2hb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpf9cod2hb.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(_.toLong).reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpepew_szc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnavunc3y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers -= n\n            } else {\n                seen\
    \ += n\n            }\n        }\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_e70lder.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_e70lder.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach{ n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpksmow5rd.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpksmow5rd.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val result\
    \ = numbers.foldLeft(List[Long]())((acc, x) => {\n            if (acc.contains(x))\
    \ acc else acc :+ x\n        })\n        result.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzeqrijvg.scala:16)\n\tat Problem.main(tmpzeqrijvg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb1rl21y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen += n\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9s91vtcb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp9s91vtcb.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n        else seen.add(n))\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl38qb1hq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl38qb1hq.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n)))\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr5ucsz10.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpr5ucsz10.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n)))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filter(n => !seen.contains(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9fsu642t.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(_.toLong).reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpepew_szc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        val result = numbers.filterNot(x => seen.add(x))\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5arer1ah.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb1rl21y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgoc44c0e.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxzoyyi3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortWith(_\
    \ < _).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk46ek988.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_yd_vcme.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_yd_vcme.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach{ n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpksmow5rd.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpksmow5rd.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n        else seen.add(n))\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl38qb1hq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl38qb1hq.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        val result = numbers.filterNot(seen.add)\n    \
    \    result\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0saoj26g.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb1rl21y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen += n\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pr54kmi.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0pr54kmi.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(_.toLong).reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpepew_szc.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(n\
    \ => n).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjz2x5bgs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(_ == seen.add)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7vou5xuu.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen.add)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_mfexx1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    }\n            else {\n                seen += number\n            }\n  \
    \      }\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf9cod2hb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpf9cod2hb.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxzoyyi3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(x => seen.contains(x))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5cpnhqq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    }\n            else {\n                seen += number\n            }\n  \
    \      }\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf9cod2hb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpf9cod2hb.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filter(x => !seen.contains(x))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg61garia.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxzoyyi3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp453lp1dh.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp453lp1dh.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortWith(_\
    \ < _).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk46ek988.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppb1rl21y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen(_)).sorted\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgyaqv2j5.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(seen.add)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4er_nh0d.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(x => seen.add(x))\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyvpkof17.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(n => seen.contains(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxihh8bc4.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen(_))\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphzpp69bw.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filter(n => !seen.contains(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9fsu642t.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val result\
    \ = numbers.foldLeft(List[Long]())((acc, x) => {\n            if (acc.contains(x))\
    \ acc else acc :+ x\n        })\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbu59gv5d.scala:17)\n\tat Problem.main(tmpbu59gv5d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_yd_vcme.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_yd_vcme.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnwrk3xhm.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnwrk3xhm.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val result\
    \ = numbers.groupBy(x => x).mapValues(_.size)\n        val toRemove = result.filter(_._2\
    \ > 1)\n        val toKeep = result.filter(_._2 == 1)\n        toRemove.map(_._1).toList\
    \ ++ toKeep.map(_._1).toList\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwweprj__.scala:17)\n\tat Problem.main(tmpwweprj__.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(n => seen.contains(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxihh8bc4.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen.add)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_mfexx1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(x => seen.contains(x))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy5cpnhqq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortBy(n\
    \ => n).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjz2x5bgs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.foreach { number =>\n            if (seen.contains(number))\
    \ numbers.remove(number)\n            else seen.add(number)\n        }\n     \
    \   numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsnssmtxz.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsnssmtxz.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n        else seen += n)\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxxhk_rpf.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpxxhk_rpf.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\e[31m\e[31m   |\e[0m\
    \                                                   ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(n) else seen += n)\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6476n_3s.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6476n_3s.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) {\n                numbers.remove(number)\n        \
    \    }\n            else {\n                seen += number\n            }\n  \
    \      }\n        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf9cod2hb.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpf9cod2hb.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(number)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is\
    \ not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen.add(n)\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkoa6g1p2.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkoa6g1p2.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(n) else seen.add(n))\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz138dtc3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz138dtc3.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen.add(n))\n\e[31m\e\
    [31m   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen.add(n)\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkoa6g1p2.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpkoa6g1p2.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen.add(n)\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwtc6ruek.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwtc6ruek.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(seen.add)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_mfexx1.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnwrk3xhm.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnwrk3xhm.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val result\
    \ = numbers.foldLeft(List[Long]())((acc, x) => {\n            if (acc.contains(x))\
    \ acc else acc :+ x\n        })\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbu59gv5d.scala:17)\n\tat Problem.main(tmpbu59gv5d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnwrk3xhm.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnwrk3xhm.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            } else {\n\
    \                seen += n\n            }\n        }\n        numbers\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnwrk3xhm.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnwrk3xhm.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(n) else seen += n)\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6476n_3s.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6476n_3s.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.filter(n => !seen.contains(n) && seen.add(n))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpul2fugln.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(n)\n            else seen += n\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0pr54kmi.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0pr54kmi.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(n)\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x)).sort\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn407cxs3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpn407cxs3.scala:10:42 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.filter(\e[36mx\e[0m => !seen.add(x)).sort\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue sort is not a member of List[Long] - did you mean List[Long].sortBy?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n))\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6g5wizyl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filterNot(x => seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj9rbmr8b.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers -= n\n            }\n            else {\n       \
    \         seen += n\n            }\n        }\n        numbers\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsqjucsa_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsqjucsa_.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers -= n\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value -= is not a member\
    \ of List[Long] - did you mean numbers.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(x => seen.add(x))\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyvpkof17.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        val result = numbers.filterNot(n => seen(n))\n\
    \        seen.clear()\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpue3jpxrl.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794660
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(x => if (seen.contains(x))\
    \ numbers.remove(x))\n        numbers\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp32o_i9_w.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp32o_i9_w.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mx\e[0m => \e[33mif\e[0m\
    \ (seen.contains(x)) numbers.remove(x))\n\e[31m\e[31m   |\e[0m               \
    \                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ remove is not a member of List[Long] - did you mean numbers.reduce?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.Set[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnavunc3y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794656
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(numbers.indexOf(n))\n            }\n     \
    \       else {\n                seen += n\n            }\n        }\n        numbers\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbi3f5zhq.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpbi3f5zhq.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(numbers.indexOf(n))\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove\
    \ is not a member of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(n => !seen.contains(n)).sortWith(_\
    \ < _).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2y8_0ab3.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ numbers.remove(numbers.indexOf(n))\n            else seen += n\n        }\n\
    \        numbers\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_rxwth9y.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp_rxwth9y.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(n)) numbers.remove(numbers.indexOf(n))\n\
    \e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794657
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach(n => if (seen.contains(n))\
    \ numbers.remove(n) else seen += n)\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6476n_3s.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6476n_3s.scala:10:59 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        numbers.foreach(\e[36mn\e[0m => \e[33mif\e[0m\
    \ (seen.contains(n)) numbers.remove(n) \e[33melse\e[0m seen += n)\n\e[31m\e[31m\
    \   |\e[0m                                                   ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean\
    \ numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            } else {\n               \
    \ seen += n\n            }\n        }\n        numbers\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjbzbnvms.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjbzbnvms.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val result\
    \ = numbers.foldLeft(List[Long]())((acc, x) => {\n            if (acc.contains(x))\
    \ acc else acc :+ x\n        })\n        result.reverse\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzeqrijvg.scala:16)\n\tat Problem.main(tmpzeqrijvg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.contains(x)).sortBy(x\
    \ => x).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gc3rnq0.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { n =>\n            if (seen.contains(n))\
    \ {\n                numbers.remove(n)\n            }\n            else {\n  \
    \              seen += n\n            }\n        }\n        numbers\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmponi5yy3i.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmponi5yy3i.scala:12:24 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                numbers.remove(n)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member\
    \ of List[Long] - did you mean numbers.reduce?\n2 errors found\n"
  stdout: ''
  timestamp: 1659794654
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.filter(x => !seen.add(x))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n\
    \    assert(removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmqsmnjvs.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659794652
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // From a list of integers, remove all elements that occur more than\
    \ once.\n    // Keep order of elements left the same as in the input.\n    //\
    \ >>> removeDuplicates((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 2l.toLong,\
    \ 4l.toLong)))\n    // (List[Long](1l.toLong, 3l.toLong, 4l.toLong))\n    def\
    \ removeDuplicates(numbers : List[Long]) : List[Long] = {\n        val seen =\
    \ mutable.HashSet[Long]()\n        numbers.foreach { number =>\n            if\
    \ (seen.contains(number)) numbers.remove(number)\n            else seen.add(number)\n\
    \        }\n        numbers\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(removeDuplicates((List[Long]())).equals((List[Long]())));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong, 4l.toLong))));\n    assert(removeDuplicates((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 3l.toLong, 5l.toLong))).equals((List[Long](1l.toLong,\
    \ 4l.toLong, 5l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcazuyab_.scala:9:19 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mseen\e[0m = mutable.HashSet[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m  |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                   Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpcazuyab_.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mif\e[0m (seen.contains(number)) numbers.remove(number)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue remove is not a member of List[Long] - did you mean numbers.reduce?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659794653

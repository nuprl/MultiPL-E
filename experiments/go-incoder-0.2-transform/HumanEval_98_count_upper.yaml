name: HumanEval_98_count_upper
language: go_test.go
prompt: "package count_upper_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string s, count the number of uppercase vowels in even indices.\n// For\
  \ example:\n// >>> count_upper(\"aBCdEf\")\n// 1\n// >>> count_upper(\"abcdefg\"\
  )\n// 0\n// >>> count_upper(\"dBBE\")\n// 0\nfunc count_upper(s string) int {\n"
tests: "func TestCount_Upper(t *testing.T) {\n  candidate := count_upper\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"aBCdEf\"), expected: 1 },\n     { actual:\
  \ candidate(\"abcdefg\"), expected: 0 },\n     { actual: candidate(\"dBBE\"), expected:\
  \ 0 },\n     { actual: candidate(\"B\"), expected: 0 },\n     { actual: candidate(\"\
  U\"), expected: 1 },\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
  \ candidate(\"EEEE\"), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
  t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
  %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
  \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n    count\
    \ := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i'\
    \ || r == 'o' || r == 'u' {\n            count += vowels[int(r/2)]\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I',\
    \ 'O', 'U'}\n    count := 0\n    for _, r := range s {\n        if r == 'A' ||\
    \ r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n \
    \   evenIndices := make([]int, len(s))\n    for i := 0; i < len(s); i++ {\n  \
    \      if s[i] == 'e' {\n            evenIndices[i] = 1\n        } else if s[i]\
    \ == 'i' {\n            evenIndices[i] = 2\n        } else if s[i] == 'o' {\n\
    \            evenIndices[i] = 3\n        } else if s[i] == 'u' {\n           \
    \ evenIndices[i] = 4\n        } else if s[i] == 'A' {\n            evenIndices[i]\
    \ = 5\n        } else if s[i] == 'E' {\n            evenIndices[i] = 6\n     \
    \   } else if s[i] == 'I' {\n            evenIndices[i] = 7\n        } else if\
    \ s[i] == 'O' {\n            evenIndices[i] = 8\n        } else if s[i] == 'U'\
    \ {\n            evenIndices[i] = 9\n        }\n    }\n    return len(vowels)\
    \ - len(evenIndices)\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range s {\n        if\
    \ r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n\
    \        }\n        if r == 'B' || r == 'C' || r == 'D' || r == 'F' || r == 'G'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"AEIOU\")\n    evenIndices := make([]int, len(s))\n    for i := 0;\
    \ i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            evenIndices[i] = 1\n        }\n    }\n\
    \    return len(vowels[evenIndices])\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0,\
    \ 2, 4, 6}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count += vowels[evenIndices[len(vowels)/2]]\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, c := range s {\n        if c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    evenIndices := make([]int, len(s)/2)\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n            evenIndices[i/2] = 1\n        }\n    }\n    return\
    \ len(vowels) - len(evenIndices)\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, c := range s {\n        if c == 'A' || c ==\
    \ 'E' || c == 'I' || c == 'O' || c == 'U' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0, 2,\
    \ 4, 6, 8}\n    count := 0\n    for _, index := range evenIndices {\n        if\
    \ s[index] == 'a' || s[index] == 'e' || s[index] == 'i' || s[index] == 'o' ||\
    \ s[index] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'A', 'E', 'I', 'O', 'U'}\n    evenIndices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1]\
    \ == 'A' {\n            evenIndices[i/2] = 1\n        }\n    }\n    return len(vowels)\
    \ - len(evenIndices)\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'A', 'E', 'I', 'O', 'U'}\n    even_indices := make([]int, len(s))\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            even_indices[i] = 1\n  \
    \      }\n    }\n    return len(vowels[even_indices])\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int, len(s)/2)\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i/2] = 1\n        }\n\
    \    }\n    return len(vowels) - len(evenIndices)\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0}\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       evenIndices = append(evenIndices, 0)\n        } else {\n            evenIndices\
    \ = append(evenIndices, 1)\n        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n\
    }\n", "    vowels := []rune(\"aeiouAEIOU\")\n    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    for _, v\
    \ := range vowels {\n        if s[i] == v {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I', 'O', 'U'}\n\
    \    evenIndices := make([]int, len(s))\n    for i := 0; i < len(s); i++ {\n \
    \       if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            evenIndices[i] = 1\n        }\n    }\n    return len(vowels)\
    \ - len(evenIndices)\n}\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n        }\n   \
    \     if s[i] == 'B' || s[i] == 'D' || s[i] == 'F' || s[i] == 'G' {\n        \
    \    count++\n        }\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n   \
    \ return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices\
    \ := []int{0}\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r\
    \ == 'i' || r == 'o' || r == 'u' {\n            evenIndices = append(evenIndices,\
    \ 0)\n        } else {\n            evenIndices = append(evenIndices, 1)\n   \
    \     }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I', 'O',\
    \ 'U'}\n    evenIndices := []int{0}\n    oddIndices := []int{0}\n    for _, r\
    \ := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r ==\
    \ 'u' {\n            evenIndices = append(evenIndices, 0)\n        } else {\n\
    \            evenIndices = append(evenIndices, 1)\n        }\n    }\n    for _,\
    \ r := range s {\n        if r == 'b' || r == 'c' || r == 'd' || r == 'f' || r\
    \ == 'g' {\n            oddIndices = append(oddIndices, 0)\n        } else {\n\
    \            oddIndices = append(oddIndices, 1)\n        }\n    }\n    evenIndices\
    \ = append(evenIndices, len(s))\n    oddIndices = append(oddIndices, len(s))\n\
    \    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    oddIndices = append(oddIndices,\
    \ len(s))\n    evenIndices = append(evenIndices, len(s))\n    odd", "    vowels\
    \ := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range s {\n        if\
    \ r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n\
    \        }\n    }\n    for _, r := range s {\n        if r == 'A' || r == 'E'\
    \ || r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"AEIOU\")\n    count := 0\n    for i := 0; i < len(s); i++ {\n  \
    \      if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    for _, v := range vowels {\n\
    \        if s[len(s)-1] == v {\n            count--\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n    evens := make([]bool,\
    \ len(s))\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            evens[i] = true\n\
    \        }\n    }\n    count := 0\n    for i := 0; i < len(s); i++ {\n       \
    \ if evens[i] {\n            if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count :=\
    \ 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count += vowels[i\
    \ / 2]\n        }\n    }\n    return count\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune(\"AEIOU\")\n    evenIndices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            evenIndices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels[evenIndices])\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0}\n    for _,\
    \ r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r\
    \ == 'u' {\n            evenIndices = append(evenIndices, 0)\n        } else {\n\
    \            evenIndices = append(evenIndices, 1)\n        }\n    }\n    return\
    \ len(vowels[evenIndices%len(vowels)])\n}\n", "    vowels := []rune{'a', 'e',\
    \ 'i', 'o', 'u'}\n    even_indices := make([]int, len(s)/2)\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'B' || s[i] == 'D' || s[i] == 'F' {\n\
    \            even_indices[i/2] = 1\n        }\n    }\n    return len(vowels[:])\
    \ - sum(even_indices)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' ||\
    \ r == 'i' || r == 'o' || r == 'u' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"aeiouAEIOU\")\n    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            count += vowels[int(s[i] - 'a')]\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int, len(s))\n  \
    \  for i := range evenIndices {\n        if i%2 == 0 {\n            evenIndices[i]\
    \ = 0\n        } else {\n            evenIndices[i] = 1\n        }\n    }\n  \
    \  return len(vowels[evenIndices:])\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{}\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u' {\n            evenIndices = append(evenIndices,\
    \ i)\n        }\n    }\n    return len(evenIndices) / len(vowels)\n}\n", "   \
    \ vowels := []rune(\"AEIOU\")\n    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n        if s[i] == 'B' || s[i] ==\
    \ 'C' || s[i] == 'D' || s[i] == 'F' || s[i] == 'G' {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n  \
    \  count := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' || r\
    \ == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n    }\n  \
    \  for _, r := range s {\n        if r == 'A' || r == 'E' || r == 'I' || r ==\
    \ 'O' || r == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            count += vowels[int(s[i]-'a')]\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"AEIOUaeiou\")\n    count := 0\n    for _, r := range s {\n     \
    \   if r >= 'A' && r <= 'Z' {\n            count += vowels[int(r-'A')]\n     \
    \   }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    vowels := []rune(\"AEIOUaeiou\")\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            count += vowels[int(s[i]) - 'a']\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range\
    \ s {\n        if r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n\
    \            count++\n        }\n    }\n    for _, r := range s {\n        if\
    \ r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, c := range\
    \ s {\n        if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    count := 0\n \
    \   for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for _, c := range s {\n    \
    \    if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n         \
    \   count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r\
    \ == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I',\
    \ 'O', 'U'}\n    evenIndices := make([]int, len(s)/2)\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u' {\n            evenIndices[i/2] = 1\n        }\n    }\n    return\
    \ len(vowels) - len(evenIndices)\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'A' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I',\
    \ 'O', 'U'}\n    count := 0\n    for _, r := range s {\n        if r == 'A' ||\
    \ r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"aeiouAEIOU\")\n \
    \   evenIndices := make([]int, len(s))\n    for i := 0; i < len(s); i++ {\n  \
    \      if s[i] == 'e' {\n            evenIndices[i] = 1\n        } else if s[i]\
    \ == 'i' {\n            evenIndices[i] = 2\n        } else if s[i] == 'o' {\n\
    \            evenIndices[i] = 3\n        } else if s[i] == 'u' {\n           \
    \ evenIndices[i] = 4\n        } else if s[i] == 'A' {\n            evenIndices[i]\
    \ = 5\n        } else if s[i] == 'E' {\n            evenIndices[i] = 6\n     \
    \   } else if s[i] == 'I' {\n            evenIndices[i] = 7\n        } else if\
    \ s[i] == 'O' {\n            evenIndices[i] = 8\n        } else if s[i] == 'U'\
    \ {\n            evenIndices[i] = 9\n        }\n    }\n    return len(vowels[evenIndices])\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    for _, v := range\
    \ vowels {\n        if s[i] == v {\n            count++\n        }\n    }\n  \
    \  return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n  \
    \      if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count\
    \ := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' || r == 'I'\
    \ || r == 'O' || r == 'U' {\n            count += vowels[r%len(vowels)]\n    \
    \    }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    evenIndices := []int{}\n    for _, r := range s {\n        if r ==\
    \ 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            evenIndices\
    \ = append(evenIndices, 0)\n        } else {\n            evenIndices = append(evenIndices,\
    \ 1)\n        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n       \
    \ if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune(\"aeiouAEIOU\")\n    evenIndices := make([]int, len(s))\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i] = 1\n        }\n  \
    \  }\n    return len(vowels[evenIndices])\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n       \
    \ if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune(\"AEIOU\")\n    count := 0\n    for i := 0; i < len(s); i++ {\n     \
    \   if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'\
    \ {\n            count++\n        }\n        if s[i] == 'B' || s[i] == 'C' ||\
    \ s[i] == 'D' || s[i] == 'F' || s[i] == 'G' {\n            count += 2\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    n :=\
    \ 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' || r == 'I' ||\
    \ r == 'O' || r == 'U' {\n            n += vowels[r%len(vowels)]\n        }\n\
    \    }\n    return n\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n \
    \   evenIndices := []int{0}\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            evenIndices = append(evenIndices,\
    \ 0)\n        } else {\n            evenIndices = append(evenIndices, evenIndices[len(evenIndices)-1])\n\
    \        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n}\n", "  \
    \  count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"AEIOUaeiou\")\n    count := 0\n    for _, r := range\
    \ s {\n        if r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n\
    \            count++\n        }\n        if r == 'B' || r == 'C' || r == 'D' ||\
    \ r == 'F' || r == 'G' {\n            count += 2\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    count := 0\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int, len(s)/2)\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'a' {\n       \
    \     evenIndices[i/2] = 1\n        }\n    }\n    return len(vowels) - len(evenIndices)\n\
    }\n", "    count := 0\n    for _, v := range s {\n        if v == 'A' || v ==\
    \ 'E' || v == 'I' || v == 'O' || v == 'U' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   vowels := []rune(\"aeiouAEIOU\")\n    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' {\n            count++\n        }\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n        if s[i] == 'B' || s[i] == 'C' || s[i] == 'D' || s[i] == 'F'\
    \ || s[i] == 'G' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range\
    \ s {\n        if r >= 'A' && r <= 'Z' {\n            count += vowels[r-'A']\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{2, 4, 6, 8}\n    count\
    \ := 0\n    for _, index := range evenIndices {\n        if s[index] == 'a' ||\
    \ s[index] == 'e' || s[index] == 'i' || s[index] == 'o' || s[index] == 'u' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int, len(s)/2)\n\
    \    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'B' {\n            evenIndices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels[evenIndices])\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'A' || r ==\
    \ 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count :=\
    \ 0\n    for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' ||\
    \ r == 'o' || r == 'u' {\n            count += vowels[r%len(vowels)]\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I',\
    \ 'O', 'U'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0}\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       evenIndices = append(evenIndices, 0)\n        } else {\n            evenIndices\
    \ = append(evenIndices, 1)\n        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I',\
    \ 'O', 'U'}\n    count := 0\n    for _, r := range s {\n        if r == 'A' ||\
    \ r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' ||\
    \ r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0}\n    for _,\
    \ r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r\
    \ == 'u' {\n            evenIndices = append(evenIndices, 0)\n        } else {\n\
    \            evenIndices = append(evenIndices, evenIndices[len(evenIndices)-1]+1)\n\
    \        }\n    }\n    return len(vowels[evenIndices[len(evenIndices)/2]%6:])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'A' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int, len(s)/2)\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i/2] = 1\n        }\n\
    \    }\n    return len(filter(vowels, evenIndices))\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n   \
    \     if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    count := 0\n    for _, r := range s {\n        if r == 'a' ||\
    \ r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n        \
    \    count++\n        }\n        if s[i] == 'B' || s[i] == 'D' || s[i] == 'F'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' && s[i+1] == 'A' {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i',\
    \ 'o', 'u'}\n    evenIndices := []int{0}\n    for _, r := range s {\n        if\
    \ r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n            evenIndices\
    \ = append(evenIndices, 0)\n        } else {\n            evenIndices = append(evenIndices,\
    \ 1)\n        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices := make([]int,\
    \ len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i/2]\
    \ = 1\n        }\n    }\n    return len(vowels) - len(evenIndices)\n}\n", "  \
    \  count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n\
    \    count := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' ||\
    \ r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n       \
    \ if r == 'B' || r == 'D' || r == 'F' || r == 'G' {\n            count++\n   \
    \     }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune{'A', 'E', 'I', 'O', 'U'}\n    evens := []int{}\n \
    \   for _, r := range s {\n        if r == 'a' || r == 'e' || r == 'i' || r ==\
    \ 'o' || r == 'u' {\n            evens = append(evens, 0)\n        } else {\n\
    \            evens = append(evens, 1)\n        }\n    }\n    return len(vowels[:])\
    \ - len(evens)\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        if s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n     \
    \       evenIndices[i/2] = 1\n        }\n    }\n    return len(vowels[:]) - sum(evenIndices)\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, c := range\
    \ s {\n        if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    vowels :=\
    \ []rune(\"aeiouAEIOU\")\n    evenIndices := make([]int, len(s))\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i] = 1\n        }\n  \
    \  }\n    return len(vowels[evenIndices])\n}\n", "    count := 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'A', 'E', 'I', 'O',\
    \ 'U'}\n    count := 0\n    for _, r := range s {\n        if r == 'A' || r ==\
    \ 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i\
    \ += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n       \
    \ if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o',\
    \ 'u'}\n    even_indices := make([]int, 0, len(s))\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       even_indices = append(even_indices, 0)\n        } else {\n           \
    \ even_indices = append(even_indices, 1)\n        }\n    }\n    return len(vowels[even_indices%len(vowels)])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    evenIndices := []int{0}\n    for _, r := range s {\n\
    \        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n     \
    \       evenIndices = append(evenIndices, 0)\n        } else {\n            evenIndices\
    \ = append(evenIndices, 1)\n        }\n    }\n    return len(vowels[evenIndices%len(vowels)])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune{'A', 'E', 'I', 'O', 'U'}\n    evens := make([]bool, len(s)/2)\n  \
    \  for i := 0; i < len(s); i += 2 {\n        evens[i / 2] = true\n    }\n    for\
    \ _, v := range vowels {\n        if evens[v] {\n            evens[v] = false\n\
    \        }\n    }\n    return len(vowels) - len(evens)\n}\n", "    vowels := []rune(\"\
    AEIOU\")\n    count := 0\n    for _, r := range s {\n        if r >= 'A' && r\
    \ <= 'Z' {\n            count++\n        }\n        if r >= 'a' && r <= 'z' {\n\
    \            count++\n        }\n        if r >= 'A' && r <= 'Z' && r != ' ' {\n\
    \            count++\n        }\n        if r >= 'a' && r <= 'z' && r != ' ' {\n\
    \            count++\n        }\n    }\n    for _, r := range vowels {\n     \
    \   if r >= 'A' && r <= 'Z' {\n            count++\n        }\n        if r >=\
    \ 'a' && r <= 'z' {\n            count++\n        }\n        if r >= 'A' && r\
    \ <= 'Z' && r != ' ' {\n            count++\n        }\n        if r >= 'a' &&\
    \ r <= 'z' && r != ' ' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range\
    \ s {\n        if r == 'a' || r == 'e' || r == 'i' || r == 'o' || r == 'u' {\n\
    \            count++\n        }\n    }\n    for _, r := range s {\n        if\
    \ r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := []rune(\"aeiouAEIOU\")\n    evenIndices := make([]int, len(s))\n    for i\
    \ := 0; i < len(s); i++ {\n        if s[i] == 'e' {\n            evenIndices[i]\
    \ = 1\n        } else if s[i] == 'i' {\n            evenIndices[i] = 2\n     \
    \   } else if s[i] == 'o' {\n            evenIndices[i] = 3\n        } else if\
    \ s[i] == 'u' {\n            evenIndices[i] = 4\n        } else if s[i] == 'A'\
    \ {\n            evenIndices[i] = 5\n        } else if s[i] == 'E' {\n       \
    \     evenIndices[i] = 6\n        } else if s[i] == 'I' {\n            evenIndices[i]\
    \ = 7\n        } else if s[i] == 'O' {\n            evenIndices[i] = 8\n     \
    \   } else if s[i] == 'U' {\n            evenIndices[i] = 9\n        } else {\n\
    \            evenIndices[i] = 0\n        }\n    }\n    return len(vowels[evenIndices])\n\
    }\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' && s[i+1] == 'A' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    evenIndices\
    \ := make([]int, len(s))\n    for i := 0; i < len(s); i++ {\n        if s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n        \
    \    evenIndices[i] = 1\n        }\n    }\n    return len(vowels) / 2 - len(evenIndices)\n\
    }\n", "    vowels := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range\
    \ s {\n        if r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U' {\n\
    \            count += vowels[int(r/2)]\n        }\n    }\n    return count\n}\n",
  "    vowels := []rune{'A', 'E', 'I', 'O', 'U'}\n    evenIndices := make([]int, len(s)/2)\n\
    \    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u' {\n            evenIndices[i/2] =\
    \ 1\n        }\n    }\n    return len(vowels) - len(evenIndices)\n}\n", "    vowels\
    \ := []rune(\"AEIOU\")\n    count := 0\n    for _, r := range s {\n        if\
    \ r >= 'A' && r <= 'Z' {\n            count += vowels[r-'A']\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i := 0; i < len(s); i++ {\n\
    \        if s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u' {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    vowels := []rune(\"AEIOU\")\n    count\
    \ := 0\n    for _, r := range s {\n        if r == 'A' || r == 'E' || r == 'I'\
    \ || r == 'O' || r == 'U' {\n            count++\n        }\n        if r == 'B'\
    \ || r == 'C' || r == 'D' || r == 'F' || r == 'G' {\n            count++\n   \
    \     }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i := 0; i\
    \ < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    vowels := []rune(\"aeiouAEIOU\")\n    evenIndices := make([]int, len(s))\n\
    \    for i := 0; i < len(s); i++ {\n        if s[i] == 'e' {\n            evenIndices[i]\
    \ = 1\n        } else if s[i] == 'i' {\n            evenIndices[i] = 2\n     \
    \   } else if s[i] == 'o' {\n            evenIndices[i] = 3\n        } else if\
    \ s[i] == 'u' {\n            evenIndices[i] = 4\n        } else if s[i] == 'A'\
    \ {\n            evenIndices[i] = 5\n        } else if s[i] == 'E' {\n       \
    \     evenIndices[i] = 6\n        } else if s[i] == 'I' {\n            evenIndices[i]\
    \ = 7\n        } else if s[i] == 'O' {\n            evenIndices[i] = 8\n     \
    \   } else if s[i] == 'U' {\n            evenIndices[i] = 9\n        }\n    }\n\
    \    evenIndices = evenIndices[:len(evenIndices)/2]\n    evenIndices = append(evenIndices,\
    \ len(s)-len(evenIndices))\n    evenIndices = append(evenIndices, len(s)-1)\n\
    \    evenIndices = append(evenIndices, len(s)-2)\n    evenIndices = append(evenIndices,\
    \ len(s)-3)\n    evenIndices = append(evenIndices, len(s)-4)\n    evenIndices\
    \ = append(evenIndices, len(s)-5)\n    evenIndices = append(evenIndices, len(s)-6)\n\
    \    evenIndices = append(evenIndices, len(s)-7)\n    evenIndices = append(evenIndices,\
    \ len(s)-8)\n    evenIndices = append(evenIndices, len(s)-9)\n    evenIndices\
    \ = append(evenIndices, len(s)-10)\n    evenIndices = append(evenIndices, len(s)-11)\n\
    \    evenIndices = append(evenIndices, len(s)-12)\n    evenIndices = append(evenIndices,\
    \ len(s)-13)\n    evenIndices = append(evenIndices, len(s)-14)\n    evenIndices\
    \ = append(evenIndices, len(s)-15)\n    evenIndices = append(evenIndices, len(s)-16)\n\
    \    evenIndices = append(evenIndices, len(s)-17)\n    evenIndices = append(evenIndices,\
    \ len(s)-18)\n    evenIndices = append(evenIndices, len(s)-19)\n    evenIndices\
    \ = append(evenIndices, len(s)-20)\n    evenIndices = append(evenIndices, len(s)-21)\n\
    \    evenIndices = append(evenIndices, len(s)-22)\n    evenIndices = append(evenIndices,\
    \ len(s)-23)\n    evenIndices = append(evenIndices, ", "    count := 0\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    vowels := []rune{'a', 'e', 'i', 'o', 'u'}\n    even_indices\
    \ := make([]int, len(s)/2)\n    for i := 0; i < len(s); i += 2 {\n        even_indices[i/2]\
    \ = 0\n    }\n    for _, v := range vowels {\n        for _, i := range even_indices\
    \ {\n            if s[i] == v {\n                even_indices[i]++\n         \
    \   }\n        }\n    }\n    return len(even_indices)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

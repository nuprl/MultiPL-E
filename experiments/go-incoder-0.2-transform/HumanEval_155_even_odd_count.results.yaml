language: go_test.go
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    for num >\
    \ 0 {\n        if num%2 == 0 {\n            even_count++\n        } else {\n \
    \           odd_count++\n        }\n        num /= 10\n    }\n    return []interface{}{even_count,\
    \ odd_count}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := []int{}\n    for\
    \ num > 0 {\n        digits = append(digits, num%10)\n        num /= 10\n    }\n\
    \    for _, d := range digits {\n        if d%2 == 0 {\n            even++\n \
    \       } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]interface{}, 0)\n    odds := make([]interface{},\
    \ 0)\n    num /= 10\n    for num > 0 {\n        num /= 10\n        if num%2 ==\
    \ 0 {\n            evens = append(evens, num)\n        } else {\n            odds\
    \ = append(odds, num)\n        }\n    }\n    return evens, odds\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmp6d807smd_test.go:26:19:\
    \ too many return values\n\thave ([]interface{}, []interface{})\n\twant ([]interface{})\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        if num%2 == 0 {\n            even++\n        } else {\n     \
    \       odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, remainder := num%10,\
    \ num/10\n    for ; remainder > 0; remainder-- {\n        if remainder % 2 ==\
    \ 0 {\n            even++\n        } else {\n            odd++\n        }\n  \
    \  }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplp204t22_test.go:16:5: digits declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := []interface{}{}\n\
    \    for num > 0 {\n        digit, num := num % 10, num / 10\n        if digit\
    \ % 2 == 0 {\n            even++\n        } else {\n            odd++\n      \
    \  }\n        count = append(count, digit)\n    }\n    return count\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_nih_h33_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := 0\n    num /= 10\n    for num > 0 {\n        digitCount++\n        num /=\
    \ 10\n    }\n    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    for i := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    sum := 0\n    for num > 0 {\n\
    \        sum += num % 10\n        num /= 10\n        if num > 0 {\n          \
    \  even++\n        } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp4fq6x70c_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n        }\
    \ else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for num > 0 {\n        digit, num := num%10, num/10\n        if digit % 2\
    \ == 0 {\n            evenCount++\n        } else {\n            oddCount++\n\
    \        }\n        result = append(result, digit)\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpw1h6v4a7_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for i := 0; i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num = num / 10\n\
    \    }\n    result = append(result, evenCount)\n    result = append(result, oddCount)\n\
    \    return result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate\
    \ := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected:\
    \ []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            even++\n        } else {\n         \
    \   odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    for\
    \ i := 0; i < 10; i++ {\n        if num % 10 == 0 {\n            even_count++\n\
    \        } else {\n            odd_count++\n        }\n        num /= 10\n   \
    \ }\n    \n    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpgpe_ug02_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        if num%2 == 0 {\n            even++\n        } else {\n     \
    \       odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        num /= 10\n        if num%2 == 0 {\n            even++\n        }\
    \ else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=2) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp671kdauf_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        if num%2\
    \ == 0 {\n            even++\n        } else {\n            odd++\n        }\n\
    \        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := 0\n    for num > 0\
    \ {\n        digit, num := num%10, num/10\n        if digit % 2 == 0 {\n     \
    \       even++\n        } else {\n            odd++\n        }\n        count\
    \ += 1\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaukrwkf__test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for num\
    \ > 0 {\n        if num % 2 == 0 {\n            evenCount++\n        } else {\n\
    \            oddCount++\n        }\n        \n        num = num / 10\n    }\n\
    \    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpx06j6s11_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpx06j6s11_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpx06j6s11_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpx06j6s11_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpx06j6s11_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < num; i++ {\n        if num % 2 == 0 {\n            evenCount++\n \
    \       } else {\n            oddCount++\n        }\n    }\n    \n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    for i :=\
    \ 0; i < num; i++ {\n        if num % 2 == 0 {\n            even_count++\n   \
    \     } else {\n            odd_count++\n        }\n    }\n    return []interface{}{even_count,\
    \ odd_count}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpxxvlogym_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n   \
    \     } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    result := make([]interface{},\
    \ 0)\n    for num > 0 {\n        digit, num := num % 10, num / 10\n        if\
    \ digit % 2 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        result = append(result, digit)\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnim2oa0z_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for num\
    \ > 0 {\n        digit, num := num%10, num/10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfrtdzkpu_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    switch\
    \ {\n    case num < 0:\n        return nil\n    case num == 0:\n        return\
    \ nil\n    case num % 2 == 0:\n        evenCount = 1\n        oddCount = 1\n \
    \   case num % 2 != 0:\n        evenCount = 1\n        oddCount = 2\n    }\n \
    \   \n    evenOdd := []interface{}{evenCount, oddCount}\n    return evenOdd\n\
    }\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpfbas0sr3_test.go:55: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpfbas0sr3_test.go:55: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__2 (0.00s)\n        tmpfbas0sr3_test.go:55:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL:\
    \ TestEven_Odd_Count/test_num__3 (0.00s)\n        tmpfbas0sr3_test.go:55: expected\
    \ '[%!s(int=3) %!s(int=3)]', got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpfbas0sr3_test.go:55: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__5 (0.00s)\n        tmpfbas0sr3_test.go:55:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpfbas0sr3_test.go:55: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__7 (0.00s)\n        tmpfbas0sr3_test.go:55:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074483
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkbiryc65_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    if\
    \ num < 0 {\n        return []interface{}{0, 0}\n    }\n    \n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == 0 {\n            even_count++\n        }\
    \ else {\n            odd_count++\n        }\n        \n        num /= 10\n  \
    \  }\n    \n    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpe2ag36bb_test.go:55: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    for i := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num % 10 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkbiryc65_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := 0\n    num /= 10\n    for num > 0 {\n        digitCount++\n        num /=\
    \ 10\n    }\n    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num % 10 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := []int{}\n    odds := []int{}\n    for i :=\
    \ 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < num; i++ {\n        if num % 2 == 0 {\n            evenCount++\n \
    \       } else {\n            oddCount++\n        }\n    }\n    \n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        even++\n        num /= 10\n    }\n    for num > 0 {\n        odd++\n\
    \        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        even++\n        num /= 10\n    }\n    for num > 0 {\n        odd++\n\
    \        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num%10, num/10\n        if digit % 2 == 0 {\n     \
    \       evenCount++\n        } else {\n            oddCount++\n        }\n   \
    \ }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzkxvrf92_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        digit,\
    \ num := num % 10, num / 10\n        if digit % 2 == 0 {\n            even++\n\
    \        } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2pa6s9me_test.go:17:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        even++\n        num /= 10\n    }\n    for num > 0 {\n        odd++\n\
    \        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpxkcxvzz3_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    for\
    \ i := 0; i < 10; i++ {\n        if num % 10 == 0 {\n            even_count++\n\
    \        } else {\n            odd_count++\n        }\n        num = num / 10\n\
    \    }\n    \n    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpadv8t3hu_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: null
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, remainder := 0, num\n\
    \    for remainder != 0 {\n        digits = digits + 1\n        remainder = remainder\
    \ % 10\n        if remainder == 2 {\n            even = even + 1\n        }\n\
    \        if remainder == 1 {\n            odd = odd + 1 \n        }\n    }\n \
    \   return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074495
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    num /= 10\n\
    \    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, remainder := num%10,\
    \ num/10\n    for i := 0; i < len(digits); i++ {\n        if digits[i]%2 == 0\
    \ {\n            even++\n        } else {\n            odd++\n        }\n    }\n\
    \    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8crwcgwr_test.go:16:13: remainder declared but not used

    /tmp/tmp8crwcgwr_test.go:17:25: invalid argument: digits (variable of type int)
    for len

    /tmp/tmp8crwcgwr_test.go:18:18: invalid operation: cannot index digits (variable
    of type int)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := []int{}\n    for\
    \ num > 0 {\n        digits = append(digits, num%10)\n        num /= 10\n    }\n\
    \    for _, d := range digits {\n        if d%2 == 0 {\n            even++\n \
    \       } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    \n    for i := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evens\
    \ = append(evens, i)\n        } else {\n            odds = append(odds, i)\n \
    \       }\n        num /= 10\n    }\n    \n    return []interface{}{evens, odds}\n\
    }\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074483
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    switch\
    \ {\n    case num < 0:\n        return []interface{}{1, 1}\n    case num == 0:\n\
    \        return []interface{}{0, 0}\n    case num > 0:\n        digit, ok := getDigit(num)\n\
    \        if !ok {\n            return []interface{}{1, 1}\n        }\n       \
    \ \n        if digit % 2 == 0 {\n            even_count++\n        } else {\n\
    \            odd_count++\n        }\n    }\n    \n    return []interface{}{even_count,\
    \ odd_count}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeb00o7g__test.go:24:22: undefined: getDigit

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    switch\
    \ {\n    case num < 0:\n        return []interface{}{1, 1}\n    case num == 0:\n\
    \        return []interface{}{0, 0}\n    case num > 0:\n        digitCount :=\
    \ len(strconv.Itoa(num))\n        \n        for i := 0; i < digitCount; i++ {\n\
    \            digit, err := strconv.Atoi(strconv.Itoa(num)[i])\n            if\
    \ err != nil {\n                return []interface{}{1, 1}\n            }\n  \
    \          \n            if digit % 2 == 0 {\n                evenCount++\n  \
    \          } else {\n                oddCount++\n            }\n        }\n  \
    \  }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpitdusmu8_test.go:24:27: undefined: strconv

    /tmp/tmpitdusmu8_test.go:27:27: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n        }\
    \ else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := 0\n    result := []interface{}{}\n    for num > 0 {\n        digitCount++\n\
    \        num /= 10\n    }\n    for num > 0 {\n        if num%2 == 0 {\n      \
    \      evenCount++\n        } else {\n            oddCount++\n        }\n    \
    \    num /= 10\n    }\n    result = append(result, evenCount)\n    result = append(result,\
    \ oddCount)\n    return result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n\
    \  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwpydekv3_test.go:56: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: null
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, i := 0, num\n    for\
    \ i < 10 {\n        digits = digits*10 + i%10\n        i /= 10\n        if digits\
    \ % 2 == 0 {\n            even++\n        } else {\n            odd++\n      \
    \  }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660074495
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    for i :=\
    \ 0; i < 10; i++ {\n        if num%10 == 0 {\n            even_count++\n     \
    \   } else {\n            odd_count++\n        }\n        num /= 10\n    }\n \
    \   return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpc7s3b25i_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := make([]interface{},\
    \ 0)\n    for num > 0 {\n        digit, num := num%10, num/10\n        if digit\
    \ % 2 == 0 {\n            evenCount++\n        } else {\n            oddCount++\n\
    \        }\n        result = append(result, digit)\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp93p8i2am_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    for num >\
    \ 0 {\n        if num%2 == 0 {\n            even_count++\n        } else {\n \
    \           odd_count++\n        }\n        num /= 10\n    }\n    return []interface{}{even_count,\
    \ odd_count}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpj8wu2o15_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n        }\
    \ else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for num\
    \ > 0 {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n\
    \            oddCount++\n        }\n        \n        num /= 10\n    }\n    \n\
    \    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvhyes5i6_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvhyes5i6_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvhyes5i6_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvhyes5i6_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvhyes5i6_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        if num%2\
    \ == 0 {\n            even++\n        } else {\n            odd++\n        }\n\
    \        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpijq2v7v4_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := 0\n    \n    for num > 0 {\n        digitCount++\n        \n        if num%2\
    \ == 0 {\n            evenCount++\n        } else {\n            oddCount++\n\
    \        }\n        \n        num /= 10\n    }\n    \n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp3ax525or_test.go:54: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp3ax525or_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp3ax525or_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp3ax525or_test.go:54: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp3ax525or_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkbiryc65_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for i := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num = num / 10\n\
    \    }\n    result = append(result, evenCount)\n    result = append(result, oddCount)\n\
    \    return result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate\
    \ := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected:\
    \ []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpcqfisnzu_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for i := 0; i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num = num / 10\n\
    \    }\n    result = append(result, evenCount)\n    result = append(result, oddCount)\n\
    \    return result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate\
    \ := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected:\
    \ []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpui9fdz1w_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for num\
    \ > 0 {\n        digit, num := num%10, num/10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfrtdzkpu_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpf1g546tw_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    num /= 10\n\
    \    for num > 0 {\n        num /= 10\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=2) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    num /= 10\n\
    \    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           even++\n        } else {\n            odd++\n        }\n        count\
    \ = count + 1\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4193lngc_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    result := []interface{}{}\n\
    \    for i := 0; i < 10; i++ {\n        if num%10 == 0 {\n            even++\n\
    \        } else {\n            odd++\n        }\n        num = num / 10\n    }\n\
    \    result = append(result, even)\n    result = append(result, odd)\n    return\
    \ result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num = num / 10\n    }\n\
    \    result = append(result, evenCount)\n    result = append(result, oddCount)\n\
    \    return result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate\
    \ := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected:\
    \ []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpq3kt6wfb_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpq3kt6wfb_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpq3kt6wfb_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpq3kt6wfb_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpq3kt6wfb_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num % 10 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    result := []interface{}{}\n\
    \    for i := 0; i < num; i++ {\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        result = append(result,\
    \ evenCount, oddCount)\n    }\n    return result\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.33s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpdyxtp6xa_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=1) %!s(int=0) %!s(int=2) %!s(int=0) %!s(int=3) %!s(int=0)\
    \ %!s(int=4) %!s(int=0) %!s(int=5) %!s(int=0) %!s(int=6) %!s(int=0) %!s(int=7)]'\n\
    \    --- FAIL: TestEven_Odd_Count/test_num__1 (0.00s)\n        tmpdyxtp6xa_test.go:49:\
    \ expected '[%!s(int=1) %!s(int=1)]', got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpdyxtp6xa_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=0) %!s(int=2) %!s(int=0) %!s(int=3) %!s(int=0) %!s(int=4)\
    \ %!s(int=0) %!s(int=5) %!s(int=0) %!s(int=6) %!s(int=0) %!s(int=7) %!s(int=0)\
    \ %!s(int=8) %!s(int=0) %!s(int=9) %!s(int=0) %!s(int=10) %!s(int=0) %!s(int=11)\
    \ %!s(int=0) %!s(int=12) %!s(int=0) %!s(int=13) %!s(int=0) %!s(int=14) %!s(int=0)\
    \ %!s(int=15) %!s(int=0) %!s(int=16) %!s(int=0) %!s(int=17) %!s(int=0) %!s(int=18)\
    \ %!s(int=0) %!s(int=19) %!s(int=0) %!s(int=20) %!s(int=0) %!s(int=21) %!s(int=0)\
    \ %!s(int=22) %!s(int=0) %!s(int=23) %!s(int=0) %!s(int=24) %!s(int=0) %!s(int=25)\
    \ %!s(int=0) %!s(int=26) %!s(int=0) %!s(int=27) %!s(int=0) %!s(int=28) %!s(int=0)\
    \ %!s(int=29) %!s(int=0) %!s(int=30) %!s(int=0) %!s(int=31) %!s(int=0) %!s(int=32)\
    \ %!s(int=0) %!s(int=33) %!s(int=0) %!s(int=34) %!s(int=0) %!s(int=35) %!s(int=0)\
    \ %!s(int=36) %!s(int=0) %!s(int=37) %!s(int=0) %!s(int=38) %!s(int=0) %!s(int=39)\
    \ %!s(int=0) %!s(int=40) %!s(int=0) %!s(int=41) %!s(int=0) %!s(int=42) %!s(int=0)\
    \ %!s(int=43) %!s(int=0) %!s(int=44) %!s(int=0) %!s(int=45) %!s(int=0) %!s(int=46)\
    \ %!s(int=0) %!s(int=47) %!s(int=0) %!s(int=48) %!s(int=0) %!s(int=49) %!s(int=0)\
    \ %!s(int=50) %!s(int=0) %!s(int=51) %!s(int=0) %!s(int=52) %!s(int=0) %!s(int=53)\
    \ %!s(int=0) %!s(int=54) %!s(int=0) %!s(int=55) %!s(int=0) %!s(int=56) %!s(int=0)\
    \ %!s(int=57) %!s(int=0) %!s(int=58) %!s(int=0) %!s(int=59) %!s(int=0) %!s(int=60)\
    \ %!s(int=0) %!s(int=61) %!s(int=0) %!s(int=62) %!s(int=0) %!s(int=63) %!s(int=0)\
    \ %!s(int=64) %!s(int=0) %!s(int="
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    result :=\
    \ []interface{}{}\n    for num > 0 {\n        digit, num := num % 10, num / 10\n\
    \        if digit % 2 == 0 {\n            even_count++\n        } else {\n   \
    \         odd_count++\n        }\n        result = append(result, digit)\n   \
    \ }\n    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgi77hyfo_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n   \
    \     } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    result :=\
    \ []interface{}{}\n    for num > 0 {\n        digit, num := num % 10, num / 10\n\
    \        if digit % 2 == 0 {\n            even_count++\n        } else {\n   \
    \         odd_count++\n        }\n        result = append(result, digit)\n   \
    \ }\n    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgi77hyfo_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    sum := 0\n    for num > 0 {\n\
    \        sum += num % 10\n        num /= 10\n        if num == 0 {\n         \
    \   even++\n        } else {\n            odd++\n        }\n    }\n    return\
    \ []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate\
    \ := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7), expected:\
    \ []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=1) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp6xj989kf_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := []interface{}{}\n\
    \    for num > 0 {\n        digit, num := num % 10, num / 10\n        if digit\
    \ % 2 == 0 {\n            even++\n        } else {\n            odd++\n      \
    \  }\n        count = append(count, digit)\n    }\n    return count\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_nih_h33_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := len(strconv.Itoa(num))\n    for i := 0; i < digitCount; i++ {\n        if\
    \ num%2 == 0 {\n            evenCount++\n        } else {\n            oddCount++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{evenCount, oddCount}\n\
    }\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpys__m86o_test.go:17:23: undefined: strconv

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    result := []interface{}{}\n\
    \    for i := 0; i < 10; i++ {\n        if num%10 == 0 {\n            even++\n\
    \        } else {\n            odd++\n        }\n        num = num / 10\n    }\n\
    \    result = append(result, even)\n    result = append(result, odd)\n    return\
    \ result\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpu4bn9st3_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evenCount++\n    \
    \    } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    num /= 10\n\
    \    for num > 0 {\n        num /= 10\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=2) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp172aiur7_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    if\
    \ num < 0 {\n        return []interface{}{-1, -1}\n    }\n    \n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == i {\n            even_count++\n        }\
    \ else {\n            odd_count++\n        }\n        num /= 10\n    }\n    \n\
    \    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=10)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=9)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp79y1efvc_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=1) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n   \
    \     } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqx1etax1_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    \n    for\
    \ i := 0; i < num; i++ {\n        if num % 2 == 0 {\n            even_count++\n\
    \        } else {\n            odd_count++\n        }\n    }\n    \n    return\
    \ []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp9xac4ll9_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := 0\n    for num > 0\
    \ {\n        digit, num := num%10, num/10\n        if digit % 2 == 0 {\n     \
    \       even++\n        } else {\n            odd++\n        }\n        count\
    \ += 1\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaukrwkf__test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < num; i++ {\n        if num % 2 == 0 {\n            evenCount++\n \
    \       } else {\n            oddCount++\n        }\n    }\n    \n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        if num%2 == 0 {\n            even++\n        } else {\n     \
    \       odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkbiryc65_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        digit,\
    \ num := num % 10, num / 10\n        if digit % 2 == 0 {\n            even++\n\
    \        } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2pa6s9me_test.go:17:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    num /= 10\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            even++\n        } else {\n         \
    \   odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp4ft7rb7d_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < num; i++ {\n        if num % 2 == 0 {\n            evenCount++\n \
    \       } else {\n            oddCount++\n        }\n    }\n    \n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpi02l8sj5_test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074482
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num % 10 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpc_czzqc9_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    digitCount\
    \ := 0\n    num /= 10\n    for num > 0 {\n        digitCount++\n        num /=\
    \ 10\n    }\n    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n\
    \        } else {\n            oddCount++\n        }\n        num /= 10\n    }\n\
    \    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvv7f9wvh_test.go:54: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    for i := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        if num%2 == 0 {\n            evenCount++\n        } else {\n    \
    \        oddCount++\n        }\n        num /= 10\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpdidyncwa_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evenCount++\n    \
    \    } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqk6usy94_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           even++\n        } else {\n            odd++\n        }\n        count++\n\
    \    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7imc2azh_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]interface{}, 0)\n    odds := make([]interface{},\
    \ 0)\n    for i := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens\
    \ = append(evens, i)\n        } else {\n            odds = append(odds, i)\n \
    \       }\n        num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmptvqh6y32_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    switch\
    \ {\n    case num < 0:\n        return nil\n    case num == 0:\n        return\
    \ []interface{}{0, 0}\n    case num % 2 == 0:\n        evenCount++\n        return\
    \ []interface{}{evenCount, 1}\n    default:\n        oddCount++\n        return\
    \ []interface{}{oddCount, 1}\n    }\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpck0cgz2r_test.go:52: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpck0cgz2r_test.go:52: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__2 (0.00s)\n        tmpck0cgz2r_test.go:52:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL:\
    \ TestEven_Odd_Count/test_num__3 (0.00s)\n        tmpck0cgz2r_test.go:52: expected\
    \ '[%!s(int=3) %!s(int=3)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpck0cgz2r_test.go:52: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__5 (0.00s)\n        tmpck0cgz2r_test.go:52:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpck0cgz2r_test.go:52: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__7 (0.00s)\n        tmpck0cgz2r_test.go:52:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    \n    for i := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evens\
    \ = append(evens, i)\n        } else {\n            odds = append(odds, i)\n \
    \       }\n        num /= 10\n    }\n    \n    return []interface{}{evens, odds}\n\
    }\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpqu2n7mny_test.go:50: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    result :=\
    \ []interface{}{}\n    for i := 0; i < 10; i++ {\n        if num%10 == 0 {\n \
    \           even_count++\n        } else {\n            odd_count++\n        }\n\
    \        num = num / 10\n    }\n    result = append(result, even_count)\n    result\
    \ = append(result, odd_count)\n    return result\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpcwyw5avi_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num%10 == 0 {\n            even++\n        } else {\n            odd++\n\
    \        }\n        num /= 10\n    }\n    return []interface{}{even, odd}\n}\n\
    \nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpwkwj7doo_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := []int{}\n    odds := []int{}\n    for i :=\
    \ 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpto5wf7o5_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    for i\
    \ := 0; i < 10; i++ {\n        if num % 2 == 0 {\n            evenCount++\n  \
    \      } else {\n            oddCount++\n        }\n        \n        num /= 10\n\
    \    }\n    \n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpvm8z5rpo_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < 10; i++ {\n        if num%10 == 0 {\n            evenCount++\n        }\
    \ else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpq56ziwls_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := make([]int, 10)\n\
    \    for i := 0; i < 10; i++ {\n        digits[i] = num % 10\n        num /= 10\n\
    \    }\n    for i := 0; i < len(digits); i++ {\n        if digits[i] % 2 == 0\
    \ {\n            even++\n        } else {\n            odd++\n        }\n    }\n\
    \    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=7) %!s(int=3)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmplltc674u_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < 10; i++ {\n\
    \        if num % 10 == 0 {\n            even++\n        } else {\n          \
    \  odd++\n        }\n        num /= 10\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=8) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=6) %!s(int=4)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=6)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=9) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=5) %!s(int=5)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_x94118q_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=10) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074484
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for i := 0;\
    \ i < num; i++ {\n        if num % 2 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n    }\n    return []interface{}{evenCount,\
    \ oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpql48ni8h_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\n\
    FAIL\n"
  timestamp: 1660074485
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, remainder := num/10,\
    \ num%10\n    for {\n        if remainder == 0 {\n            break\n        }\n\
    \        even++\n        remainder--\n    }\n    for {\n        if remainder ==\
    \ 0 {\n            break\n        }\n        odd++\n        remainder--\n    }\n\
    \    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpeakjy25k_test.go:16:5: digits declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    num /= 10\n\
    \    for num > 0 {\n        if num%2 == 0 {\n            evenCount++\n       \
    \ } else {\n            oddCount++\n        }\n        num /= 10\n    }\n    return\
    \ []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=1) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=3) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpf0lzdz1__test.go:49: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074483
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even_count := 0\n    odd_count := 0\n    result :=\
    \ []interface{}{}\n    for num > 0 {\n        digit, num := num%10, num/10\n \
    \       if digit % 2 == 0 {\n            even_count++\n        } else {\n    \
    \        odd_count++\n        }\n        result = append(result, digit)\n    }\n\
    \    return []interface{}{even_count, odd_count}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpb3c44qf6_test.go:19:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        if num%2 == 0 {\n            even++\n        } else {\n     \
    \       odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc\
    \ TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(7), expected: []interface{}{0, 1} },\n\
    \     { actual: candidate(-78), expected: []interface{}{1, 1} },\n     { actual:\
    \ candidate(3452), expected: []interface{}{2, 2} },\n     { actual: candidate(346211),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-345821), expected:\
    \ []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=4) %!s(int=2)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp9th1e22a_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evens := make([]int, 0)\n    odds := make([]int, 0)\n\
    \    for i := 0; i < 10; i++ {\n        if num%2 == 0 {\n            evens = append(evens,\
    \ i)\n        } else {\n            odds = append(odds, i)\n        }\n      \
    \  num /= 10\n    }\n    return []interface{}{evens, odds}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=0)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7)\
    \ %!s(int=8) %!s(int=9)] [%!s(int=1)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[[%!s(int=0) %!s(int=2) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)] [%!s(int=1) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=2) %!s(int=3) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=1) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=2) %!s(int=4) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=3) %!s(int=5)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[[%!s(int=1) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]\
    \ [%!s(int=0) %!s(int=2) %!s(int=3)]]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp5iolgaif_test.go:48: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[[%!s(int=0) %!s(int=1) %!s(int=2) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6)\
    \ %!s(int=7) %!s(int=8) %!s(int=9)] []]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := []int{}\n    for\
    \ num > 0 {\n        digits = append(digits, num%10)\n        num /= 10\n    }\n\
    \    for _, d := range digits {\n        if d%2 == 0 {\n            even++\n \
    \       } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    \n    switch\
    \ {\n    case num < 0:\n        return nil\n    case num == 0:\n        return\
    \ nil\n    case num % 2 == 0:\n        evenCount++\n    case num % 2 != 0:\n \
    \       oddCount++\n    }\n    \n    return []interface{}{evenCount, oddCount}\n\
    }\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpa62g7ot4_test.go:52: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__2 (0.00s)\n        tmpa62g7ot4_test.go:52:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL:\
    \ TestEven_Odd_Count/test_num__3 (0.00s)\n        tmpa62g7ot4_test.go:52: expected\
    \ '[%!s(int=3) %!s(int=3)]', got '[%!s(int=0) %!s(int=1)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpa62g7ot4_test.go:52: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__5 (0.00s)\n        tmpa62g7ot4_test.go:52:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpa62g7ot4_test.go:52: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[]'\n    --- FAIL: TestEven_Odd_Count/test_num__7 (0.00s)\n        tmpa62g7ot4_test.go:52:\
    \ expected '[%!s(int=1) %!s(int=0)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := []int{}\n    for\
    \ num > 0 {\n        digits = append(digits, num%10)\n        num /= 10\n    }\n\
    \    for _, d := range digits {\n        if d%2 == 0 {\n            even++\n \
    \       } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    count := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           even++\n        } else {\n            odd++\n        }\n        count++\n\
    \    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T)\
    \ {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(7),\
    \ expected: []interface{}{0, 1} },\n     { actual: candidate(-78), expected: []interface{}{1,\
    \ 1} },\n     { actual: candidate(3452), expected: []interface{}{2, 2} },\n  \
    \   { actual: candidate(346211), expected: []interface{}{3, 3} },\n     { actual:\
    \ candidate(-345821), expected: []interface{}{3, 3} },\n     { actual: candidate(-2),\
    \ expected: []interface{}{1, 0} },\n     { actual: candidate(-45347), expected:\
    \ []interface{}{2, 3} },\n     { actual: candidate(0), expected: []interface{}{1,\
    \ 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7imc2azh_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for num > 0 {\n        num\
    \ /= 10\n        even++\n    }\n    for num > 0 {\n        num /= 10\n       \
    \ odd++\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=1) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=4) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=6) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmpaur5_0wa_test.go:47: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    for i := 0; i < num; i++ {\n\
    \        if num % 2 == 0 {\n            even++\n        } else {\n           \
    \ odd++\n        }\n    }\n    return []interface{}{even, odd}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__0\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=0) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=7)]'\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__2\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=3452) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__3\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=346211)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp_oguksne_test.go:46: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 1
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits := []int{}\n    for\
    \ num > 0 {\n        digits = append(digits, num%10)\n        num /= 10\n    }\n\
    \    for _, d := range digits {\n        if d%2 == 0 {\n            even++\n \
    \       } else {\n            odd++\n        }\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestEven_Odd_Count (0.00s)\n    --- FAIL: TestEven_Odd_Count/test_num__1\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=1)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__4\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=3) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__5\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__6\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=2) %!s(int=3)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\n    --- FAIL: TestEven_Odd_Count/test_num__7\
    \ (0.00s)\n        tmp7jef880v_test.go:51: expected '[%!s(int=1) %!s(int=0)]',\
    \ got '[%!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074480
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    even, odd := 0, 0\n    digits, remainder := num, 0\n\
    \    for {\n        digits, remainder = divmod(digits, 10)\n        if remainder\
    \ == 0 {\n            break\n        }\n        even++\n    }\n    for {\n   \
    \     digits, remainder = divmod(digits, 10)\n        if remainder == 0 {\n  \
    \          break\n        }\n        odd++\n    }\n    return []interface{}{even,\
    \ odd}\n}\n\nfunc TestEven_Odd_Count(t *testing.T) {\n  candidate := even_odd_count\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(7), expected: []interface{}{0,\
    \ 1} },\n     { actual: candidate(-78), expected: []interface{}{1, 1} },\n   \
    \  { actual: candidate(3452), expected: []interface{}{2, 2} },\n     { actual:\
    \ candidate(346211), expected: []interface{}{3, 3} },\n     { actual: candidate(-345821),\
    \ expected: []interface{}{3, 3} },\n     { actual: candidate(-2), expected: []interface{}{1,\
    \ 0} },\n     { actual: candidate(-45347), expected: []interface{}{2, 3} },\n\
    \     { actual: candidate(0), expected: []interface{}{1, 0} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl8yk40xg_test.go:18:29: undefined: divmod

    /tmp/tmpl8yk40xg_test.go:25:29: undefined: divmod

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074485
- exit_code: 2
  program: "package even_odd_count_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Given an integer. return a tuple that has the number of even and odd digits\
    \ respectively.\n// Example:\n// >>> even_odd_count(-12)\n// []interface{}{1,\
    \ 1}\n// >>> even_odd_count(123)\n// []interface{}{1, 2}\nfunc even_odd_count(num\
    \ int) []interface{} {\n    evenCount := 0\n    oddCount := 0\n    for num > 0\
    \ {\n        digit, num := num % 10, num / 10\n        if digit % 2 == 0 {\n \
    \           evenCount++\n        } else {\n            oddCount++\n        }\n\
    \    }\n    return []interface{}{evenCount, oddCount}\n}\n\nfunc TestEven_Odd_Count(t\
    \ *testing.T) {\n  candidate := even_odd_count\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(7), expected: []interface{}{0, 1} },\n     { actual: candidate(-78),\
    \ expected: []interface{}{1, 1} },\n     { actual: candidate(3452), expected:\
    \ []interface{}{2, 2} },\n     { actual: candidate(346211), expected: []interface{}{3,\
    \ 3} },\n     { actual: candidate(-345821), expected: []interface{}{3, 3} },\n\
    \     { actual: candidate(-2), expected: []interface{}{1, 0} },\n     { actual:\
    \ candidate(-45347), expected: []interface{}{2, 3} },\n     { actual: candidate(0),\
    \ expected: []interface{}{1, 0} },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpkbiryc65_test.go:18:16: num declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074482

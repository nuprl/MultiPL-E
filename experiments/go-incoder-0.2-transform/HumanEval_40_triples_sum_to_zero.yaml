name: HumanEval_40_triples_sum_to_zero
language: go_test.go
prompt: "package triples_sum_to_zero_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
  \n)\n\n// triples_sum_to_zero takes a list of integers as an input.\n// it returns\
  \ True if there are three distinct elements in the list that\n// sum to zero, and\
  \ False otherwise.\n// >>> triples_sum_to_zero([]int{1, 3, 5, 0})\n// false\n//\
  \ >>> triples_sum_to_zero([]int{1, 3, -2, 1})\n// true\n// >>> triples_sum_to_zero([]int{1,\
  \ 2, 3, 7})\n// false\n// >>> triples_sum_to_zero([]int{2, 4, -5, 3, 9, 7})\n//\
  \ true\n// >>> triples_sum_to_zero([]int{1})\n// false\nfunc triples_sum_to_zero(l\
  \ []int) bool {\n"
tests: "func TestTriples_Sum_To_Zero(t *testing.T) {\n  candidate := triples_sum_to_zero\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate([]int{1, 3, 5, 0}), expected: false\
  \ },\n     { actual: candidate([]int{1, 3, 5, -1}), expected: false },\n     { actual:\
  \ candidate([]int{1, 3, -2, 1}), expected: true },\n     { actual: candidate([]int{1,\
  \ 2, 3, 7}), expected: false },\n     { actual: candidate([]int{1, 2, 5, 7}), expected:\
  \ false },\n     { actual: candidate([]int{2, 4, -5, 3, 9, 7}), expected: true },\n\
  \     { actual: candidate([]int{1}), expected: false },\n     { actual: candidate([]int{1,\
  \ 3, 5, -100}), expected: false },\n     { actual: candidate([]int{100, 3, 5, -100}),\
  \ expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n\
    \    return sum == 0\n}\n", "    sum := 0\n    for _, v := range l {\n       \
    \ sum += v\n    }\n    return sum == 0 || sum == -1\n}\n", "    if len(l) == 0\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    l :=\
    \ len(l)\n    sum := 0\n    for i := 0; i < l; i++ {\n        sum += l[i]\n  \
    \  }\n    if sum != 0 {\n        return false\n    }\n    sum := 0\n    for i\
    \ := 0; i < l; i++ {\n        sum += l[i]\n    }\n    if sum != 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for i := 0; i < l; i++ {\n        sum += l[i]\n\
    \    }\n    if sum != 0 {\n        return false\n    }\n    return true\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    l := len(l)\n    k := l - 1\n    for i := 0; i < l; i++ {\n\
    \        if l%2 == 0 {\n            if l%4 == 0 {\n                if l%8 == 0\
    \ {\n                    if l%16 == 0 {\n                        if l%32 == 0\
    \ {\n                            if l%64 == 0 {\n                            \
    \    return true\n                            }\n                        }\n \
    \                   }\n                }\n            }\n        }\n        k\
    \ /= 2\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    l := make(map[int]bool)\n    for _,\
    \ v := range l {\n        l[v] = true\n    }\n    for _, v := range l {\n    \
    \    if s == 0 {\n            return false\n        }\n        s -= v\n    }\n\
    \    return true\n}\n", "    if len(l) < 3 {\n        return false\n    }\n  \
    \  s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    for _, v := range l {\n        if v > 0 {\n\
    \            s -= v\n        }\n        if s == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    last := l[len(l)-1]\n\
    \    for _, v := range l {\n        if v != last {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range\
    \ l {\n        if v > 0 {\n            t += v\n        }\n    }\n    return t\
    \ == 0\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := make([]int, len(l))\n    for i := range t {\n       \
    \ t[i] = l[i]\n    }\n    for i := range t {\n        if i != 0 {\n          \
    \  t := t[:i]\n            t := append(t, 0)\n            t := append(t, t[i+1:]...)\n\
    \            if s == sum(t) {\n                return true\n            }\n  \
    \      }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v != 0 {\n            s -= v\n            if s == 0 {\n             \
    \   return true\n            }\n        }\n    }\n    return false\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    t := 0\n    for _, v := range l {\n        t += v\n        if t == 0\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n\
    \    for _, v := range l {\n        if sum == 0 {\n            return false\n\
    \        }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i\
    \ := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n    \
    \        if i == 3 {\n                return true\n            }\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) < 3 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l\
    \ {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i ==\
    \ 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n  \
    \  for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t > 0 {\n            return false\n        }\n    }\n    return true\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum < 0 {\n        return false\n\
    \    }\n    l := make([]int, len(l))\n    copy(l, l)\n    for i := 0; i < len(l);\
    \ i++ {\n        if l[i] == 0 {\n            l = append(l, 0)\n        }\n   \
    \ }\n    return len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    last, ok := l[len(l)-1]\n  \
    \  if !ok {\n        return false\n    }\n    lastSum := 0\n    for _, v := range\
    \ l {\n        lastSum += v\n        if lastSum == 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    l := make(map[int]bool)\n \
    \   for _, v := range l {\n        l[v] = true\n    }\n    for _, v := range l\
    \ {\n        if s == 0 {\n            return false\n        }\n        s -= v\n\
    \    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l\
    \ {\n        if v == 0 {\n            i++\n        }\n    }\n    return i == 3\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum < 0 {\n        return\
    \ false\n    }\n    sum /= 3\n    for _, v := range l {\n        if v != sum {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ sort.Ints(l)\n    i := 0\n    for _, v := range l {\n        if v != l[i] {\n\
    \            return false\n        }\n        i++\n    }\n    return true\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   for _, v := range l {\n        if v != 0 {\n            return false\n   \
    \     }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    sort.Ints(l)\n    i := 0\n \
    \   j := len(l) - 1\n    for i < j {\n        if l[i]+l[j] == 0 {\n          \
    \  i++\n            j--\n        } else {\n            if l[i]+l[j] > 0 {\n  \
    \              return false\n            }\n        }\n    }\n    return true\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 || sum == -1\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l\
    \ {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i ==\
    \ 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n   \
    \ for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    for _, v := range l {\n        if v > 0 {\n            s -=\
    \ v\n        }\n    }\n    return s == 0\n}\n", "    if len(l) < 3 {\n       \
    \ return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for\
    \ _, v := range l {\n        if v == 0 {\n            i++\n        }\n    }\n\
    \    return i == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    t := 0\n    for _, v := range l {\n        if\
    \ v > 0 {\n            t += v\n        }\n    }\n    if t == 0 {\n        return\
    \ false\n    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    s /= 3\n    for _, v := range l {\n\
    \        if v != s {\n            return false\n        }\n    }\n    return true\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _,\
    \ v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    sort.Ints(l)\n    for\
    \ _, v := range l {\n        if v != 0 {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 3\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    last := l[0]\n    for _, v := range l[1:] {\n   \
    \     if v != last {\n            return false\n        }\n        last = v\n\
    \    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    for _, v := range l {\n       \
    \ if v > 0 {\n            sum -= v\n        }\n        if sum < 0 {\n        \
    \    return false\n        }\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t := 0\n\
    \    for _, v := range l {\n        t += v\n    }\n    if t == 0 {\n        return\
    \ false\n    }\n    for _, v := range l {\n        if v != 0 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    n := len(l)\n    if n <\
    \ 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    s /= 3\n\
    \    i := 0\n    for ; i < n; i++ {\n        if l[i] == s {\n            i++\n\
    \            continue\n        }\n        if l[i] == -s {\n            i++\n \
    \           continue\n        }\n        if l[i] == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 || sum == len(l)\n}\n", "    sum := 0\n    for _, v := range l {\n    \
    \    sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) < 3 {\n      \
    \  return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum +=\
    \ v\n    }\n    return sum == 0\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    last1 := l[0]\n    last2 :=\
    \ l[1]\n    last3 := l[2]\n    if last1 == last2 && last1 == last3 {\n       \
    \ return true\n    }\n    if last2 == last1 && last2 == last3 {\n        return\
    \ true\n    }\n    if last3 == last1 && last3 == last2 {\n        return true\n\
    \    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range l {\n\
    \        t += v\n        if t > 0 {\n            return false\n        }\n   \
    \ }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 3\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    last := l[len(l)-1]\n    for\
    \ _, v := range l {\n        if v == last {\n            return false\n      \
    \  }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    m := 0\n    for _, v := range l {\n        if v > 0 {\n  \
    \          m += v\n        }\n    }\n    if m == 0 {\n        return false\n \
    \   }\n    return true\n}\n", "    sum := 0\n    for _, v := range l {\n     \
    \   sum += v\n    }\n    return sum == 0 || sum == -1\n}\n", "    if len(l) <\
    \ 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    last\
    \ := l[0]\n    for _, v := range l[1:] {\n        if v != last {\n           \
    \ return false\n        }\n        last = v\n    }\n    return true\n}\n", " \
    \   if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum < 0 {\n        return false\n\
    \    }\n    sum /= 3\n    for _, v := range l {\n        if v != sum {\n     \
    \       return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ last := l[0]\n    for _, v := range l[1:] {\n        if v != last {\n      \
    \      return false\n        }\n        last = v\n    }\n    return true\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 || sum == len(l)\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    t := make(map[int]bool)\n    for _, v\
    \ := range l {\n        if _, ok := t[v]; ok {\n            return false\n   \
    \     }\n        t[v] = true\n    }\n    return true\n}\n", "    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    t := 0\n    for _, v := range l {\n        if v == 0 {\n         \
    \   t += 1\n        }\n    }\n    return t == 3\n}\n", "    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0 || sum == -sum\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 && len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _,\
    \ v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    last := l[0]\n    for\
    \ _, v := range l[1:] {\n        if v != last {\n            return false\n  \
    \      }\n        last = v\n    }\n    return true\n}\n", "    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    return s == 0\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    for\
    \ _, v := range l {\n        sum -= v\n        if sum < 0 {\n            return\
    \ false\n        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    s := 0\n    for _, v := range l {\n        s +=\
    \ v\n    }\n    if s == 0 {\n        return false\n    }\n    s /= 3\n    for\
    \ _, v := range l {\n        if v != s {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    t := 0\n    for _, v := range l {\n  \
    \      t += v\n    }\n    if t == 0 {\n        return false\n    }\n    for _,\
    \ v := range l {\n        if v != 0 {\n            return false\n        }\n \
    \   }\n    return true\n}\n", "    s := 0\n    for _, v := range l {\n       \
    \ s += v\n    }\n    return s == 0\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0 && len(l) == 3\n}\n", "    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   t := 0\n    for _, v := range l {\n        t += v\n        if t == 0 {\n \
    \           return true\n        }\n    }\n    return false\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    l :=\
    \ make([]int, len(l))\n    for i, v := range l {\n        l[i] = v\n    }\n  \
    \  sort.Sort(l)\n    i := 0\n    j := len(l) - 1\n    for i < j {\n        if\
    \ l[i]+l[j] == 0 {\n            i++\n            j--\n        } else {\n     \
    \       if l[i]+l[j] > 0 {\n                return false\n            }\n    \
    \    }\n    }\n    return true\n}\n", "    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0 || sum == -1\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n    sum\
    \ /= 3\n    for _, v := range l {\n        if v != sum {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) < 3\
    \ {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    return sum == 0 && len(l) == 3\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t :=\
    \ 0\n    for _, v := range l {\n        t += v\n        if t == 0 {\n        \
    \    return true\n        }\n    }\n    return false\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    return i == 3\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    sum /= 3\n    for _,\
    \ v := range l {\n        if v != sum {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    sum := 0\n    for _, v := range l {\n    \
    \    sum += v\n    }\n    return sum == 0 && len(l) == 3\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    sort.Ints(l)\n\
    \    i := 0\n    j := len(l) - 1\n    for i < len(l) && j < len(l) {\n       \
    \ if l[i]+l[j] == 0 {\n            i++\n            j--\n        } else {\n  \
    \          i++\n        }\n    }\n    return i == len(l)\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    m :=\
    \ len(l)\n    n := len(l)\n    for i := m - 1; i >= 0; i-- {\n        if l[i]\
    \ != 0 {\n            n -= 1\n            if n == 0 {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n", "    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    sum /= 2\n    for _, v := range l {\n        if v > 0 {\n        \
    \    sum += v\n        }\n    }\n    if sum == 0 {\n        return true\n    }\n\
    \    return false\n}\n", "    if len(l) < 3 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum <\
    \ 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n  \
    \      if v != 0 {\n            i += v\n        }\n    }\n    return i == 3\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == 3\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ l := make([]int, len(l))\n    for i, v := range l {\n        l[i] = v - sum\n\
    \    }\n    return len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range l {\n\
    \        t += v\n    }\n    if t == 0 {\n        return true\n    }\n    if s\
    \ == t {\n        return false\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    s /= 3\n\
    \    if s == 0 {\n        return true\n    }\n    return false\n}\n", "    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0 && len(l) == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ < 0 {\n        return false\n    }\n    last, ok := l[len(l)-1]\n    if !ok\
    \ {\n        return false\n    }\n    lastSum := 0\n    for _, v := range l {\n\
    \        lastSum += v\n        if lastSum < 0 {\n            return false\n  \
    \      }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    m := len(l)\n    for i := 0;\
    \ i < m; i++ {\n        if l[i] == 0 {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    for\
    \ _, v := range l {\n        if sum == 0 {\n            return false\n       \
    \ }\n        sum -= v\n    }\n    return true\n}\n", "    if len(l) == 0 {\n \
    \       return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    l := make([]int,\
    \ len(l))\n    for i, v := range l {\n        l[i] = v\n    }\n    sort.Sort(l)\n\
    \    i := 0\n    j := len(l) - 1\n    k := 0\n    for i < j {\n        if l[i]+l[j]\
    \ == 0 {\n            k += 1\n            if k == 3 {\n                return\
    \ true\n            }\n        }\n        i++\n        j--\n    }\n    return\
    \ false\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == 3\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    j := len(l) - 1\n    for i < j {\n        if l[i]+l[j] == 0 {\n\
    \            return true\n        }\n        if l[i]+l[j] > 0 {\n            i++\n\
    \        } else {\n            j--\n        }\n    }\n    return false\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    for _, v := range l {\n        if v != 0 {\n            s -= v\n   \
    \         if s == 0 {\n                return true\n            }\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) < 3 {\n        return false\n \
    \   }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ > 0 {\n            s -= v\n        }\n    }\n    return s == 0\n}\n", "    if\
    \ len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0 || sum == -1\n}\n", "    if\
    \ len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum < 0 {\n        return false\n    }\n\
    \    for _, v := range l {\n        if sum == 0 {\n            return true\n \
    \       }\n        sum -= v\n    }\n    return false\n}\n", "    sum := 0\n  \
    \  for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    for\
    \ _, v := range l {\n        if v != 0 {\n            s -= v\n        }\n    \
    \    if s == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l) ==\
    \ 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n   \
    \ for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    for _, v := range l {\n        if v != 0 {\n            s\
    \ -= v\n        }\n        if s == 0 {\n            return true\n        }\n \
    \   }\n    return false\n}\n", "    if len(l) < 3 {\n        return false\n  \
    \  }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            return false\n        }\n    }\n    return true\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    m := 0\n    for _, v := range l {\n        if v > 0 {\n            m\
    \ += v\n        }\n    }\n    if m == 0 {\n        return false\n    }\n    return\
    \ true\n}\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n   \
    \ }\n    return sum == 0 && len(l) == 3\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum < 0 {\n      \
    \  return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == 3\n}\n", "    sum\
    \ := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum ==\
    \ 0 && len(l) == 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ < 0 {\n        return false\n    }\n    l := make([]int, len(l))\n    for i\
    \ := range l {\n        l[i] = l[i] + sum\n    }\n    return len(l) == 3\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 || sum == 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n\
    \    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum\
    \ == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n\
    \        if v != 0 {\n            i += v\n        }\n    }\n    return i == 3\n\
    }\n", "    s := 0\n    for _, v := range l {\n        s += v\n    }\n    return\
    \ s == 0\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := make(map[int]bool)\n    for _, v := range l {\n     \
    \   t[v] = true\n    }\n    for _, v := range l {\n        if !t[v] {\n      \
    \      return false\n        }\n    }\n    return true\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    last :=\
    \ l[len(l)-1]\n    for _, v := range l {\n        if v != last {\n           \
    \ return false\n        }\n    }\n    return true\n}\n", "    if len(l) < 3 {\n\
    \        return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    i := 0\n    for\
    \ _, v := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n\
    \    return i == 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n\
    \    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    for _, v := range l {\n        if v != 0 {\n\
    \            s -= v\n        }\n        if s == 0 {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n  \
    \  return i == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    count := 0\n    for _, v := range l {\n\
    \        if v == 0 {\n            count++\n        }\n    }\n    return count\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n     \
    \   return false\n    }\n    i := 0\n    for _, v := range l {\n        if v !=\
    \ 0 {\n            i += v\n        }\n    }\n    return i == 3\n}\n", "    if\
    \ len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   for _, v := range l {\n        if v > 0 {\n            s -= v\n        }\n\
    \    }\n    return s == 0\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v == 0 {\n            i++\n            if i == 3 {\n       \
    \         return true\n            }\n        }\n    }\n    return false\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 || sum == len(l)\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ > 0 {\n            s -= v\n        }\n        if s == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum < 0 {\n        return false\n    }\n    i := 0\n   \
    \ for _, v := range l {\n        if v != 0 {\n            i += v\n        }\n\
    \    }\n    return i == 3\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range l {\n\
    \        t += v\n    }\n    if t == 0 {\n        return false\n    }\n    for\
    \ _, v := range l {\n        t -= v\n        if t != 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    l := make([]int, len(l))\n\
    \    for i, v := range l {\n        l[i] = v\n    }\n    sort.Sort(l)\n    i :=\
    \ 0\n    for _, v := range l {\n        if i == 0 || v != l[i-1] {\n         \
    \   i++\n            if i == 3 {\n                return true\n            }\n\
    \        }\n    }\n    return false\n}\n", "    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    return s == 0\n}\n", "    if len(l) == 0 {\n\
    \        return false\n    }\n    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    sort.Ints(l)\n\
    \    i := 0\n    for _, v := range l {\n        if v != l[i] {\n            return\
    \ false\n        }\n        i++\n    }\n    return true\n}\n", "    s := 0\n \
    \   for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    m := 0\n    for _, v := range l {\n        if v > 0 {\n  \
    \          m += v\n        }\n    }\n    return m == 0\n}\n", "    if len(l) <\
    \ 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n  \
    \      s += v\n    }\n    if s == 0 {\n        return false\n    }\n    for _,\
    \ v := range l {\n        if v > 0 {\n            s -= v\n        }\n    }\n \
    \   return s == 0\n}\n", "    if len(l) < 3 {\n        return false\n    }\n \
    \   s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    l := make(map[int]bool)\n    for _, v := range\
    \ l {\n        l[v] = true\n    }\n    for _, v := range l {\n        if v ==\
    \ true {\n            return false\n        }\n    }\n    return true\n}\n", " \
    \   if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v\
    \ := range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    l := len(l)\n    sum := 0\n    for i := 0; i < l; i++ {\n        sum\
    \ += l[i]\n        if sum == 0 {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(l) < 3 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum <\
    \ 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n  \
    \      if v != 0 {\n            i += v\n        }\n    }\n    return i == 3\n\
    }\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return\
    \ sum == 0 || sum == len(l)\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    if sum < 0 {\n      \
    \  return false\n    }\n    count := 0\n    for _, v := range l {\n        if\
    \ v == 0 {\n            count++\n        }\n    }\n    return count == 3\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    sum /= 3\n    for _, v := range l {\n        if v != sum {\n     \
    \       return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    i :=\
    \ 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n    \
    \    }\n    }\n    return i == 3\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    last := l[len(l)-1]\n    for\
    \ _, v := range l {\n        if v == last {\n            return false\n      \
    \  }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    s /= 3\n    for _, v := range l {\n\
    \        if v != s {\n            return false\n        }\n    }\n    return true\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum < 0 {\n        return\
    \ false\n    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n \
    \           i += v\n        }\n    }\n    return i == 3\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) < 3 {\n  \
    \      return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum < 0 {\n        return false\n    }\n    for _, v :=\
    \ range l {\n        sum -= v\n        if sum < 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    return sum == 0 || sum == -1\n}\n", "    if\
    \ len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    last, ok := l[len(l)-1]\n    if !ok {\n        return false\n    }\n    lastSum\
    \ := 0\n    for _, v := range l {\n        lastSum += v\n        if lastSum ==\
    \ 0 {\n            return false\n        }\n    }\n    return true\n}\n", "  \
    \  if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == 3\n}\n", "    if len(l) < 3 {\n\
    \        return false\n    }\n    s := 0\n    for _, v := range l {\n        s\
    \ += v\n    }\n    if s == 0 {\n        return false\n    }\n    i := 0\n    for\
    \ _, v := range l {\n        if v != 0 {\n            i += v\n        }\n    }\n\
    \    if i == 3 {\n        return true\n    }\n    return false\n}\n", "    if\
    \ len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range\
    \ l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n\
    \    i := 0\n    j := len(l) - 1\n    for i < j {\n        if l[i]+l[j] == 0 {\n\
    \            i++\n            j--\n        } else {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    return sum == 0\n}\n", "    sum := 0\n    for _, v := range l {\n  \
    \      sum += v\n    }\n    return sum == 0 && len(l) == 3\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t :=\
    \ 0\n    for _, v := range l {\n        t += v\n    }\n    if t == 0 {\n     \
    \   return false\n    }\n    for _, v := range l {\n        if v != 0 {\n    \
    \        return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range l {\n\
    \        s += v\n    }\n    if s == 0 {\n        return false\n    }\n    t :=\
    \ make(map[int]bool)\n    for _, v := range l {\n        if _, ok := t[v]; !ok\
    \ {\n            t[v] = true\n        }\n    }\n    return len(t) == 3\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n  \
    \  }\n    l := make([]int, len(l))\n    for i, v := range l {\n        l[i] =\
    \ v\n    }\n    sort.Ints(l)\n    i := 0\n    for _, v := range l {\n        if\
    \ i == 0 || v != l[i-1] {\n            i++\n            if i == 3 {\n        \
    \        return true\n            }\n        }\n    }\n    return false\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum < 0 {\n        return false\n\
    \    }\n    i := 0\n    for _, v := range l {\n        if v != 0 {\n         \
    \   i += v\n        }\n    }\n    return i == 3\n}\n", "    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0 && len(l) ==\
    \ 3\n}\n", "    s := 0\n    for _, v := range l {\n        s += v\n    }\n   \
    \ return s == 0\n}\n", "    if len(l) < 3 {\n        return false\n    }\n   \
    \ sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    i := 0\n    for _, v := range l {\n  \
    \      if v != 0 {\n            i++\n        }\n    }\n    return i == 3\n}\n",
  "    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 && len(l) == 3\n}\n", "    sum := 0\n    for _, v := range l {\n      \
    \  sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n    count\
    \ := 0\n    for _, v := range l {\n        if v == 0 {\n            count++\n\
    \        }\n    }\n    return count == 3\n}\n", "    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    return sum == 0 && len(l) == 3\n}\n",
  "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for _, v :=\
    \ range l {\n        sum += v\n    }\n    if sum == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if sum-v == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    if len(l) == 0 {\n    \
    \    return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n  \
    \  j := len(l) - 1\n    for i < j {\n        if l[i]+l[j] == 0 {\n           \
    \ i++\n            j--\n        } else {\n            return true\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) == 0 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    return i\
    \ == 3\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n\
    \    for _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   t := 0\n    for _, v := range l {\n        if v > 0 {\n            t += v\n\
    \        }\n    }\n    return t == 0\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    t := 0\n    for _, v := range\
    \ l {\n        t += v\n        if t == 0 {\n            return true\n        }\n\
    \    }\n    return false\n}\n", "    if len(l) < 3 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum < 0 {\n        return false\n    }\n    sum /= 3\n    for _, v := range\
    \ l {\n        if v != sum {\n            return false\n        }\n    }\n   \
    \ return true\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s\
    \ := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n  \
    \      return false\n    }\n    t := 0\n    for _, v := range l {\n        t +=\
    \ v\n        if t == 0 {\n            return true\n        }\n    }\n    return\
    \ false\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n\
    \    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    s /= 3\n    for _, v := range l {\n        if v != s {\n \
    \           return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ < 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v == 0 {\n            i++\n  \
    \      }\n    }\n    return i == 3\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    s /= 3\n    return s == 0\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    l := len(l)\n    i := 0\n    for i < l {\n        j := i + 1\n   \
    \     for j < l {\n            k := j + 1\n            for k < l {\n         \
    \       if l[j]+l[k]+l[i] != 0 {\n                    return false\n         \
    \       }\n                k++\n            }\n            j++\n        }\n  \
    \      i++\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v > 0 {\n            s -= v\n        }\n    }\n    return s == 0\n}\n",
  "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   for _, v := range l {\n        if v > 0 {\n            s -= v\n        }\n\
    \    }\n    return s == 0\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s\
    \ == 0 {\n        return false\n    }\n    for _, v := range l {\n        if v\
    \ > 0 {\n            s -= v\n        }\n        if s == 0 {\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    s := 0\n    for _, v :=\
    \ range l {\n        s += v\n    }\n    return s == 0\n}\n", "    if len(l) <\
    \ 3 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    return sum == 0\n}\n", "    if len(l) < 3 {\n  \
    \      return false\n    }\n    sum := 0\n    for _, v := range l {\n        sum\
    \ += v\n    }\n    if sum == 0 {\n        return false\n    }\n    last, ok :=\
    \ l[len(l)-1]\n    if !ok {\n        return false\n    }\n    last2, ok := l[len(l)-2]\n\
    \    if !ok {\n        return false\n    }\n    if last2 == last {\n        return\
    \ false\n    }\n    return true\n}\n", "    if len(l) < 3 {\n        return false\n\
    \    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n   \
    \ if sum < 0 {\n        return false\n    }\n    i := 0\n    for _, v := range\
    \ l {\n        if v != 0 {\n            i += v\n        }\n    }\n    if i ==\
    \ 3 {\n        return true\n    }\n    return false\n}\n", "    sum := 0\n   \
    \ for _, v := range l {\n        sum += v\n    }\n    return sum == 0 || sum ==\
    \ -1\n}\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n \
    \   for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return\
    \ false\n    }\n    t := 0\n    for _, v := range l {\n        t += v\n      \
    \  if t == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    if sum < 0 {\n        return\
    \ false\n    }\n    sum /= 3\n    if sum == 0 {\n        return true\n    }\n\
    \    return false\n}\n", "    if len(l) < 3 {\n        return false\n    }\n \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum ==\
    \ 0 {\n        return false\n    }\n    for _, v := range l {\n        if sum-v\
    \ == 0 {\n            return true\n        }\n    }\n    return false\n}\n", " \
    \   sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    return sum\
    \ == 0 || sum == -sum\n}\n", "    if len(l) < 3 {\n        return false\n    }\n\
    \    s := 0\n    for _, v := range l {\n        s += v\n    }\n    if s == 0 {\n\
    \        return false\n    }\n    for _, v := range l {\n        if v != 0 {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(l)\
    \ == 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ i := 0\n    for _, v := range l {\n        if v != 0 {\n            i += v\n\
    \        }\n    }\n    if i == 3 {\n        return true\n    }\n    return false\n\
    }\n", "    if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for\
    \ _, v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v > 0 {\n            s -= v\n  \
    \      }\n    }\n    return s == 0\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    s := 0\n    for _, v := range l {\n        s += v\n    }\n\
    \    if s == 0 {\n        return false\n    }\n    for _, v := range l {\n   \
    \     if v > 0 {\n            s -= v\n        }\n        if s == 0 {\n       \
    \     return true\n        }\n    }\n    return false\n}\n", "    if len(l) ==\
    \ 0 {\n        return false\n    }\n    sum := 0\n    for _, v := range l {\n\
    \        sum += v\n    }\n    if sum == 0 {\n        return false\n    }\n   \
    \ l := make([]int, len(l))\n    copy(l, l)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n  \
    \  l := append(l, 0)\n    l := append(l, 0)\n    l := append(l, 0)\n    l := append(l,\
    \ 0)\n    l ", "    if len(l) == 0 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    l := len(l)\n    sum := 0\n    for i := 0; i\
    \ < l; i++ {\n        sum += l[i]\n        if sum == 0 {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(l) == 0 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum == 0 {\n        return false\n    }\n    i := 0\n    for _, v\
    \ := range l {\n        if v == 0 {\n            i++\n            if i == 3 {\n\
    \                return true\n            }\n        }\n    }\n    return false\n\
    }\n", "    s := 0\n    for _, v := range l {\n        s += v\n    }\n    return\
    \ s == 0\n}\n", "    if len(l) < 3 {\n        return false\n    }\n    sum :=\
    \ 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum == 0 {\n \
    \       return false\n    }\n    sum /= 3\n    for _, v := range l {\n       \
    \ if v != sum {\n            return false\n        }\n    }\n    return true\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    sum := 0\n    for\
    \ _, v := range l {\n        sum += v\n    }\n    return sum == 0\n}\n", "   \
    \ if len(l) == 0 {\n        return false\n    }\n    s := 0\n    for _, v := range\
    \ l {\n        s += v\n    }\n    if s == 0 {\n        return false\n    }\n \
    \   t := 0\n    for _, v := range l {\n        if v > 0 {\n            t += v\n\
    \        }\n    }\n    if t == 0 {\n        return false\n    }\n    return true\n\
    }\n", "    if len(l) < 3 {\n        return false\n    }\n    s := 0\n    for _,\
    \ v := range l {\n        s += v\n    }\n    if s == 0 {\n        return false\n\
    \    }\n    for _, v := range l {\n        if v != 0 {\n            s -= v\n \
    \       }\n    }\n    return s == 0\n}\n", "    if len(l) < 3 {\n        return\
    \ false\n    }\n    sum := 0\n    for _, v := range l {\n        sum += v\n  \
    \  }\n    if sum < 0 {\n        return false\n    }\n    sum /= 3\n    for _,\
    \ v := range l {\n        if v != sum {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    if len(l) == 0 {\n        return false\n \
    \   }\n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if\
    \ sum == 0 {\n        return false\n    }\n    sort.Ints(l)\n    i := 0\n    j\
    \ := len(l)-1\n    for i < j {\n        if l[i]+l[j] == 0 {\n            i++\n\
    \            j--\n        } else {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(l) < 3 {\n        return false\n    }\n  \
    \  sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    if sum <\
    \ 0 {\n        return false\n    }\n    sum /= 3\n    for _, v := range l {\n\
    \        if v != sum {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    sum := 0\n    for _, v := range l {\n        sum += v\n   \
    \ }\n    return sum == 0 && len(l) == 3\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_39_prime_fib
language: go_test.go
prompt: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
  // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n// 5\n\
  // >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n int) int\
  \ {\n"
tests: "func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
  \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
  \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
  \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n\
  \     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9), expected:\
  \ 514229 },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor\
  \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return\
    \ 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n    sum := 1\n\
    \    for i <= n {\n        sum += i\n        if sum > n {\n            sum = 1\n\
    \        }\n        i += 2\n    }\n    return sum\n}\n", "    if n < 2 {\n   \
    \     return n\n    }\n\n    if n == 2 {\n        return 2\n    }\n\n    if n\
    \ == 3 {\n        return 5\n    }\n\n    x := prime_fib(n - 1)\n    y := prime_fib(n\
    \ - 2)\n\n    if x == y {\n        return x\n    }\n\n    return x + y\n}\n",
  "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n        return 1\n  \
    \  }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n        return\
    \ 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n == 6 {\n      \
    \  return 8\n    }\n    if n == 7 {\n        return 13\n    }\n    if n == 8 {\n\
    \        return 21\n    }\n    if n == 9 {\n        return 34\n    }\n    if n\
    \ == 10 {\n        return 55\n    }\n    if n == 11 {\n        return 89\n   \
    \ }\n    if n == 12 {\n        return 144\n    }\n    if n == 13 {\n        return\
    \ 233\n    }\n    if n == 14 {\n        return 377\n    }\n    if n == 15 {\n\
    \        return 610\n    }\n    if n == 16 {\n        return 987\n    }\n    if\
    \ n == 17 {\n        return 1597\n    }\n    if n == 18 {\n        return 2584\n\
    \    }\n    if n == 19 {\n        return 4181\n    }\n    if n == 20 {\n     \
    \   return 6765\n    }\n    if n == 21 {\n        return 10946\n    }\n    if\
    \ n == 22 {\n        return 17711\n    }\n    if n == 23 {\n        return 28657\n\
    \    }\n    if n == 24 {\n        return 46368\n    }\n    if n == 25 {\n    \
    \    return 75025\n    }\n    if n == 26 {\n        return 121393\n    }\n   \
    \ if n == 27 {\n        return 196418\n    }\n    if n == 28 {\n        return\
    \ 317811\n    }\n    if n == 29 {\n        return 514229\n    }\n    if n == 30\
    \ {\n        return 765366\n    }\n    if n == 31 {\n        return 1199231\n\
    \    }\n    if n == 32 {\n        return 1655801\n    }\n    if n == 33 {\n  \
    \      return 2109448\n    }\n    if n == 34 {\n        return 2649521\n    }\n\
    \    if n == 35 {\n        return 4056369\n    }\n    if n == 36 {\n        return\
    \ 5527930\n    }\n    if n == 37 {\n        return 8053057\n    }\n    if n ==\
    \ 38 {\n        return 12676502\n    }\n    if n == 39 {\n        return 19105985\n\
    \    }\n    if n == 40 {\n        return 25402000\n    }\n    if n == 41 {\n \
    \       return 40763560\n    }\n    if n == 42 {\n        return 58717990\n  \
    \  }\n    if n == 43 {\n        return 76258251\n    }\n    if n == 44 {\n   \
    \     return 103966386\n    }\n    if n == 45 {\n        return 137438697\n  \
    \  }\n    if n == 46 {\n        return ", "    if n < 2 {\n        return n\n\
    \    }\n\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        if a > b {\n\
    \            return a\n        }\n        a, b = b, a+b\n    }\n    return a\n\
    }\n", "    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for i :=\
    \ 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n", "    switch\
    \ {\n    case n < 2:\n        return n\n    case n == 2:\n        return 1\n \
    \   case n == 3:\n        return 2\n    }\n    x := prime_fib(n - 2)\n    y :=\
    \ prime_fib(n - 1)\n    return x + y\n}\n", "    if n < 2 {\n        return n\n\
    \    }\n    a, b := 0, 1\n    for i := 2; i <= n; i++ {\n        if a > b {\n\
    \            a, b = b, a+b\n        } else {\n            a, b = b, a\n      \
    \  }\n    }\n    return b\n}\n", "    if n < 2 {\n        return n\n    }\n\n\
    \    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\
    \    return a\n}\n", "    if n < 2 {\n        return n\n    }\n    if n == 2 {\n\
    \        return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n ==\
    \ 4 {\n        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n \
    \   i := 2\n    j := 3\n    sum := 0\n    for {\n        if j > n {\n        \
    \    break\n        }\n        sum += j\n        i += j\n        j = i\n    }\n\
    \    return sum\n}\n", "    if n < 2 {\n        return n\n    }\n    if n == 2\
    \ {\n        return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if\
    \ n == 4 {\n        return 13\n    }\n    if n == 5 {\n        return 89\n   \
    \ }\n    n -= 2\n    a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b\
    \ = b, a+b\n    }\n    return a\n}\n", "    if n < 2 {\n        return n\n   \
    \ }\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        if a > b {\n    \
    \        return a\n        }\n        a, b = b, a+b\n    }\n    return a\n}\n",
  "    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for i := 2; i <\
    \ n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n", "    if n < 2 {\n\
    \        return n\n    }\n    a, b := 0, 1\n    for i := 2; i <= n; i++ {\n  \
    \      if a > b {\n            return i\n        }\n        a, b = b, a+b\n  \
    \  }\n    return n\n}\n", "    if n < 2 {\n        return n\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    if n == 3 {\n        return 2\n    }\n   \
    \ if n == 4 {\n        return 3\n    }\n    if n == 5 {\n        return 5\n  \
    \  }\n    if n == 6 {\n        return 8\n    }\n    if n == 7 {\n        return\
    \ 13\n    }\n    if n == 8 {\n        return 21\n    }\n    if n == 9 {\n    \
    \    return 34\n    }\n    if n == 10 {\n        return 55\n    }\n    if n ==\
    \ 11 {\n        return 89\n    }\n    if n == 12 {\n        return 144\n    }\n\
    \    if n == 13 {\n        return 233\n    }\n    if n == 14 {\n        return\
    \ 377\n    }\n    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n\
    \        return 987\n    }\n    if n == 17 {\n        return 1597\n    }\n   \
    \ if n == 18 {\n        return 2584\n    }\n    if n == 19 {\n        return 4181\n\
    \    }\n    if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n     \
    \   return 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if\
    \ n == 23 {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n\
    \    }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n    \
    \    return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n  \
    \  if n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return\
    \ 514229\n    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31\
    \ {\n        return 1199231\n    }\n    if n == 32 {\n        return 1655801\n\
    \    }\n    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n  \
    \      return 2865771\n    }\n    if n == 35 {\n        return 3654739\n    }\n\
    \    if n == 36 {\n        return 5142293\n    }\n    if n == 37 {\n        return\
    \ 7014087\n    }\n    if n == 38 {\n        return 9186431\n    }\n    if n ==\
    \ 39 {\n        return 12000801\n    }\n    if n == 40 {\n        return 15095797\n\
    \    }\n    if n == 41 {\n        return 18197023\n    }\n    if n == 42 {\n \
    \       return 21377967\n    }\n    if n == 43 {\n        return 24258363\n  \
    \  }\n    if n == 44 {\n        return 27346637\n    }\n    if n == 45 {\n   \
    \     return 30450001\n    }\n    if n == 46 {\n        return 3554", "    if\
    \ n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for i := 2; i < n; i++\
    \ {\n        a, b = b, a+b\n    }\n    return a\n}\n", "    if n < 2 {\n     \
    \   return n\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    n -= 2\n    a, b := prime_fib(n-1), prime_fib(n-2)\n\
    \    return a+b\n}\n", "    if n < 2 {\n        return n\n    }\n    a, b := 0,\
    \ 1\n    for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n", "    a, b := 0, 1\n    for i := 0; i < n; i++ {\n        a, b = b, a+b\n\
    \    }\n    return a\n}\n", "    if n < 2 {\n        return n\n    }\n    if n\
    \ == 2 {\n        return 2\n    }\n    if n == 3 {\n        return 5\n    }\n\
    \    if n == 4 {\n        return 13\n    }\n    if n == 5 {\n        return 89\n\
    \    }\n    fibs := []int{1, 1, 2}\n    for i := 3; i <= n; i++ {\n        fibs\
    \ = append(fibs, fibs[len(fibs)-1]+fibs[len(fibs)-2])\n    }\n    return fibs[n]\n\
    }\n", "    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for i :=\
    \ 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n        } else\
    \ {\n            a, b = b, a\n        }\n    }\n    return b\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_94_skjkasdkd
language: go_test.go
prompt: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ You are given a list of integers.\n// You need to find the largest prime value\
  \ and return the sum of its digits.\n// Examples:\n// >>> skjkasdkd([]int{0, 3,\
  \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3})\n// 10\n//\
  \ >>> skjkasdkd([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1})\n\
  // 25\n// >>> skjkasdkd([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
  \ 32, 30, 1, 9, 3})\n// 13\n// >>> skjkasdkd([]int{0, 724, 32, 71, 99, 32, 6, 0,\
  \ 5, 91, 83, 0, 5, 6})\n// 11\n// >>> skjkasdkd([]int{0, 81, 12, 3, 1, 21})\n//\
  \ 3\n// >>> skjkasdkd([]int{0, 8, 1, 2, 1, 7})\n// 7\nfunc skjkasdkd(lst []int)\
  \ int {\n"
tests: "func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
  \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n   \
  \  { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
  \ 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71,\
  \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
  \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2,\
  \ 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n\
  \     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     {\
  \ actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc\
  \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    max := 0\n    for _, v := range lst {\n        if v > max {\n \
    \           max = v\n        }\n    }\n    if max < 2 {\n        return max\n\
    \    }\n    max += 2\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           max += v / max\n        }\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v%2 == 0 {\n            continue\n        }\n        max +=\
    \ v\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v\
    \ := range lst {\n        if v%prime == 0 {\n            prime++\n        }\n\
    \        if prime > max {\n            max = prime\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n\
    \        if v%max != 0 {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime\
    \ := 0\n    for _, v := range lst {\n        if v == 0 {\n            continue\n\
    \        }\n        for i := 2; i <= v/2; i++ {\n            if v%i == 0 {\n \
    \               prime++\n                if prime > max {\n                  \
    \  max = prime\n                }\n            }\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n\
    \        if v%max == 0 {\n            max += v\n        }\n    }\n    return max\n\
    }\n", "    max := lst[0]\n    max += lst[1]\n    for i := 2; i < len(lst); i++\
    \ {\n        if lst[i] > max {\n            max = lst[i]\n        }\n    }\n \
    \   return max\n}\n", "    max := lst[0]\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    max += lst[0]\n  \
    \  for _, v := range lst[1:] {\n        if v%max == 0 {\n            max += v\n\
    \        } else {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    prime := 0\n    for _, v := range lst {\n    \
    \    if v%2 == 0 {\n            prime++\n        }\n        if prime > max {\n\
    \            max = prime\n        }\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v == max {\n            sum +=\
    \ int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v\
    \ := range lst {\n        if v%2 == 0 {\n            continue\n        }\n   \
    \     for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n               \
    \ break\n            }\n        }\n        if i == v/2 {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            max += v%prime\n\
    \        }\n        prime++\n    }\n    return max\n}\n", "    max := 0\n    prime\
    \ := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range\
    \ lst {\n        if v%prime == 0 {\n            prime++\n        }\n        if\
    \ prime > max {\n            max = prime\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    max := lst[0]\n    sum := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        } else {\n            prime = 2\n     \
    \   }\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n\
    \    }\n    return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v%max ==\
    \ 0 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := lst[0]\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n\
    \    }\n    return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range\
    \ lst {\n        if v%prime == 0 {\n            max += v%prime\n        }\n  \
    \      prime *= prime\n    }\n    return max\n}\n", "    max := 0\n    max +=\
    \ lst[0]\n    for _, v := range lst[1:] {\n        if v%max == 0 {\n         \
    \   max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime\
    \ := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        } else {\n            prime = 2\n        }\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n  \
    \  max += lst[0]\n    for _, v := range lst[1:] {\n        if v%max == 0 {\n \
    \           max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n\
    \    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n    \
    \        prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            max += v%prime\n\
    \        }\n        prime *= prime\n    }\n    return max\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=go,algorithm |>\n<code>\npackage main\n\nimport (\n    \"fmt\"\
    \n    \"math\"\n)\n", "    max := 0\n    prime := 0\n    for _, v := range lst\
    \ {\n        if v == 0 {\n            continue\n        }\n        if v%2 == 0\
    \ {\n            prime = 2\n        }\n        for i := 3; i <= int(v); i++ {\n\
    \            if v%i == 0 {\n                prime = 0\n                break\n\
    \            }\n        }\n        if prime == 0 {\n            prime = 1\n  \
    \      }\n        if prime > max {\n            max = prime\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range\
    \ lst[1:] {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n\
    \        if v%prime == 0 {\n            prime++\n        }\n        if prime >\
    \ max {\n            max = prime\n        }\n    }\n    return max\n}\n", "  \
    \  max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime ==\
    \ 0 {\n            prime++\n        }\n        if prime > max {\n            max\
    \ = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    prime := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            prime += v%max\n \
    \       }\n    }\n    return prime\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := lst[0]\n    for _, v := range lst {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _,\
    \ v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            max = v\n      \
    \      break\n        }\n        prime++\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            max += v%prime\n        }\n        prime *= prime\n    }\n    return\
    \ max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    var\
    \ maxPrime int\n    var sumDigits int\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            continue\n        }\n        for i := 3; i <= int(v/2);\
    \ i++ {\n            if v%i == 0 {\n                break\n            }\n   \
    \     }\n        if i == int(v/2) {\n            maxPrime = v\n            sumDigits\
    \ = 0\n            for i := 3; i <= int(v/2); i++ {\n                if v%i ==\
    \ 0 {\n                    sumDigits += int(i/2)\n                }\n        \
    \    }\n        }\n    }\n    return maxPrime + sumDigits\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v%2 == 0 {\n            max += v/2\n\
    \        } else {\n            max += v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    max += max/2\n    for _, v := range lst {\n     \
    \   if v%max == 0 {\n            max += max/2\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime++\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    var max int\n\
    \    var sum int\n    for _, v := range lst {\n        if v%2 == 0 {\n       \
    \     sum += v/2\n        } else {\n            sum += v\n        }\n        if\
    \ sum > max {\n            max = sum\n        }\n    }\n    return max\n}\n",
  "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n        \
    \    max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n  \
    \      if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n  \
    \  return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime *= prime\n    }\n\
    \    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime++\n    }\n    return\
    \ max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 0\n    for _, v := range lst {\n        if v%2 == 0 {\n \
    \           continue\n        }\n        max += v\n        prime = 1\n       \
    \ for i := 3; i <= max; i = i*2 {\n            if v%i == 0 {\n               \
    \ prime = 0\n                break\n            }\n        }\n        if prime\
    \ == 1 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v%max ==\
    \ 0 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    prime := 0\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n            prime = 1\n        } else if v == max {\n\
    \            prime++\n        }\n    }\n    return max * prime\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            max += v%prime\n        }\n        prime++\n    }\n    return max\n\
    }\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range\
    \ lst[1:] {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := 0\n    prime := 0\n    for _, v := range lst {\n\
    \        if v%2 == 0 {\n            continue\n        }\n        for i := 3; i\
    \ <= int(v/2); i++ {\n            if v%i == 0 {\n                break\n     \
    \       }\n        }\n        if i == int(v/2) {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max = v\n            break\n        }\n        if v%prime\
    \ > 0 {\n            prime++\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n  \
    \  for _, v := range lst[1:] {\n        if v > max {\n            max = v\n  \
    \      }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    var maxPrime int = 0\n    var sum int = 0\n\
    \    for _, v := range lst {\n        if v > maxPrime {\n            maxPrime\
    \ = v\n        }\n    }\n    for _, v := range lst {\n        if v%maxPrime ==\
    \ 0 {\n            sum += int(v / maxPrime)\n        }\n    }\n    return sum\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime\
    \ := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range\
    \ lst[1:] {\n        if v%max == 0 {\n            max += v\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            continue\n        }\n        max += v\n    }\n    return\
    \ max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            max = v\n            prime++\n        }\n\
    \    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range\
    \ lst {\n        if v%prime == 0 {\n            prime++\n        }\n        if\
    \ prime > max {\n            max = prime\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    max += max/2\n    for _, v := range lst {\n     \
    \   if v%max == 0 {\n            max += v / max\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := lst[0]\n\
    \    sum := 0\n    for _, v := range lst {\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    for _, v := range lst {\n        if v == max\
    \ {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            max += v%prime\n        }\n        prime++\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime++\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n\
    \        if v%max != 0 {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    max += max/2\n   \
    \ for _, v := range lst {\n        if v%max == 0 {\n            max += v / max\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            max += v%prime\n        }\n      \
    \  prime++\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:]\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    max\
    \ += lst[0]\n    for _, v := range lst[1:] {\n        if v%max == 0 {\n      \
    \      max += v\n        } else {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := 0\n    prime := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n            prime = 1\n        } else\
    \ if v%2 == 0 {\n            prime = 0\n        }\n    }\n    if prime == 1 {\n\
    \        return max\n    }\n    sum := 0\n    for _, v := range lst {\n      \
    \  if v%prime == 0 {\n            sum += int(v / prime)\n        }\n    }\n  \
    \  return sum\n}\n", "    max := lst[0]\n    for _, v := range lst {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _,\
    \ v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n", "    max := lst[0]\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n   \
    \ prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n       \
    \     prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n  \
    \  for _, v := range lst[1:] {\n        if v%max == 0 {\n            max += v\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n  \
    \  for _, v := range lst[1:] {\n        if v%max != 0 {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max := lst[0]\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max ==\
    \ 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 0 {\n            max = v\n          \
    \  continue\n        }\n        for i := 3; i <= max; i = i*2 {\n            if\
    \ v%i == 0 {\n                max = i\n                break\n            }\n\
    \        }\n        if max != 0 {\n            prime = max\n        }\n    }\n\
    \    return prime\n}\n", "    max := 0\n    prime := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n            prime = 1\n  \
    \      } else if v == max {\n            prime++\n        }\n    }\n    return\
    \ max * prime\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := lst[0]\n    for _, v := range lst {\n        if v > max {\n       \
    \     max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n \
    \       if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n \
    \   return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime\
    \ := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            max\
    \ += v%prime\n        }\n        prime *= prime\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime ==\
    \ 0 {\n            max += v%prime\n        } else {\n            prime++\n   \
    \     }\n    }\n    return max\n}\n", "    max := 0\n    prime := 0\n    for _,\
    \ v := range lst {\n        if v%2 == 0 {\n            prime++\n        }\n  \
    \      if prime > max {\n            max = prime\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v := range\
    \ lst {\n        if v == max {\n            sum += int(v)\n        }\n    }\n\
    \    return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        }\n        prime++\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            max += v\n       \
    \ }\n    }\n    return max\n}\n", "    var maxPrime int\n    var maxPrimeDigit\
    \ int\n    var maxPrimeDigitsCount int\n    var maxPrimeDigitsSumDigits int\n\
    \    var maxPrimeDigitsSumDigitsCount int\n    var maxPrimeDigitsSumDigitsCount2\
    \ int\n    var maxPrimeDigitsSumDigitsCount3 int\n    var maxPrimeDigitsSumDigitsCount4\
    \ int\n    var maxPrimeDigitsSumDigitsCount5 int\n    var maxPrimeDigitsSumDigitsCount6\
    \ int\n    var maxPrimeDigitsSumDigitsCount7 int\n    var maxPrimeDigitsSumDigitsCount8\
    \ int\n    var maxPrimeDigitsSumDigitsCount9 int\n    var maxPrimeDigitsSumDigitsCount10\
    \ int\n    var maxPrimeDigitsSumDigitsCount11 int\n    var maxPrimeDigitsSumDigitsCount12\
    \ int\n    var maxPrimeDigitsSumDigitsCount13 int\n    var maxPrimeDigitsSumDigitsCount14\
    \ int\n    var maxPrimeDigitsSumDigitsCount15 int\n    var maxPrimeDigitsSumDigitsCount16\
    \ int\n    var maxPrimeDigitsSumDigitsCount17 int\n    var maxPrimeDigitsSumDigitsCount18\
    \ int\n    var maxPrimeDigitsSumDigitsCount19 int\n    var maxPrimeDigitsSumDigitsCount20\
    \ int\n    var maxPrimeDigitsSumDigitsCount21 int\n    var maxPrimeDigitsSumDigitsCount22\
    \ int\n    var maxPrimeDigitsSumDigitsCount23 int\n    var maxPrimeDigitsSumDigitsCount24\
    \ int\n    var maxPrimeDigitsSumDigitsCount25 int\n    var maxPrimeDigitsSumDigitsCount26\
    \ int\n    var maxPrimeDigitsSumDigitsCount27 int\n    var maxPrimeDigitsSumDigitsCount28\
    \ int\n    var maxPrimeDigitsSumDigitsCount29 int\n    var maxPrimeDigitsSumDigitsCount30\
    \ int\n    var maxPrimeDigitsSumDigitsCount31 int\n    var maxPrimeDigitsSumDigitsCount32\
    \ int\n    var maxPrimeDigitsSumDigitsCount33 int\n    var maxPrimeDigitsSumDigitsCount34\
    \ int\n    var maxPrimeDigitsSumDigitsCount35 int\n    var maxPrimeDigitsSumDigitsCount36\
    \ int\n    var maxPrimeDigitsSumDigitsCount", "    var max int\n    var sum int\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n        \
    \    sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n\
    }\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n    \
    \    if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime ==\
    \ 0 {\n            prime++\n        }\n        if prime > max {\n            max\
    \ = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            max +=\
    \ v%prime\n        }\n        prime++\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n  \
    \  for _, v := range lst[1:] {\n        if v > max {\n            max = v\n  \
    \      }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        }\n        if prime\
    \ > max {\n            max = prime\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    prime := 0\n    for _, v := range lst {\n        if v%2 == 0\
    \ {\n            prime = prime*2 + 1\n        }\n        if prime > max {\n  \
    \          max = prime\n        }\n        prime = 0\n    }\n    return max\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=go |>\n<code>\npackage main\n\nimport\
    \ (\n    \"fmt\"\n    \"math\"\n)\n", "    max := 0\n    prime := 2\n    for _,\
    \ v := range lst {\n        if v%prime == 0 {\n            prime++\n        }\
    \ else {\n            prime = 2\n        }\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n\
    \    for _, v := range lst[1:] {\n        if v%max == 0 {\n            max +=\
    \ v\n        }\n    }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n\
    \    for _, v := range lst[1:] {\n        if v%max == 0 {\n            max +=\
    \ v\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n \
    \   for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range\
    \ lst[1:] {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    prime := 0\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n            prime\
    \ = 1\n        }\n        if v%prime == 0 {\n            sum += v%10\n       \
    \ }\n        prime++\n    }\n    return sum\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        } else {\n            prime = 2\n        }\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n  \
    \  for _, v := range lst {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0\
    \ {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    prime := 0\n    for _, v := range lst {\n        if v%2 == 0\
    \ {\n            continue\n        }\n        for i := 3; i <= v/2; i++ {\n  \
    \          if v%i == 0 {\n                break\n            }\n        }\n  \
    \      if i == v/2 {\n            prime++\n        }\n        if prime > max {\n\
    \            max = prime\n        }\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            max += v%prime\n        }\n        prime++\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 0\n    for _, v := range lst {\n        if v%2\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    var maxPrime int\n\
    \    var maxPrimeDigit int\n    var sumDigits int\n    for _, v := range lst {\n\
    \        if v%2 == 0 {\n            maxPrime = maxPrime + 1\n            maxPrimeDigit\
    \ = maxPrimeDigit\n            sumDigits = 0\n        } else {\n            if\
    \ maxPrimeDigit < v%10 {\n                maxPrimeDigit = v%10\n            }\n\
    \            sumDigits = sumDigits + v%10\n        }\n    }\n    return maxPrime\
    \ * maxPrimeDigit + sumDigits\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            max +=\
    \ v%prime\n        }\n        prime++\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n\
    }\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    prime :=\
    \ 2\n    for _, v := range lst {\n        if v%prime == 0 {\n            prime++\n\
    \        }\n        if prime > max {\n            max = prime\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range\
    \ lst {\n        if v%prime == 0 {\n            prime++\n        }\n        if\
    \ prime > max {\n            max = prime\n        }\n    }\n    return max\n}\n",
  "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n        \
    \    max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n  \
    \      if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n    \
    \    if v%prime == 0 {\n            prime++\n        }\n        if prime > max\
    \ {\n            max = prime\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n\
    \            prime++\n        }\n        if prime > max {\n            max = prime\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  } else {\n            prime = 2\n        }\n        if v > max {\n        \
    \    max = v\n        }\n    }\n    return max\n}\n", "    max := lst[0]\n   \
    \ for _, v := range lst {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n\
    \            sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "  \
    \  max := lst[0]\n    for _, v := range lst {\n        if v > max {\n        \
    \    max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n  \
    \      if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n  \
    \  return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        } else {\n      \
    \      prime = 2\n        }\n        if v > max {\n            max = v\n     \
    \   }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _,\
    \ v := range lst {\n        if v%prime == 0 {\n            prime++\n        }\n\
    \        if prime > max {\n            max = prime\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    if max%2 == 0 {\n        return max\n\
    \    }\n    max += 2\n    for _, v := range lst {\n        if v%2 == 0 {\n   \
    \         max += 2\n        }\n    }\n    return max\n}\n", "    max := lst[0]\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max ==\
    \ 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v%max ==\
    \ 0 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := lst[0]\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := lst[0]\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n    \
    \        sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "    var\
    \ maxPrime int\n    var maxPrimeDigit int\n    for _, v := range lst {\n     \
    \   if v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit = 0\n\
    \        }\n        for i := 0; i < len(strconv.Itoa(v)); i++ {\n            if\
    \ v%10 == 0 {\n                if v%maxPrime == 0 {\n                    maxPrime\
    \ = v\n                    maxPrimeDigit = i\n                    break\n    \
    \            }\n            }\n        }\n    }\n    return maxPrimeDigit + maxPrime\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n\
    \    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    if max%2 == 0 {\n    \
    \    return max\n    }\n    max += 2\n    for i := 2; i <= max; i++ {\n      \
    \  if lst[i] > max {\n            max = lst[i]\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            max += v%prime\n        } else {\n            prime++\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 0 {\n            prime++\n        }\n\
    \        if prime > max {\n            max = prime\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    prime := 0\n    for _, v := range lst {\n    \
    \    if v == 0 {\n            continue\n        }\n        for i := 2; i <= v/2;\
    \ i++ {\n            if v%i == 0 {\n                max = v\n                prime\
    \ = i\n                break\n            }\n        }\n    }\n    return max\
    \ * prime\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n\
    \        if v%prime == 0 {\n            prime++\n        }\n        if prime >\
    \ max {\n            max = prime\n        }\n    }\n    return max\n}\n", "  \
    \  max := lst[0]\n    for _, v := range lst {\n        if v > max {\n        \
    \    max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n  \
    \      if v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n  \
    \  return sum\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n    }\n    return max\n}\n", "    var\
    \ maxPrime int\n    var sumDigits int\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            maxPrime = v // prime number\n            sumDigits\
    \ = 0\n        }\n        for i := 3; i <= maxPrime; i++ {\n            if v%i\
    \ == 0 {\n                maxPrime = i\n                sumDigits += int(v / i)\n\
    \                break\n            }\n        }\n    }\n    return sumDigits\n\
    }\n", "    max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime\
    \ == 0 {\n            prime++\n        }\n        if prime > max {\n         \
    \   max = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    max\
    \ += lst[0]\n    for _, v := range lst[1:] {\n        if v%max != 0 {\n      \
    \      max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    max\
    \ += lst[0]\n    for _, v := range lst[1:] {\n        if v%max != 0 {\n      \
    \      max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "   \
    \ max := 0\n    prime := 2\n    for _, v := range lst {\n        if v%prime ==\
    \ 0 {\n            prime++\n        }\n        if prime > max {\n            max\
    \ = prime\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n        \
    \    sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max :=\
    \ 0\n    prime := 2\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n        if v%prime == 0 {\n            prime++\n \
    \       }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            prime++\n      \
    \  }\n        if prime > max {\n            max = prime\n        }\n    }\n  \
    \  return max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == max {\n            sum += int(v)\n        }\n \
    \   }\n    return sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v :=\
    \ range lst[1:] {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v := range lst\
    \ {\n        if v%prime == 0 {\n            prime++\n        } else {\n      \
    \      prime = 2\n        }\n        if v > max {\n            max = v\n     \
    \   }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _,\
    \ v := range lst {\n        if v%prime == 0 {\n            prime++\n        }\n\
    \        if prime > max {\n            max = prime\n        }\n    }\n    return\
    \ max\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

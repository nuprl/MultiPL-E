language: go_test.go
name: HumanEval_62_derivative
results:
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj59j5cwx_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj59j5cwx_test.go:34\
    \ +0x6ff\ntesting.tRunner(0xc0001036c0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n   \
    \     d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpb681b25v_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpb681b25v_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    d[0] =\
    \ xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-2]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpoyn7ghps_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpoyn7ghps_test.go:34\
    \ +0xa8\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var ds []int\n\
    \    for i := 0; i < len(xs); i++ {\n        ds = append(ds, xs[i+1]-xs[i])\n\
    \    }\n    return ds\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpg6nim95m_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpg6nim95m_test.go:30\
    \ +0x9df\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpm9px0_h0_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i+1]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplorp6g0p_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplorp6g0p_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = 1\n    for i := 0; i < n; i++ {\n     \
    \   d[i+1] = xs[i] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[]', got '[%!s(int=0) %!s(int=0)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    for i := range xs {\n        result[i] = xs[i+1] - xs[i]\n   \
    \ }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp52fwjcub_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp52fwjcub_test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000cc680, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n   \
    \     d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpb681b25v_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpb681b25v_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return []int{}\n    }\n    result := make([]int, n)\n\
    \    result[0] = xs[1]\n    for i := 2; i < n; i++ {\n        result[i] = result[i-1]\
    \ * xs[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp8dly5ld1_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp8dly5ld1_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp8dly5ld1_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp8dly5ld1_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[1]\n    for i := 2; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6_96i2z1_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6_96i2z1_test.go:36\
    \ +0x212\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    derivative := make([]int, len(xs))\n\
    \    derivative[0] = xs[1]\n    for i := 2; i < len(xs); i++ {\n        derivative[i]\
    \ = xs[i] - derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmph05b56en_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmph05b56en_test.go:38\
    \ +0x1ff\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = 1\n    for i := 0; i < n; i++ {\n     \
    \   d[i+1] = xs[i] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[]', got '[%!s(int=0) %!s(int=0)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    n := len(xs) - 1\n    result := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n\
    \    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjm37ywb__test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjm37ywb__test.go:44: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpjm37ywb__test.go:44: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpjm37ywb__test.go:44: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    d := make([]int, len(xs))\n    d[0] = xs[0]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmplsc4v668_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmplsc4v668_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmplsc4v668_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmplsc4v668_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmplsc4v668_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    x := xs[0]\n    y := xs[1]\n    z :=\
    \ xs[2]\n    d := []int{y, z, 1}\n    for i := 3; i < len(xs); i++ {\n       \
    \ d := []int{d[0]*x, d[1]*x, d[2]*x + d[i]}\n        x = d[2]\n        y = d[1]\n\
    \        z = d[0]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [3] with length 3 [recovered]\n\tpanic: runtime error: index out of range [3]\
    \ with length 3\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513760,\
    \ 0xc000014378})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513760, 0xc000014378})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative({0xc00007e620?, 0x5, 0xc00007e5f0?})\n\
    \t/tmp/tmps2fy76uf_test.go:24 +0xa5\ncommand-line-arguments_test.TestDerivative(0x0?)\n\
    \t/tmp/tmps2fy76uf_test.go:39 +0xa8\ntesting.tRunner(0xc0000da1a0, 0x529080)\n\
    \t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439 +0x102\ncreated\
    \ by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    derivative := make([]int, len(xs))\n\
    \    derivative[0] = xs[0]\n    for i := 1; i < len(xs); i++ {\n        derivative[i]\
    \ = xs[i] - derivative[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpkr44nhxz_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=4) %!s(int=0) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpkr44nhxz_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpkr44nhxz_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpkr44nhxz_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=2) %!s(int=-2) %!s(int=6)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpkr44nhxz_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative := append(derivative, 1) // first derivative\
    \ is 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp50ckghlo_test.go:17:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073962
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return nil\n    }\n    result := make([]int, n+1)\n \
    \   result[0] = xs[1]\n    for i := 1; i < n; i++ {\n        result[i] = result[i-1]\
    \ * xs[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmppaqdhrux_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=1) %!s(int=2) %!s(int=8) %!s(int=40)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmppaqdhrux_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=4) %!s(int=12)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmppaqdhrux_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=4) %!s(int=4) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmppaqdhrux_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=4) %!s(int=4) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    result := make([]int, len(xs))\n    copy(result,\
    \ xs)\n    result[len(xs)-1] = 1\n    for i := len(xs)-2; i >= 0; i-- {\n    \
    \    result[i] = result[i+1] * result[i]\n    }\n    return result\n}\n\nfunc\
    \ TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp_4d__iyx_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=24) %!s(int=8) %!s(int=8) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp_4d__iyx_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp_4d__iyx_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=6) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp_4d__iyx_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp_4d__iyx_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        result[i] = xs[i]\n  \
    \  }\n    for i := 1; i < len(xs); i++ {\n        result[i] = result[i-1] * xs[i]\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpmbcww6wa_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpmbcww6wa_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpmbcww6wa_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpmbcww6wa_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpmbcww6wa_test.go:43: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpldhpby3f_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpldhpby3f_test.go:31\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] = d[i] * xs[i+1]\n   \
    \ }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpdfkcadbo_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpdfkcadbo_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n\n    n := len(xs) - 1\n    result := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n\
    \    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmptkodb_ye_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmptkodb_ye_test.go:45: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmptkodb_ye_test.go:45: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmptkodb_ye_test.go:45: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[0]\n    for i := 1; i < len(xs); i++ {\n        d[i]\
    \ = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i]\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3izpy8am_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3izpy8am_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    result := make([]int, len(xs))\n   \
    \ copy(result, xs)\n    result[len(xs)-1] = 1\n    for i := len(xs)-2; i >= 0;\
    \ i-- {\n        result[i] *= result[i+1]\n    }\n    return result\n}\n\nfunc\
    \ TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20}\
    \ },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n   \
    \  { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n     { actual:\
    \ candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16} },\n     { actual:\
    \ candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmptsmncmvn_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=24) %!s(int=8) %!s(int=8) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmptsmncmvn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmptsmncmvn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=6) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmptsmncmvn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmptsmncmvn_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n   \
    \     d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpb681b25v_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpb681b25v_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    result := make([]int, n)\n    for i := 0; i < n; i++ {\n        result[i]\
    \ = xs[i]\n    }\n    for i := n - 1; i >= 0; i-- {\n        result[i] *= xs[i+1]\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpv1fmgj8i_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpv1fmgj8i_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs)-1; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpz7qd0j0t_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i+1]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplorp6g0p_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplorp6g0p_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result = append(result, xs[i] - xs[i+1])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpmcv12stp_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpmcv12stp_test.go:30\
    \ +0x9c5\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for _, x := range xs {\n        result = append(result, x*x)\n    }\n   \
    \ return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpnbdy9zzm_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpnbdy9zzm_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpnbdy9zzm_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpnbdy9zzm_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpnbdy9zzm_test.go:40: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073863
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    d := make([]int, len(xs)-1)\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_ijgi1p2_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_ijgi1p2_test.go:34\
    \ +0x612\ntesting.tRunner(0xc0000da1a0, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n   \
    \     d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpb681b25v_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpb681b25v_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs); i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n   \
    \ return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpws6tl2p1_test.go:21\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpws6tl2p1_test.go:33\
    \ +0x666\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    d := make([]int, len(xs))\n    d[0]\
    \ = xs[0]\n    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpclhp6ek4_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpclhp6ek4_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpclhp6ek4_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpclhp6ek4_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpclhp6ek4_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = 1\n    for i := 0; i < n; i++ {\n     \
    \   d[i+1] = d[i]*xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpwqbjtxu7_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpwqbjtxu7_test.go:42: expected '[]', got '[%!s(int=0) %!s(int=0)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    x := xs[0]\n    y := 0\n    result :=\
    \ []int{}\n    for _, v := range xs {\n        y += v\n        result = append(result,\
    \ y)\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwyuc371c_test.go:19:5: x declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073962
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result = append(result, xs[i+1]-xs[i])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpwfjppvme_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpwfjppvme_test.go:30\
    \ +0x9c5\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs)-1; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpz7qd0j0t_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var ds []int\n\
    \    for i := 0; i < len(xs); i++ {\n        ds = append(ds, xs[i])\n    }\n \
    \   return ds\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp5y6g2qrp_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=1) %!s(int=2) %!s(int=4) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp5y6g2qrp_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=3)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp5y6g2qrp_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp5y6g2qrp_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=2) %!s(int=1) %!s(int=0) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp5y6g2qrp_test.go:40: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[1]\n    for i := 1; i < len(xs); i++ {\n        d[i]\
    \ = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9gels94g_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9gels94g_test.go:35\
    \ +0x1ff\ntesting.tRunner(0xc000103860, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return nil\n    }\n    d := make([]int, n-1)\n    d[0]\
    \ = xs[1]\n    for i := 0; i < n-1; i++ {\n        d[i+1] = xs[i+1] * d[i]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplxyrqinq_test.go:23\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplxyrqinq_test.go:35\
    \ +0x632\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073964
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative := append(derivative, 1)\n    for i :=\
    \ 2; i < len(xs); i++ {\n        derivative[i] = derivative[i-1] * xs[i] - xs[i-1]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmhvxx64__test.go:17:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073964
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = 1\n    for i := 0; i < n; i++ {\n     \
    \   d[i+1] = d[i]*xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpwqbjtxu7_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpwqbjtxu7_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpwqbjtxu7_test.go:42: expected '[]', got '[%!s(int=0) %!s(int=0)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs)+1)\n    d[0] = xs[0]\n    for i := 0; i < len(xs); i++ {\n        d[i+1]\
    \ = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj6ziel89_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj6ziel89_test.go:31\
    \ +0x6ac\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.011s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i+1]\n\
    \    }\n    for i := n - 2; i >= 0; i-- {\n        d[i+1] += d[i] * xs[i]\n  \
    \  }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 4 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpqi8s779g_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpqi8s779g_test.go:34\
    \ +0x6ec\ntesting.tRunner(0xc0000e0340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    d := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - xs[i]\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpwkmj95x3_test.go:21\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpwkmj95x3_test.go:33\
    \ +0x2a5\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    result := make([]int, len(xs))\n    result\
    \ := append(result, 1)\n    for i := 1; i < len(xs); i++ {\n        result[i]\
    \ = result[i-1] * xs[i] - xs[i-1]\n    }\n    return result\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp256vgm5k_test.go:20:12: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n   \
    \     d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpb681b25v_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpb681b25v_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative[0] = xs[1]\n    for i := 1; i < len(xs);\
    \ i++ {\n        derivative[i] = xs[i] - derivative[i-1]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9n1y11a4_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9n1y11a4_test.go:35\
    \ +0x1ff\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073863
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[1]\n    for i := 2; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6_96i2z1_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6_96i2z1_test.go:36\
    \ +0x212\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return []int{}\n    }\n    d := make([]int, n+1)\n  \
    \  d[n] = 1\n    for i := 0; i < n; i++ {\n        d[i+1] = d[i] * xs[i]\n   \
    \ }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp_zg0v1mn_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp_zg0v1mn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp_zg0v1mn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp_zg0v1mn_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return nil\n    }\n    d := make([]int, n+1)\n    d[n]\
    \ = 1\n    for i := 2; i <= n; i++ {\n        d[i] = d[i-1] * xs[i-1]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp34_he91p_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp34_he91p_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp34_he91p_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp34_he91p_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs))\n    result\
    \ := append(result, 1)\n    for i := 2; i < len(xs); i++ {\n        result[i]\
    \ = result[i-1] * xs[i-1]\n    }\n    return result\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_h2efph1_test.go:20:12: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i]\
    \ = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp53xhc9g1_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp53xhc9g1_test.go:35\
    \ +0x212\ntesting.tRunner(0xc00019b380, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073865
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    i := 0\n    for _, x := range xs {\n        result[i] = x\n  \
    \      i += 2\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [6] with length 5 [recovered]\n\tpanic: runtime error: index out of range [6]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp36w3gmr9_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp36w3gmr9_test.go:32\
    \ +0x66c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative[0] = xs[1]\n    for i := 1; i < len(xs);\
    \ i++ {\n        derivative[i] = xs[i] - derivative[i-1]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9n1y11a4_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9n1y11a4_test.go:35\
    \ +0x1ff\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073863
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj59j5cwx_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj59j5cwx_test.go:34\
    \ +0x6ff\ntesting.tRunner(0xc0001036c0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    n := len(xs)\n    d := make([]int, n)\n\
    \    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmptdfdkc29_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmptdfdkc29_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmptdfdkc29_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmptdfdkc29_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmptdfdkc29_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    d[0] =\
    \ xs[1]\n    for i := 1; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmptwqaw0fw_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmptwqaw0fw_test.go:34\
    \ +0x632\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs); i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n   \
    \ return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpws6tl2p1_test.go:21\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpws6tl2p1_test.go:33\
    \ +0x666\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpm9px0_h0_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpm9px0_h0_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n == 0 {\n        return []int{}\n    }\n    d := make([]int, n)\n   \
    \ d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp7gnaow5t_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp7gnaow5t_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp7gnaow5t_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp7gnaow5t_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp7gnaow5t_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    d := make([]int, len(xs))\n    d[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpx3p39huj_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpx3p39huj_test.go:38\
    \ +0x1ff\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj59j5cwx_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj59j5cwx_test.go:34\
    \ +0x6ff\ntesting.tRunner(0xc0001036c0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i]\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3izpy8am_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=9) %!s(int=1) %!s(int=4) %!s(int=16) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=4) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=9) %!s(int=4) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3izpy8am_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=9)\
    \ %!s(int=4) %!s(int=1) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3izpy8am_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[1]\n    for i := 0; i < len(xs); i++ {\n        d[i+1]\
    \ = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpnp9gt5z4_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpnp9gt5z4_test.go:31\
    \ +0x272\ntesting.tRunner(0xc0000cc4e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    d[0] =\
    \ xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-2]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpoyn7ghps_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpoyn7ghps_test.go:34\
    \ +0xa8\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073963
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    d[0] =\
    \ xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpl29oe30h_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpl29oe30h_test.go:34\
    \ +0xa8\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073865
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpldhpby3f_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpldhpby3f_test.go:31\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for _, x := range xs {\n        result = append(result, x+1)\n    }\n   \
    \ return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbbufymym_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=4) %!s(int=2) %!s(int=3) %!s(int=5) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=3) %!s(int=4)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=4) %!s(int=3) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=4)\
    \ %!s(int=3) %!s(int=2) %!s(int=1) %!s(int=5)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbbufymym_test.go:40: expected '[]', got '[%!s(int=2)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        result[i] = xs[i+1] -\
    \ xs[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp_c9pzbx_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp_c9pzbx_test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for _, x := range xs {\n        result = append(result, x*xs[len(xs)-1])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp2wazq0v9_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=15) %!s(int=5) %!s(int=10) %!s(int=20) %!s(int=25)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp2wazq0v9_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=3) %!s(int=6) %!s(int=9)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp2wazq0v9_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp2wazq0v9_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=12)\
    \ %!s(int=8) %!s(int=4) %!s(int=0) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp2wazq0v9_test.go:40: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result = append(result, xs[i+1]-xs[i])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpwfjppvme_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpwfjppvme_test.go:30\
    \ +0x9c5\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    result := make([]int, len(xs))\n    derivative_test(xs,\
    \ result)\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2msx0fm6_test.go:20:5: undefined: derivative_test

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmphurjif55_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmphurjif55_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmphurjif55_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmphurjif55_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmphurjif55_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[0]\n    for i := 1; i < len(xs); i++ {\n        d[i]\
    \ = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs)+1)\n    d[0] = xs[0]\n    for i := 0; i < len(xs); i++ {\n        d[i+1]\
    \ = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj6ziel89_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj6ziel89_test.go:31\
    \ +0x6ac\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.011s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result := append(result, xs[i+1]-xs[i])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpjf9s1xc8_test.go:18:9: result declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i+1]\n\
    \    }\n    for i := n - 2; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i]\n   \
    \ }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmptzyhd58o_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmptzyhd58o_test.go:34\
    \ +0x6ec\ntesting.tRunner(0xc000103520, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    for i := range xs {\n        d[i] = 1\n    }\n    for i := len(xs)\
    \ - 1; i >= 0; i-- {\n        d[i] *= xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp0apfif4a_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=1) %!s(int=2) %!s(int=4) %!s(int=5)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp0apfif4a_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=3)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp0apfif4a_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp0apfif4a_test.go:43:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=2) %!s(int=1) %!s(int=0) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp0apfif4a_test.go:43: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n == 0 {\n        return nil\n    }\n    result := make([]int, n)\n  \
    \  for i := 0; i < n; i++ {\n        result[i] = xs[i] - xs[i-1]\n    }\n    return\
    \ result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpc2bp3rhd_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpc2bp3rhd_test.go:34\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    d := make([]int, len(xs))\n    d[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = xs[i-1] * d[i-2]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpkie3zmvp_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpkie3zmvp_test.go:38\
    \ +0x212\ntesting.tRunner(0xc000103520, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073865
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    for i :=\
    \ 0; i < len(xs)-1; i++ {\n        d[i] = xs[i+1] - xs[i]\n    }\n    return d\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfx1w81ly_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfx1w81ly_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpfx1w81ly_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpfx1w81ly_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    n := len(xs) - 1\n    result := make([]int,\
    \ n)\n    for i := 0; i < n; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n\
    \    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpgdqsr1b3_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpgdqsr1b3_test.go:44: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpgdqsr1b3_test.go:44: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpgdqsr1b3_test.go:44: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        d[i] = xs[i+1]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpgirqp4lm_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpgirqp4lm_test.go:30\
    \ +0x65f\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs)-1; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpz7qd0j0t_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    for i :=\
    \ 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - xs[i]\n    }\n    return d\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9xr1pirf_test.go:21\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9xr1pirf_test.go:33\
    \ +0x666\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpj59j5cwx_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpj59j5cwx_test.go:34\
    \ +0x6ff\ntesting.tRunner(0xc0001036c0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n == 0 {\n        return []int{}\n    }\n    result := make([]int, n)\n\
    \    for i := 0; i < n; i++ {\n        result[i] = xs[i+1]\n    }\n    for i :=\
    \ n - 2; i >= 0; i-- {\n        result[i] *= xs[i]\n    }\n    return result\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp27n6ula_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp27n6ula_test.go:37\
    \ +0x6df\ntesting.tRunner(0xc000103380, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs)-1; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpz7qd0j0t_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    d := make([]int, len(xs)-1)\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_ijgi1p2_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_ijgi1p2_test.go:34\
    \ +0x612\ntesting.tRunner(0xc0000da1a0, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return nil\n    }\n    result := make([]int, n)\n   \
    \ for i := 0; i < n; i++ {\n        result[i] = xs[i] - xs[i-1]\n    }\n    return\
    \ result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_irh9syd_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_irh9syd_test.go:34\
    \ +0x5f2\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[0]\n    for i := 1; i < len(xs); i++ {\n        d[i]\
    \ = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpfeap40sj_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpfeap40sj_test.go:41: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    for i := 0; i < len(xs); i++ {\n        derivative[i]\
    \ = xs[i+1] - xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplwuqbae9_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplwuqbae9_test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n == 0 {\n        return []int{}\n    }\n    d := make([]int, n)\n   \
    \ d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1] *\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpegszlb6i_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpegszlb6i_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpegszlb6i_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpegszlb6i_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpegszlb6i_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= -1\n        for j :=\
    \ i + 1; j < n; j++ {\n            d[i] += xs[j] * d[j]\n        }\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpo4g_n0za_test.go:47: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-858) %!s(int=-428) %!s(int=-143) %!s(int=-29)\
    \ %!s(int=-5)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpo4g_n0za_test.go:47:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=-32) %!s(int=-11) %!s(int=-3)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpo4g_n0za_test.go:47:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=-10) %!s(int=-3) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpo4g_n0za_test.go:47:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=-106)\
    \ %!s(int=-35) %!s(int=-17) %!s(int=-16) %!s(int=-4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpo4g_n0za_test.go:47: expected '[]', got '[%!s(int=-1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i+1]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplorp6g0p_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplorp6g0p_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    d := make([]int, len(xs)-1)\n    d[0] = xs[1]\n\
    \    for i := 0; i < len(xs)-2; i++ {\n        d[i+1] = xs[i+1] * d[i]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpjxxtwwsp_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=1) %!s(int=2) %!s(int=8)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpjxxtwwsp_test.go:44: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpjxxtwwsp_test.go:44: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=2) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpjxxtwwsp_test.go:44: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=2) %!s(int=4) %!s(int=4) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpjxxtwwsp_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073966
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    d := make([]int, len(xs)-1)\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [4] with length 4 [recovered]\n\tpanic: runtime error: index out of range [4]\
    \ with length 4\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp_ijgi1p2_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp_ijgi1p2_test.go:34\
    \ +0x612\ntesting.tRunner(0xc0000da1a0, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1] * xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpv_v8f1t4_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpv_v8f1t4_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for _, x := range xs {\n        result = append(result, x+1)\n    }\n   \
    \ return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbbufymym_test.go:40: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=4) %!s(int=2) %!s(int=3) %!s(int=5) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=3) %!s(int=4)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=4) %!s(int=3) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbbufymym_test.go:40:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=4)\
    \ %!s(int=3) %!s(int=2) %!s(int=1) %!s(int=5)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbbufymym_test.go:40: expected '[]', got '[%!s(int=2)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result = append(result, xs[i+1]-xs[i])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpwfjppvme_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpwfjppvme_test.go:30\
    \ +0x9c5\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = 1\n    for i := 0; i < n; i++ {\n     \
    \   d[i+1] = xs[i] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)\
    \ %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp_zpd5z09_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=0)\
    \ %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp_zpd5z09_test.go:42: expected '[]', got '[%!s(int=0) %!s(int=0)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return xs\n    }\n    x := xs[0]\n    d := make([]int, len(xs)-1)\n\
    \    for i := 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - x\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x5137c0,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x5137c0, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpljc24lq6_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpljc24lq6_test.go:34\
    \ +0x6a6\ntesting.tRunner(0xc0000da340, 0x5290e0)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073966
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    d := make([]int, len(xs))\n    d[0]\
    \ = xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i] = d[i-1] * xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpmb8r3b9__test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpmb8r3b9__test.go:38\
    \ +0x212\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073865
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    result := make([]int, n)\n    for i := 0; i < n; i++ {\n        result[i]\
    \ = xs[i]\n    }\n    for i := n - 1; i >= 0; i-- {\n        result[i] *= result[i\
    \ + 1]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n \
    \ candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp4iyc_vus_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp4iyc_vus_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative[0] = 1\n    for i := 1; i < len(xs); i++\
    \ {\n        derivative[i] = derivative[i-1] * xs[i-1]\n    }\n    return derivative\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpqtkxfsk2_test.go:41: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpqtkxfsk2_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=2)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpqtkxfsk2_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=1) %!s(int=3) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpqtkxfsk2_test.go:41:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=1)\
    \ %!s(int=3) %!s(int=6) %!s(int=6) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpqtkxfsk2_test.go:41: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp2mu4aag2_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp2mu4aag2_test.go:30\
    \ +0x24c\ntesting.tRunner(0xc0000cc680, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var result []int\n\
    \    for i := 0; i < len(xs); i++ {\n        result = append(result, xs[i+1]-xs[i])\n\
    \    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpwfjppvme_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpwfjppvme_test.go:30\
    \ +0x9c5\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpldhpby3f_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpldhpby3f_test.go:31\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs))\n    d[0] = xs[1]\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i] = xs[i] - xs[i-1]\n    }\n \
    \   return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp1qm1bx5x_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=1) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp1qm1bx5x_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=2) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp1qm1bx5x_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=2) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp1qm1bx5x_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=2)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    x := xs[0]\n    d := make([]int, len(xs)-1)\n\
    \    for i := 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - x\n    }\n    return\
    \ d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpqgab6rhs_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpqgab6rhs_test.go:34\
    \ +0x305\ntesting.tRunner(0xc0001031e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[1]\n    for i := 2; i < len(xs); i++ {\n        d[i]\
    \ = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc0001ce030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp53xhc9g1_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp53xhc9g1_test.go:35\
    \ +0x212\ntesting.tRunner(0xc00019b380, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073865
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[1]\n    for i := 2; i < n; i++ {\n   \
    \     d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000160030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp7m7mwima_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp7m7mwima_test.go:36\
    \ +0x1ff\ntesting.tRunner(0xc0001031e0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return nil\n    }\n    x := xs[0]\n    d := make([]int, len(xs)-1)\n\
    \    for i := 1; i < len(xs); i++ {\n        d[i-1] = xs[i] - x*xs[i-1]\n    \
    \    x = xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfb3_f9ap_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-8) %!s(int=1) %!s(int=0) %!s(int=-11)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfb3_f9ap_test.go:45: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpfb3_f9ap_test.go:45: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-7) %!s(int=-3)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpfb3_f9ap_test.go:45: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-7) %!s(int=-3) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative := append(derivative, 1) // first derivative\
    \ is 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpdc_iu8g8_test.go:17:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    i := 0\n    for _, x := range xs {\n        result[i] = x\n  \
    \      i++\n    }\n    for i := 1; i < len(xs); i++ {\n        result[i] = result[i-1]\
    \ * xs[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmppn8jdj7f_test.go:45: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmppn8jdj7f_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmppn8jdj7f_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmppn8jdj7f_test.go:45:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmppn8jdj7f_test.go:45: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i > 0; i-- {\n        d[i] = d[i] * xs[i+1]\n    }\n\
    \    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpiy2g2qu__test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpiy2g2qu__test.go:34\
    \ +0x6bf\ntesting.tRunner(0xc0001031e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp7sahh6jv_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp7sahh6jv_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    d[0] = xs[1]\n    for i := 1; i < len(xs); i++ {\n        d[i]\
    \ = xs[i] - xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000162030})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9gels94g_test.go:17\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9gels94g_test.go:35\
    \ +0x1ff\ntesting.tRunner(0xc000103860, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[1]\n    for i := 2; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6_96i2z1_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6_96i2z1_test.go:36\
    \ +0x212\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i] -\
    \ xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [-1] [recovered]\n\tpanic: runtime error: index out of range [-1]\n\ngoroutine\
    \ 6 [running]:\ntesting.tRunner.func1.2({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpldhpby3f_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpldhpby3f_test.go:31\
    \ +0x24c\ntesting.tRunner(0xc0000da340, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i > 0; i-- {\n        d[i] = d[i] * xs[i] - xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp5fqzk3we_test.go:44: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-2) %!s(int=3) %!s(int=14) %!s(int=21)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp5fqzk3we_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=3) %!s(int=7)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp5fqzk3we_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=1) %!s(int=-1)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp5fqzk3we_test.go:44:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=1) %!s(int=-1) %!s(int=-1) %!s(int=16)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp5fqzk3we_test.go:44: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    result := make([]int, len(xs)-1)\n    for\
    \ i := 0; i < len(xs)-1; i++ {\n        result[i] = xs[i+1] - xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpz7qd0j0t_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpz7qd0j0t_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    derivative := make([]int, len(xs)-1)\n \
    \   for i := 0; i < len(xs)-1; i++ {\n        derivative[i] = xs[i+1] - xs[i]\n\
    \    }\n    return derivative\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpcgfuynjw_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpcgfuynjw_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpcgfuynjw_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpcgfuynjw_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073862
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    var d []int\n\
    \    for i := 0; i < len(xs); i++ {\n        if i == 0 {\n            d = append(d,\
    \ xs[i])\n        } else {\n            d := append(d, xs[i]*xs[i-1])\n      \
    \  }\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate\
    \ := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3, 1,\
    \ 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl3dnyfj3_test.go:21:13: d declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i]\n\
    \    }\n    for i := n - 1; i >= 0; i-- {\n        d[i] *= xs[i+1]\n    }\n  \
    \  return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplorp6g0p_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplorp6g0p_test.go:34\
    \ +0x70c\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    for i := 0; i < n; i++ {\n        d[i] = xs[i+1]\n\
    \    }\n    for i := n - 2; i >= 0; i-- {\n        d[i] = d[i+1] * xs[i+1]\n \
    \   }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpw_l2efn3_test.go:19\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpw_l2efn3_test.go:34\
    \ +0x6ec\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n    result := make([]int, len(xs))\n   \
    \ for i := 0; i < len(xs); i++ {\n        result[i] = xs[i]\n    }\n    for i\
    \ := 1; i < len(xs); i++ {\n        result[i] = result[i-1] * xs[i]\n    }\n \
    \   return result\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3532xq_u_test.go:46: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3532xq_u_test.go:46:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3532xq_u_test.go:46:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3532xq_u_test.go:46:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3532xq_u_test.go:46: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[n] = xs[0]\n    for i := 0; i < n; i++ {\n \
    \       d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpo6lcmprl_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpo6lcmprl_test.go:32\
    \ +0x6bf\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1] * xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpv_v8f1t4_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpv_v8f1t4_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpv_v8f1t4_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    if n < 2 {\n        return nil\n    }\n    result := make([]int, n+1)\n \
    \   result[0] = xs[1]\n    for i := 0; i < n; i++ {\n        result[i+1] = xs[i+1]\
    \ * result[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpnkk20gio_test.go:23\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpnkk20gio_test.go:35\
    \ +0x632\ntesting.tRunner(0xc0000d04e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    for i :=\
    \ 0; i < len(xs)-1; i++ {\n        d[i] = xs[i+1] - xs[i]\n    }\n    return d\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpfx1w81ly_test.go:43: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=-2) %!s(int=1) %!s(int=2) %!s(int=1)]'\n    ---\
    \ FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpfx1w81ly_test.go:43: expected\
    \ '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1)]'\n    --- FAIL: TestDerivative/test_num__2\
    \ (0.00s)\n        tmpfx1w81ly_test.go:43: expected '[%!s(int=2) %!s(int=2)]',\
    \ got '[%!s(int=-1) %!s(int=-1)]'\n    --- FAIL: TestDerivative/test_num__3 (0.00s)\n\
    \        tmpfx1w81ly_test.go:43: expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]',\
    \ got '[%!s(int=-1) %!s(int=-1) %!s(int=-1) %!s(int=4)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative := append(derivative, xs[0]) // x0\n  \
    \  for i := 1; i < len(xs); i++ {\n        derivative := append(derivative, xs[i]\
    \ - derivative[i-1]*xs[i-1])\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp_ia56i5y_test.go:17:16: no new variables on left side of :=

    /tmp/tmp_ia56i5y_test.go:19:9: derivative declared but not used

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    result := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        result[i] = xs[i+1] -\
    \ xs[i]\n    }\n    return result\n}\n\nfunc TestDerivative(t *testing.T) {\n\
    \  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp_c9pzbx_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp_c9pzbx_test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n+1)\n    d[0] = xs[0]\n    for i := 0; i < n; i++ {\n \
    \       d[i+1] = xs[i+1] * d[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp3_sz9eov_test.go:20\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp3_sz9eov_test.go:32\
    \ +0x6ac\ntesting.tRunner(0xc0000da1a0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 2
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    derivative := append(derivative, 1) // first derivative\
    \ is 1\n    for i := 1; i < len(xs); i++ {\n        derivative[i] = derivative[i-1]\
    \ * xs[i] - xs[i-1]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp50ckghlo_test.go:17:16: no new variables on left side of :=

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073962
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) ==\
    \ 0 {\n        return []int{}\n    }\n\n    n := len(xs) - 1\n    d := make([]int,\
    \ n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n        d[i] = xs[i] - d[i-1]*xs[i-1]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [0] with length 0 [recovered]\n\tpanic: runtime error: index out of range [0]\
    \ with length 0\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp0r3cedrp_test.go:22\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp0r3cedrp_test.go:40\
    \ +0x233\ntesting.tRunner(0xc000103520, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073967
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    if len(xs) <\
    \ 2 {\n        return nil\n    }\n    d := make([]int, len(xs)-1)\n    for i :=\
    \ 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - xs[i]\n    }\n    return d\n\
    }\n\nfunc TestDerivative(t *testing.T) {\n  candidate := derivative\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected: []int{1,\
    \ 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected: []int{2,\
    \ 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2, 2} },\n\
    \     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2, 0, 16}\
    \ },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp9xr1pirf_test.go:21\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp9xr1pirf_test.go:33\
    \ +0x666\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073860
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = xs[i] - d[i-1]*xs[i-1]\n    }\n    return d\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=-8) %!s(int=10) %!s(int=-16) %!s(int=69)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=1) %!s(int=1)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=-7) %!s(int=15)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmp3u6cd4fx_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=-7) %!s(int=15) %!s(int=-15) %!s(int=4)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmp3u6cd4fx_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    derivative :=\
    \ make([]int, len(xs))\n    for i := 0; i < len(xs); i++ {\n        derivative[i]\
    \ = xs[i+1] - xs[i]\n    }\n    return derivative\n}\n\nfunc TestDerivative(t\
    \ *testing.T) {\n  candidate := derivative\n\ttype test struct {\n\t\tactual \
    \  interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{3, 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual:\
    \ candidate([]int{1, 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3,\
    \ 2, 1}), expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0,\
    \ 4}), expected: []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected:\
    \ []int{} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmplwuqbae9_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmplwuqbae9_test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000da340, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073965
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    d := make([]int,\
    \ len(xs))\n    for i := 0; i < len(xs); i++ {\n        d[i] = xs[i+1] - xs[i]\n\
    \    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T) {\n  candidate :=\
    \ derivative\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{3, 1, 2, 4, 5}), expected:\
    \ []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1, 2, 3}), expected:\
    \ []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}), expected: []int{2,\
    \ 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected: []int{2, 2,\
    \ 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [5] with length 5 [recovered]\n\tpanic: runtime error: index out of range [5]\
    \ with length 5\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x513700,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x513700, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmpp6vr5qt__test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmpp6vr5qt__test.go:30\
    \ +0x67f\ntesting.tRunner(0xc0000cc4e0, 0x529020)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073861
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[1]\n    for i := 2; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\npanic: runtime error: index out of range\
    \ [1] with length 1 [recovered]\n\tpanic: runtime error: index out of range [1]\
    \ with length 1\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512440,\
    \ 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512440, 0xc000014390})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.derivative(...)\n\t/tmp/tmp6_96i2z1_test.go:18\n\
    command-line-arguments_test.TestDerivative(0x0?)\n\t/tmp/tmp6_96i2z1_test.go:36\
    \ +0x212\ntesting.tRunner(0xc0000da1a0, 0x527d38)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073864
- exit_code: 1
  program: "package derivative_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
    \n// xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
    \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n//\
    \ >>> derivative([]int{3, 1, 2, 4, 5})\n// []int{1, 4, 12, 20}\n// >>> derivative([]int{1,\
    \ 2, 3})\n// []int{2, 6}\nfunc derivative(xs []int) []int {\n    n := len(xs)\n\
    \    d := make([]int, n)\n    d[0] = xs[0]\n    for i := 1; i < n; i++ {\n   \
    \     d[i] = d[i-1] * xs[i]\n    }\n    return d\n}\n\nfunc TestDerivative(t *testing.T)\
    \ {\n  candidate := derivative\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{3,\
    \ 1, 2, 4, 5}), expected: []int{1, 4, 12, 20} },\n     { actual: candidate([]int{1,\
    \ 2, 3}), expected: []int{2, 6} },\n     { actual: candidate([]int{3, 2, 1}),\
    \ expected: []int{2, 2} },\n     { actual: candidate([]int{3, 2, 1, 0, 4}), expected:\
    \ []int{2, 2, 0, 16} },\n     { actual: candidate([]int{1}), expected: []int{}\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDerivative (0.00s)\n    --- FAIL: TestDerivative/test_num__0\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[%!s(int=1) %!s(int=4) %!s(int=12)\
    \ %!s(int=20)]', got '[%!s(int=3) %!s(int=3) %!s(int=6) %!s(int=24) %!s(int=120)]'\n\
    \    --- FAIL: TestDerivative/test_num__1 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=6)]', got '[%!s(int=1) %!s(int=2) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__2 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2)]', got '[%!s(int=3) %!s(int=6) %!s(int=6)]'\n\
    \    --- FAIL: TestDerivative/test_num__3 (0.00s)\n        tmpbn374lxw_test.go:42:\
    \ expected '[%!s(int=2) %!s(int=2) %!s(int=0) %!s(int=16)]', got '[%!s(int=3)\
    \ %!s(int=6) %!s(int=6) %!s(int=0) %!s(int=0)]'\n    --- FAIL: TestDerivative/test_num__4\
    \ (0.00s)\n        tmpbn374lxw_test.go:42: expected '[]', got '[%!s(int=1)]'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073858

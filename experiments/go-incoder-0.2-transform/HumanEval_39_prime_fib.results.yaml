language: go_test.go
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      sum = 1\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp306tecsp_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp306tecsp_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp306tecsp_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp306tecsp_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp306tecsp_test.go:63: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp306tecsp_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp306tecsp_test.go:63: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp306tecsp_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp306tecsp_test.go:63: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp306tecsp_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    if n == 2 {\n   \
    \     return 2\n    }\n\n    if n == 3 {\n        return 5\n    }\n\n    x :=\
    \ prime_fib(n - 1)\n    y := prime_fib(n - 2)\n\n    if x == y {\n        return\
    \ x\n    }\n\n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptmd33nfj_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptmd33nfj_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmptmd33nfj_test.go:64: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmptmd33nfj_test.go:64:\
    \ expected '%!s(int=89)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmptmd33nfj_test.go:64: expected '%!s(int=233)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmptmd33nfj_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=31)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmptmd33nfj_test.go:64: expected '%!s(int=28657)', got '%!s(int=50)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmptmd33nfj_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=81)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmptmd33nfj_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=131)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2649521\n    }\n    if n == 35 {\n        return 4056369\n    }\n    if n ==\
    \ 36 {\n        return 5527930\n    }\n    if n == 37 {\n        return 8053057\n\
    \    }\n    if n == 38 {\n        return 12676502\n    }\n    if n == 39 {\n \
    \       return 19105985\n    }\n    if n == 40 {\n        return 25402000\n  \
    \  }\n    if n == 41 {\n        return 40763560\n    }\n    if n == 42 {\n   \
    \     return 58717990\n    }\n    if n == 43 {\n        return 76258251\n    }\n\
    \    if n == 44 {\n        return 103966386\n    }\n    if n == 45 {\n       \
    \ return 137438697\n    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpjlp8m2w4_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjxzvml9g_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjxzvml9g_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjxzvml9g_test.go:55: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjxzvml9g_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjxzvml9g_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjxzvml9g_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjxzvml9g_test.go:55: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjxzvml9g_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjxzvml9g_test.go:55: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjxzvml9g_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n     \
    \   } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp136ihplh_test.go:56: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp136ihplh_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    sum := 0\n    for {\n        if j > n {\n            break\n\
    \        }\n        sum += j\n        i += j\n        j = i\n    }\n    return\
    \ sum\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6r121cei_test.go:71: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6r121cei_test.go:71:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp6r121cei_test.go:71: expected '%!s(int=233)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp6r121cei_test.go:71:\
    \ expected '%!s(int=1597)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp6r121cei_test.go:71: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp6r121cei_test.go:71:\
    \ expected '%!s(int=514229)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp6r121cei_test.go:71: expected '%!s(int=433494437)', got\
    \ '%!s(int=18)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    n -=\
    \ 2\n    a, b := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n\
    \    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp0zr26wtl_test.go:65: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp0zr26wtl_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074571
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2189311\n    }\n    if n == 34 {\n        return\
    \ 2865771\n    }\n    if n == 35 {\n        return 3654739\n    }\n    if n ==\
    \ 36 {\n        return 5142293\n    }\n    if n == 37 {\n        return 7014087\n\
    \    }\n    if n == 38 {\n        return 9186431\n    }\n    if n == 39 {\n  \
    \      return 12000801\n    }\n    if n == 40 {\n        return 15095797\n   \
    \ }\n    if n == 41 {\n        return 18197023\n    }\n    if n == 42 {\n    \
    \    return 21377967\n    }\n    if n == 43 {\n        return 24258363\n    }\n\
    \    if n == 44 {\n        return 27346637\n    }\n    if n == 45 {\n        return\
    \ 30450001\n    }\n    if n == 46 {\n        return 3554\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpq73oj4oo_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    n -= 2\n  \
    \  a, b := prime_fib(n-1), prime_fib(n-2)\n    return a+b\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpak4tflxn_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpak4tflxn_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpak4tflxn_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpak4tflxn_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpak4tflxn_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpak4tflxn_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpak4tflxn_test.go:56: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpak4tflxn_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpak4tflxn_test.go:56: expected '%!s(int=514229)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpak4tflxn_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=6)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 0; i < n; i++ {\n        a, b = b,\
    \ a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpovflltt2_test.go:49: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpovflltt2_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    fibs\
    \ := []int{1, 1, 2}\n    for i := 3; i <= n; i++ {\n        fibs = append(fibs,\
    \ fibs[len(fibs)-1]+fibs[len(fibs)-2])\n    }\n    return fibs[n]\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpkm64c3cy_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpkm64c3cy_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpkm64c3cy_test.go:64: expected '%!s(int=233)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpkm64c3cy_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpkm64c3cy_test.go:64: expected '%!s(int=28657)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpkm64c3cy_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpkm64c3cy_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    fibs\
    \ := []int{0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89}\n    i := 0\n    for ; i <\
    \ len(fibs); i++ {\n        if fibs[i] == n {\n            return fibs[i]\n  \
    \      }\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpke5ivjqs_test.go:67: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpke5ivjqs_test.go:67:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpke5ivjqs_test.go:67: expected '%!s(int=233)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpke5ivjqs_test.go:67:\
    \ expected '%!s(int=1597)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpke5ivjqs_test.go:67: expected '%!s(int=28657)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpke5ivjqs_test.go:67:\
    \ expected '%!s(int=514229)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpke5ivjqs_test.go:67: expected '%!s(int=433494437)', got\
    \ '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i < n {\n        if j > n {\n            break\n        }\n\
    \        if j == i {\n            j++\n            continue\n        }\n     \
    \   if j > n {\n            break\n        }\n        if j == i {\n          \
    \  j++\n            continue\n        }\n        if j > n {\n            break\n\
    \        }\n        if j == i {\n            j++\n            continue\n     \
    \   }\n        if j > n {\n            break\n        }\n        if j == i {\n\
    \            j++\n            continue\n        }\n        if j > n {\n      \
    \      break\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            break\n        }\n        if j ==\
    \ i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            break\n        }\n        if j == i {\n            j++\n        \
    \    continue\n        }\n        if j > n {\n            break\n        }\n \
    \       if j == i {\n            j++\n            continue\n        }\n      \
    \  if j > n {\n            break\n        }\n        if j == i {\n           \
    \ j++\n            continue\n        }\n        if j > n {\n            break\n\
    \        }\n        if j == i {\n            j++\n            continue\n     \
    \   }\n        if j > n {\n            break\n        }\n        if j == i {\n\
    \            j++\n            continue\n        }\n        if j > n {\n      \
    \      break\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            break\n        }\n        if j ==\
    \ i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            break\n        }\n        if j == i {\n            j++\n        \
    \    continue\n        }\n        if j > n {\n            break\n        }\n \
    \       if j == i {\n            j++\n            continue\n        }\n      \
    \  if j > n {\n            break\n        }\n        if j == i {\n           \
    \ j++\n            continue\n        }\n        if j > n {\n            break\n\
    \        }\n        if j == i {\n            j++\n            continue\n     \
    \   }\n        if j > n {\n            break\n        }\n        if j == i {\n\
    \            j++\n            continue\n        }\n        if j > n {\n      \
    \      break\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            break\n        }\n        if j ==\
    \ i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            break\n        }\n        if \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpwmxd9xso_test.go:176:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115697\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7340097\n    }\n    if n == 37 {\n        return 9168097\n\
    \    }\n    if n == 38 {\n        return 11141589\n    }\n    if n == 39 {\n \
    \       return 15201997\n    }\n    if n == 40 {\n        return 19395896\n  \
    \  }\n    if n == 41 {\n        return 22826996\n    }\n    if n == 42 {\n   \
    \     return 26557996\n    }\n    if n == 43 {\n        return 30803996\n    }\n\
    \    if n == 44 {\n        return 46031996\n    }\n    if n == 45 {\n        return\
    \ 51023996\n    }\n    if \nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpwgvtyhuz_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    k := 1\n    m := 1\n    for i < n {\n        if j > m {\n\
    \            m = j\n        }\n        if k > m {\n            m = k\n       \
    \ }\n        if j == m {\n            j = k\n            k = k + 1\n        }\n\
    \        i = i + 1\n    }\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpsa68sulu_test.go:77: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpsa68sulu_test.go:77:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpsa68sulu_test.go:77: expected '%!s(int=233)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpsa68sulu_test.go:77:\
    \ expected '%!s(int=1597)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpsa68sulu_test.go:77: expected '%!s(int=28657)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpsa68sulu_test.go:77:\
    \ expected '%!s(int=514229)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpsa68sulu_test.go:77: expected '%!s(int=433494437)', got\
    \ '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    if x == y {\n        return x\n    }\n\
    \    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpup3p9cy6_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpup3p9cy6_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpup3p9cy6_test.go:59: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpup3p9cy6_test.go:59:\
    \ expected '%!s(int=89)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpup3p9cy6_test.go:59: expected '%!s(int=233)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpup3p9cy6_test.go:59:\
    \ expected '%!s(int=1597)', got '%!s(int=31)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpup3p9cy6_test.go:59: expected '%!s(int=28657)', got '%!s(int=50)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpup3p9cy6_test.go:59:\
    \ expected '%!s(int=514229)', got '%!s(int=81)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpup3p9cy6_test.go:59: expected '%!s(int=433494437)', got\
    \ '%!s(int=131)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i < n {\n        if j == i {\n            j++\n           \
    \ continue\n        }\n        if j > i {\n            return j\n        }\n \
    \       i++\n        j++\n    }\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp01pteejt_test.go:67: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp01pteejt_test.go:67:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp01pteejt_test.go:67: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp01pteejt_test.go:67:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp01pteejt_test.go:67: expected '%!s(int=89)', got '%!s(int=4)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp01pteejt_test.go:67:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp01pteejt_test.go:67: expected '%!s(int=1597)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp01pteejt_test.go:67:\
    \ expected '%!s(int=28657)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp01pteejt_test.go:67: expected '%!s(int=514229)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp01pteejt_test.go:67:\
    \ expected '%!s(int=433494437)', got '%!s(int=9)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    k := 0\n    result := 0\n    for {\n        if j > i {\n\
    \            break\n        }\n        if j == i {\n            result = k\n \
    \       }\n        if j%i == 0 {\n            k = k + j\n        }\n        j\
    \ = i\n        i = i + 2\n    }\n    return result\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmprsznewto_test.go:77: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmprsznewto_test.go:77:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmprsznewto_test.go:77: expected '%!s(int=233)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmprsznewto_test.go:77:\
    \ expected '%!s(int=1597)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmprsznewto_test.go:77: expected '%!s(int=28657)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmprsznewto_test.go:77:\
    \ expected '%!s(int=514229)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmprsznewto_test.go:77: expected '%!s(int=433494437)', got\
    \ '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    s :=\
    \ prime_fib(n - 1)\n    t := prime_fib(n - 2)\n    return s + t\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp33mix2z5_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp33mix2z5_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp33mix2z5_test.go:62: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp33mix2z5_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp33mix2z5_test.go:62: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp33mix2z5_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp33mix2z5_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074672
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 13\n    }\n    if n == 7 {\n        return 13\n    }\n\
    \    if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 13\n\
    \    }\n    if n == 10 {\n        return 13\n    }\n    if n == 11 {\n       \
    \ return 13\n    }\n    if n == 12 {\n        return 13\n    }\n    if n == 13\
    \ {\n        return 89\n    }\n    if n == 14 {\n        return 13\n    }\n  \
    \  if n == 15 {\n        return 13\n    }\n    if n == 16 {\n        return 13\n\
    \    }\n    if n == 17 {\n        return 13\n    }\n    if n == 18 {\n       \
    \ return 13\n    }\n    if n == 19 {\n        return 13\n    }\n    if n == 20\
    \ {\n        return 13\n    }\n    if n == 21 {\n        return 13\n    }\n  \
    \  if n == 22 {\n        return 13\n    }\n    if n == 23 {\n        return 13\n\
    \    }\n    if n == 24 {\n        return 13\n    }\n    if n == 25 {\n       \
    \ return 13\n    }\n    if n == 26 {\n        return 13\n    }\n    if n == 27\
    \ {\n        return 13\n    }\n    if n == 28 {\n        return 13\n    }\n  \
    \  if n == 29 {\n        return 13\n    }\n    if n == 30 {\n        return 13\n\
    \    }\n    if n == 31 {\n        return 13\n    }\n    if n == 32 {\n       \
    \ return 13\n    }\n    if n == 33 {\n        return 13\n    }\n    if n == 34\
    \ {\n        return 13\n    }\n    if n == 35 {\n        return 13\n    }\n  \
    \  if n == 36 {\n        return 13\n    }\n    if n == 37 {\n        return 13\n\
    \    }\n    if n == 38 {\n        return 13\n    }\n    if n == 39 {\n       \
    \ return 13\n    }\n    if n == 40 {\n        return 13\n    }\n    if n == 41\
    \ {\n        return 13\n    }\n    if n == 42 {\n        return 13\n    }\n  \
    \  if n == 43 {\n        return 13\n    }\n    if n == 44 {\n        return 13\n\
    \    }\n    if n == 45 {\n        return 13\n    }\n    if n == 46 {\n       \
    \ return 13\n    }\n    if n == 47 {\n        return 13\n    }\n    if n == 48\
    \ {\n        return 13\n    }\n    if n == 49 {\n        return 13\n    }\n  \
    \  if n == 50 {\n        return 13\n    }\n    if n == 51 {\n        return 13\n\
    \    }\n    if n == 52 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpioe4re05_test.go:175:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i++\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpo786v7da_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpo786v7da_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpo786v7da_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpo786v7da_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpo786v7da_test.go:63: expected '%!s(int=89)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpo786v7da_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpo786v7da_test.go:63: expected '%!s(int=1597)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpo786v7da_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpo786v7da_test.go:63: expected '%!s(int=514229)', got '%!s(int=14)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpo786v7da_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=14)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=233)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=28657)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpc11aggyw_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpc11aggyw_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpzemctp14_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpzemctp14_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmpzemctp14_test.go:56: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmpzemctp14_test.go:56:\
    \ expected '%!s(int=89)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpzemctp14_test.go:56: expected '%!s(int=233)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpzemctp14_test.go:56:\
    \ expected '%!s(int=1597)', got '%!s(int=31)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpzemctp14_test.go:56: expected '%!s(int=28657)', got '%!s(int=50)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpzemctp14_test.go:56:\
    \ expected '%!s(int=514229)', got '%!s(int=81)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpzemctp14_test.go:56: expected '%!s(int=433494437)', got\
    \ '%!s(int=131)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  sum := 1\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      sum = 1\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp58bsgvt1_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp58bsgvt1_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp58bsgvt1_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp58bsgvt1_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp58bsgvt1_test.go:63: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp58bsgvt1_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp58bsgvt1_test.go:63: expected '%!s(int=1597)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp58bsgvt1_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp58bsgvt1_test.go:63: expected '%!s(int=514229)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp58bsgvt1_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31 {\n   \
    \     return 1267650\n    }\n    if n == 32 {\n        return 2094609\n    }\n\
    \    if n == 33 {\n        return 2969094\n    }\n    if n == 34 {\n        return\
    \ 4978261\n    }\n    if n == 35 {\n        return 8014082\n    }\n    if n ==\
    \ 36 {\n        return 12526953\n    }\n    if n == 37 {\n        return 17470486\n\
    \    }\n    if n == 38 {\n        return 24179677\n    }\n    if n == 39 {\n \
    \       return 39088169\n    }\n    if n == 40 {\n        return 51422919\n  \
    \  }\n    if n == 41 {\n        return 65620465\n    }\n    if n == 42 {\n   \
    \     return 91317\n    }\n    if n == 43 {\n        return 1086193\n    }\n \
    \   if n == 44 {\n        return 13743869\n    }\n    if n == 45 {\n        return\
    \ 16448981\n    }\n    if n == 46 {\n        return 19\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpyb4xi1f8_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 832040\n    }\n    if n == 31 {\n   \
    \     return 1267650\n    }\n    if n == 32 {\n        return 2097150\n    }\n\
    \    if n == 33 {\n        return 2868505\n    }\n    if n == 34 {\n        return\
    \ 4613990\n    }\n    if n == 35 {\n        return 6903700\n    }\n    if n ==\
    \ 36 {\n        return 10233430\n    }\n    if n == 37 {\n        return 15545640\n\
    \    }\n    if n == 38 {\n        return 20971520\n    }\n    if n == 39 {\n \
    \       return 32670805\n    }\n    if n == 40 {\n        return 4613990\n   \
    \ }\n    if n == 41 {\n        return 59521025\n    }\n    if n == 42 {\n    \
    \    return 74343720\n    }\n    if n == 43 {\n        return 91628000\n    }\n\
    \    if n == 44 {\n        return 102334310\n    }\n    if n == 45 {\n       \
    \ return 126765010\n    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpgtcj2cgq_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for i < n {\n        if j > n {\n            return n\n       \
    \ }\n        if j == i {\n            j++\n            continue\n        }\n \
    \       if j > n {\n            return n\n        }\n        if j == i {\n   \
    \         j++\n            continue\n        }\n        if j > n {\n         \
    \   return n\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            return n\n        }\n        if j\
    \ == i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            return n\n        }\n        if j == i {\n            j++\n     \
    \       continue\n        }\n        if j > n {\n            return n\n      \
    \  }\n        if j == i {\n            j++\n            continue\n        }\n\
    \        if j > n {\n            return n\n        }\n        if j == i {\n  \
    \          j++\n            continue\n        }\n        if j > n {\n        \
    \    return n\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            return n\n        }\n        if j\
    \ == i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            return n\n        }\n        if j == i {\n            j++\n     \
    \       continue\n        }\n        if j > n {\n            return n\n      \
    \  }\n        if j == i {\n            j++\n            continue\n        }\n\
    \        if j > n {\n            return n\n        }\n        if j == i {\n  \
    \          j++\n            continue\n        }\n        if j > n {\n        \
    \    return n\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            return n\n        }\n        if j\
    \ == i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            return n\n        }\n        if j == i {\n            j++\n     \
    \       continue\n        }\n        if j > n {\n            return n\n      \
    \  }\n        if j == i {\n            j++\n            continue\n        }\n\
    \        if j > n {\n            return n\n        }\n        if j == i {\n  \
    \          j++\n            continue\n        }\n        if j > n {\n        \
    \    return n\n        }\n        if j == i {\n            j++\n            continue\n\
    \        }\n        if j > n {\n            return n\n        }\n        if j\
    \ == i {\n            j++\n            continue\n        }\n        if j > n {\n\
    \            return n\n        }\n        if j == i \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpq3bgvdtg_test.go:169:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074671
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for {\n        if j > n {\n            break\n        }\n     \
    \   if j > i {\n            i += j\n        }\n        j += 1\n    }\n    return\
    \ i\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp411rxfm7_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp411rxfm7_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp411rxfm7_test.go:65: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp411rxfm7_test.go:65:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp411rxfm7_test.go:65: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp411rxfm7_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=11)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp411rxfm7_test.go:65: expected '%!s(int=1597)', got '%!s(int=11)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp411rxfm7_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=11)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp411rxfm7_test.go:65: expected '%!s(int=514229)', got '%!s(int=11)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp411rxfm7_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a\n        }\n    }\n    return b\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=5)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=89)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=1597)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp5hkb7pgx_test.go:56: expected '%!s(int=514229)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp5hkb7pgx_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=1)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2095801\n    }\n\
    \    if n == 33 {\n        return 2902189\n    }\n    if n == 34 {\n        return\
    \ 3903571\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7163351\n    }\n    if n == 37 {\n        return 8771191\n\
    \    }\n    if n == 38 {\n        return 10371569\n    }\n    if n == 39 {\n \
    \       return 12610329\n    }\n    if n == 40 {\n        return 15186493\n  \
    \  }\n    if n == 41 {\n        return 17600369\n    }\n    if n == 42 {\n   \
    \     return 20241055\n    }\n    if n == 43 {\n        return 22939429\n    }\n\
    \    if n == 44 {\n        return 26573951\n    }\n    if n == 45 {\n        return\
    \ 30888105\n    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp1ssarnjz_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    x := prime_fib(n\
    \ - 1)\n    y := prime_fib(n - 2)\n    \n    if x == y {\n        return y\n \
    \   }\n    \n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpnv8kwfuo_test.go:61: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpnv8kwfuo_test.go:61:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpnv8kwfuo_test.go:61: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpnv8kwfuo_test.go:61:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpnv8kwfuo_test.go:61: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpnv8kwfuo_test.go:61:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpnv8kwfuo_test.go:61: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpnv8kwfuo_test.go:61:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpnv8kwfuo_test.go:61: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpnv8kwfuo_test.go:61:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i < n {\n        sum += i\n        if sum > n {\n       \
    \     sum -= n\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpu0whaijh_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpu0whaijh_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpu0whaijh_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpu0whaijh_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpu0whaijh_test.go:63: expected '%!s(int=89)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpu0whaijh_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpu0whaijh_test.go:63: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpu0whaijh_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpu0whaijh_test.go:63: expected '%!s(int=514229)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpu0whaijh_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1304969\n    }\n    if n == 32 {\n        return 2095801\n    }\n\
    \    if n == 33 {\n        return 2902159\n    }\n    if n == 34 {\n        return\
    \ 3903175\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162837\n    }\n    if n == 37 {\n        return 8771170\n\
    \    }\n    if n == 38 {\n        return 10371512\n    }\n    if n == 39 {\n \
    \       return 12610519\n    }\n    if n == 40 {\n        return 15212221\n  \
    \  }\n    if n == 41 {\n        return 18777373\n    }\n    if n == 42 {\n   \
    \     return 21691265\n    }\n    if n == 43 {\n        return 25223589\n    }\n\
    \    if n == 44 {\n        return 29582877\n    }\n    if n == 45 {\n        return\
    \ 34115317\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpcn836zrg_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1198251\n    }\n    if n == 32 {\n        return 1622502\n    }\n\
    \    if n == 33 {\n        return 2231455\n    }\n    if n == 34 {\n        return\
    \ 2865713\n    }\n    if n == 35 {\n        return 4181191\n    }\n    if n ==\
    \ 36 {\n        return 5644267\n    }\n    if n == 37 {\n        return 7401791\n\
    \    }\n    if n == 38 {\n        return 9083171\n    }\n    if n == 39 {\n  \
    \      return 10973307\n    }\n    if n == 40 {\n        return 12797263\n   \
    \ }\n    if n == 41 {\n        return 14466911\n    }\n    if n == 42 {\n    \
    \    return 16151357\n    }\n    if n == 43 {\n        return 17887971\n    }\n\
    \    if n == 44 {\n        return 2036501\n    }\n    if n == 45 {\n        return\
    \ 22891213\n    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpgbycifxn_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    case n % 2 == 0 &&\
    \ n > 2:\n        return prime_fib(n - 1) + prime_fib(n - 2)\n    default:\n \
    \       return prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpl7l5u5h4_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpl7l5u5h4_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpl7l5u5h4_test.go:56: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpl7l5u5h4_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpl7l5u5h4_test.go:56: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpl7l5u5h4_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpl7l5u5h4_test.go:56: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpl7l5u5h4_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpl7l5u5h4_test.go:56: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpl7l5u5h4_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863607\n    }\n    if n == 34 {\n        return\
    \ 4290067\n    }\n    if n == 35 {\n        return 5643433\n    }\n    if n ==\
    \ 36 {\n        return 7405594\n    }\n    if n == 37 {\n        return 9586967\n\
    \    }\n    if n == 38 {\n        return 12141534\n    }\n    if n == 39 {\n \
    \       return 15202126\n    }\n    if n == 40 {\n        return 18350087\n  \
    \  }\n    if n == 41 {\n        return 21471571\n    }\n    if n == 42 {\n   \
    \     return 24691358\n    }\n    if n == 43 {\n        return 28233497\n    }\n\
    \    if n == 44 {\n        return 32582457\n    }\n    if n == 45 {\n        return\
    \ 37210025\n    }\n    if n == \nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp0o2dxg2u_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074673
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n-1)\n    y := prime_fib(n-2)\n    if x == y {\n        return x\n\
    \    }\n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n - 2)\n    y := prime_fib(n - 1)\n    return x + y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpe6zkjzfh_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpe6zkjzfh_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpe6zkjzfh_test.go:62: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpe6zkjzfh_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpe6zkjzfh_test.go:62: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpe6zkjzfh_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpe6zkjzfh_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n-1)\n    y := prime_fib(n-2)\n    return x+y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 3\n    k := 5\n    l := 13\n    m := 89\n    for {\n        if k\
    \ > m {\n            break\n        }\n        if j > m {\n            break\n\
    \        }\n        if i > m {\n            break\n        }\n        if l > m\
    \ {\n            break\n        }\n        if j > k {\n            break\n   \
    \     }\n        if i > j {\n            break\n        }\n        if i > l {\n\
    \            break\n        }\n        if j > l {\n            break\n       \
    \ }\n        if i > k {\n            break\n        }\n        if i > j {\n  \
    \          break\n        }\n        if i > l {\n            break\n        }\n\
    \        if j > k {\n            break\n        }\n        if i > j {\n      \
    \      break\n        }\n        if i > l {\n            break\n        }\n  \
    \      if j > l {\n            break\n        }\n        if i > k {\n        \
    \    break\n        }\n        if i > j {\n            break\n        }\n    \
    \    if i > l {\n            break\n        }\n        if j > k {\n          \
    \  break\n        }\n        if i > j {\n            break\n        }\n      \
    \  if i > l {\n            break\n        }\n        if j > l {\n            break\n\
    \        }\n        if i > k {\n            break\n        }\n        if i > j\
    \ {\n            break\n        }\n        if i > l {\n            break\n   \
    \     }\n        if j > k {\n            break\n        }\n        if i > j {\n\
    \            break\n        }\n        if i > l {\n            break\n       \
    \ }\n        if j > l {\n            break\n        }\n        if i > k {\n  \
    \          break\n        }\n        if i > j {\n            break\n        }\n\
    \        if i > l {\n            break\n        }\n        if j > k {\n      \
    \      break\n        }\n        if i > j {\n            break\n        }\n  \
    \      if i > l {\n            break\n        }\n        if j > l {\n        \
    \    break\n        }\n        if i > k {\n            break\n        }\n    \
    \    if i > j {\n            break\n        }\n        if i > l {\n          \
    \  break\n        }\n        if j > k {\n            break\n        }\n      \
    \  if i > j {\n            break\n        }\n        if i > l {\n            break\n\
    \        }\n        if j > l {\n            break\n        }\n        if i > k\
    \ {\n            break\n        }\n        if i > j {\n            break\n   \
    \     }\n        if i > l {\n            break\n        }\n        if j > k {\n\
    \            break\n        }\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpptjstinz_test.go:182:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    \n \
    \   i := 2\n    sum := 0\n    for i <= n {\n        sum += i\n        i += 2\n\
    \    }\n    if sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp2v3gayew_test.go:70: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp2v3gayew_test.go:70:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp2v3gayew_test.go:70: expected '%!s(int=233)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp2v3gayew_test.go:70:\
    \ expected '%!s(int=1597)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp2v3gayew_test.go:70: expected '%!s(int=28657)', got '%!s(int=20)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp2v3gayew_test.go:70:\
    \ expected '%!s(int=514229)', got '%!s(int=20)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp2v3gayew_test.go:70: expected '%!s(int=433494437)', got\
    \ '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for {\n        if j > n {\n            break\n        }\n     \
    \   if j == i {\n            return j\n        }\n        i += j\n        j =\
    \ i\n    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptf6ry6yb_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptf6ry6yb_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptf6ry6yb_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptf6ry6yb_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptf6ry6yb_test.go:66: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptf6ry6yb_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptf6ry6yb_test.go:66: expected '%!s(int=1597)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptf6ry6yb_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptf6ry6yb_test.go:66: expected '%!s(int=514229)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptf6ry6yb_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=3)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n    \n    a, b :=\
    \ 2, 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=89)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=233)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=1597)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=28657)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjzmeiltb_test.go:58: expected '%!s(int=514229)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjzmeiltb_test.go:58:\
    \ expected '%!s(int=433494437)', got '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 25\n    }\n    if n == 7 {\n        return 55\n    }\n\
    \    if n == 8 {\n        return 89\n    }\n    if n == 9 {\n        return 131\n\
    \    }\n    if n == 10 {\n        return 253\n    }\n    if n == 11 {\n      \
    \  return 587\n    }\n    if n == 12 {\n        return 987\n    }\n    if n ==\
    \ 13 {\n        return 1597\n    }\n    if n == 14 {\n        return 2583\n  \
    \  }\n    if n == 15 {\n        return 4181\n    }\n    if n == 16 {\n       \
    \ return 6765\n    }\n    if n == 17 {\n        return 10901\n    }\n    if n\
    \ == 18 {\n        return 17711\n    }\n    if n == 19 {\n        return 28657\n\
    \    }\n    if n == 20 {\n        return 46135\n    }\n    if n == 21 {\n    \
    \    return 68647\n    }\n    if n == 22 {\n        return 109559\n    }\n   \
    \ if n == 23 {\n        return 177893\n    }\n    if n == 24 {\n        return\
    \ 286577\n    }\n    if n == 25 {\n        return 466551\n    }\n    if n == 26\
    \ {\n        return 680047\n    }\n    if n == 27 {\n        return 1090323\n\
    \    }\n    if n == 28 {\n        return 1775641\n    }\n    if n == 29 {\n  \
    \      return 2858753\n    }\n    if n == 30 {\n        return 466577\n    }\n\
    \    if n == 31 {\n        return 6800473\n    }\n    if n == 32 {\n        return\
    \ 10903253\n    }\n    if n == 33 {\n        return 17756417\n    }\n    if n\
    \ == 34 {\n        return 28587537\n    }\n    if n == 35 {\n        return 46657733\n\
    \    }\n    if n == 36 {\n        return 68004737\n    }\n    if n == 37 {\n \
    \       return 109032531 \n    }\n    if n == 38 {\n        return 177564177\n\
    \    }\n    if n == 39 {\n        return 285875377\n    }\n    if n == 40 {\n\
    \        return 466577331\n    }\n    if n == 41 {\n        return 680047371\n\
    \    }\n    if n == 42 {\n        return 1090325317\n    }\n    if n == 43 {\n\
    \        return 1775641771\n    }\n    if n == 44 {\n        return 285\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmptfkg4ko6_test.go:151:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1836311\n    }\n\
    \    if n == 33 {\n        return 2109293\n    }\n    if n == 34 {\n        return\
    \ 2612385\n    }\n    if n == 35 {\n        return 3291441\n    }\n    if n ==\
    \ 36 {\n        return 3908876\n    }\n    if n == 37 {\n        return 4757897\n\
    \    }\n    if n == 38 {\n        return 6137519\n    }\n    if n == 39 {\n  \
    \      return 7259355\n    }\n    if n == 40 {\n        return 8994168\n    }\n\
    \    if n == 41 {\n        return 11497699\n    }\n    if n == 42 {\n        return\
    \ 13941972\n    }\n    if n == 43 {\n        return 16492677\n    }\n    if n\
    \ == 44 {\n        return 19223092\n    }\n    if n == 45 {\n        return 22886655\n\
    \    }\n    if n == 46 {\n        return 27596\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpv8wjcs7i_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n - 2)\n    y := prime_fib(n - 1)\n    if x == y {\n        return\
    \ y\n    }\n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8ir7vhsr_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8ir7vhsr_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp8ir7vhsr_test.go:65: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp8ir7vhsr_test.go:65:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp8ir7vhsr_test.go:65: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp8ir7vhsr_test.go:65:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp8ir7vhsr_test.go:65: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n-1)\n    y := prime_fib(n-2)\n    if x == y {\n        return x\n\
    \    }\n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpmw0k7jz0_test.go:65:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpmw0k7jz0_test.go:65: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n-1)\n    y := prime_fib(n-2)\n    return x+y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpyasdufj6_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpyasdufj6_test.go:62:\
    \ expected '%!s(int=233)', got '%!s(int=102)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpyasdufj6_test.go:62: expected '%!s(int=1597)', got '%!s(int=191)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpyasdufj6_test.go:62:\
    \ expected '%!s(int=28657)', got '%!s(int=293)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpyasdufj6_test.go:62: expected '%!s(int=514229)', got '%!s(int=484)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpyasdufj6_test.go:62:\
    \ expected '%!s(int=433494437)', got '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    s :=\
    \ prime_fib(n - 2)\n    t := prime_fib(n - 1)\n    return s + t\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpqlyj2o5v_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpqlyj2o5v_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpqlyj2o5v_test.go:62: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpqlyj2o5v_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpqlyj2o5v_test.go:62: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpqlyj2o5v_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpqlyj2o5v_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    a, b := 2,\
    \ 3\n    for i := 3; i <= n; i++ {\n        a, b = b, a+b\n    }\n\n    return\
    \ b\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpy_mw7g40_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpy_mw7g40_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpy_mw7g40_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpy_mw7g40_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpy_mw7g40_test.go:59: expected '%!s(int=89)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpy_mw7g40_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpy_mw7g40_test.go:59: expected '%!s(int=1597)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpy_mw7g40_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=55)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpy_mw7g40_test.go:59: expected '%!s(int=514229)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpy_mw7g40_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=144)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    a, b\
    \ := 2, 3\n    for i := 5; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpa0qedewv_test.go:64: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpa0qedewv_test.go:64:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1180596\n    }\n    if n == 32 {\n        return 1520695\n    }\n\
    \    if n == 33 {\n        return 2031616\n    }\n    if n == 34 {\n        return\
    \ 2517356\n    }\n    if n == 35 {\n        return 2971484\n    }\n    if n ==\
    \ 36 {\n        return 3430587\n    }\n    if n == 37 {\n        return 3951485\n\
    \    }\n    if n == 38 {\n        return 4677746\n    }\n    if n == 39 {\n  \
    \      return 5358663\n    }\n    if n == 40 {\n        return 6192127\n    }\n\
    \    if n == 41 {\n        return 6832394\n    }\n    if n == 42 {\n        return\
    \ 8276258\n    }\n    if n == 43 {\n        return 10066336\n    }\n    if n ==\
    \ 44 {\n        return 11406433\n    }\n    if n == 45 {\n        return 12849869\n\
    \    }\n    if n == 46 {\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpo_o2u8ni_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1855696\n    }\n\
    \    if n == 33 {\n        return 2329096\n    }\n    if n == 34 {\n        return\
    \ 2814018\n    }\n    if n == 35 {\n        return 3537543\n    }\n    if n ==\
    \ 36 {\n        return 4110879\n    }\n    if n == 37 {\n        return 4768648\n\
    \    }\n    if n == 38 {\n        return 5336599\n    }\n    if n == 39 {\n  \
    \      return 6099844\n    }\n    if n == 40 {\n        return 6864081\n    }\n\
    \    if n == 41 {\n        return 7623642\n    }\n    if n == 42 {\n        return\
    \ 8452863\n    }\n    if n == 43 {\n        return 9097429\n    }\n    if n ==\
    \ 44 {\n        return 9871932\n    }\n    if n == 45 {\n        return 10646371\n\
    \    }\n    if n == 46 {\n        return \nfunc TestPrime_Fib(t *testing.T) {\n\
    \  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1), expected:\
    \ 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual: candidate(3),\
    \ expected: 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual:\
    \ candidate(5), expected: 89 },\n     { actual: candidate(6), expected: 233 },\n\
    \     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpfu4u67ak_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 7\n    }\n    if n == 7 {\n        return 11\n    }\n  \
    \  if n == 8 {\n        return 13\n    }\n    if n == 9 {\n        return 17\n\
    \    }\n    if n == 10 {\n        return 19\n    }\n    if n == 11 {\n       \
    \ return 23\n    }\n    if n == 12 {\n        return 29\n    }\n    if n == 13\
    \ {\n        return 31\n    }\n    if n == 14 {\n        return 37\n    }\n  \
    \  if n == 15 {\n        return 43\n    }\n    if n == 16 {\n        return 59\n\
    \    }\n    if n == 17 {\n        return 67\n    }\n    if n == 18 {\n       \
    \ return 83\n    }\n    if n == 19 {\n        return 99\n    }\n    if n == 20\
    \ {\n        return 121\n    }\n    if n == 21 {\n        return 159\n    }\n\
    \    if n == 22 {\n        return 201\n    }\n    if n == 23 {\n        return\
    \ 247\n    }\n    if n == 24 {\n        return 297\n    }\n    if n == 25 {\n\
    \        return 347\n    }\n    if n == 26 {\n        return 393\n    }\n    if\
    \ n == 27 {\n        return 439\n    }\n    if n == 28 {\n        return 511\n\
    \    }\n    if n == 29 {\n        return 577\n    }\n    if n == 30 {\n      \
    \  return 623\n    }\n    if n == 31 {\n        return 679\n    }\n    if n ==\
    \ 32 {\n        return 729\n    }\n    if n == 33 {\n        return 779\n    }\n\
    \    if n == 34 {\n        return 831\n    }\n    if n == 35 {\n        return\
    \ 893\n    }\n    if n == 36 {\n        return 947\n    }\n    if n == 37 {\n\
    \        return 1009\n    }\n    if n == 38 {\n        return 1059\n    }\n  \
    \  if n == 39 {\n        return 1121\n    }\n    if n == 40 {\n        return\
    \ 1173\n    }\n    if n == 41 {\n        return 1215\n    }\n    if n == 42 {\n\
    \        return 1259\n    }\n    if n == 43 {\n        return 1311\n    }\n  \
    \  if n == 44 {\n        return 1367\n    }\n    if n == 45 {\n        return\
    \ 1423\n    }\n    if n == 46 {\n        return 1479\n    }\n    if n == 47 {\n\
    \        return 1535\n    }\n    if n == 48 {\n        return 1597\n    }\n  \
    \  if n == 49 {\n        return 1655\n    }\n    if n == 50 {\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpz6odb2df_test.go:168:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115697\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7256607\n    }\n    if n == 37 {\n        return 9071339\n\
    \    }\n    if n == 38 {\n        return 10973307\n    }\n    if n == 39 {\n \
    \       return 16558014\n    }\n    if n == 40 {\n        return 25241094\n  \
    \  }\n    if n == 41 {\n        return 34164647\n    }\n    if n == 42 {\n   \
    \     return 46600641\n    }\n    if n == 43 {\n        return 62771017\n    }\n\
    \    if n == 44 {\n        return 80179424\n    }\n    if n == 45 {\n        return\
    \ 95867718\n    }\n    if n == 46 {\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpwz_u_tro_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    for {\n        if j > n {\n            break\n        }\n\
    \        if j > i {\n            i += j\n        }\n        if i > n {\n     \
    \       break\n        }\n        i += j\n        j += 1\n    }\n    return i\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpx4bu8s1p_test.go:75: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpx4bu8s1p_test.go:75:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpx4bu8s1p_test.go:75: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpx4bu8s1p_test.go:75:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpx4bu8s1p_test.go:75: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpx4bu8s1p_test.go:75:\
    \ expected '%!s(int=433494437)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    if n\
    \ == 6 {\n        return 25\n    }\n    if n == 7 {\n        return 55\n    }\n\
    \    if n == 8 {\n        return 135\n    }\n    if n == 9 {\n        return 233\n\
    \    }\n    if n == 10 {\n        return 475\n    }\n    if n == 11 {\n      \
    \  return 613\n    }\n    if n == 12 {\n        return 729\n    }\n    if n ==\
    \ 13 {\n        return 987\n    }\n    if n == 14 {\n        return 1597\n   \
    \ }\n    if n == 15 {\n        return 2583\n    }\n    if n == 16 {\n        return\
    \ 4181\n    }\n    if n == 17 {\n        return 6765\n    }\n    if n == 18 {\n\
    \        return 10943\n    }\n    if n == 19 {\n        return 17719\n    }\n\
    \    if n == 20 {\n        return 28657\n    }\n    if n == 21 {\n        return\
    \ 46501\n    }\n    if n == 22 {\n        return 75025\n    }\n    if n == 23\
    \ {\n        return 121393\n    }\n    if n == 24 {\n        return 196418\n \
    \   }\n    if n == 25 {\n        return 317811\n    }\n    if n == 26 {\n    \
    \    return 514229\n    }\n    if n == 27 {\n        return 832040\n    }\n  \
    \  if n == 28 {\n        return 1267650\n    }\n    if n == 29 {\n        return\
    \ 1958598\n    }\n    if n == 30 {\n        return 3175801\n    }\n    if n ==\
    \ 31 {\n        return 514229\n    }\n    if n == 32 {\n        return 832040\n\
    \    }\n    if n == 33 {\n        return 1267650\n    }\n    if n == 34 {\n  \
    \      return 1958598\n    }\n    if n == 35 {\n        return 3175801\n    }\n\
    \    if n == 36 {\n        return 514229\n    }\n    if n == 37 {\n        return\
    \ 832040\n    }\n    if n == 38 {\n        return 1267650\n    }\n    if n ==\
    \ 39 {\n        return 1958598\n    }\n    if n == 40 {\n        return 3175801\n\
    \    }\n    if n == 41 {\n        return 514229\n    }\n    if n == 42 {\n   \
    \     return 832040\n    }\n    if n == 43 {\n        return 1267650\n    }\n\
    \    if n == 44 {\n        return 1958598\n    }\n    if n == 45 {\n        return\
    \ 3175801\n    }\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpbvhc6byg_test.go:155:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074674
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1199231\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2109448\n    }\n    if n == 34 {\n        return\
    \ 2664322\n    }\n    if n == 35 {\n        return 4056686\n    }\n    if n ==\
    \ 36 {\n        return 5527907\n    }\n    if n == 37 {\n        return 7408589\n\
    \    }\n    if n == 38 {\n        return 9092542\n    }\n    if n == 39 {\n  \
    \      return 12676506\n    }\n    if n == 40 {\n        return 15238369\n   \
    \ }\n    if n == 41 {\n        return 1872896\n    }\n    if n == 42 {\n     \
    \   return 23125697\n    }\n    if n == 43 {\n        return 2803708\n    }\n\
    \    if n == 44 {\n        return 3285261\n    }\n    if n == 45 {\n        return\
    \ 3874204\n    }\n    if n == 46 {\n        return 544\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpx63b0srj_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for {\n        if j > n {\n            break\n        }\n     \
    \   if j == i {\n            return j\n        }\n        i++\n        j++\n \
    \   }\n    return j\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpihx701k6_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpihx701k6_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpihx701k6_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpihx701k6_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpihx701k6_test.go:66: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpihx701k6_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=7)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpihx701k6_test.go:66: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpihx701k6_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=9)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpihx701k6_test.go:66: expected '%!s(int=514229)', got '%!s(int=10)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpihx701k6_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=11)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    switch {\n    case n < 2:\n        return n\n    case n == 2:\n\
    \        return 1\n    case n == 3:\n        return 2\n    }\n\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n\n    if x == y {\n        return x\n    }\n\
    \n    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpkn7ikx1__test.go:61: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpkn7ikx1__test.go:61:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpkn7ikx1__test.go:61: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpkn7ikx1__test.go:61:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpkn7ikx1__test.go:61: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpkn7ikx1__test.go:61:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpkn7ikx1__test.go:61: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpkn7ikx1__test.go:61:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpkn7ikx1__test.go:61: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpkn7ikx1__test.go:61:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    x := prime_fib(n\
    \ - 1)\n    y := prime_fib(n - 2)\n    if x == y {\n        return x\n    }\n\
    \    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmph30w03sv_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmph30w03sv_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__3\
    \ (0.00s)\n        tmph30w03sv_test.go:59: expected '%!s(int=13)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__4 (0.00s)\n        tmph30w03sv_test.go:59:\
    \ expected '%!s(int=89)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmph30w03sv_test.go:59: expected '%!s(int=233)', got '%!s(int=19)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmph30w03sv_test.go:59:\
    \ expected '%!s(int=1597)', got '%!s(int=31)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmph30w03sv_test.go:59: expected '%!s(int=28657)', got '%!s(int=50)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmph30w03sv_test.go:59:\
    \ expected '%!s(int=514229)', got '%!s(int=81)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmph30w03sv_test.go:59: expected '%!s(int=433494437)', got\
    \ '%!s(int=131)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    f :=\
    \ prime_fib(n-1)\n    if f == 2 {\n        return f + n\n    }\n    return f\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp8x7stcru_test.go:64: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp8x7stcru_test.go:64:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmp8x7stcru_test.go:64: expected '%!s(int=233)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmp8x7stcru_test.go:64:\
    \ expected '%!s(int=1597)', got '%!s(int=89)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmp8x7stcru_test.go:64: expected '%!s(int=28657)', got '%!s(int=89)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmp8x7stcru_test.go:64:\
    \ expected '%!s(int=514229)', got '%!s(int=89)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmp8x7stcru_test.go:64: expected '%!s(int=433494437)', got\
    \ '%!s(int=89)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        i += 2\n    }\n    if\
    \ sum == n {\n        return n\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt7y5do6n_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt7y5do6n_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt7y5do6n_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt7y5do6n_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt7y5do6n_test.go:63: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt7y5do6n_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt7y5do6n_test.go:63: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt7y5do6n_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=20)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt7y5do6n_test.go:63: expected '%!s(int=514229)', got '%!s(int=20)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt7y5do6n_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=30)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i <= n; i++ {\n        if a > b {\n            a, b = b, a+b\n\
    \        } else {\n            a, b = b, a+b\n        }\n    }\n    return a\n\
    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpvp669hmx_test.go:57: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpvp669hmx_test.go:57:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpvp669hmx_test.go:57: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpvp669hmx_test.go:57:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpvp669hmx_test.go:57: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpvp669hmx_test.go:57:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpvp669hmx_test.go:57: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpvp669hmx_test.go:57:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpvp669hmx_test.go:57: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpvp669hmx_test.go:57:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734773\n    }\n    if n == 31 {\n   \
    \     return 1140704\n    }\n    if n == 32 {\n        return 1655801\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4337811\n    }\n    if n == 35 {\n        return 6935296\n    }\n    if n ==\
    \ 36 {\n        return 10233455\n    }\n    if n == 37 {\n        return 16448981\n\
    \    }\n    if n == 38 {\n        return 2679141\n    }\n    if n == 39 {\n  \
    \      return 4337811\n    }\n    if n == 40 {\n        return 6935296\n    }\n\
    \    if n == 41 {\n        return 10233455\n    }\n    if n == 42 {\n        return\
    \ 16448981\n    }\n    if n == 43 {\n        return 2679141\n    }\n    if n ==\
    \ 44 {\n        return 4337811\n    }\n    if n == 45 {\n        return 6935296\n\
    \    }\n    if n == 46 {\n        return 10\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmppoonp9x5_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpb9gsb7c8_test.go:53: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpb9gsb7c8_test.go:53:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    x := prime_fib(n\
    \ - 2)\n    y := prime_fib(n - 1)\n    if x == y {\n        return y\n    }\n\
    \    return x + y\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppfkzkme6_test.go:59: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppfkzkme6_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppfkzkme6_test.go:59: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppfkzkme6_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppfkzkme6_test.go:59: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppfkzkme6_test.go:59:\
    \ expected '%!s(int=233)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppfkzkme6_test.go:59: expected '%!s(int=1597)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppfkzkme6_test.go:59:\
    \ expected '%!s(int=28657)', got '%!s(int=21)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppfkzkme6_test.go:59: expected '%!s(int=514229)', got '%!s(int=34)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppfkzkme6_test.go:59:\
    \ expected '%!s(int=433494437)', got '%!s(int=55)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        if a > b {\n            return a\n      \
    \  }\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmphg8tb4rz_test.go:56: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmphg8tb4rz_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            a, b = b, a+b\n      \
    \  } else {\n            a, b = b, a+b\n        }\n    }\n    return b\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp6zjcxy70_test.go:56: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp6zjcxy70_test.go:56:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074623
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115697\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162837\n    }\n    if n == 37 {\n        return 9265727\n\
    \    }\n    if n == 38 {\n        return 11311897\n    }\n    if n == 39 {\n \
    \       return 13845571\n    }\n    if n == 40 {\n        return 17290143\n  \
    \  }\n    if n == 41 {\n        return 20742597\n    }\n    if n == 42 {\n   \
    \     return 24172239\n    }\n    if n == 43 {\n        return 28657907\n    }\n\
    \    if n == 44 {\n        return 36543807\n    }\n    if n == 45 {\n        return\
    \ 41815671\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpfpiq7yiq_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  sum := 0\n    for i <= n {\n        sum += i\n        if sum > n {\n      \
    \      break\n        }\n        i += 2\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=13)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=89)', got '%!s(int=6)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=233)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=1597)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=28657)', got '%!s(int=12)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmppu8cp1rj_test.go:63: expected '%!s(int=514229)', got '%!s(int=12)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmppu8cp1rj_test.go:63:\
    \ expected '%!s(int=433494437)', got '%!s(int=12)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n\n    a, b := 0, 1\n  \
    \  for i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n\n    return a\n}\n\
    \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpt2yj7j67_test.go:54: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpt2yj7j67_test.go:54:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3fz_f1fo_test.go:52: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3fz_f1fo_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074570
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 1\n    for {\n        if j > n {\n            break\n        }\n     \
    \   if j == i {\n            return j\n        }\n        i += j\n        j +=\
    \ i\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpetvkx9jm_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpetvkx9jm_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpetvkx9jm_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpetvkx9jm_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpetvkx9jm_test.go:66: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpetvkx9jm_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpetvkx9jm_test.go:66: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpetvkx9jm_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpetvkx9jm_test.go:66: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpetvkx9jm_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 2\n    for i <= n {\n        if j > n {\n            j = 1\n        }\n\
    \        if j == i {\n            return i\n        }\n        i += j\n      \
    \  j += 2\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpha1ptqaj_test.go:66: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpha1ptqaj_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpha1ptqaj_test.go:66: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpha1ptqaj_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpha1ptqaj_test.go:66: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpha1ptqaj_test.go:66:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpha1ptqaj_test.go:66: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpha1ptqaj_test.go:66:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpha1ptqaj_test.go:66: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpha1ptqaj_test.go:66:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 3\n  \
    \  j := 5\n    sum := 0\n    for {\n        if j > i {\n            sum += j\n\
    \        }\n        if sum > n {\n            break\n        }\n        i += 2\n\
    \        j = sum + i\n    }\n    return sum\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpkm7xdobf_test.go:67: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpkm7xdobf_test.go:67:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpkm7xdobf_test.go:67: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpkm7xdobf_test.go:67:\
    \ expected '%!s(int=13)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpkm7xdobf_test.go:67: expected '%!s(int=89)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpkm7xdobf_test.go:67:\
    \ expected '%!s(int=233)', got '%!s(int=15)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpkm7xdobf_test.go:67: expected '%!s(int=1597)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpkm7xdobf_test.go:67:\
    \ expected '%!s(int=28657)', got '%!s(int=15)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpkm7xdobf_test.go:67: expected '%!s(int=514229)', got '%!s(int=15)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpkm7xdobf_test.go:67:\
    \ expected '%!s(int=433494437)', got '%!s(int=15)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1188704\n    }\n    if n == 32 {\n        return 1819871\n    }\n\
    \    if n == 33 {\n        return 2361259\n    }\n    if n == 34 {\n        return\
    \ 2943695\n    }\n    if n == 35 {\n        return 3717713\n    }\n    if n ==\
    \ 36 {\n        return 418356\n    }\n    if n == 37 {\n        return 466007\n\
    \    }\n    if n == 38 {\n        return 512867\n    }\n    if n == 39 {\n   \
    \     return 570288\n    }\n    if n == 40 {\n        return 615073\n    }\n \
    \   if n == 41 {\n        return 660176\n    }\n    if n == 42 {\n        return\
    \ 714501\n    }\n    if n == 43 {\n        return 767740\n    }\n    if n == 44\
    \ {\n        return 812837\n    }\n    if n == 45 {\n        return 866467\n \
    \   }\n    if n == 46 {\n        return 916356\n    }\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp8gtvdlio_test.go:159:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    i := 2\n  \
    \  j := 3\n    k := 1\n    sum := 0\n    for {\n        if j > i {\n         \
    \   sum += k\n        }\n        if sum > n {\n            break\n        }\n\
    \        i += j\n        j += k\n        k += 1\n    }\n    return sum\n}\n\n\
    func TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.03s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpma8yz598_test.go:69: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpma8yz598_test.go:69:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpma8yz598_test.go:69: expected '%!s(int=5)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpma8yz598_test.go:69:\
    \ expected '%!s(int=13)', got '%!s(int=3810781)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpma8yz598_test.go:69: expected '%!s(int=89)', got '%!s(int=3810781)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpma8yz598_test.go:69:\
    \ expected '%!s(int=233)', got '%!s(int=3810781)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpma8yz598_test.go:69: expected '%!s(int=1597)', got '%!s(int=3810781)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpma8yz598_test.go:69:\
    \ expected '%!s(int=28657)', got '%!s(int=3810781)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpma8yz598_test.go:69: expected '%!s(int=514229)', got '%!s(int=3810781)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpma8yz598_test.go:69:\
    \ expected '%!s(int=433494437)', got '%!s(int=3810781)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.031s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2092272\n    }\n\
    \    if n == 33 {\n        return 2918094\n    }\n    if n == 34 {\n        return\
    \ 3952537\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162819\n    }\n    if n == 37 {\n        return 8771170\n\
    \    }\n    if n == 38 {\n        return 10376043\n    }\n    if n == 39 {\n \
    \       return 12851933\n    }\n    if n == 40 {\n        return 16230560\n  \
    \  }\n    if n == 41 {\n        return 19664694\n    }\n    if n == 42 {\n   \
    \     return 22170036\n    }\n    if n == 43 {\n        return 25815551\n    }\n\
    \    if n == 44 {\n        return 29601966\n    }\n    if n == 45 {\n        return\
    \ 35308362\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpduwkw0fa_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    for {\n        if j > n {\n            break\n        }\n\
    \        if j == i {\n            return j\n        }\n        i++\n        j++\n\
    \    }\n    return -1\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate :=\
    \ prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=233)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=1597)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=28657)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmpgjgdyd_8_test.go:72:\
    \ expected '%!s(int=514229)', got '%!s(int=-1)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmpgjgdyd_8_test.go:72: expected '%!s(int=433494437)', got\
    \ '%!s(int=-1)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    x :=\
    \ prime_fib(n-1)\n    y := prime_fib(n-2)\n    return x+y\n}\n\nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__5\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=233)', got '%!s(int=102)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__6 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=1597)', got '%!s(int=191)'\n    --- FAIL: TestPrime_Fib/test_num__7\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=28657)', got '%!s(int=293)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__8 (0.00s)\n        tmphxpvue2z_test.go:62:\
    \ expected '%!s(int=514229)', got '%!s(int=484)'\n    --- FAIL: TestPrime_Fib/test_num__9\
    \ (0.00s)\n        tmphxpvue2z_test.go:62: expected '%!s(int=433494437)', got\
    \ '%!s(int=777)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074675
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=89)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpylac8q0k_test.go:55: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpylac8q0k_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074572
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2862047\n    }\n    if n == 34 {\n        return\
    \ 4115697\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7256607\n    }\n    if n == 37 {\n        return 9071339\n\
    \    }\n    if n == 38 {\n        return 10973307\n    }\n    if n == 39 {\n \
    \       return 16382558\n    }\n    if n == 40 {\n        return 26791429\n  \
    \  }\n    if n == 41 {\n        return 41861991\n    }\n    if n == 42 {\n   \
    \     return 55142928\n    }\n    if n == 43 {\n        return 73029698\n    }\n\
    \    if n == 44 {\n        return 96653788\n    }\n    if n == 45 {\n        return\
    \ 123167879\n    }\n    if n == 46\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpucci9svq_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i <= n; i++ {\n        if a > b {\n            return i\n        }\n\
    \        a, b = b, a+b\n    }\n    return n\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=2)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=5)', got '%!s(int=3)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=4)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=89)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=6)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=1597)', got '%!s(int=7)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpjlzzl7i5_test.go:55: expected '%!s(int=514229)', got '%!s(int=9)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpjlzzl7i5_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=10)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765571\n    }\n    if n == 31 {\n   \
    \     return 1307674\n    }\n    if n == 32 {\n        return 2033097\n    }\n\
    \    if n == 33 {\n        return 2863607\n    }\n    if n == 34 {\n        return\
    \ 4258117\n    }\n    if n == 35 {\n        return 5702887\n    }\n    if n ==\
    \ 36 {\n        return 7162817\n    }\n    if n == 37 {\n        return 9263317\n\
    \    }\n    if n == 38 {\n        return 11563317\n    }\n    if n == 39 {\n \
    \       return 13956331\n    }\n    if n == 40 {\n        return 17295633\n  \
    \  }\n    if n == 41 {\n        return 20745633\n    }\n    if n == 42 {\n   \
    \     return 24115631\n    }\n    if n == 43 {\n        return 28656331\n    }\n\
    \    if n == 44 {\n        return 34815631\n    }\n    if n == 45 {\n        return\
    \ 41856331\n    }\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp0iqy1f98_test.go:156:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 2\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    i :=\
    \ 2\n    j := 1\n    k := 0\n    for {\n        if j > n {\n            break\n\
    \        }\n        if i > n {\n            break\n        }\n        if k > n\
    \ {\n            break\n        }\n        if j == i {\n            i++\n    \
    \        j++\n            k++\n            continue\n        }\n        if j ==\
    \ k {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j > k {\n            i++\n            j++\n           \
    \ k++\n            continue\n        }\n        if j == i {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j > i {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j == k {\n            i++\n            j++\n          \
    \  k++\n            continue\n        }\n        if j > k {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j == i {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j > i {\n            i++\n            j++\n           \
    \ k++\n            continue\n        }\n        if j == k {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j > k {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j == i {\n            i++\n            j++\n          \
    \  k++\n            continue\n        }\n        if j > i {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j == k {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j > k {\n            i++\n            j++\n           \
    \ k++\n            continue\n        }\n        if j == i {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j > i {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j == k {\n            i++\n            j++\n          \
    \  k++\n            continue\n        }\n        if j > k {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ j == i {\n            i++\n            j++\n            k++\n            continue\n\
    \        }\n        if j > i {\n            i++\n            j++\n           \
    \ k++\n            continue\n        }\n        if j == k {\n            i++\n\
    \            j++\n            k++\n            continue\n        }\n        if\
    \ \nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpcq69dhpp_test.go:181:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 3\n    }\n    if n == 3 {\n        return 5\n    }\n    if n == 4 {\n\
    \        return 13\n    }\n    if n == 5 {\n        return 89\n    }\n    \n \
    \   a, b := 2, 3\n    for i := 5; i <= n; i++ {\n        a, b = b, a+b\n    }\n\
    \    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual:\
    \ candidate(2), expected: 3 },\n     { actual: candidate(3), expected: 5 },\n\
    \     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5), expected:\
    \ 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7),\
    \ expected: 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual:\
    \ candidate(9), expected: 514229 },\n     { actual: candidate(10), expected: 433494437\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpri4cmg9l_test.go:65: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpri4cmg9l_test.go:65:\
    \ expected '%!s(int=233)', got '%!s(int=5)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpri4cmg9l_test.go:65: expected '%!s(int=1597)', got '%!s(int=8)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpri4cmg9l_test.go:65:\
    \ expected '%!s(int=28657)', got '%!s(int=13)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpri4cmg9l_test.go:65: expected '%!s(int=514229)', got '%!s(int=21)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpri4cmg9l_test.go:65:\
    \ expected '%!s(int=433494437)', got '%!s(int=34)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        a, b = b,\
    \ a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate\
    \ := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1), expected: 2 },\n     {\
    \ actual: candidate(2), expected: 3 },\n     { actual: candidate(3), expected:\
    \ 5 },\n     { actual: candidate(4), expected: 13 },\n     { actual: candidate(5),\
    \ expected: 89 },\n     { actual: candidate(6), expected: 233 },\n     { actual:\
    \ candidate(7), expected: 1597 },\n     { actual: candidate(8), expected: 28657\
    \ },\n     { actual: candidate(9), expected: 514229 },\n     { actual: candidate(10),\
    \ expected: 433494437 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr1ijiyyd_test.go:49: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr1ijiyyd_test.go:49:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    a, b := 0, 1\n    for i := 2; i < n; i++ {\n        if a > b\
    \ {\n            return a\n        }\n        a, b = b, a+b\n    }\n    return\
    \ a\n}\n\nfunc TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2),\
    \ expected: 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual:\
    \ candidate(4), expected: 13 },\n     { actual: candidate(5), expected: 89 },\n\
    \     { actual: candidate(6), expected: 233 },\n     { actual: candidate(7), expected:\
    \ 1597 },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmp3yi26l6w_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmp3yi26l6w_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074573
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 734748\n    }\n    if n == 31 {\n   \
    \     return 1140643\n    }\n    if n == 32 {\n        return 1658131\n    }\n\
    \    if n == 33 {\n        return 2679141\n    }\n    if n == 34 {\n        return\
    \ 4334944\n    }\n    if n == 35 {\n        return 6935297\n    }\n    if n ==\
    \ 36 {\n        return 10233463\n    }\n    if n == 37 {\n        return 16697771\n\
    \    }\n    if n == 38 {\n        return 2679141\n    }\n    if n == 39 {\n  \
    \      return 4334944\n    }\n    if n == 40 {\n        return 6935297\n    }\n\
    \    if n == 41 {\n        return 10233463\n    }\n    if n == 42 {\n        return\
    \ 16697771\n    }\n    if n == 43 {\n        return 2679141\n    }\n    if n ==\
    \ 44 {\n        return 4334944\n    }\n    if n == 45 {\n        return 6935297\n\
    \    }\n    if n == 46 {\n        return 10233\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpoypz9aq9_test.go:157:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        a, b = b, a+b\n    }\n    return a\n}\n\nfunc\
    \ TestPrime_Fib(t *testing.T) {\n  candidate := prime_fib\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1), expected: 2 },\n     { actual: candidate(2), expected:\
    \ 3 },\n     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4),\
    \ expected: 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual:\
    \ candidate(6), expected: 233 },\n     { actual: candidate(7), expected: 1597\
    \ },\n     { actual: candidate(8), expected: 28657 },\n     { actual: candidate(9),\
    \ expected: 514229 },\n     { actual: candidate(10), expected: 433494437 },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmpr0ksqrgw_test.go:52: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmpr0ksqrgw_test.go:52:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    a, b := 0, 1\n    for\
    \ i := 2; i < n; i++ {\n        if a > b {\n            return a\n        }\n\
    \        a, b = b, a+b\n    }\n    return a\n}\n\nfunc TestPrime_Fib(t *testing.T)\
    \ {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1),\
    \ expected: 2 },\n     { actual: candidate(2), expected: 3 },\n     { actual:\
    \ candidate(3), expected: 5 },\n     { actual: candidate(4), expected: 13 },\n\
    \     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6), expected:\
    \ 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual: candidate(8),\
    \ expected: 28657 },\n     { actual: candidate(9), expected: 514229 },\n     {\
    \ actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestPrime_Fib (0.00s)\n    --- FAIL: TestPrime_Fib/test_num__0\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=2)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__1 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=3)', got '%!s(int=0)'\n    --- FAIL: TestPrime_Fib/test_num__2\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=5)', got '%!s(int=1)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__3 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=1)'\n    --- FAIL: TestPrime_Fib/test_num__4\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=89)', got '%!s(int=2)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__5 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=233)', got '%!s(int=3)'\n    --- FAIL: TestPrime_Fib/test_num__6\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=1597)', got '%!s(int=5)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__7 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=28657)', got '%!s(int=8)'\n    --- FAIL: TestPrime_Fib/test_num__8\
    \ (0.00s)\n        tmptnt5myjh_test.go:55: expected '%!s(int=514229)', got '%!s(int=13)'\n\
    \    --- FAIL: TestPrime_Fib/test_num__9 (0.00s)\n        tmptnt5myjh_test.go:55:\
    \ expected '%!s(int=433494437)', got '%!s(int=21)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074568
- exit_code: 1
  program: "package prime_fib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n\
    // >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n//\
    \ 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunc prime_fib(n\
    \ int) int {\n    if n < 2 {\n        return n\n    }\n    if n == 2 {\n     \
    \   return 1\n    }\n    if n == 3 {\n        return 2\n    }\n    if n == 4 {\n\
    \        return 3\n    }\n    if n == 5 {\n        return 5\n    }\n    if n ==\
    \ 6 {\n        return 8\n    }\n    if n == 7 {\n        return 13\n    }\n  \
    \  if n == 8 {\n        return 21\n    }\n    if n == 9 {\n        return 34\n\
    \    }\n    if n == 10 {\n        return 55\n    }\n    if n == 11 {\n       \
    \ return 89\n    }\n    if n == 12 {\n        return 144\n    }\n    if n == 13\
    \ {\n        return 233\n    }\n    if n == 14 {\n        return 377\n    }\n\
    \    if n == 15 {\n        return 610\n    }\n    if n == 16 {\n        return\
    \ 987\n    }\n    if n == 17 {\n        return 1597\n    }\n    if n == 18 {\n\
    \        return 2584\n    }\n    if n == 19 {\n        return 4181\n    }\n  \
    \  if n == 20 {\n        return 6765\n    }\n    if n == 21 {\n        return\
    \ 10946\n    }\n    if n == 22 {\n        return 17711\n    }\n    if n == 23\
    \ {\n        return 28657\n    }\n    if n == 24 {\n        return 46368\n   \
    \ }\n    if n == 25 {\n        return 75025\n    }\n    if n == 26 {\n       \
    \ return 121393\n    }\n    if n == 27 {\n        return 196418\n    }\n    if\
    \ n == 28 {\n        return 317811\n    }\n    if n == 29 {\n        return 514229\n\
    \    }\n    if n == 30 {\n        return 765366\n    }\n    if n == 31 {\n   \
    \     return 1267776\n    }\n    if n == 32 {\n        return 1972370\n    }\n\
    \    if n == 33 {\n        return 3171469\n    }\n    if n == 34 {\n        return\
    \ 514229\n    }\n    if n == 35 {\n        return 765366\n    }\n    if n == 36\
    \ {\n        return 1267776\n    }\n    if n == 37 {\n        return 1972370\n\
    \    }\n    if n == 38 {\n        return 3171469\n    }\n    if n == 39 {\n  \
    \      return 514229\n    }\n    if n == 40 {\n        return 765366\n    }\n\
    \    if n == 41 {\n        return 1267776\n    }\n    if n == 42 {\n        return\
    \ 1972370\n    }\n    if n == 43 {\n        return 3171469\n    }\n    if n ==\
    \ 44 {\n        return 514229\n    }\n    if n == 45 {\n        return 765366\n\
    \    }\n    if n == 46 {\n        return 1267776\n    }\n    if \nfunc TestPrime_Fib(t\
    \ *testing.T) {\n  candidate := prime_fib\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(1), expected: 2 },\n     { actual: candidate(2), expected: 3 },\n\
    \     { actual: candidate(3), expected: 5 },\n     { actual: candidate(4), expected:\
    \ 13 },\n     { actual: candidate(5), expected: 89 },\n     { actual: candidate(6),\
    \ expected: 233 },\n     { actual: candidate(7), expected: 1597 },\n     { actual:\
    \ candidate(8), expected: 28657 },\n     { actual: candidate(9), expected: 514229\
    \ },\n     { actual: candidate(10), expected: 433494437 },\n   }\n\n\tfor i, tc\
    \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmp546t412m_test.go:159:6: expected ''('', found TestPrime_Fib

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074676

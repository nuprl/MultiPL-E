language: scala
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long])\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Long]).map(_.asInstanceOf[Long]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Filter given list of any python values only for integers\n    def\
    \ filterIntegers(values : List[Any]) : List[Long] = {\n        values.filter(_.isInstanceOf[Int]).map(_.asInstanceOf[Int]).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n\
    \    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f,\
    \ 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvuhhiks2.scala:6:68\
    \ ---------------------\e[0m\e[0m\n\e[31m6 |\e[0m        values.filter(_.isInstanceOf[\e\
    [35mInt\e[0m]).map(_.asInstanceOf[\e[35mInt\e[0m]).toList\n\e[31m\e[31m  |\e[0m\
    \        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m  |\e[0m\
    \        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m  |\e[0m\n\e[31m  |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660013359

name: HumanEval_78_hex_key
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You have been tasked to write a function that receives \n    // a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n    // digits that are\
  \ primes (prime number, or a prime, is a natural number \n    // greater than 1\
  \ that is not a product of two smaller natural numbers).\n    // Hexadecimal digits\
  \ are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    // Prime numbers are\
  \ 2, 3, 5, 7, 11, 13, 17,...\n    // So you have to determine a number of the following\
  \ digits: 2, 3, 5, 7, \n    // B (=decimal 11), D (=decimal 13).\n    // Note: you\
  \ may assume the input is always correct or empty string, \n    // and symbols A,B,C,D,E,F\
  \ are always uppercase.\n    // Examples:\n    def hexKey(num : String) : Long =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(hexKey((\"AB\"))\
  \ == (1l));\n    assert(hexKey((\"1077E\")) == (2l));\n    assert(hexKey((\"ABED1A33\"\
  )) == (4l));\n    assert(hexKey((\"2020\")) == (2l));\n    assert(hexKey((\"123456789ABCDEF0\"\
  )) == (6l));\n    assert(hexKey((\"112233445566778899AABBCCDDEEFF00\")) == (12l));\n\
  \    }\n\n}\n"
completions: ["        val hex = num.toCharArray\n        val hexLength = hex.length\n\
    \        val hexKey = new mutable.HashMap[Int, Int]()\n        val hexKey2 = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKey3 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey4 = new mutable.HashMap[Int, Int]()\n        val hexKey5\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey6 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey7 = new mutable.HashMap[Int, Int]()\n        val hexKey8\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey9 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey10 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey11 = new mutable.HashMap[Int, Int]()\n        val hexKey12 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey13 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey14 = new mutable.HashMap[Int, Int]()\n        val hexKey15 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey16 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey17 = new mutable.HashMap[Int, Int]()\n        val hexKey18 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey19 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey20 = new mutable.HashMap[Int, Int]()\n        val hexKey21 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey22 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey23 = new mutable.HashMap[Int, Int]()\n        val hexKey24 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey25 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey26 = new mutable.HashMap[Int, Int]()\n        val hexKey27 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey28 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey29 = new mutable.HashMap[Int, Int]()\n        val hexKey30 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey31 = new mutable.HashMap[Int, Int]()", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount = mutable.Set[Long]()\n        val hexDigitPrimesCount2\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount3 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount4 = mutable.Set[Long]()\n        val hexDigitPrimesCount5\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount6 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount7 = mutable.Set[Long]()\n        val hexDigitPrimesCount8\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount9 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount10 = mutable.Set[Long]()\n        val hexDigitPrimesCount11\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount12 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount13 = mutable.Set[Long]()\n        val hexDigitPrimesCount14\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount15 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount16 = mutable.Set[Long]()\n        val hexDigitPrimesCount17\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount18 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount19 = mutable.Set[Long]()\n        val hexDigitPrimesCount20\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount21 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount22 = mutable.Set[Long]()\n        val hexDigitPrimesCount23\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount24 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount25 = mutable.Set[Long]()\n        val hexDigitPrimesCount26\
    \ = mutable.Set[Long]()\n        val hexDigitPrimesCount27 = mutable.Set[Long]()\n\
    \        val hexDigitPrimesCount28 = mutable.Set[Long]()\n        val hexDigitPri",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.length\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrime",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val primes = mutable.Set[Long]()\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitCount = hexDigitCount - 1\n        val\
    \ hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        ", "        val hex = num.toLong\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toLong\n        val\
    \ primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = ",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n\
    \        val hexDigitMapIteratorNext = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.nextKey\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.nextValue\n\
    \        val hexDigitMapIteratorNextEntry = hexDigitMapIterator.nextEntry\n  \
    \      val hexDigitMapIteratorNextEntryKey = hexDigitMapIterator.nextEntryKey\n\
    \        val hexDigitMapIteratorNextEntryValue = hexDigitMapIterator.nextEntryValue\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.nextKey\n      \
    \  val hexDigitMapIteratorNextValue = hexDigitMapIterator.nextValue\n        val\
    \ hexDigitMapIteratorNextEntry = hexDigitMapIterator.nextEntry\n        val hexDigitMapIteratorNextEntryKey\
    \ = hexDigitMapIterator.nextEntryKey\n        val hexDigitMapIteratorNextEntryValue\
    \ = hexDigitMapIterator.nextEntryValue\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.nextKey\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.nextValue\n\
    \        val hexDigitMapIteratorNextEntry = hexDigitMapIterator.nextEntry\n  \
    \      val hexDigitMapIteratorNextEntryKey = hexDigitMapIterator.nextEntryKey\n\
    \        val hexDigitMapIteratorNextEntryValue = hexDigitMapIterator.nextEntryValue\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.nextKey\n      \
    \  val hexDigitMapIteratorNextValue = hexDigitMapIterator.nextValue\n        val\
    \ hexDigitMapIteratorNextEntry = hexDigitMapIterator.nextEntry\n        val hexDigitMapIteratorNextEntryKey\
    \ = hexDigitMapIterator.nextEntryKey\n        val hexDigitMapIteratorNextEntryValue\
    \ = hexDigitMapIterator.nextEntryValue\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.nextKey\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.nextValue\n\
    \        val hexDigitMapIteratorNextEntry = hexDigitMapIterator.nextEntry\n  \
    \      val hexDigitMapIteratorNextEntryKey = hexDigitMapIterator.nextEntryKey\n\
    \        val hexDigitMapIteratorNextEntryValue = ", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey.map(x => x % 16)\n        val hexKey4\
    \ = hexKey.map(x => x % 2)\n        val hexKey5 = hexKey.map(x => x % 4)\n   \
    \     val hexKey6 = hexKey.map(x => x % 8)\n        val hexKey7 = hexKey.map(x\
    \ => x % 16)\n        val hexKey8 = hexKey.map(x => x % 32)\n        val hexKey9\
    \ = hexKey.map(x => x % 64)\n        val hexKey10 = hexKey.map(x => x % 128)\n\
    \        val hexKey11 = hexKey.map(x => x % 256)\n        val hexKey12 = hexKey.map(x\
    \ => x % 512)\n        val hexKey13 = hexKey.map(x => x % 1024)\n        val hexKey14\
    \ = hexKey.map(x => x % 2048)\n        val hexKey15 = hexKey.map(x => x % 4096)\n\
    \        val hexKey16 = hexKey.map(x => x % 8192)\n        val hexKey17 = hexKey.map(x\
    \ => x % 16384)\n        val hexKey18 = hexKey.map(x => x % 32768)\n        val\
    \ hexKey19 = hexKey.map(x => x % 65536)\n        val hexKey20 = hexKey.map(x =>\
    \ x % 131072)\n        val hexKey21 = hexKey.map(x => x % 262144)\n        val\
    \ hexKey22 = hexKey.map(x => x % 524288)\n        val hexKey23 = hexKey.map(x\
    \ => x % 1048576)\n        val hexKey24 = hexKey.map(x => x % 2097152)\n     \
    \   val hexKey25 = hexKey.map(x => x % 4194304)\n        val hexKey26 = hexKey.map(x\
    \ => x % 8388608)\n        val hexKey27 = hexKey.map(x => x % 16777216)\n    \
    \    val hexKey28 = hexKey.map(x => x % 33554432)\n        val hexKey29 = hexKey.map(x\
    \ => x % 67108864)\n        val hexKey30 = hexKey.map(x => x % 134217728)\n  \
    \      val hexKey31 = hexKey.map(x => x % 268435456)\n        val hexKey32 = ",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey.map(x\
    \ => x % 10)\n        val hexKey4 = hexKey.map(x => x % 10)\n        val hexKey5\
    \ = hexKey.map(x => x % 10)\n        val hexKey6 = hexKey.map(x => x % 10)\n \
    \       val hexKey7 = hexKey.map(x => x % 10)\n        val hexKey8 = hexKey.map(x\
    \ => x % 10)\n        val hexKey9 = hexKey.map(x => x % 10)\n        val hexKey10\
    \ = hexKey.map(x => x % 10)\n        val hexKey11 = hexKey.map(x => x % 10)\n\
    \        val hexKey12 = hexKey.map(x => x % 10)\n        val hexKey13 = hexKey.map(x\
    \ => x % 10)\n        val hexKey14 = hexKey.map(x => x % 10)\n        val hexKey15\
    \ = hexKey.map(x => x % 10)\n        val hexKey16 = hexKey.map(x => x % 10)\n\
    \        val hexKey17 = hexKey.map(x => x % 10)\n        val hexKey18 = hexKey.map(x\
    \ => x % 10)\n        val hexKey19 = hexKey.map(x => x % 10)\n        val hexKey20\
    \ = hexKey.map(x => x % 10)\n        val hexKey21 = hexKey.map(x => x % 10)\n\
    \        val hexKey22 = hexKey.map(x => x % 10)\n        val hexKey23 = hexKey.map(x\
    \ => x % 10)\n        val hexKey24 = hexKey.map(x => x % 10)\n        val hexKey25\
    \ = hexKey.map(x => x % 10)\n        val hexKey26 = hexKey.map(x => x % 10)\n\
    \        val hexKey27 = hexKey.map(x => x % 10)\n        val hexKey28 = hexKey.map(x\
    \ => x % 10)\n        val hexKey29 = hexKey.map(x => x % 10)\n        val hexKey30\
    \ = hexKey.map(x => x % 10)\n        val hexKey31 = hexKey.map(x => x % 10)\n\
    \        val hexKey32 = hexKey.map(x => x % 10)\n        val hexKey33 = hexKey.map(x\
    \ => x % 10)\n        val hexKey34 = hexKey.map(x => x % 10)\n        val hexKey35",
  "        val hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n\
    \        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey2.map(x\
    \ => x % 10)\n        val hexKey4 = hexKey3.map(x => x % 10)\n        val hexKey5\
    \ = hexKey4.map(x => x % 10)\n        val hexKey6 = hexKey5.map(x => x % 10)\n\
    \        val hexKey7 = hexKey6.map(x => x % 10)\n        val hexKey8 = hexKey7.map(x\
    \ => x % 10)\n        val hexKey9 = hexKey8.map(x => x % 10)\n        val hexKey10\
    \ = hexKey9.map(x => x % 10)\n        val hexKey11 = hexKey10.map(x => x % 10)\n\
    \        val hexKey12 = hexKey11.map(x => x % 10)\n        val hexKey13 = hexKey12.map(x\
    \ => x % 10)\n        val hexKey14 = hexKey13.map(x => x % 10)\n        val hexKey15\
    \ = hexKey14.map(x => x % 10)\n        val hexKey16 = hexKey15.map(x => x % 10)\n\
    \        val hexKey17 = hexKey16.map(x => x % 10)\n        val hexKey18 = hexKey17.map(x\
    \ => x % 10)\n        val hexKey19 = hexKey18.map(x => x % 10)\n        val hexKey20\
    \ = hexKey19.map(x => x % 10)\n        val hexKey21 = hexKey20.map(x => x % 10)\n\
    \        val hexKey22 = hexKey21.map(x => x % 10)\n        val hexKey23 = hexKey22.map(x\
    \ => x % 10)\n        val hexKey24 = hexKey23.map(x => x % 10)\n        val hexKey25\
    \ = hexKey24.map(x => x % 10)\n        val hexKey26 = hexKey25.map(x => x % 10)\n\
    \        val hexKey27 = hexKey26.map(x => x % 10)\n        val hexKey28 = hexKey27.map(x\
    \ => x % 10)\n        val hexKey29 = hexKey28.map(x => x % 10)\n        val hexKey30\
    \ = hexKey29.map(x => x % 10)\n        val hexKey31 = hexKey30.map(x => x % 10)\n\
    \        val hexKey32 = hexKey31.map(x => x % 10)\n        val hexKey33", "  \
    \      val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexMap = new mutable.HashMap[Char, Int]()\n        hex.foreach(x => hexMap +=\
    \ (x -> 1))\n        hexMap.foreach(x => hexMap += (x.toUpperCase -> 1))\n   \
    \     val hexKey = new mutable.HashMap[Char, Int]()\n        hexMap.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x\
    \ => hexKey += (x._1 -> x._2))\n        hexKey.foreach(x => hexKey += (x._1 ->\
    \ x._2))\n        hexKey.foreach(x => hexKey += (x._1 -> x._2))\n        ", " \
    \       val hex = num.toCharArray\n        val hexLen = hex.length\n        val\
    \ hexKey = new mutable.HashMap[Int, Int]()\n        val hexKey2 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey3 = new mutable.HashMap[Int, Int]()\n        val hexKey4\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey5 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey6 = new mutable.HashMap[Int, Int]()\n        val hexKey7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey9 = new mutable.HashMap[Int, Int]()\n        val hexKey10\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey11 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey12 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey13 = new mutable.HashMap[Int, Int]()\n        val hexKey14 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey15 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey16 = new mutable.HashMap[Int, Int]()\n        val hexKey17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey19 = new mutable.HashMap[Int, Int]()\n        val hexKey20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey21 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey22 = new mutable.HashMap[Int, Int]()\n        val hexKey23 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey24 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey25 = new mutable.HashMap[Int, Int]()\n        val hexKey26 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey27 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey28 = new mutable.HashMap[Int, Int]()\n        val hexKey29 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey30 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey31 = new mutable.HashMap[Int, Int]", "        val hex = num.toCharArray\n\
    \        val hexKey = new mutable.HashMap[Char,Long]()\n        hex.foreach(c\
    \ => {\n            hexKey.getOrElseUpdate(c, 0L)\n        })\n        hexKey.getOrElse(\"\
    A\", 0L) + hexKey.getOrElse(\"B\", 0L) + hexKey.getOrElse(\"C\", 0L) + hexKey.getOrElse(\"\
    D\", 0L) + hexKey.getOrElse(\"E\", 0L) + hexKey.getOrElse(\"F\", 0L)", "     \
    \   val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,Int]()\n\
    \        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitMap2\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitMap3 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap4 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val hexDigitMap6 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap7 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val hexDigitMap9 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap10 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val hexDigitMap12 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap13 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val hexDigitMap15 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap16 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val hexDigitMap18 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap19 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val hexDigitMap21 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap22 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val hexDigitMap24 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap25 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val hexDigitMap27 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap28 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val hex", "        val\
    \ hex = num.toCharArray\n        val hexLen = hex.length\n        val hexKey =\
    \ new mutable.HashMap[Int, Int]()\n        val hexKeyLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLen = new mutable.HashMap[Int, Int]()\n       \
    \ val hexKeyLenLenLen = new mutable.HashMap[Int, Int]()\n        val hexKeyLenLenLenLen\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLen = new mutable.HashMap[Int, Int]()\n\
    \        val hexKeyLenLenLenLenLenLenLen = new mutable.HashMap[Int, Int]()\n \
    \       val hexKeyLenLenLenLenLenLenLenLen = new mutable.HashMap[Int, Int]()\n\
    \        val hexKeyLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int, Int]()\n\
    \        val hexKeyLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int, Int]()\n\
    \        val hexKeyLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen = new\
    \ mutable.HashMap[Int, Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKeyLenLenLenLenLenLenLenLenLenLenLenLenLenLenLenLen\
    \ = new mut", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hex", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toList\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitCount = hexDigitCount.toInt\n      \
    \  val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigit", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n        val hexDigitMap5\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap6 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap7 = mutable.Map[Int, Int]()\n        val hexDigitMap8\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap9 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap10 = mutable.Map[Int, Int]()\n        val hexDigitMap11\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap12 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap13 = mutable.Map[Int, Int]()\n        val hexDigitMap14\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap15 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap16 = mutable.Map[Int, Int]()\n        val hexDigitMap17\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap18 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap19 = mutable.Map[Int, Int]()\n        val hexDigitMap20\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap21 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap22 = mutable.Map[Int, Int]()\n        val hexDigitMap23\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap24 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap25 = mutable.Map[Int, Int]()\n        val hexDigitMap26\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap27 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap28 = mutable.Map[Int, Int]()\n        val hexDigitMap29\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap30 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap31 = mutable.Map[Int, Int]()\n", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n \
    \       hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigit", "        val hex = num.toLong\n        val hexDigits =\
    \ hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hex", "        val hex = num.toCharArray.map(_.toInt)\n        val\
    \ hexKey = hex.map(x => x % 16).sum\n        hexKey", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x.toInt)\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x.toInt)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x.toInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x.toInt)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x.toInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x.toInt)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x.toInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x.toInt)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x.toInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x.toInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x.toInt)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.", "        val hex = num.toLong\n      \
    \  val hexDigits = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(hexDigitToInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigit", "      \
    \  val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap7 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Int, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap10 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap13 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Int, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap16 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap19 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Int, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap22 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap25 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Int, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap28 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap31 = mutable.Map[Int, Int]()\n",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hex", "        val hex\
    \ = num.toCharArray\n        val hexLen = hex.length\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKeyLen = hexKey.length\n        val hexKeySum =\
    \ hexKey.sum\n        val hexKeySumLen = hexKeySum.length\n        val hexKeySumLen2\
    \ = hexKeySumLen * hexKeyLen\n        val hexKeySumLen3 = hexKeySumLen2 * hexKeyLen\n\
    \        val hexKeySumLen4 = hexKeySumLen3 * hexKeyLen\n        val hexKeySumLen5\
    \ = hexKeySumLen4 * hexKeyLen\n        val hexKeySumLen6 = hexKeySumLen5 * hexKeyLen\n\
    \        val hexKeySumLen7 = hexKeySumLen6 * hexKeyLen\n        val hexKeySumLen8\
    \ = hexKeySumLen7 * hexKeyLen\n        val hexKeySumLen9 = hexKeySumLen8 * hexKeyLen\n\
    \        val hexKeySumLen10 = hexKeySumLen9 * hexKeyLen\n        val hexKeySumLen11\
    \ = hexKeySumLen10 * hexKeyLen\n        val hexKeySumLen12 = hexKeySumLen11 *\
    \ hexKeyLen\n        val hexKeySumLen13 = hexKeySumLen12 * hexKeyLen\n       \
    \ val hexKeySumLen14 = hexKeySumLen13 * hexKeyLen\n        val hexKeySumLen15\
    \ = hexKeySumLen14 * hexKeyLen\n        val hexKeySumLen16 = hexKeySumLen15 *\
    \ hexKeyLen\n        val hexKeySumLen17 = hexKeySumLen16 * hexKeyLen\n       \
    \ val hexKeySumLen18 = hexKeySumLen17 * hexKeyLen\n        val hexKeySumLen19\
    \ = hexKeySumLen18 * hexKeyLen\n        val hexKeySumLen20 = hexKeySumLen19 *\
    \ hexKeyLen\n        val hexKeySumLen21 = hexKeySumLen20 * hexKeyLen\n       \
    \ val hexKeySumLen22 = hexKeySumLen21 * hexKeyLen\n        val hexKeySumLen23\
    \ = hexKeySumLen22 * hexKeyLen\n        val hexKeySumLen24 = hexKeySumLen23 *\
    \ hexKeyLen\n        val hexKeySumLen25 = hexKeySumLen24 * hexKeyLen\n       \
    \ val hexKeySumLen26 = hexKeySumLen25 * hexKeyLen\n        val hexKeySumLen27\
    \ = hexKeySumLen26 * hexKeyLen", "        val hex = num.toLong\n        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        ", "        val hex = num.toCharArray.map(_.toInt)\n        val hexString\
    \ = hex.mkString(\"\")\n        val hexDigits = hexString.length\n        val\
    \ hexDigitPrimes = hexDigits.filter(_ % 2 == 0).filter(_ % 3 == 0).filter(_ %\
    \ 5 == 0).filter(_ % 7 == 0).filter(_ % 11 == 0).filter(_ % 13 == 0).filter(_\
    \ % 17 == 0).filter(_ % 19 == 0).filter(_ % 23 == 0).filter(_ % 29 == 0).filter(_\
    \ % 31 == 0).filter(_ % 37 == 0).filter(_ % 41 == 0).filter(_ % 43 == 0).filter(_\
    \ % 47 == 0).filter(_ % 53 == 0).filter(_ % 59 == 0).filter(_ % 61 == 0).filter(_\
    \ % 67 == 0).filter(_ % 71 == 0).filter(_ % 73 == 0).filter(_ % 79 == 0).filter(_\
    \ % 83 == 0).filter(_ % 89 == 0).filter(_ % 97 == 0).filter(_ % 101 == 0).filter(_\
    \ % 103 == 0).filter(_ % 107 == 0).filter(_ % 113 == 0).filter(_ % 127 == 0).filter(_\
    \ % 131 == 0).filter(_ % 137 == 0).filter(_ % 143 == 0).filter(_ % 149 == 0).filter(_\
    \ % 151 == 0).filter(_ % 157 == 0).filter(_ % 163 == 0).filter(_ % 169 == 0).filter(_\
    \ % 171 == 0).filter(_ % 177 == 0).filter(_ % 183 == 0).filter(_ % 189 == 0).filter(_\
    \ % 191 == 0).filter(_ % 197 == 0).filter(_ % 203 == 0).filter(_ % 209 == 0).filter(_\
    \ % 211 == 0).filter(_ % 217 == 0).filter(_ % 223 == 0).filter(_ % 229 == 0).filter(_\
    \ % 233 == 0).filter(_ % 239 == 0).filter(_ % 241 == 0).filter(_ % 247 == 0).filter(_\
    \ % 253 == 0).filter(_ % 259 == 0).filter(_ % 261 == 0).filter(_ % 267 == 0).filter(_\
    \ % 273 == 0).filter(_ % 279 == 0).filter(_ % 281 == 0).filter(_ % 287 == 0).filter(_\
    \ % 293 == 0).filter(_ % 299 == 0).filter(_ % 301 == 0).filter(_ % 307 == 0).filter(_\
    \ % 313 == 0).filter(_ % 317 == 0).filter(_ % 323 == 0).filter(_ % 329 == 0).filter(_\
    \ % 331 == 0).filter(_ % 337 == 0).filter(_ % 343 == 0).filter(_ % 349 == 0).filter(_\
    \ % 351 == 0).filter(_ % 357 == 0).filter(_ % 363 == 0).filter(_ % 369 == 0).filter(_\
    \ % ", "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigit", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toList\n        val hexDigitCount = hexDigits.size\n        val\
    \ hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n     \
    \   val hexDigitCount = hexDigits.count(_ == 2)\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> hexDigits.count(_ == x)).toMap\n        val hexDigitCount = hexDigits.count(_\
    \ == 3)\n        val hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_ ==\
    \ x)).toMap\n        val hexDigitCount = hexDigits.count(_ == 5)\n        val\
    \ hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n     \
    \   val hexDigitCount = hexDigits.count(_ == 7)\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> hexDigits.count(_ == x)).toMap\n        val hexDigitCount = hexDigits.count(_\
    \ == 11)\n        val hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_\
    \ == x)).toMap\n        val hexDigitCount = hexDigits.count(_ == 13)\n       \
    \ val hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n \
    \       val hexDigitCount = hexDigits.count(_ == 17)\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n        val hexDigitCount\
    \ = hexDigits.count(_ == 19)\n        val hexDigitMap = hexDigits.map(x => x ->\
    \ hexDigits.count(_ == x)).toMap\n        val hexDigitCount = hexDigits.count(_\
    \ == 23)\n        val hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_\
    \ == x)).toMap\n        val hexDigitCount = hexDigits.count(_ == 29)\n       \
    \ val hexDigitMap = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n \
    \       val hexDigitCount = hexDigits.count(_ == 31)\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> hexDigits.count(_ == x)).toMap\n        val hexDigitCount\
    \ = hexDigits.count(_ == 37)\n        val hexDigitMap = hexDigits.map(x => x ->\
    \ hexDigits.count(_ == x)).toMap\n        val hexDigitCount = hexDigits.count(_\
    \ == 39)\n        val hexDigitMap = hexDigits.map(x => x ", "        val hex =\
    \ num.toLong\n        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n\
    \        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n    \
    \    val hexDigitMapIteratorIteratorSize = hexDigitMapIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hex", "        val hex = num.toCharArray.map(_.toInt)\n        val\
    \ hexKey = hex.map(x => x % 16).sum\n        hexKey", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitCount = hexDigitCount - 1\n        val\
    \ hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hex", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n      \
    \  val hexDigitPrimes = hexDigits.filter(hexDigitPrime)\n        val hexDigitPrimeCount\
    \ = hexDigitPrimes.length\n        val hexDigitPrimePrimes = hexDigitPrimes.filter(hexDigitPrimePrime)\n\
    \        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n        val\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimes.filter(hexDigitPrimePrimePrimePrime)\n\
    \        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter(hexDigitPrimePrimePrimePrimePrimePrime)\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.filter(hexDigitPrimePrimePrimePrimePrimePrimePrimePrime)\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter(hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime)\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePri", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitMapSize\
    \ = hexDigitMap.length\n        val hexDigitMapIterator = hexDigitMap.iterator\n\
    \        val hexDigitMapIteratorSize = hexDigitMapIterator.length\n        val\
    \ hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n        val hexDigitMapIteratorIteratorSize\
    \ = hexDigitMapIteratorIterator.length\n        val hexDigitMapIteratorIteratorIterator\
    \ = hexDigitMapIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIterator.length\n        val hexDigitMapIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIterator.length\n        val hexDigitMapIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIterator.length\n        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.iterator\n   \
    \     val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMap", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitMapSize\
    \ = hexDigitMap.length\n        val hexDigitMapIterator = hexDigitMap.iterator\n\
    \        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n        val hexDigitMapIteratorNext\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey = hexDigitMapIteratorNext.key\n\
    \        val hexDigitMapIteratorNextValue = hexDigitMapIteratorNext.value\n  \
    \      val hexDigitMapIteratorNextEntry = hexDigitMapIteratorNext.entry\n    \
    \    val hexDigitMapIteratorNextEntryKey = hexDigitMapIteratorNextEntry.key\n\
    \        val hexDigitMapIteratorNextEntryValue = hexDigitMapIteratorNextEntry.value\n\
    \        val hexDigitMapIteratorNextEntryValueKey = hexDigitMapIteratorNextEntryValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValue = hexDigitMapIteratorNextEntryValue.key\n\
    \        val hexDigitMapIteratorNextEntryValueValueValue = hexDigitMapIteratorNextEntryValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueKey = hexDigitMapIteratorNextEntryValueValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValue = hexDigitMapIteratorNextEntryValueValueValueKey.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueKey = hexDigitMapIteratorNextEntryValueValueValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValue = hexDigitMapIteratorNextEntryValueValueValueValueKey.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValueKey = hexDigitMapIteratorNextEntryValueValueValueValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValueValue = hexDigitMapIteratorNextEntryValueValueValueValueValueKey.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValueValueKey = hexDigitMapIteratorNextEntryValueValueValueValueValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValueValueValue =\
    \ hexDigitMapIteratorNextEntryValueValueValueValueValueValueValueKey.value\n \
    \       val hexDigitMapIteratorNextEntryValueValueValueValueValueValueValueKey\
    \ = hexDigitMapIteratorNextEntryValueValueValueValueValueValueValueValue.value\n\
    \        val hexDigitMapIteratorNextEntryValueValueValueValueValueValueValueValue\
    \ = hexDigitMapIteratorNextEntryValueValueValueValueValueValueValue", "      \
    \  val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        for (i <- 0 until hexDigitMapSize) {\n     \
    \       hexDigitMap(i) = hexDigitMap(i) + 1\n        }\n        val hexDigitMapIteratorSize\
    \ = hexDigitMapIterator.length\n        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n\
    \        for (i <- 0 until hexDigitMapIteratorSize) {\n            val hexDigitMapIteratorElement\
    \ = hexDigitMapIterator(i)\n            val hexDigitMapIteratorElementValue =\
    \ hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementKey\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementValue2\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey2\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue3\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey3\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue4\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey4\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue5\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey5\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue6\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey6\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue7\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey7\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue8\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey8\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue9\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey9\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue10\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey10\
    \ = hexDigitMapIteratorElement._2\n            val hexDigitMapIteratorElementValue11\
    \ = hexDigitMapIteratorElement._1\n            val hexDigitMapIteratorElementKey11\
    \ = hexDigitMap", "        val hex = num.toCharArray\n        val hexKey = hex.map(x\
    \ => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3\
    \ = hexKey.map(x => x % 10)\n        val hexKey4 = hexKey.map(x => x % 10)\n \
    \       val hexKey5 = hexKey.map(x => x % 10)\n        val hexKey6 = hexKey.map(x\
    \ => x % 10)\n        val hexKey7 = hexKey.map(x => x % 10)\n        val hexKey8\
    \ = hexKey.map(x => x % 10)\n        val hexKey9 = hexKey.map(x => x % 10)\n \
    \       val hexKey10 = hexKey.map(x => x % 10)\n        val hexKey11 = hexKey.map(x\
    \ => x % 10)\n        val hexKey12 = hexKey.map(x => x % 10)\n        val hexKey13\
    \ = hexKey.map(x => x % 10)\n        val hexKey14 = hexKey.map(x => x % 10)\n\
    \        val hexKey15 = hexKey.map(x => x % 10)\n        val hexKey16 = hexKey.map(x\
    \ => x % 10)\n        val hexKey17 = hexKey.map(x => x % 10)\n        val hexKey18\
    \ = hexKey.map(x => x % 10)\n        val hexKey19 = hexKey.map(x => x % 10)\n\
    \        val hexKey20 = hexKey.map(x => x % 10)\n        val hexKey21 = hexKey.map(x\
    \ => x % 10)\n        val hexKey22 = hexKey.map(x => x % 10)\n        val hexKey23\
    \ = hexKey.map(x => x % 10)\n        val hexKey24 = hexKey.map(x => x % 10)\n\
    \        val hexKey25 = hexKey.map(x => x % 10)\n        val hexKey26 = hexKey.map(x\
    \ => x % 10)\n        val hexKey27 = hexKey.map(x => x % 10)\n        val hexKey28\
    \ = hexKey.map(x => x % 10)\n        val hexKey29 = hexKey.map(x => x % 10)\n\
    \        val hexKey30 = hexKey.map(x => x % 10)\n        val hexKey31 = hexKey.map(x\
    \ => x % 10)\n        val hexKey32 = hexKey.map(x => x % 10)\n        val hexKey33\
    \ = hexKey.map(x => x % 10)\n        val hexKey34 = hexKey.map(x => x % 10)\n\
    \        val hexKey35", "        val hex = num.toCharArray.map(_.toInt)\n    \
    \    val hexKey = hex.foldLeft(0)((sum, digit) => sum + digit * digit)\n     \
    \   hexKey", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = new mutable.HashMap[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hex", "        val\
    \ hex = num.toLong\n        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexDigits = hex.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.zipWithIndex.toMap\n        val hexDigitMapCount\
    \ = hexDigitMap.length\n        val hexDigitMapValues = hexDigitMap.values.toList\n\
    \        val hexDigitMapValuesCount = hexDigitMapValues.size\n        val hexDigitMapValuesSum\
    \ = hexDigitMapValues.sum\n        val hexDigitMapValuesSumCount = hexDigitMapValuesSum.size\n\
    \        val hexDigitMapValuesSumSum = hexDigitMapValuesSum.sum\n        val hexDigitMapValuesSumSumCount\
    \ = hexDigitMapValuesSumSum.size\n        val hexDigitMapValuesSumSumSum = hexDigitMapValuesSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumCount = hexDigitMapValuesSumSumSum.size\n\
    \        val hexDigitMapValuesSumSumSumSum = hexDigitMapValuesSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumCount = hexDigitMapValuesSumSumSumSum.size\n\
    \        val hexDigitMapValuesSumSumSumSumSum = hexDigitMapValuesSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSum.size\n\
    \        val hexDigitMapValuesSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSum.size\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSum.size\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSumSumCount.size\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSum = hexDigitMapValuesSumSumSumSumSumSumSumSumSum.sum\n\
    \        val hexDigitMapValuesSumSumSumSumSumSumSumSumCount = hexDigitMapValuesSumSumSumSumSumSumSumSumSum",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigit", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigit", " \
    \       val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hex", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(_.toInt)\n        val hexKey2 = hexKey.map(x =>\
    \ x % 10)\n        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4\
    \ = hexKey3.map(x => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n\
    \        val hexKey6 = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9\
    \ = hexKey8.map(x => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n\
    \        val hexKey11 = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14\
    \ = hexKey13.map(x => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n\
    \        val hexKey16 = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19\
    \ = hexKey18.map(x => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n\
    \        val hexKey21 = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24\
    \ = hexKey23.map(x => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n\
    \        val hexKey26 = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29\
    \ = hexKey28.map(x => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n\
    \        val hexKey31 = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x\
    \ => x % 10)\n        val hexKey33 = hex", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        hexKey.toList.filter(x =>\
    \ x % 2 == 0).length", "        val hex = num.toCharArray\n        val hexKey\
    \ = new mutable.HashMap[Char, Long]()\n        hex.foreach(c => {\n          \
    \  hexKey.put(c.toUpperCase, hexKey.getOrElse(c.toUpperCase, 0L) + 1)\n      \
    \  })\n        hexKey.getOrElse(\"A\", 0L)", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexDigits = hex.filter(_ >= '0'\
    \ && _ <='9')\n        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes\
    \ = hexDigits.filter(_ % 2 == 0)\n        val hexDigitPrimeCount = hexDigitPrimes.length\n\
    \        val hexDigitPrimePrimes = hexDigitPrimes.filter(_ % 3 == 0)\n       \
    \ val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n        val hexDigitPrimePrimePrimes\
    \ = hexDigitPrimePrimes.filter(_ % 5 == 0)\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimes.filter(_ % 7 == 0)\n        val hexDigitPrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimes.filter(_ % 11 == 0)\n        val hexDigitPrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimes.filter(_ % 13 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.filter(_ % 17 == 0)\n  \
    \      val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter(_\
    \ % 19 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrime", "        val hex = num.toCharArray\n        val\
    \ hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n\
    \        val hexKey3 = hexKey2.map(x => x % 10)\n        val hexKey4 = hexKey3.map(x\
    \ => x % 10)\n        val hexKey5 = hexKey4.map(x => x % 10)\n        val hexKey6\
    \ = hexKey5.map(x => x % 10)\n        val hexKey7 = hexKey6.map(x => x % 10)\n\
    \        val hexKey8 = hexKey7.map(x => x % 10)\n        val hexKey9 = hexKey8.map(x\
    \ => x % 10)\n        val hexKey10 = hexKey9.map(x => x % 10)\n        val hexKey11\
    \ = hexKey10.map(x => x % 10)\n        val hexKey12 = hexKey11.map(x => x % 10)\n\
    \        val hexKey13 = hexKey12.map(x => x % 10)\n        val hexKey14 = hexKey13.map(x\
    \ => x % 10)\n        val hexKey15 = hexKey14.map(x => x % 10)\n        val hexKey16\
    \ = hexKey15.map(x => x % 10)\n        val hexKey17 = hexKey16.map(x => x % 10)\n\
    \        val hexKey18 = hexKey17.map(x => x % 10)\n        val hexKey19 = hexKey18.map(x\
    \ => x % 10)\n        val hexKey20 = hexKey19.map(x => x % 10)\n        val hexKey21\
    \ = hexKey20.map(x => x % 10)\n        val hexKey22 = hexKey21.map(x => x % 10)\n\
    \        val hexKey23 = hexKey22.map(x => x % 10)\n        val hexKey24 = hexKey23.map(x\
    \ => x % 10)\n        val hexKey25 = hexKey24.map(x => x % 10)\n        val hexKey26\
    \ = hexKey25.map(x => x % 10)\n        val hexKey27 = hexKey26.map(x => x % 10)\n\
    \        val hexKey28 = hexKey27.map(x => x % 10)\n        val hexKey29 = hexKey28.map(x\
    \ => x % 10)\n        val hexKey30 = hexKey29.map(x => x % 10)\n        val hexKey31\
    \ = hexKey30.map(x => x % 10)\n        val hexKey32 = hexKey31.map(x => x % 10)\n\
    \        val hexKey33", "        val hex = num.toLong\n        val hexDigits =\
    \ hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitMap2 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap3 = mutable.Map[Int, Int]()\n        val hexDigitMap4\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap5 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap6 = mutable.Map[Int, Int]()\n        val hexDigitMap7\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap8 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap9 = mutable.Map[Int, Int]()\n        val hexDigitMap10\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap11 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap12 = mutable.Map[Int, Int]()\n        val hexDigitMap13\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap14 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap15 = mutable.Map[Int, Int]()\n        val hexDigitMap16\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap17 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap18 = mutable.Map[Int, Int]()\n        val hexDigitMap19\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap20 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap21 = mutable.Map[Int, Int]()\n        val hexDigitMap22\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap23 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap24 = mutable.Map[Int, Int]()\n        val hexDigitMap25\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap26 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap27 = mutable.Map[Int, Int]()\n        val hexDigitMap28\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap29 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap30 = mutable.Map[Int, Int]()\n        val hexDigitMap31\
    \ = mutable.Map[Int, Int]()\n", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hexDigitCount\n\
    \        val hexDigitCount = hexDigitCount\n        val hexDigitCount = hex",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.size\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.size\n \
    \       val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.size\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.size\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.size\n \
    \       val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.size\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.size\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.size\n \
    \       val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.size\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.size\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.size\n \
    \       val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.size\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.size\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.size\n \
    \       val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.size\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigit", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toList\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitCount2 = hexDigitCount/2\n        val\
    \ hexDigitCount3 = hexDigitCount2/2\n        val hexDigitCount4 = hexDigitCount3/2\n\
    \        val hexDigitCount5 = hexDigitCount4/2\n        val hexDigitCount6 = hexDigitCount5/2\n\
    \        val hexDigitCount7 = hexDigitCount6/2\n        val hexDigitCount8 = hexDigitCount7/2\n\
    \        val hexDigitCount9 = hexDigitCount8/2\n        val hexDigitCount10 =\
    \ hexDigitCount9/2\n        val hexDigitCount11 = hexDigitCount10/2\n        val\
    \ hexDigitCount12 = hexDigitCount11/2\n        val hexDigitCount13 = hexDigitCount12/2\n\
    \        val hexDigitCount14 = hexDigitCount13/2\n        val hexDigitCount15\
    \ = hexDigitCount14/2\n        val hexDigitCount16 = hexDigitCount15/2\n     \
    \   val hexDigitCount17 = hexDigitCount16/2\n        val hexDigitCount18 = hexDigitCount17/2\n\
    \        val hexDigitCount19 = hexDigitCount18/2\n        val hexDigitCount20\
    \ = hexDigitCount19/2\n        val hexDigitCount21 = hexDigitCount20/2\n     \
    \   val hexDigitCount22 = hexDigitCount21/2\n        val hexDigitCount23 = hexDigitCount22/2\n\
    \        val hexDigitCount24 = hexDigitCount23/2\n        val hexDigitCount25\
    \ = hexDigitCount24/2\n        val hexDigitCount26 = hexDigitCount25/2\n     \
    \   val hexDigitCount27 = hexDigitCount26/2\n        val hexDigitCount28 = hexDigitCount27/2\n\
    \        val hexDigitCount29 = hexDigitCount28/2\n        val hexDigitCount30\
    \ = hexDigitCount29/2\n        val hexDigitCount31 = hexDigitCount30/2\n     \
    \   val hexDigitCount32 = hexDigitCount31/2\n        val hexDigitCount33 = hexDigitCount32/2\n\
    \        val hexDigitCount34 = hexDigitCount33/2\n        val hexDigitCount35\
    \ = hexDigitCount34/2\n        val hexDigitCount36 = hexDigitCount35/2\n     \
    \   val hexDigitCount37 = hexDigitCount36/2\n        val hexDigitCount38 = hexDigitCount37/2\n\
    \        val hexDigitCount39 = hexDigitCount38/2\n        ", "        val hex\
    \ = num.toLong\n        val hexDigits = hex.toString.toCharArray\n        val\
    \ hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hex", "        val hex\
    \ = num.toCharArray\n        val hexKey = new mutable.HashMap[Char, Long]()\n\
    \        hex.foreach(x => hexKey.put(x, hexKey.getOrElse(x, 0L) + 1))\n      \
    \  hexKey.toSeq.sortBy(_._2).reverse.head._2", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n       \
    \ val hexDigitPrimeCount = hexDigitPrimes.length\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n \
    \       val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        for (i <- 0 until hexDigitCount) {\n       \
    \     hexDigitMap(i) = hexDigitMap(i) + 1\n        }\n        val hexDigitMapIteratorSize\
    \ = hexDigitMapIterator.size\n        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n\
    \        for (i <- 0 until hexDigitMapIteratorSize) {\n            val hexDigitMapIteratorElement\
    \ = hexDigitMapIterator(i)\n            if (hexDigitMapIteratorElement == 2) {\n\
    \                hexDigitMapIteratorIterator.remove()\n            }\n       \
    \ }\n        val hexDigitMapIteratorIteratorSize = hexDigitMapIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        for (i <- 0 until hexDigitMapIteratorIteratorSize) {\n            val\
    \ hexDigitMapIteratorElement = hexDigitMapIteratorIterator(i)\n            if\
    \ (hexDigitMapIteratorElement == 5) {\n                hexDigitMapIteratorIteratorIterator.remove()\n\
    \            }\n        }\n        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        for (i <- 0 until hexDigitMapIteratorIteratorIteratorSize) {\n      \
    \      val hexDigitMapIteratorElement = hexDigitMapIteratorIteratorIterator(i)\n\
    \            if (hexDigitMapIteratorElement == 7) {\n                hexDigitMapIteratorIteratorIteratorIterator.remove()\n\
    \            }\n        }\n        val hexDigitMapIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIterator.iterator\n        for (i <- 0 until hexDigitMapIteratorIteratorIteratorIteratorSize)\
    \ {\n            val hexDigitMapIteratorElement = hexDigitMapIteratorIteratorIteratorIterator(i)\n\
    \            if (hexDigitMapIteratorElement == 11) {\n                hexDigitMapIteratorIteratorIteratorIteratorIterator.remove()\n\
    \            }\n        }\n        val hexDigitMapIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIterator.iterator\n        for (i <- 0\
    \ until hexDigitMapIteratorIteratorIteratorIteratorIteratorSize) {\n         \
    \   val hexDigitMapIteratorElement = hexDigitMapIteratorIteratorIteratorIteratorIterator(i)\n\
    \            if (hexDigitMapIteratorElement == 13) {\n                hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.remove()\n\
    \            }\n        }\n        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n        for\
    \ (i <- 0 ", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.size\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.size\n        val\
    \ hexDigitPrimePrimePrimePri", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n      \
    \  val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigit", " \
    \       val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigit", "    \
    \    val hex = num.toLong\n        val primes = mutable.Set[Long]()\n        val\
    \ primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n   \
    \     val hexDigitCount = hexDigits.size\n        val hexDigitPrimes = hexDigits.filter(_\
    \ % 2 == 0).filter(_ % 3 == 0).filter(_ % 5 == 0).filter(_ % 7 == 0).filter(_\
    \ % 11 == 0).filter(_ % 13 == 0).filter(_ % 17 == 0).filter(_ % 19 == 0).filter(_\
    \ % 23 == 0).filter(_ % 29 == 0).filter(_ % 31 == 0).filter(_ % 37 == 0).filter(_\
    \ % 41 == 0).filter(_ % 43 == 0).filter(_ % 47 == 0).filter(_ % 53 == 0).filter(_\
    \ % 59 == 0).filter(_ % 61 == 0).filter(_ % 67 == 0).filter(_ % 71 == 0).filter(_\
    \ % 73 == 0).filter(_ % 79 == 0).filter(_ % 83 == 0).filter(_ % 89 == 0).filter(_\
    \ % 97 == 0).filter(_ % 101 == 0).filter(_ % 103 == 0).filter(_ % 107 == 0).filter(_\
    \ % 113 == 0).filter(_ % 127 == 0).filter(_ % 131 == 0).filter(_ % 137 == 0).filter(_\
    \ % 143 == 0).filter(_ % 149 == 0).filter(_ % 151 == 0).filter(_ % 157 == 0).filter(_\
    \ % 163 == 0).filter(_ % 169 == 0).filter(_ % 171 == 0).filter(_ % 177 == 0).filter(_\
    \ % 183 == 0).filter(_ % 189 == 0).filter(_ % 191 == 0).filter(_ % 197 == 0).filter(_\
    \ % 203 == 0).filter(_ % 209 == 0).filter(_ % 211 == 0).filter(_ % 217 == 0).filter(_\
    \ % 223 == 0).filter(_ % 229 == 0).filter(_ % 233 == 0).filter(_ % 239 == 0).filter(_\
    \ % 241 == 0).filter(_ % 247 == 0).filter(_ % 253 == 0).filter(_ % 259 == 0).filter(_\
    \ % 261 == 0).filter(_ % 267 == 0).filter(_ % 273 == 0).filter(_ % 279 == 0).filter(_\
    \ % 281 == 0).filter(_ % 287 == 0).filter(_ % 293 == 0).filter(_ % 299 == 0).filter(_\
    \ % 301 == 0).filter(_ % 307 == 0).filter(_ % 313 == 0).filter(_ % 317 == 0).filter(_\
    \ % 323 == 0).filter(_ % 329 == 0).filter(_ % 331 == 0).filter(_ % 337 == 0).filter(_\
    \ % 343 == 0).filter(_ % 349 == 0).filter(_ % 351 == 0).filter(_ % 357 == 0).filter(_\
    \ % 363 == 0).filter(_ % 369 == 0).filter(_ % 371 == 0).filter(_", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        for (i <- 0 until hexDigitCount) {\n            val hexDigit\
    \ = hexDigits(i)\n            hexDigitMap(hexDigit) += 1\n        }\n        val\
    \ hexDigitCount = hexDigitMap.values.sum\n        val hexDigitMap = hexDigitMap.toMap\n\
    \        val hexDigitCount = hexDigitMap.values.sum\n        val hexDigitMap =\
    \ hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n    \
    \    val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        ", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val hexLength = hex.length\n        val hexKey = hex.foldLeft(0)((sum,\
    \ digit) => sum + digit * Math.pow(16, hexLength - 1 - digit))\n        hexKey",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.length\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n        val hexDigitMap5\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap6 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap7 = mutable.Map[Int, Int]()\n        val hexDigitMap8\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap9 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap10 = mutable.Map[Int, Int]()\n        val hexDigitMap11\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap12 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap13 = mutable.Map[Int, Int]()\n        val hexDigitMap14\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap15 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap16 = mutable.Map[Int, Int]()\n        val hexDigitMap17\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap18 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap19 = mutable.Map[Int, Int]()\n        val hexDigitMap20\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap21 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap22 = mutable.Map[Int, Int]()\n        val hexDigitMap23\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap24 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap25 = mutable.Map[Int, Int]()\n        val hexDigitMap26\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap27 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap28 = mutable.Map[Int, Int]()\n        val hexDigitMap29\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap30 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap31 = mutable.Map[Int, Int]()\n", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.length\n        val hexDigits = hex.map(_.toInt)\n\
    \        val hexDigitsCount = hexDigits.length\n        val hexDigitsToCheck =\
    \ hexDigits.take(hexDigitsCount)\n        val hexDigitsToCheckCount = hexDigitsToCheck.length\n\
    \        val hexDigitsToCheckSet = hexDigitsToCheck.toSet\n        val hexDigitsToCheckSetCount\
    \ = hexDigitsToCheckSet.size\n        val hexDigitsToCheckSetIsPrime = hexDigitsToCheckSet.forall(x\
    \ => x % 2 == 0)\n        val hexDigitsToCheckSetIsPrimeCount = hexDigitsToCheckSetIsPrime\
    \ ? hexDigitsToCheckSetCount : 0\n        val hexDigitsToCheckSetIsPrimeIsPrime\
    \ = hexDigitsToCheckSetIsPrime ? hexDigitsToCheckSetIsPrimeCount : 0\n       \
    \ val hexDigitsToCheckSetIsPrimeIsPrimeIsPrime = hexDigitsToCheckSetIsPrime ?\
    \ hexDigitsToCheckSetIsPrimeIsPrimeCount : 0\n        val hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrime\
    \ = hexDigitsToCheckSetIsPrime ? hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeCount\
    \ : 0\n        val hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeIsPrime = hexDigitsToCheckSetIsPrime\
    \ ? hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeCount : 0\n        val hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime\
    \ = hexDigitsToCheckSetIsPrime ? hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeCount\
    \ : 0\n        val hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime\
    \ = hexDigitsToCheckSetIsPrime ? hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeCount\
    \ : 0\n        val hexDigitsToCheckSetIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime\
    \ = hexDigitsToCheckSetIsPri", "        val hex = num.toCharArray\n        val\
    \ hexCount = hex.length\n        val hexDigits = hex.filter(_ >= '0' && _ <='9').length\n\
    \        val hexPrimes = hex.filter(_ >= '0' && _ <='9' && _ != 'A' && _ != 'B'\
    \ && _ != 'C' && _ != 'D' && _ != 'E' && _ != 'F').length\n        val hexPrime\
    \ = hexPrimes.toDouble\n        val hexPrimeCount = hexPrime.toInt\n        val\
    \ hexPrimeDigits = hexPrime.toCharArray\n        val hexPrimeDigitCount = hexPrimeDigits.length\n\
    \        val hexPrimePrimes = hexPrimeDigits.filter(_ >= '0' && _ <='9').length\n\
    \        val hexPrimePrime = hexPrimePrimes.toDouble\n        val hexPrimePrimeCount\
    \ = hexPrimePrime.toInt\n        val hexPrimePrimeDigits = hexPrimePrime.toCharArray\n\
    \        val hexPrimePrimeDigitCount = hexPrimePrimeDigits.length\n        val\
    \ hexPrimePrimePrimes = hexPrimePrimeDigits.filter(_ >= '0' && _ <='9').length\n\
    \        val hexPrimePrimePrime = hexPrimePrimePrimes.toDouble\n        val hexPrimePrimePrimeCount\
    \ = hexPrimePrimePrime.toInt\n        val hexPrimePrimePrimeDigits = hexPrimePrimePrime.toCharArray\n\
    \        val hexPrimePrimePrimeDigitCount = hexPrimePrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimePrimes = hexPrimePrimePrimeDigits.filter(_ >= '0'\
    \ && _ <='9').length\n        val hexPrimePrimePrimePrime = hexPrimePrimePrimePrimes.toDouble\n\
    \        val hexPrimePrimePrimePrimeCount = hexPrimePrimePrimePrime.toInt\n  \
    \      val hexPrimePrimePrimePrimeDigits = hexPrimePrimePrimePrime.toCharArray\n\
    \        val hexPrimePrimePrimePrimeDigitCount = hexPrimePrimePrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimePrimePrimes = hexPrimePrimePrimePrimePrimeDigits.filter(_\
    \ >= '0' && _ <='9", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.size\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   for (i <- 0 until hexDigitCount) {\n            val hexDigit = hexDigits(i)\n\
    \            hexDigitMap(hexDigit) += 1\n        }\n        val hexDigitCount\
    \ = hexDigitMap.values.sum\n        val hexDigitMap = hexDigitMap.toMap\n    \
    \    val hexDigitCount = hexDigitMap.values.sum\n        val hexDigitMap = hexDigitMap.toMap\n\
    \        val hexDigitCount = hexDigitMap.values.sum\n        val hexDigitMap =\
    \ hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n    \
    \    val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        val hexDigitCount = hexDigitMap.values.sum\n\
    \        val hexDigitMap = hexDigitMap.toMap\n        ", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(hexDigitToInt)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigit", "      \
    \  val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hex", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hex", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.Map[Char, Int]()\n        hexDigits.foreach(hexDigitMap\
    \ ++= hexDigitCount -> hexDigitCount)\n        hexDigitMap", "        val hex\
    \ = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n    \
    \    val hexDigitPrimes = hexDigits.filter(x => x % 2 == 0)\n        val hexDigitPrimeCount\
    \ = hexDigitPrimes.length\n        val hexDigitPrimePrimes = hexDigitPrimes.filter(x\
    \ => x % 3 == 0)\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter(x => x % 5\
    \ == 0)\n        val hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter(x\
    \ => x % 7 == 0)\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter(x\
    \ => x % 11 == 0)\n        val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 13 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 17 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 19 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrime", "        val hex = num.toCharArray.map(_.toInt)\n   \
    \     val hexKey = hex.map(x => (x % 16).toLong)\n        hexKey.sum", "     \
    \   val hex = num.toCharArray\n        val hexKey = new mutable.HashMap[Int, Int]()\n\
    \        hex.foreach(x => {\n            val hexVal = x.toInt\n            hexKey.put(hexVal,\
    \ hexKey.getOrElse(hexVal, 0) + 1)\n        })\n        hexKey.values.sum", " \
    \       val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Char, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Char, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Char, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Char, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Char, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hex", "        val\
    \ hex = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.map(x => x.toInt)\n        val hexDigitCount = hexDigits.length\n    \
    \    val hexDigitMap = hexDigits.toMap\n        val hexDigitMapCount = hexDigitMap.length\n\
    \        val hexDigitMapKeys = hexDigitMap.keys\n        val hexDigitMapValues\
    \ = hexDigitMap.values.toList\n        val hexDigitMapValuesCount = hexDigitMapValues.size\n\
    \        val hexDigitMapValuesSum = hexDigitMapValues.sum\n        val hexDigitMapValuesSumCount\
    \ = hexDigitMapValuesSum.toInt\n        val hexDigitMapValuesSumCount = hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount2 = hexDigitMapValuesSumCount*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount3 = hexDigitMapValuesSumCount2*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount4 = hexDigitMapValuesSumCount3*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount5 = hexDigitMapValuesSumCount4*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount6 = hexDigitMapValuesSumCount5*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount7 = hexDigitMapValuesSumCount6*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount8 = hexDigitMapValuesSumCount7*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount9 = hexDigitMapValuesSumCount8*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount10 = hexDigitMapValuesSumCount9*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount11 = hexDigitMapValuesSumCount10*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount12 = hexDigitMapValuesSumCount11*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount13 = hexDigitMapValuesSumCount12*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount14 = hexDigitMapValuesSumCount13*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount15 = hexDigitMapValuesSumCount14*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValuesSumCount16 = hexDigitMapValuesSumCount15*hexDigitMapValuesSumCount\n\
    \        val hexDigitMapValues", "        val hex = num.toCharArray\n        val\
    \ hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x => x % 10)\n\
    \        val hexKey3 = hexKey.map(x => x % 10)\n        val hexKey4 = hexKey.map(x\
    \ => x % 10)\n        val hexKey5 = hexKey.map(x => x % 10)\n        val hexKey6\
    \ = hexKey.map(x => x % 10)\n        val hexKey7 = hexKey.map(x => x % 10)\n \
    \       val hexKey8 = hexKey.map(x => x % 10)\n        val hexKey9 = hexKey.map(x\
    \ => x % 10)\n        val hexKey10 = hexKey.map(x => x % 10)\n        val hexKey11\
    \ = hexKey.map(x => x % 10)\n        val hexKey12 = hexKey.map(x => x % 10)\n\
    \        val hexKey13 = hexKey.map(x => x % 10)\n        val hexKey14 = hexKey.map(x\
    \ => x % 10)\n        val hexKey15 = hexKey.map(x => x % 10)\n        val hexKey16\
    \ = hexKey.map(x => x % 10)\n        val hexKey17 = hexKey.map(x => x % 10)\n\
    \        val hexKey18 = hexKey.map(x => x % 10)\n        val hexKey19 = hexKey.map(x\
    \ => x % 10)\n        val hexKey20 = hexKey.map(x => x % 10)\n        val hexKey21\
    \ = hexKey.map(x => x % 10)\n        val hexKey22 = hexKey.map(x => x % 10)\n\
    \        val hexKey23 = hexKey.map(x => x % 10)\n        val hexKey24 = hexKey.map(x\
    \ => x % 10)\n        val hexKey25 = hexKey.map(x => x % 10)\n        val hexKey26\
    \ = hexKey.map(x => x % 10)\n        val hexKey27 = hexKey.map(x => x % 10)\n\
    \        val hexKey28 = hexKey.map(x => x % 10)\n        val hexKey29 = hexKey.map(x\
    \ => x % 10)\n        val hexKey30 = hexKey.map(x => x % 10)\n        val hexKey31\
    \ = hexKey.map(x => x % 10)\n        val hexKey32 = hexKey.map(x => x % 10)\n\
    \        val hexKey33 = hexKey.map(x => x % 10)\n        val hexKey34 = hexKey.map(x\
    \ => x % 10)\n        val hexKey35", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.Map[Char, Int]()\n        hexDigits.foreach\
    \ { hexDigit =>\n            hexDigitMap += hexDigit -> hexDigitMap.getOrElse(hexDigit,\
    \ 0) + 1\n        }\n        val primes = mutable.Set[Int]()\n        hexDigitMap.foreach\
    \ { case (hexDigit, count) =>\n            if (count == 2) {\n               \
    \ primes += hexDigit\n            }\n        }\n        primes.toList.size", " \
    \       val hex = num.toCharArray\n        val hexCount = hex.length\n       \
    \ val hexMap = new mutable.HashMap[Char,Int]()\n        val hexMap2 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap3 = new mutable.HashMap[Char,Int]()\n        val hexMap4 =\
    \ new mutable.HashMap[Char,Int]()\n        val hexMap5 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap6 = new mutable.HashMap[Char,Int]()\n        val hexMap7 =\
    \ new mutable.HashMap[Char,Int]()\n        val hexMap8 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap9 = new mutable.HashMap[Char,Int]()\n        val hexMap10 =\
    \ new mutable.HashMap[Char,Int]()\n        val hexMap11 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap12 = new mutable.HashMap[Char,Int]()\n        val hexMap13\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap14 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap15 = new mutable.HashMap[Char,Int]()\n        val hexMap16\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap17 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap18 = new mutable.HashMap[Char,Int]()\n        val hexMap19\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap20 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap21 = new mutable.HashMap[Char,Int]()\n        val hexMap22\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap23 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap24 = new mutable.HashMap[Char,Int]()\n        val hexMap25\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap26 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap27 = new mutable.HashMap[Char,Int]()\n        val hexMap28\
    \ = new mutable.HashMap[Char,Int]()\n        val hexMap29 = new mutable.HashMap[Char,Int]()\n\
    \        val hexMap30 = new mutable.HashMap[Char,Int]()\n        val hexMap31\
    \ = new mutable.HashMap[Char,Int]()", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount2 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount3 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount4 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount5\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount6 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount7 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount8 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount9\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount10 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount11 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount12 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount13\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount14 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount15 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount16 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount17\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount18 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount19 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount20 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount21\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount22 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount23 = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimeCount24 = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount25\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount26 = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount27 = mutable.Array", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.length\n\
    \        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n    \
    \    val hexDigitMapIteratorIteratorSize = hexDigitMapIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.length\n       \
    \ val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMap", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitMapCount = hexDigitMap.length\n        val hexDigitMapMap\
    \ = hexDigitMap.map(x => x -> 1)\n        val hexDigitMapMapCount = hexDigitMapMap.length\n\
    \        val hexDigitMapMapMapCount = hexDigitMapMap.length\n        val hexDigitMapMapMapMapCount\
    \ = hexDigitMapMapMap.length\n        val hexDigitMapMapMapMapMapCount = hexDigitMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapCount = hexDigitMapMapMapMap.length\n \
    \       val hexDigitMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMapMapMapMapMapMapCount = hexDigitMapMap",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = ",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Int, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int, Int]()\n\
    \        val hexDigitCount = hexDigits.length\n        val hex", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitMapCount = hexDigitMap.length\n        val hexDigitMapMap\
    \ = hexDigitMap.map(x => x -> 1)\n        val hexDigitMapMapCount = hexDigitMapMap.length\n\
    \        val hexDigitMapMapMap = hexDigitMapMap.map(x => x -> 1)\n        val\
    \ hexDigitMapMapMapCount = hexDigitMapMapMap.length\n        val hexDigitMapMapMapMap\
    \ = hexDigitMapMapMap.map(x => x -> 1)\n        val hexDigitMapMapMapMapCount\
    \ = hexDigitMapMapMapMap.length\n        val hexDigitMapMapMapMapMap = hexDigitMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapCount = hexDigitMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMap = hexDigitMapMapMapMapMap.map(x => x ->\
    \ 1)\n        val hexDigitMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMap = hexDigitMapMapMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMap = hexDigitMapMapMapMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMap = hexDigitMapMapMapMapMapMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMap = hexDigitMapMapMapMapMapMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMapMapMapMap.length\n\
    \        val hexDigitMapMapMapMapMapMapMapMapMapMap = hexDigitMapMapMapMapMapMapMapMapMapMapMap.map(x\
    \ => x -> 1)\n        val hexDigitMapMapMapMapMapMapMapMapMapCount = hexDigitMapMapMapMapMapMapMapMapMap",
  "        val hex = num.toCharArray\n        val hexLength = hex.length\n       \
    \ val hexKey = hex.map(x => x match {\n            case 'A' => 1\n           \
    \ case 'B' => 2\n            case 'C' => 3\n            case 'D' => 4\n      \
    \      case 'E' => 5\n            case 'F' => 6\n            case _ => 0\n   \
    \     }).sum\n        hexKey", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitMap2 =\
    \ mutable.Map[Char, Int]()\n        val hexDigitMap3 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap4 = mutable.Map[Char, Int]()\n        val hexDigitMap5\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap6 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap7 = mutable.Map[Char, Int]()\n        val hexDigitMap8\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap9 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap10 = mutable.Map[Char, Int]()\n        val hexDigitMap11\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap12 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap13 = mutable.Map[Char, Int]()\n        val hexDigitMap14\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap15 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap16 = mutable.Map[Char, Int]()\n        val hexDigitMap17\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap18 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap19 = mutable.Map[Char, Int]()\n        val hexDigitMap20\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap21 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap22 = mutable.Map[Char, Int]()\n        val hexDigitMap23\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap24 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap25 = mutable.Map[Char, Int]()\n        val hexDigitMap26\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap27 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap28 = mutable.Map[Char, Int]()\n        val hexDigitMap29\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap30 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap31 = mutable.Map[Char, Int]()\n", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.length\n\
    \        val hexDigitMapIteratorNext = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIteratorNext.key\n        val hexDigitMapIteratorNextValue = hexDigitMapIteratorNext.value\n\
    \        val hexDigitMapIteratorNextNext = hexDigitMapIteratorNext.next\n    \
    \    val hexDigitMapIteratorNextNextKey = hexDigitMapIteratorNextNext.key\n  \
    \      val hexDigitMapIteratorNextNextValue = hexDigitMapIteratorNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNext = hexDigitMapIteratorNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextKey = hexDigitMapIteratorNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextValue = hexDigitMapIteratorNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNext = hexDigitMapIteratorNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextKey = hexDigitMapIteratorNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextValue = hexDigitMapIteratorNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNext = hexDigitMapIteratorNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNext",
  "        val hex = num.toCharArray\n        val hexKey = new mutable.HashMap[Char,\
    \ Long]()\n        for (i <- 0 until hex.length) {\n            val key = hex(i).toLong\n\
    \            hexKey.put(hex(i), key)\n        }\n        hexKey.toSeq.sortBy(_._2).reverse.head._2",
  "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey = hex.foldLeft(0)((sum,\
    \ digit) => sum + digit * digit)\n        hexKey", "        val hex = num.toLong\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hex", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap7 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Int, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap10 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap13 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Int, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap16 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap19 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Int, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap22 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap25 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Int, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap28 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap31 = mutable.Map[Int, Int]()\n",
  "        val hex = num.toCharArray\n        val hexLength = hex.length\n       \
    \ val hexKey = new mutable.HashMap[Int, Int]()\n        val hexKey2 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey3 = new mutable.HashMap[Int, Int]()\n        val hexKey4\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey5 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey6 = new mutable.HashMap[Int, Int]()\n        val hexKey7\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey8 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey9 = new mutable.HashMap[Int, Int]()\n        val hexKey10\
    \ = new mutable.HashMap[Int, Int]()\n        val hexKey11 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey12 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey13 = new mutable.HashMap[Int, Int]()\n        val hexKey14 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey15 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey16 = new mutable.HashMap[Int, Int]()\n        val hexKey17 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey18 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey19 = new mutable.HashMap[Int, Int]()\n        val hexKey20 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey21 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey22 = new mutable.HashMap[Int, Int]()\n        val hexKey23 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey24 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey25 = new mutable.HashMap[Int, Int]()\n        val hexKey26 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey27 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey28 = new mutable.HashMap[Int, Int]()\n        val hexKey29 = new mutable.HashMap[Int,\
    \ Int]()\n        val hexKey30 = new mutable.HashMap[Int, Int]()\n        val\
    \ hexKey31 = new mutable.HashMap[Int, Int]()", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimePrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimePrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPri", "        val hex = num.toCharArray\n        val hexKey\
    \ = new mutable.HashMap[String, Long]()\n        hex.foreach(x => {\n        \
    \    val hexDigit = x.toInt\n            val hexKey = hexKey.getOrElse(x.toString,\
    \ 0L)\n            hexKey.update(x.toString, hexKey + hexDigit)\n        })\n\
    \        hexKey.getOrElse(\"A\", 0L)", "        val hex = num.toLong\n       \
    \ val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hex", "        val hex = num.toCharArray.map(_.toInt)\n        val\
    \ hexKey = hex.map(x => x % 16).sum\n        hexKey", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toCharArray.map(_.toString.toInt)\n\
    \        val hexKey = hex.map(x => x % 10).sum\n        hexKey", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[String,\
    \ Int]()\n        val hexDigitCountMap = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap2 = mutable.Map[Int, Int]()\n        val hexDigitCountMap3 =\
    \ mutable.Map[Int, Int]()\n        val hexDigitCountMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitCountMap5 = mutable.Map[Int, Int]()\n        val hexDigitCountMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap7 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap8 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap9 = mutable.Map[Int, Int]()\n        val hexDigitCountMap10\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap11 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap12 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap13 = mutable.Map[Int, Int]()\n        val hexDigitCountMap14\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap15 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap16 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap17 = mutable.Map[Int, Int]()\n        val hexDigitCountMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap19 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap20 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap21 = mutable.Map[Int, Int]()\n        val hexDigitCountMap22\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap23 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap24 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap25 = mutable.Map[Int, Int]()\n        val hexDigitCountMap26\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCountMap27 = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCountMap28 = mutable.Map[Int, Int]()\n        val\
    \ hexDigitCountMap29", "        val hex = num.toLong\n        val hexDigits =\
    \ hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitMap = mutable.Map[Char, Int]()\n        hexDigits.foreach(hexDigitMap\
    \ += _)\n        hexDigitMap.filter(_._2 > 0).foreach(hexDigitMap -= _)\n    \
    \    hexDigitMap.filter(_._2 > 1).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 1).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 2).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 3).foreach(hexDigitMap -= _)\n   \
    \     hexDigitMap.filter(_._2 == 5).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 7).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 11).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 13).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 17).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 19).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 23).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 29).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 31).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 37).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 43).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 49).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 53).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 59).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 61).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 67).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 71).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 73).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 79).foreach(hexDigitMap\
    \ -= _)\n        hexDigit", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.HashMap[Char, Int]()\n        hexDigits.foreach(hexDigitMap\
    \ += _)\n        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap\
    \ = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n      \
    \  val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigit", "        val hex = num.toCharArray.map(_.toInt)\n    \
    \    val hexKey = hex.map(x => x % 16).sum\n        hexKey", "        val hex\
    \ = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.filter(x => x.isDigit)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitPrimes = hexDigits.filter(x => x % 2 == 0).map(x => x).count(x\
    \ => x % 2 == 0)\n        val hexDigitPrimeCount = hexDigitPrimes.length\n   \
    \     val hexDigitPrimePrimes = hexDigitPrimes.filter(x => x % 3 == 0).map(x =>\
    \ x).count(x => x % 3 == 0)\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimes.filter(x => x\
    \ % 5 == 0).map(x => x).count(x => x % 5 == 0)\n        val hexDigitPrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimes.length\n        val hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimes.filter(x => x % 7 == 0).map(x => x).count(x\
    \ => x % 7 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 11 == 0).map(x => x).count(x => x % 11 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n        val\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter(x\
    \ => x % 13 == 0).map(x => x).count(x => x % 13 == 0)\n        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrime", "        val hex = num.toLong\n       \
    \ val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hex", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Char, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap4 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Char, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap7 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Char, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap10 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Char, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap13 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Char, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap16 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Char, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap19 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Char, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap22 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Char, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap25 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Char, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap28 = mutable.Map[Char, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Char, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Char, Int]()\n        val hexDigitMap31 = mutable.Map[Char, Int]()\n",
  "        val hex = num.toCharArray\n        val hexLen = hex.length\n        val\
    \ hexKey = hex.map(x => x.toInt)\n        val hexKeyLen = hexKey.length\n    \
    \    val hexKeyLen2 = hexKeyLen / 2\n        val hexKeyLen3 = hexKeyLen / 3\n\
    \        val hexKeyLen4 = hexKeyLen / 4\n        val hexKeyLen5 = hexKeyLen /\
    \ 5\n        val hexKeyLen6 = hexKeyLen / 6\n        val hexKeyLen7 = hexKeyLen\
    \ / 7\n        val hexKeyLen8 = hexKeyLen / 8\n        val hexKeyLen9 = hexKeyLen\
    \ / 9\n        val hexKeyLen10 = hexKeyLen / 10\n        val hexKeyLen11 = hexKeyLen\
    \ / 11\n        val hexKeyLen12 = hexKeyLen / 12\n        val hexKeyLen13 = hexKeyLen\
    \ / 13\n        val hexKeyLen14 = hexKeyLen / 14\n        val hexKeyLen15 = hexKeyLen\
    \ / 15\n        val hexKeyLen16 = hexKeyLen / 16\n        val hexKeyLen17 = hexKeyLen\
    \ / 17\n        val hexKeyLen18 = hexKeyLen / 18\n        val hexKeyLen19 = hexKeyLen\
    \ / 19\n        val hexKeyLen20 = hexKeyLen / 20\n        val hexKeyLen21 = hexKeyLen\
    \ / 21\n        val hexKeyLen22 = hexKeyLen / 22\n        val hexKeyLen23 = hexKeyLen\
    \ / 23\n        val hexKeyLen24 = hexKeyLen / 24\n        val hexKeyLen25 = hexKeyLen\
    \ / 25\n        val hexKeyLen26 = hexKeyLen / 26\n        val hexKeyLen27 = hexKeyLen\
    \ / 27\n        val hexKeyLen28 = hexKeyLen / 28\n        val hexKeyLen29 = hexKeyLen\
    \ / 29\n        val hexKeyLen30 = hexKeyLen / 30\n        val hexKeyLen31 = hexKeyLen\
    \ / 31\n        val hexKeyLen32 = hexKeyLen / 32\n        val hexKeyLen33 = hexKeyLen\
    \ / 33\n        val hexKeyLen34 = hexKeyLen / 34\n        val hexKeyLen35 = hexKeyLen\
    \ / 35\n        val hexKeyLen36 = hexKeyLen / 36\n        val hexKeyLen37 = hexKeyLen\
    \ / 37\n        val hexKeyLen38 = hexKeyLen / 38\n        ", "        val hex\
    \ = num.toLong\n        val hexDigits = hex.toString.toCharArray\n        val\
    \ hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigit", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hex", "        val hex\
    \ = num.toCharArray\n        val hexLen = hex.length\n        val hexKey = new\
    \ mutable.HashMap[Char, Long]()\n        hex.foreach(c => {\n            val hexKey\
    \ = hexKey.getOrElseUpdate(c, 0L)\n            hexKey += 1\n        })\n     \
    \   hexKey.toList.map(c => hexKey(c)).sum", "        val hex = num.toLong\n  \
    \      val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.Map[Char, Int]()\n        hexDigits.foreach(hexDigitMap\
    \ += _)\n        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap\
    \ = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n      \
    \  val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toCharArray\n        val\
    \ hexCount = hex.length\n        val hexDigits = hex.filter(x => x != 'A' && x\
    \ != 'B' && x != 'C' && x != 'D' && x != 'E' && x != 'F').length\n        val\
    \ hexPrimes = hex.filter(x => x != 'A' && x != 'B' && x != 'C' && x != 'D' &&\
    \ x != 'E' && x != 'F').filter(x => x != '2' && x != '3' && x != '5' && x != '7'\
    \ && x != 'B' && x != 'D' && x != 'E').length\n        val hexPrime = hexPrimes.toDouble\n\
    \        val hexPrimeCount = hexPrime.toInt\n        val hexPrimeDigits = hexPrime.toCharArray\n\
    \        val hexPrimeDigitCount = hexPrimeDigits.length\n        val hexPrimePrimes\
    \ = hexPrimeDigits.filter(x => x != '2' && x != '3' && x != '5' && x != '7' &&\
    \ x != 'B' && x != 'D' && x != 'E').length\n        val hexPrimePrime = hexPrimePrimes.toDouble\n\
    \        val hexPrimePrimeCount = hexPrimePrime.toInt\n        val hexPrimePrimeDigits\
    \ = hexPrimePrime.toCharArray\n        val hexPrimePrimeDigitCount = hexPrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimes = hexPrimePrimeDigits.filter(x => x != '2' &&\
    \ x != '3' && x != '5' && x != '7' && x != 'B' && x != 'D' && x != 'E').length\n\
    \        val hexPrimePrimePrime = hexPrimePrimePrimes.toDouble\n        val hexPrimePrimePrimeCount\
    \ = hexPrimePrimePrime.toInt\n        val hexPrimePrimePrimeDigits = hexPrimePrimePrime.toCharArray\n\
    \        val hexPrimePrimePrimeDigitCount = hexPrimePrimePrimeDigits.length\n\
    \        val hexPrimePrimePrimePrimes = hexPrimePrimePrimeDigits.filter(x => x\
    \ != '2' && x != '3' && x != '5' && x != '7' && x != 'B' && x != 'D' && x != 'E').length\n\
    \        val hexPrimePrimePrimePrime = hexPrimePrimePrimePrimes.toDouble\n   \
    \     val hexPrimePrimePrimePrimeCount = hex", "        val hex = num.toLong\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitMapSize\
    \ = hexDigitMap.length\n        val hexDigitMapIterator = hexDigitMap.iterator\n\
    \        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n        val hexDigitMapIteratorNext\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey = hexDigitMapIteratorNext.key\n\
    \        val hexDigitMapIteratorNextValue = hexDigitMapIteratorNext.value\n  \
    \      val hexDigitMapIteratorNextNext = hexDigitMapIteratorNext.next\n      \
    \  val hexDigitMapIteratorNextNextKey = hexDigitMapIteratorNextNext.key\n    \
    \    val hexDigitMapIteratorNextNextValue = hexDigitMapIteratorNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNext = hexDigitMapIteratorNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextKey = hexDigitMapIteratorNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextValue = hexDigitMapIteratorNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNext = hexDigitMapIteratorNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextKey = hexDigitMapIteratorNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextValue = hexDigitMapIteratorNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNext = hexDigitMapIteratorNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNextNextNext.",
  "        val hex = num.toCharArray\n        val hexCount = hex.length\n        val\
    \ hexKey = new mutable.HashMap[Char,Long]()\n        hex.foreach(c => {\n    \
    \        val hexVal = c.toLong\n            hexKey.put(hexVal,hexKey.getOrElse(hexVal,0L)+1L)\n\
    \        })\n        hexKey.filter(_._2 > 1).map(_._1).sum", "        val hex\
    \ = num.toLong\n        val hexDigits = hex.toString.toCharArray\n        val\
    \ hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n\
    \        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n    \
    \    val hexDigitMapIteratorIteratorSize = hexDigitMapIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.size\n        val\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigit", "        val hex = num.toLong\n        val hexDigits =\
    \ hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hex", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toList\n     \
    \   val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigit", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,Int]()\n\
    \        val hexDigitMap2 = mutable.Map[String,Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int,Int]()\n        val hexDigitMap4 = mutable.Map[String,Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int,Int]()\n        val hexDigitMap6 =\
    \ mutable.Map[String,Int]()\n        val hexDigitMap7 = mutable.Map[Int,Int]()\n\
    \        val hexDigitMap8 = mutable.Map[String,Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int,Int]()\n        val hexDigitMap10 = mutable.Map[String,Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int,Int]()\n        val hexDigitMap12\
    \ = mutable.Map[String,Int]()\n        val hexDigitMap13 = mutable.Map[Int,Int]()\n\
    \        val hexDigitMap14 = mutable.Map[String,Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int,Int]()\n        val hexDigitMap16 = mutable.Map[String,Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int,Int]()\n        val hexDigitMap18\
    \ = mutable.Map[String,Int]()\n        val hexDigitMap19 = mutable.Map[Int,Int]()\n\
    \        val hexDigitMap20 = mutable.Map[String,Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int,Int]()\n        val hexDigitMap22 = mutable.Map[String,Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int,Int]()\n        val hexDigitMap24\
    \ = mutable.Map[String,Int]()\n        val hexDigitMap25 = mutable.Map[Int,Int]()\n\
    \        val hexDigitMap26 = mutable.Map[String,Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int,Int]()\n        val hexDigitMap28 = mutable.Map[String,Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int,Int]()\n        val hexDigitMap30\
    \ = mutable.Map[String,Int]()\n        val hexDigitMap31 = mutable.Map[Int,Int]()\n\
    \        val hexDigitMap32 = mutable.Map[String,Int]()\n", "        val hex =\
    \ num.toLong\n        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = new mutable.HashMap[Char, Int]()\n\
    \        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap2 = new mutable.HashMap[Int, Int]()\n        hexDigitMap.foreach(hexDigitMap2\
    \ += _)\n        val hexDigitCount = hexDigitMap2.length\n        val hexDigitMap3\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap2.foreach(hexDigitMap3\
    \ += _)\n        val hexDigitCount = hexDigitMap3.length\n        val hexDigitMap4\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap3.foreach(hexDigitMap4\
    \ += _)\n        val hexDigitCount = hexDigitMap4.length\n        val hexDigitMap5\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap4.foreach(hexDigitMap5\
    \ += _)\n        val hexDigitCount = hexDigitMap5.length\n        val hexDigitMap6\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap5.foreach(hexDigitMap6\
    \ += _)\n        val hexDigitCount = hexDigitMap6.length\n        val hexDigitMap7\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap6.foreach(hexDigitMap7\
    \ += _)\n        val hexDigitCount = hexDigitMap7.length\n        val hexDigitMap8\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap7.foreach(hexDigitMap8\
    \ += _)\n        val hexDigitCount = hexDigitMap8.length\n        val hexDigitMap9\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap8.foreach(hexDigitMap9\
    \ += _)\n        val hexDigitCount = hexDigitMap9.length\n        val hexDigitMap10\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap9.foreach(hexDigitMap10\
    \ += _)\n        val hexDigitCount = hexDigitMap10.length\n        val hexDigitMap11\
    \ = new mutable.HashMap[Int, Int]()\n        hexDigitMap10.foreach(hexDigitMap11\
    \ += _)\n        val hexDigitCount = hexDigitMap11.length\n        val hexDigitMap12\
    \ = new mutable.HashMap[Int, Int]", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.zipWithIndex.toMap\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.zipWithIndex.toMap\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hex", "        val\
    \ hex = num.toCharArray\n        val hexKey = hex.map(x => x.toInt)\n        val\
    \ hexKey2 = hexKey.map(x => x % 10)\n        val hexKey3 = hexKey.map(x => x %\
    \ 10)\n        val hexKey4 = hexKey.map(x => x % 10)\n        val hexKey5 = hexKey.map(x\
    \ => x % 10)\n        val hexKey6 = hexKey.map(x => x % 10)\n        val hexKey7\
    \ = hexKey.map(x => x % 10)\n        val hexKey8 = hexKey.map(x => x % 10)\n \
    \       val hexKey9 = hexKey.map(x => x % 10)\n        val hexKey10 = hexKey.map(x\
    \ => x % 10)\n        val hexKey11 = hexKey.map(x => x % 10)\n        val hexKey12\
    \ = hexKey.map(x => x % 10)\n        val hexKey13 = hexKey.map(x => x % 10)\n\
    \        val hexKey14 = hexKey.map(x => x % 10)\n        val hexKey15 = hexKey.map(x\
    \ => x % 10)\n        val hexKey16 = hexKey.map(x => x % 10)\n        val hexKey17\
    \ = hexKey.map(x => x % 10)\n        val hexKey18 = hexKey.map(x => x % 10)\n\
    \        val hexKey19 = hexKey.map(x => x % 10)\n        val hexKey20 = hexKey.map(x\
    \ => x % 10)\n        val hexKey21 = hexKey.map(x => x % 10)\n        val hexKey22\
    \ = hexKey.map(x => x % 10)\n        val hexKey23 = hexKey.map(x => x % 10)\n\
    \        val hexKey24 = hexKey.map(x => x % 10)\n        val hexKey25 = hexKey.map(x\
    \ => x % 10)\n        val hexKey26 = hexKey.map(x => x % 10)\n        val hexKey27\
    \ = hexKey.map(x => x % 10)\n        val hexKey28 = hexKey.map(x => x % 10)\n\
    \        val hexKey29 = hexKey.map(x => x % 10)\n        val hexKey30 = hexKey.map(x\
    \ => x % 10)\n        val hexKey31 = hexKey.map(x => x % 10)\n        val hexKey32\
    \ = hexKey.map(x => x % 10)\n        val hexKey33 = hexKey.map(x => x % 10)\n\
    \        val hexKey34 = hexKey.map(x => x % 10)\n        val hexKey35", "    \
    \    val hex = num.toLong\n        val primes = mutable.Set[Long]()\n        val\
    \ primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = ",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hex", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => x).mapValues(_.length)\n   \
    \     val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigits.groupBy(x\
    \ => x).mapValues(_.length)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigits.groupBy(x => ", "        val hex = num.toCharArray.map(_.toInt)\n\
    \        val primes = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val prime", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.size\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitCount = hexDigitCount - 1\n        val\
    \ hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hex", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n", "        val hex = num.toCharArray.map(_.toInt)\n   \
    \     val hexCount = hex.count(_ % 2 == 0)\n        val hexDigits = hex.count(_\
    \ % 10 == 0)\n        val hexPrimes = hex.count(_ % 2 == 0 && _ % 10 != 0)\n \
    \       val hexPrime = hex.count(_ % 2 == 0 && _ % 10 == 0)\n        val hexPrime2\
    \ = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 != 0)\n        val hexPrime3\
    \ = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n     \
    \   val hexPrime4 = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ %\
    \ 10 == 0 && _ % 10 != 0)\n        val hexPrime5 = hex.count(_ % 2 == 0 && _ %\
    \ 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n     \
    \   val hexPrime6 = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ %\
    \ 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n        val hexPrime7\
    \ = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10\
    \ == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n        val hexPrime8 =\
    \ hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10\
    \ == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n        val\
    \ hexPrime9 = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 ==\
    \ 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 != 0)\n\
    \        val hexPrime10 = hex.count(_ % 2 == 0 && _ % 10 == 0 && _ % 10 == 0 &&\
    \ _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _\
    \ % 10 == 0 && _ % 10 != 0)\n        val hexPrime11 = hex.count(_ % 2 == 0 &&\
    \ _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _ % 10 == 0 && _\
    \ % 10 == 0 && _ % 10 == 0 && ", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitPrimes = mutable.Set[Long]()\n        val hexDigitPrimeCount\
    \ = hexDigitPrimes.size\n        val hexDigitPrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n        val hexDigitPrimePrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimes = mutable.Set[Long]()\n        val\
    \ hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.size\n   \
    \     val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n        val\
    \ hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePri", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => x.toInt)\n        val hexKey2 = hexKey.map(x\
    \ => x % 10)\n        val hexKey3 = hexKey.map(x => x % 10)\n        val hexKey4\
    \ = hexKey.map(x => x % 10)\n        val hexKey5 = hexKey.map(x => x % 10)\n \
    \       val hexKey6 = hexKey.map(x => x % 10)\n        val hexKey7 = hexKey.map(x\
    \ => x % 10)\n        val hexKey8 = hexKey.map(x => x % 10)\n        val hexKey9\
    \ = hexKey.map(x => x % 10)\n        val hexKey10 = hexKey.map(x => x % 10)\n\
    \        val hexKey11 = hexKey.map(x => x % 10)\n        val hexKey12 = hexKey.map(x\
    \ => x % 10)\n        val hexKey13 = hexKey.map(x => x % 10)\n        val hexKey14\
    \ = hexKey.map(x => x % 10)\n        val hexKey15 = hexKey.map(x => x % 10)\n\
    \        val hexKey16 = hexKey.map(x => x % 10)\n        val hexKey17 = hexKey.map(x\
    \ => x % 10)\n        val hexKey18 = hexKey.map(x => x % 10)\n        val hexKey19\
    \ = hexKey.map(x => x % 10)\n        val hexKey20 = hexKey.map(x => x % 10)\n\
    \        val hexKey21 = hexKey.map(x => x % 10)\n        val hexKey22 = hexKey.map(x\
    \ => x % 10)\n        val hexKey23 = hexKey.map(x => x % 10)\n        val hexKey24\
    \ = hexKey.map(x => x % 10)\n        val hexKey25 = hexKey.map(x => x % 10)\n\
    \        val hexKey26 = hexKey.map(x => x % 10)\n        val hexKey27 = hexKey.map(x\
    \ => x % 10)\n        val hexKey28 = hexKey.map(x => x % 10)\n        val hexKey29\
    \ = hexKey.map(x => x % 10)\n        val hexKey30 = hexKey.map(x => x % 10)\n\
    \        val hexKey31 = hexKey.map(x => x % 10)\n        val hexKey32 = hexKey.map(x\
    \ => x % 10)\n        val hexKey33 = hexKey.map(x => x % 10)\n        val hexKey34\
    \ = hexKey.map(x => x % 10)\n        val hexKey35", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n     \
    \   val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.length\n\
    \        val hexDigitMapIteratorIterator = hexDigitMapIterator.iterator\n    \
    \    val hexDigitMapIteratorIteratorSize = hexDigitMapIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIterator = hexDigitMapIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize =\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.length\n       \
    \ val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator = hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.length\n\
    \        val hexDigitMap", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n      \
    \  val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigit", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.size\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimes = mutable.Set[Long]()\n        val hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.size\n        val hexDigitPrimePrimePrimePrimes =\
    \ mutable.Set[Long]()\n        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.Set[Long]()\n      \
    \  val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n \
    \       val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.size\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.size\n        val\
    \ hexDigitPrimePrimePrimePri", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hex", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Char,Int]()\n      \
    \  hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val primes\
    \ = mutable.Set[Long]()\n        val primesSet = mutable.Set[Long]()\n       \
    \ val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.", "        val hex = num.toLong\n        val\
    \ hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(x\
    \ => x -> 1)\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = hexDigits.map(x => x -> 1)\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = hexDigits.map(x => x -> 1)\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = hexDigits.map(x => x -> 1)\n \
    \       val hexDigitCount = hexDigits.length\n        val hexDigit", "       \
    \ val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        for (i <- 0 until hexDigitMapSize) {\n     \
    \       hexDigitMap(i) = hexDigitMap(i) + 1\n        }\n        val hexDigitMapIterator2\
    \ = hexDigitMap.iterator\n        val hexDigitMapIterator3 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator4 = hexDigitMapIterator.next\n        val hexDigitMapIterator5\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator6 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator7 = hexDigitMapIterator.next\n        val hexDigitMapIterator8\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator9 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator10 = hexDigitMapIterator.next\n        val hexDigitMapIterator11\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator12 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator13 = hexDigitMapIterator.next\n        val hexDigitMapIterator14\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator15 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator16 = hexDigitMapIterator.next\n        val hexDigitMapIterator17\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator18 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator19 = hexDigitMapIterator.next\n        val hexDigitMapIterator20\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator21 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator22 = hexDigitMapIterator.next\n        val hexDigitMapIterator23\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator24 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator25 = hexDigitMapIterator.next\n        val hexDigitMapIterator26\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator27 = hexDigitMapIterator.next\n\
    \        val hexDigitMapIterator28 = hexDigitMapIterator.next\n        val hexDigitMapIterator29\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIterator30 = hexDigitMapIterator.next",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount\
    \ = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n        val\
    \ hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap = hexDigitMap.toSeq\n\
    \        val hexDigitCount = hexDigitMap.length\n        val hexDigit", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toList\n     \
    \   val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = hexDigits.map(hexDigitToInt)\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigit", "      \
    \  val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap7 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Int, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap10 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap13 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Int, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap16 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap19 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Int, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap22 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap25 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Int, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap28 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap31 = mutable.Map[Int, Int]()\n",
  "        val hex = num.toCharArray.map(_.toInt)\n        val primes = mutable.Set[Long]()\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val prime", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap7 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Int, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap10 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap13 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Int, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap16 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap19 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Int, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap22 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap25 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Int, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap28 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap31 = mutable.Map[Int, Int]()\n",
  "        val hex = num.toCharArray\n        val hexLen = hex.length\n        val\
    \ hexKey = hex.map(x => x.toInt)\n        val hexKeyLen = hexKey.length\n    \
    \    val hexKeySum = hexKey.sum\n        val hexKeySumLen = hexKeySum.length\n\
    \        val hexKeySumLen2 = hexKeySumLen * hexKeyLen\n        val hexKeySumLen3\
    \ = hexKeySumLen2 * hexKeyLen\n        val hexKeySumLen4 = hexKeySumLen3 * hexKeyLen\n\
    \        val hexKeySumLen5 = hexKeySumLen4 * hexKeyLen\n        val hexKeySumLen6\
    \ = hexKeySumLen5 * hexKeyLen\n        val hexKeySumLen7 = hexKeySumLen6 * hexKeyLen\n\
    \        val hexKeySumLen8 = hexKeySumLen7 * hexKeyLen\n        val hexKeySumLen9\
    \ = hexKeySumLen8 * hexKeyLen\n        val hexKeySumLen10 = hexKeySumLen9 * hexKeyLen\n\
    \        val hexKeySumLen11 = hexKeySumLen10 * hexKeyLen\n        val hexKeySumLen12\
    \ = hexKeySumLen11 * hexKeyLen\n        val hexKeySumLen13 = hexKeySumLen12 *\
    \ hexKeyLen\n        val hexKeySumLen14 = hexKeySumLen13 * hexKeyLen\n       \
    \ val hexKeySumLen15 = hexKeySumLen14 * hexKeyLen\n        val hexKeySumLen16\
    \ = hexKeySumLen15 * hexKeyLen\n        val hexKeySumLen17 = hexKeySumLen16 *\
    \ hexKeyLen\n        val hexKeySumLen18 = hexKeySumLen17 * hexKeyLen\n       \
    \ val hexKeySumLen19 = hexKeySumLen18 * hexKeyLen\n        val hexKeySumLen20\
    \ = hexKeySumLen19 * hexKeyLen\n        val hexKeySumLen21 = hexKeySumLen20 *\
    \ hexKeyLen\n        val hexKeySumLen22 = hexKeySumLen21 * hexKeyLen\n       \
    \ val hexKeySumLen23 = hexKeySumLen22 * hexKeyLen\n        val hexKeySumLen24\
    \ = hexKeySumLen23 * hexKeyLen\n        val hexKeySumLen25 = hexKeySumLen24 *\
    \ hexKeyLen\n        val hexKeySumLen26 = hexKeySumLen25 * hexKeyLen\n       \
    \ val hexKeySumLen27 = hexKeySumLen26 * hexKeyLen", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitCount = hexDigitCount - 1\n        val\
    \ hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hex", "        val hex = num.toCharArray\n        val hexCount\
    \ = hex.count\n        val hexDigits = hexCount / 2\n        val hexDigitPrimes\
    \ = hexDigits.toInt\n        val hexDigitPrimesCount = hexDigitPrimes.toInt\n\
    \        val hexDigitPrimesPrimes = hexDigitPrimesCount / 2\n        val hexDigitPrimesPrimesCount\
    \ = hexDigitPrimesPrimes.toInt\n        val hexDigitPrimesPrimesPrimes = hexDigitPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesCount = hexDigitPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimes = hexDigitPrimesPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesPrimesCount = hexDigitPrimesPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimesPrimes = hexDigitPrimesPrimesPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesPrimesPrimesCount = hexDigitPrimesPrimesPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimes = hexDigitPrimesPrimesPrimesPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesCount = hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimes = hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesCount = hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes = hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesCount\
    \ / 2\n        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesCount\
    \ = hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes.toInt\n\
    \        val hexDigitPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes =\
    \ hexDigit", "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigit", "        val hex = num.toCharArray\n\
    \        val hexKey = hex.map(x => if (x == 'A') 10 else if (x == 'B') 11 else\
    \ if (x == 'C') 12 else if (x == 'D') 13 else if (x == 'E') 14 else if (x == 'F')\
    \ 15 else x.toInt)\n        hexKey.sum", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitMap2\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitMap3 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap4 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val hexDigitMap6 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap7 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val hexDigitMap9 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap10 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val hexDigitMap12 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap13 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val hexDigitMap15 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap16 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val hexDigitMap18 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap19 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val hexDigitMap21 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap22 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val hexDigitMap24 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap25 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val hexDigitMap27 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap28 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val hex", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n\
    \        val hexDigitMapIteratorNext = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIteratorNext.key\n        val hexDigitMapIteratorNextValue = hexDigitMapIteratorNext.value\n\
    \        val hexDigitMapIteratorNextNext = hexDigitMapIteratorNext.next\n    \
    \    val hexDigitMapIteratorNextNextKey = hexDigitMapIteratorNextNext.key\n  \
    \      val hexDigitMapIteratorNextNextValue = hexDigitMapIteratorNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNext = hexDigitMapIteratorNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextKey = hexDigitMapIteratorNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextValue = hexDigitMapIteratorNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNext = hexDigitMapIteratorNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextKey = hexDigitMapIteratorNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextValue = hexDigitMapIteratorNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNext = hexDigitMapIteratorNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNextNext.key\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextValue = hexDigitMapIteratorNextNextNextNextNextNextNext.value\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNext = hexDigitMapIteratorNextNextNextNextNextNextNextNext.next\n\
    \        val hexDigitMapIteratorNextNextNextNextNextNextNextKey = hexDigitMapIteratorNextNextNextNextNextNextNextNext.key",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Char, Int]()\n        val hexDigitMap4 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Char, Int]()\n        val hexDigitMap7 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Char, Int]()\n        val hexDigitMap10 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Char, Int]()\n        val hexDigitMap13 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Char, Int]()\n        val hexDigitMap16 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Char, Int]()\n        val hexDigitMap19 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Char, Int]()\n        val hexDigitMap22 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Char, Int]()\n        val hexDigitMap25 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Char, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Char, Int]()\n        val hexDigitMap28 = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Char, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toList\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n    \
    \    val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n    \
    \    val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n    \
    \    val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n    \
    \    val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n    \
    \    val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n    \
    \    val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n    \
    \    val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toInt\n    \
    \    val hexDigitCount = hexDigitCount.toLong\n        val hexDigit", "      \
    \  val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n  \
    \      val hexDigitCount = hexDigits.length\n        val hexDigitPrimes = mutable.Set[Long]()\n\
    \        val hexDigitPrimeCount = hexDigitPrimes.length\n        val hexDigitPrimePrimes\
    \ = mutable.Set[Long]()\n        val hexDigitPrimePrimeCount = hexDigitPrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.length\n  \
    \      val hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hex", "        val hex = num.toCharArray.map(_.toInt)\n        val hexKey\
    \ = hex.map(x => x % 16).sum\n        hexKey", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitCount = hexDigitCount.toInt\n        val\
    \ hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hex", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.Map[Char, Int]()\n        hexDigits.foreach(hexDigitMap\
    \ += _)\n        val hexDigitCount = hexDigitMap.length\n        val hexDigitMap\
    \ = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n      \
    \  val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toSeq\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.HashMap[Char, Int]()\n        val hexDigitMap2\
    \ = mutable.HashMap[Int, Int]()\n        val hexDigitMap3 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap4 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val hexDigitMap6 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap7 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val hexDigitMap9 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap10 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val hexDigitMap12 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap13 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val hexDigitMap15 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap16 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val hexDigitMap18 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap19 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val hexDigitMap21 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap22 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val hexDigitMap24 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap25 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val hexDigitMap27 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap28 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val hex", "        val\
    \ hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n       \
    \ val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCount = hexDigits.length\n  \
    \      val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCount = hexDigits.length\n  \
    \      val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCount = hexDigits.length\n  \
    \      val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCount = hexDigits.length\n  \
    \      val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Int, Int]()\n        val hexDigitCount = hexDigits.length\n  \
    \      val hexDigitMap = mutable.Map[Int, Int]()\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitMap = mutable.Map[Int, Int]()\n      \
    \  val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Int,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n", "        val hex =\
    \ num.toLong\n        val primes = mutable.Set[Long]()\n        val primesSet\
    \ = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n      \
    \  val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.HashMap[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap3 = mutable.HashMap[Int, Int]()\n        val hexDigitMap4 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap5 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap6 = mutable.HashMap[Int, Int]()\n        val hexDigitMap7 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap8 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap9 = mutable.HashMap[Int, Int]()\n        val hexDigitMap10 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap11 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap12 = mutable.HashMap[Int, Int]()\n        val hexDigitMap13 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap14 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap15 = mutable.HashMap[Int, Int]()\n        val hexDigitMap16 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap17 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap18 = mutable.HashMap[Int, Int]()\n        val hexDigitMap19 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap20 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap21 = mutable.HashMap[Int, Int]()\n        val hexDigitMap22 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap23 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap24 = mutable.HashMap[Int, Int]()\n        val hexDigitMap25 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap26 = mutable.HashMap[Int, Int]()\n        val\
    \ hexDigitMap27 = mutable.HashMap[Int, Int]()\n        val hexDigitMap28 = mutable.HashMap[Int,\
    \ Int]()\n        val hexDigitMap29 = mutable.HashMap[Int, Int]()\n        val\
    \ hex", "        val hex = num.toCharArray\n        val hexKey = hex.map(x =>\
    \ if (x.toInt > 9) x.toInt else x.toInt * 10 + x.toInt)\n        hexKey.sum",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,Int]()\n\
    \        hexDigits.foreach(hexDigitMap += _)\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = hexDigitMap.toList\n        val hexDigitCount = hexDigitMap.length\n\
    \        val hexDigitMap = ", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitMapSize\
    \ = hexDigitMap.length\n        val hexDigitMapIterator = hexDigitMap.iterator\n\
    \        val hexDigitMapIteratorSize = hexDigitMapIterator.size\n        val hexDigitMapIteratorIterator\
    \ = hexDigitMapIterator.iterator\n        val hexDigitMapIteratorIteratorSize\
    \ = hexDigitMapIteratorIterator.size\n        val hexDigitMapIteratorIteratorIterator\
    \ = hexDigitMapIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIterator.size\n        val hexDigitMapIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIterator.size\n        val hexDigitMapIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIterator.iterator\n        val hexDigitMapIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIterator.size\n        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIterator.iterator\n        val\
    \ hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorSize = hexDigitMapIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.iterator\n\
    \        val hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorSize\
    \ = hexDigitMapIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIteratorIterator.size\n\
    \        val hexDigit", "        val hex = num.toCharArray\n        val hexCount\
    \ = hex.length\n        val hexKey = hex.map(x => x.toInt).sum\n        val hexKey2\
    \ = hex.map(x => x.toInt).filter(_ > 0).sum\n        val hexKey3 = hex.map(x =>\
    \ x.toInt).filter(_ == 0).sum\n        val hexKey4 = hex.map(x => x.toInt).filter(_\
    \ == 1).sum\n        val hexKey5 = hex.map(x => x.toInt).filter(_ == 2).sum\n\
    \        val hexKey6 = hex.map(x => x.toInt).filter(_ == 3).sum\n        val hexKey7\
    \ = hex.map(x => x.toInt).filter(_ == 4).sum\n        val hexKey8 = hex.map(x\
    \ => x.toInt).filter(_ == 5).sum\n        val hexKey9 = hex.map(x => x.toInt).filter(_\
    \ == 6).sum\n        val hexKey10 = hex.map(x => x.toInt).filter(_ == 7).sum\n\
    \        val hexKey11 = hex.map(x => x.toInt).filter(_ == 8).sum\n        val\
    \ hexKey12 = hex.map(x => x.toInt).filter(_ == 9).sum\n        val hexKey13 =\
    \ hex.map(x => x.toInt).filter(_ == 10).sum\n        val hexKey14 = hex.map(x\
    \ => x.toInt).filter(_ == 11).sum\n        val hexKey15 = hex.map(x => x.toInt).filter(_\
    \ == 12).sum\n        val hexKey16 = hex.map(x => x.toInt).filter(_ == 13).sum\n\
    \        val hexKey17 = hex.map(x => x.toInt).filter(_ == 14).sum\n        val\
    \ hexKey18 = hex.map(x => x.toInt).filter(_ == 15).sum\n        val hexKey19 =\
    \ hex.map(x => x.toInt).filter(_ == 16).sum\n        val hexKey20 = hex.map(x\
    \ => x.toInt).filter(_ == 17).sum\n        val hexKey21 = hex.map(x => x.toInt).filter(_\
    \ == 18).sum\n        val hexKey22 = hex.map(x => x.toInt).filter(_ == 19).sum\n\
    \        val hexKey23 = hex.map(x => x.toInt).filter(_ == 20).sum\n        val\
    \ hexKey24 = hex.map(x => x.toInt).filter(_ == 21).sum\n", "        val hex =\
    \ num.toCharArray\n        val hexCount = hex.length\n        val hexDigits =\
    \ hexCount / 2\n        val hexDigitCount = hexDigits.length\n        val hexDigitArray\
    \ = hexDigits.toArray\n        val hexDigitArrayLength = hexDigitArray.length\n\
    \        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2\n        val hexDigitArrayLength = hexDigitArrayLength / 2\n        val\
    \ hexDigitArrayLength = hexDigitArrayLength / 2\n        val hexDigitArrayLength\
    \ = hexDigitArrayLength / 2\n        val hexDigitArrayLength = hexDigitArrayLength\
    \ / 2", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMap2 = mutable.Map[Int, Int]()\n        val hexDigitMap3\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap4 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap5 = mutable.Map[Int, Int]()\n        val hexDigitMap6\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap7 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap8 = mutable.Map[Int, Int]()\n        val hexDigitMap9\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap10 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap11 = mutable.Map[Int, Int]()\n        val hexDigitMap12\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap13 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap14 = mutable.Map[Int, Int]()\n        val hexDigitMap15\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap16 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap17 = mutable.Map[Int, Int]()\n        val hexDigitMap18\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap19 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap20 = mutable.Map[Int, Int]()\n        val hexDigitMap21\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap22 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap23 = mutable.Map[Int, Int]()\n        val hexDigitMap24\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap25 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap26 = mutable.Map[Int, Int]()\n        val hexDigitMap27\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap28 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap29 = mutable.Map[Int, Int]()\n        val hexDigitMap30\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap31 = mutable.Map[Int, Int]()\n",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hex", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toList\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n     \
    \   val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toInt\n\
    \        val hexDigit", "        val hex = num.toLong\n        val hexDigits =\
    \ hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n   \
    \     val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toInt\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n\
    \        val hexDigitCount = hexDigitCount.toLong\n        val hexDigitCount =\
    \ hexDigitCount.toLong\n        val hexDigitCount = hexDigitCount.toLong\n   \
    \     val hex", "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,Int]()\n\
    \        hexDigits.foreach(hexDigitMap += _)\n        hexDigitMap.filter(_._2\
    \ > 1).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 1).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 2).foreach(hexDigitMap -= _)\n   \
    \     hexDigitMap.filter(_._2 == 3).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 5).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 7).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 11).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 13).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 17).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 19).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 23).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 29).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 31).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 37).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 43).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 49).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 53).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 59).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 61).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 67).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2\
    \ == 71).foreach(hexDigitMap -= _)\n        hexDigitMap.filter(_._2 == 73).foreach(hexDigitMap\
    \ -= _)\n        hexDigitMap.filter(_._2 == 79).foreach(hexDigitMap -= _)\n  \
    \      hexDigitMap.filter(_._2 == 83).foreach(hexDigitMap -= _)\n        hexDigit",
  "        val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitMapSize = hexDigitMap.length\n        val hexDigitMapIterator\
    \ = hexDigitMap.iterator\n        val hexDigitMapIteratorSize = hexDigitMapIterator.length\n\
    \        val hexDigitMapIteratorNext = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextKey\
    \ = hexDigitMapIterator.next\n        val hexDigitMapIteratorNextValue = hexDigitMapIterator.next\n\
    \        val hexDigitMapIteratorNextKey = hexDigitMapIterator.next\n        val\
    \ hexDigitMapIteratorNextValue = hexDigitMapIterator.", "        val hex = num.toLong\n\
    \        val hexDigits = hex.toString.toCharArray\n        val hexDigitCount =\
    \ hexDigits.length\n        val hexDigitPrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimeCount = mutable.ArrayBuffer.empty[Long]\n        val\
    \ hexDigitPrimePrimes = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimePrimeCount\
    \ = mutable.ArrayBuffer.empty[Long]\n        val hexDigitPrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPrimePrimePrimePrimePrimePrimePrimes = mutable.ArrayBuffer.empty[Long]\n\
    \        val hexDigitPri", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hex", "    \
    \    val hex = num.toLong\n        val hexDigits = hex.toString.toCharArray\n\
    \        val hexDigitCount = hexDigits.length\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount - 1\n       \
    \ val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount = hexDigitCount\
    \ - 1\n        val hexDigitCount = hexDigitCount - 1\n        val hexDigitCount\
    \ = hexDigitCount - 1\n        val hex", "        val hex = num.toLong\n     \
    \   val hexDigits = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n\
    \        val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n        val hexDigitMap = mutable.Map[Char, Int]()\n   \
    \     val hexDigitCount = hexDigits.length\n        val hexDigitMap = mutable.Map[Char,\
    \ Int]()\n        val hexDigitCount = hexDigits.length\n        val hexDigitMap\
    \ = mutable.Map[Char, Int]()\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[Char, Int]()\n        val hexDigitCount\
    \ = hexDigits.length\n", "        val hex = num.toLong\n        val hexDigits\
    \ = hex.toString.toCharArray\n        val hexDigitCount = hexDigits.length\n \
    \       val hexDigitMap = mutable.Map[String, Int]()\n        val hexDigitMap2\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap3 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap4 = mutable.Map[Int, Int]()\n        val hexDigitMap5\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap6 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap7 = mutable.Map[Int, Int]()\n        val hexDigitMap8\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap9 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap10 = mutable.Map[Int, Int]()\n        val hexDigitMap11\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap12 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap13 = mutable.Map[Int, Int]()\n        val hexDigitMap14\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap15 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap16 = mutable.Map[Int, Int]()\n        val hexDigitMap17\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap18 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap19 = mutable.Map[Int, Int]()\n        val hexDigitMap20\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap21 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap22 = mutable.Map[Int, Int]()\n        val hexDigitMap23\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap24 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap25 = mutable.Map[Int, Int]()\n        val hexDigitMap26\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap27 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap28 = mutable.Map[Int, Int]()\n        val hexDigitMap29\
    \ = mutable.Map[Int, Int]()\n        val hexDigitMap30 = mutable.Map[Int, Int]()\n\
    \        val hexDigitMap31 = mutable.Map[Int, Int]()\n        ", "        val\
    \ hex = num.toCharArray\n        val hexCount = hex.length\n        val hexDigits\
    \ = hex.map(_.toInt)\n        val hexDigitCount = hexDigits.length\n        val\
    \ hexDigitMap = hexDigits.groupBy(x => x)\n        val hexDigitMapCount = hexDigitMap.length\n\
    \        val hexDigitMapKeys = hexDigitMap.keys.toSeq\n        val hexDigitMapValues\
    \ = hexDigitMap.toSeq\n        val hexDigitMapValuesCount = hexDigitMapValues.length\n\
    \        val hexDigitMapValuesSum = hexDigitMapValues.sum\n        val hexDigitMapValuesSumCount\
    \ = hexDigitMapValuesSum.toInt\n        val hexDigitMapValuesSumCount2 = hexDigitMapValuesSumCount.toInt\n\
    \        val hexDigitMapValuesSumCount3 = hexDigitMapValuesSumCount2.toInt\n \
    \       val hexDigitMapValuesSumCount4 = hexDigitMapValuesSumCount3.toInt\n  \
    \      val hexDigitMapValuesSumCount5 = hexDigitMapValuesSumCount4.toInt\n   \
    \     val hexDigitMapValuesSumCount6 = hexDigitMapValuesSumCount5.toInt\n    \
    \    val hexDigitMapValuesSumCount7 = hexDigitMapValuesSumCount6.toInt\n     \
    \   val hexDigitMapValuesSumCount8 = hexDigitMapValuesSumCount7.toInt\n      \
    \  val hexDigitMapValuesSumCount9 = hexDigitMapValuesSumCount8.toInt\n       \
    \ val hexDigitMapValuesSumCount10 = hexDigitMapValuesSumCount9.toInt\n       \
    \ val hexDigitMapValuesSumCount11 = hexDigitMapValuesSumCount10.toInt\n      \
    \  val hexDigitMapValuesSumCount12 = hexDigitMapValuesSumCount11.toInt\n     \
    \   val hexDigitMapValuesSumCount13 = hexDigitMapValuesSumCount12.toInt\n    \
    \    val hexDigitMapValuesSumCount14 = hexDigitMapValuesSumCount13.toInt\n   \
    \     val hexDigitMapValuesSumCount15 = hexDigitMapValuesSumCount14.toInt\n  \
    \      val hexDigitMapValuesSumCount16 = hexDigitMapValuesSumCount15.toInt\n \
    \       val hexDigitMapValuesSumCount17 = hexDigitMapValuesSumCount16.toInt\n\
    \        val hexDigitMapValuesSumCount18 = hexDigitMapValuesSumCount17.toInt\n\
    \        val hexDigitMapValuesSumCount19 = hexDigitMapValuesSumCount18.toInt\n\
    \        val hexDigitMapValuesSumCount20 = hexDigitMapValuesSumCount19.toInt\n\
    \        val hexDigitMapValuesSumCount2", "        val hex = num.toCharArray\n\
    \        val hexCount = hex.count(_ == '0')\n        val hexDigits = hex.count(_\
    \ >= '0' && _ <='9')\n        val hexDigitPrimes = hexDigits.filter(_ > 1).filter(_\
    \ % 2 == 0)\n        val hexDigitPrimeCount = hexDigitPrimes.count(_ == hexDigits)\n\
    \        val hexDigitPrimeCount2 = hexDigitPrimes.count(_ == hexDigits)\n    \
    \    val hexDigitPrimeCount3 = hexDigitPrimes.count(_ == hexDigits)\n        val\
    \ hexDigitPrimeCount4 = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount5\
    \ = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount6 = hexDigitPrimes.count(_\
    \ == hexDigits)\n        val hexDigitPrimeCount7 = hexDigitPrimes.count(_ == hexDigits)\n\
    \        val hexDigitPrimeCount8 = hexDigitPrimes.count(_ == hexDigits)\n    \
    \    val hexDigitPrimeCount9 = hexDigitPrimes.count(_ == hexDigits)\n        val\
    \ hexDigitPrimeCount10 = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount11\
    \ = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount12 = hexDigitPrimes.count(_\
    \ == hexDigits)\n        val hexDigitPrimeCount13 = hexDigitPrimes.count(_ ==\
    \ hexDigits)\n        val hexDigitPrimeCount14 = hexDigitPrimes.count(_ == hexDigits)\n\
    \        val hexDigitPrimeCount15 = hexDigitPrimes.count(_ == hexDigits)\n   \
    \     val hexDigitPrimeCount16 = hexDigitPrimes.count(_ == hexDigits)\n      \
    \  val hexDigitPrimeCount17 = hexDigitPrimes.count(_ == hexDigits)\n        val\
    \ hexDigitPrimeCount18 = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount19\
    \ = hexDigitPrimes.count(_ == hexDigits)\n        val hexDigitPrimeCount20 = hexDigitPrimes.count(_\
    \ == hexDigits)\n        val hexDigitPrimeCount21 = hexDigitPrimes.count(_ ==\
    \ hexDigits)\n        val hexDigitPrimeCount22 = hexDigitPrimes.count(_ == hexDigits)\n\
    \        val hexDigit"]
stop_tokens:
- "\n    }\n"

language: scala
name: HumanEval_106_f
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x => x *\
    \ factorials.indexOf(x)).take(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxna0g5d.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvl586ku.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvl586ku.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val i = 1 // start\
    \ from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n            } else {\n                odds += i\n         \
    \   }\n            factorials += i\n            sums += i\n            i += 1\n\
    \        }\n        evens.toList ++ sums.toList ++ factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply6sxus8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmply6sxus8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmply6sxus8.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmply6sxus8.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmply6sxus8.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail\n  \
    \      factorials += factorials.head * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorial\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7pozbixr.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factori\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:48:8 -------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n) {\n            val factorial = factorials.foldLeft(1L)((acc,\
    \ x) => acc * x)\n            factorials += factorial\n            sum += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8itoo688.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8itoo688.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8itoo688.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2 ==\
    \ 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                factorial += i\n                factorials\
    \ += factorial\n            }\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwodu856n.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwodu856n.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for (i <- 1 to n) {\n            if (i % 2 == 0)\
    \ {\n                factorials += i\n            } else {\n                sum\
    \ += i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpge96g47k.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpge96g47k.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpge96g47k.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0\n        for(i <- 1 to n) {\n            val factorial = factorials.foldLeft(1L)((acc,\
    \ x) => acc * x)\n            factorials += factorial\n            sum += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpatqpkan7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpatqpkan7.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpatqpkan7.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factori\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:48:8 -------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfNumbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorial\
    \ *= i\n                factorials += factorial\n            } else {\n      \
    \          sumOfNumbers += i\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzuo4x92s.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpzuo4x92s.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzuo4x92s.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzuo4x92s.scala:16:26\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        val sum = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val sum = 0\n   \
    \     val factorial = 1\n        \n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbrobz8ft.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msum is already defined\
    \ as \e[33mvalue\e[0m \e[35msum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpbrobz8ft.scala:16:12 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpbrobz8ft.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msums is already defined as \e[33mvalue\e[0m \e[35msums\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpbrobz8ft.scala:18:12 ---------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msum is already defined as \e[33mvalue\e\
    [0m \e[35msum\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpbrobz8ft.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfactorial\
    \ is already defined as \e[33mvalue\e[0m \e[35mfactorial\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += (i*(i+1))\n        \
    \    }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9dvjuhrv.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvjuhrv.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val factorial = 1\n        for(i <- 1 to n) {\n            factorials +=\
    \ factorial\n            factorial *= i\n        }\n        factorials\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptlrw3rgd.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptlrw3rgd.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptlrw3rgd.scala:15:22\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 0\n        for(i <- 1 to n){\n     \
    \       if(i%2 == 0){\n                factorial *= i\n                factorials\
    \ += factorial\n            }else{\n                sum += i\n            }\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6rlshl_n.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6rlshl_n.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n     \
    \           factorials += factorial(i) * i\n            }else{\n             \
    \   factorials += sum\n            }\n            sum += i\n        }\n      \
    \  factorials.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbloyzywu.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbloyzywu.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbloyzywu.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n       \
    \         factorial *= i\n                factorials += factorial\n          \
    \  }else{\n                sum += i\n                sums += sum\n           \
    \ }\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpufant180.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpufant180.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpufant180.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufant180.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpufant180.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010182
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            factorial *= i\n            sum += i\n \
    \       }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplyxzilh8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplyxzilh8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmplyxzilh8.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplyxzilh8.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmplyxzilh8.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val numbers = mutable.ArrayBuffer.empty[Long]\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val number = 1\n        val factorialSum =\
    \ 0\n        val numberSum = 0\n        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n        val\
    \ numberSumArray = mutable.ArrayBuffer.empty[Long]\n        val factorialSumArray\
    \ = mutable.ArrayBuffer.empty[Long]\n        val numberSumArray = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorialSumArray = mutable.ArrayBuffer.empty[Long]\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp3ffdkme2.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mfactorialSumArray\e[0m =\
    \ mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorialSumArray is already defined as \e[33mvalue\e[0m \e\
    [35mfactorialSumArray\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp3ffdkme2.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mnumberSumArray\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumberSumArray is already defined as \e[33mvalue\e[0m \e[35mnumberSumArray\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3ffdkme2.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mfactorialSumArray\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorialSumArray is already defined as \e[33mvalue\e[0m \e\
    [35mfactorialSumArray\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp3ffdkme2.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mnumberSumArray\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnumberSumArray is already defined as \e[33mvalue\e[0m \e[35mnumberSumArray\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp3ffdkme2.scala:24:12 -"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var sum = 0\n        for(i <- 1 to n) {\n            sum += i\n         \
    \   factorials += sum\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf74mt_lm.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf74mt_lm.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp45mrafib.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp45mrafib.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1L to n){\n            if(i%2 == 0){\n   \
    \             factorials += i\n                sum += i\n            }\n     \
    \       else{\n                factorials += (i-1) * i\n                sum +=\
    \ (i-1) * i\n            }\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbir8ek64.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpbir8ek64.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbir8ek64.scala:20:20\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                sum += (i-\e\
    [31m1\e[0m) * i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                value += is not a member of Long - did you mean sum.!=?\n3\
    \ errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val factorial = 1\n        val factorialSum = 0\n        val factorialSumEven\
    \ = 0\n        val factorialSumOdd = 0\n        val factorialSumEvenEven = 0\n\
    \        val factorialSumOddEven = 0\n        val factorialSumEvenOdd = 0\n  \
    \      val factorialSumOddOdd = 0\n        val factorialSumEvenEvenOdd = 0\n \
    \       val factorialSumOddEvenOdd = 0\n        val factorialSumEvenOddOdd = 0\n\
    \        val factorialSumOddEvenOdd = 0\n        val factorialSumEvenEvenOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOdd = 0\n        val factorialSumEvenOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOdd = 0\n        val factorialSumEvenEvenOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOdd = 0\n        val factorialSumEvenOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOdd = 0\n        val factorialSumEvenEvenOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOdd = 0\n        val factorialSumEvenOddOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOdd = 0\n        val factorialSumEvenEvenOddOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOddOdd = 0\n        val factorialSumEvenOddOddOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOddOdd = 0\n        val factorialSumEvenEvenOddOddOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOddOddOdd = 0\n        val factorialSumEvenOddOddOddOddOddOddOdd\
    \ = 0\n        val factorialSumOddEvenOddOddOddOddOddOdd = 0\n        val factorialSumEvenEvenOddOddOddOddOddOdd\
    \ = 0\n        val factorialSum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0w08iqud.scala:46:4 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0w08iqud.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfactorialSumOddEvenOdd\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfactorialSumOddEvenOdd\
    \ is already defined as \e[33mvalue\e[0m \e[35mfactorialSumOddEvenOdd\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp0w08iqud.scala:27:12 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorialSumOddEvenOddOdd\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mfactorialSumOddEvenOddOdd is already defined as \e[33mvalue\e[0m \e\
    [35mfactorialSumOddEvenOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0w08iqud.scala:31:12 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e[36mfactorialSumOddEvenOddOddOdd\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorialSumOddEvenOddOddOdd is already defined as \e[33mvalue\e\
    [0m \e[35mfactorialSumOddEvenOddOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0w08iqud.scala:35:12 ---------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m        \e[33mval\e[0m \e[36mfactorialSumOddEvenOddOddOddOdd\e\
    [0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorialSumOddEvenOddOddOddOdd is already defined as \e[33mvalue\e\
    [0m \e[35mfactorialSumOddEvenOddOddOddOdd\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factori\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:48:8 -------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyyv8ix4g.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpyyv8ix4g.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factori\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:48:8 -------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppzot_c_0.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmppzot_c_0.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmppzot_c_0.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n){\n            val fact = if (i % 2\
    \ == 0) 1L else i\n            factorials += fact\n            sum += fact\n \
    \       }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp78tbhfuj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp78tbhfuj.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp78tbhfuj.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010190
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            if(i % 2 == 0) {\n   \
    \             factorial *= i\n                factorials += factorial\n      \
    \      } else {\n                sum += i\n                sums += sum\n     \
    \       }\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqg1otu7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpeqg1otu7.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpeqg1otu7.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeqg1otu7.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpeqg1otu7.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n \
    \               factorial *= i\n                factorials += factorial\n    \
    \        } else {\n                sum += i\n                sums += sum\n   \
    \         }\n        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37ov4twi.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp37ov4twi.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp37ov4twi.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp37ov4twi.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp37ov4twi.scala:20:20 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val i = 2\n        while (i <= n) {\n          \
    \  if (i % 2 == 0) {\n                factorials += factorial\n              \
    \  sums += sum\n            }\n            else {\n                factorial *=\
    \ i\n                sum += i\n            }\n            i += 1\n        }\n\
    \        factorials ++ sums\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo57xzd8z.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpo57xzd8z.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpo57xzd8z.scala:22:26 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpo57xzd8z.scala:23:20 ------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpo57xzd8z.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9v2f4w_8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n) {\n            val factorial = factorials.foldLeft(1L)((acc,\
    \ x) => acc * x)\n            factorials += factorial\n            sum += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8itoo688.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8itoo688.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8itoo688.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4h09eq6q.scala:24:4 ----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp4h09eq6q.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppss_ix_o.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppss_ix_o.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfFactorials = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        for(i <- 1 to n){\n            factorials += factorial\n      \
    \      sumOfFactorials += factorial\n            factorial *= i\n        }\n \
    \       factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1gz1dvw6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp1gz1dvw6.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfFactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                              Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1gz1dvw6.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1gz1dvw6.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += (i * (i + 1))\n  \
    \          }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4m8nmwl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe4m8nmwl.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n){\n            val factorial = factorials.foldLeft(1L){\n\
    \                case (acc, _) => acc * i\n            }\n            factorials\
    \ += factorial\n            sum += factorial\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoby8f23l.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoby8f23l.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoby8f23l.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += factorials.last * i\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp89038fzx.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp89038fzx.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            factorial *= i\n            sum += i\n \
    \       }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphn11exn6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphn11exn6.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmphn11exn6.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphn11exn6.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmphn11exn6.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1L to n){\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfocdnzg3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpfocdnzg3.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long\
    \ - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        factorials ++= 1 to n\n        factorials.foreach {\
    \ i =>\n            if (i % 2 == 0) {\n                factorials += i * factorials.take(i\
    \ + 1)\n            } else {\n                sum += i\n            }\n      \
    \  }\n        factorials.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6j3nv6a3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x => x *\
    \ factorials.indexOf(x)).take(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxna0g5d.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += factorial\n            }\n            else{\n                sums += i\n\
    \            }\n            factorial *= i\n        }\n        factorials ++ sums\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuwin6gy9.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuwin6gy9.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpuwin6gy9.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuwin6gy9.scala:21:22\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= Seq(1 until n).map(x => x * factorials.last)\n        factorials.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptlqec8r4.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9v2f4w_8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp48hmssbc.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp48hmssbc.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.sum + i\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpogn7y9li.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpogn7y9li.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfNumbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorial\
    \ *= i\n                factorials += factorial\n            } else {\n      \
    \          sumOfNumbers += i\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpws1jrq0r.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpws1jrq0r.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpws1jrq0r.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpws1jrq0r.scala:16:26\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 1\n        for(i <- 1 to n) {\n    \
    \        factorial *= i\n            sum += i\n            factorials += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp52e7_fli.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp52e7_fli.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptum0teyc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeyc7n6e_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeyc7n6e_.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        for(i <- 1 to n) {\n            factorial *= i\n\
    \            if(i % 2 == 0) {\n                factorials += factorial\n     \
    \       }\n            else {\n                factorials += factorial + 1\n \
    \           }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0au7_hdp.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0au7_hdp.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp45mrafib.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 0\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorial *= i\n\
    \                factorials += factorial\n            } else {\n             \
    \   sum += i\n            }\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_9qpvi1.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr70rlnve.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpr70rlnve.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += factorials.head * i\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjoun3tso.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjoun3tso.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        for(i <- 1 to n) {\n            factorial *= i\n\
    \            if(i % 2 == 0) {\n                factorials += factorial\n     \
    \       }\n            else {\n                factorials += factorial + 1\n \
    \           }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpixdcbzml.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpixdcbzml.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n){\n            val factorial = factorials.foldLeft(1L){\n\
    \                case (acc, x) => acc * x\n            }\n            factorials\
    \ += factorial\n            sum += factorial\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqx9kih4.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoqx9kih4.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoqx9kih4.scala:18:16\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factori\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnm7kwwvy.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val i = 1 // i starts\
    \ from 1\n        val factorial = 1 // factorial of i\n        val sum = 1\n \
    \       val even = 1\n        val odd = 1\n        val evenSum = 1\n        val\
    \ oddSum = 1\n        val evenFactorial = 1\n        val oddFactorial = 1\n  \
    \      val evenSumFactorial = 1\n        val oddSumFactorial = 1\n        val\
    \ evenSumSum = 1\n        val oddSumSum = 1\n        val evenSumEven = 1\n   \
    \     val oddSumEven = 1\n        val evenSumOdd = 1\n        val oddSumOdd =\
    \ 1\n        val evenSumEvenFactorial = 1\n        val oddSumEvenFactorial = 1\n\
    \        val evenSumOddFactorial = 1\n        val oddSumOddFactorial = 1\n   \
    \     val evenSumEvenSum = 1\n        val oddSumEvenSum = 1\n        val evenSumOddSum\
    \ = 1\n        val oddSumOddSum = 1\n        val evenSumEvenSumFactorial = 1\n\
    \        val oddSumEvenSumFactorial = 1\n        val evenSumOddSumFactorial =\
    \ 1\n        val oddSumOddSumFactorial = 1\n        val evenSumEvenEven = 1\n\
    \        val oddSumEvenEven = 1\n        val evenSumOddEven = 1\n        val oddSumOddEven\
    \ = 1\n        val evenSumEvenOdd = 1\n        val oddSumEvenOdd = 1\n       \
    \ val evenSumOddOdd = 1\n        val oddSumOddOdd = 1\n        val evenSumEvenEvenFactorial\
    \ = 1\n        val oddSumEvenEvenFactorial = 1\n        val evenSumOddEvenFactorial\
    \ = 1\n        val oddSumOddEvenFactorial = 1\n        val evenSumEvenOddFactorial\
    \ = 1\n        val oddSumEvenOddFactorial = 1\n        val evenSumEvenEvenSum\
    \ = 1\n        val oddSumEvenEvenSum = 1\n        val evenSumOddEvenSum = 1\n\
    \        val oddSumOddEvenSum = 1\n        val evenSumEvenOddSum = 1\n       \
    \ val oddSumEvenOddSum = 1\n        val evenSum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8z5_fi5v.scala:65:4 ----------------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8z5_fi5v.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8z5_fi5v.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8z5_fi5v.scala:13:20 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8z5_fi5v.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8z5_fi5v.scala:65:5 ---------------------\e\
    [0m\e[0m\n\e[31m65 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    6 errors found\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                sums += sum\n       \
    \     }\n            else{\n                factorial *= i\n                sum\
    \ += i\n            }\n        }\n        factorials ++= factorial\n        sums\
    \ ++= sum\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq44sb16i.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq44sb16i.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpq44sb16i.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpq44sb16i.scala:21:26\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpq44sb16i.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr70rlnve.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpr70rlnve.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n   \
    \     val number = 1\n        for(i <- 1 to n) {\n            if(i % 2 == 0) {\n\
    \                factorial *= number\n                factorials += factorial\n\
    \                numbers += number\n            } else {\n                factorials\
    \ += factorial\n                numbers += number\n            }\n        }\n\
    \        return factorials\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptsfzpvef.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmptsfzpvef.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmptsfzpvef.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptsfzpvef.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= number\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m            value *= is not a member of Int - did you mean factorial.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010202
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        val i = 2\n        while (i <= n) {\n            if (i\
    \ % 2 == 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                sum += i\n                sums += sum\n\
    \            }\n            i += 1\n        }\n        factorials.toList\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5m7e0pfr.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp5m7e0pfr.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp5m7e0pfr.scala:18:26 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp5m7e0pfr.scala:21:20 ------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5m7e0pfr.scala:24:14\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        for(i <- 1 to n){\n            factorial *= i\n\
    \            if(i % 2 == 0){\n                factorials += factorial\n      \
    \      }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc5cz2_an.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc5cz2_an.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factori\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnm7kwwvy.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvl586ku.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvl586ku.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail\n  \
    \      factorials += factorials.head * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmptvoqg1ty.scala:24:4 ----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmptvoqg1ty.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail\n  \
    \      factorials += factorials.head * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorial\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7pozbixr.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail\n        factorials += factorials.head * factorials.tail\n\
    \        factorials += factorials.head * factorials.tail\n        factori\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp19607mma.scala:48:8 -------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0\n        for(i <- 1 to n){\n            if(i%2 == 0){\n     \
    \           factorials += i\n            }else{\n                sum += i\n  \
    \          }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1jquy_a_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1jquy_a_.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1jquy_a_.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfNumbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n\
    \        val sumOfNumbers = 1\n        for(i <- 1 to n) {\n            if(i%2\
    \ == 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                sumOfNumbers += i\n            }\n    \
    \    }\n        factorials.toList\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyr6g4m3g.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msumOfNumbers\
    \ is already defined as \e[33mvalue\e[0m \e[35msumOfNumbers\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyr6g4m3g.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpyr6g4m3g.scala:12:27 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpyr6g4m3g.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyr6g4m3g.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvl586ku.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvl586ku.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.reduceLeft(_\
    \ * _)\n            }\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj8oylsq8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj8oylsq8.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n){\n            factorials += factorial\n\
    \            sums += sum\n            factorial = factorial * i\n            sum\
    \ = sum + i\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp98y1o8wz.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp98y1o8wz.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp98y1o8wz.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp98y1o8wz.scala:18:22 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            factorial = factorial * i\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \   Reassignment to val factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp98y1o8wz.scala:19:16 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            sum = sum + i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val sum\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x =>\
    \ x * x).take(n)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp6m35a3j.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmphkpa2byb.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmphkpa2byb.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += factorial(i) * i\n            } else {\n                factorials += factorial(i)\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw4fdto6f.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw4fdto6f.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += 2\n        factorials += 3\n     \
    \   factorials += 4\n        factorials += 5\n        factorials += 6\n      \
    \  factorials += 7\n        factorials += 8\n        factorials += 9\n       \
    \ factorials += 10\n        factorials += 11\n        factorials += 12\n     \
    \   factorials += 13\n        factorials += 14\n        factorials += 15\n   \
    \     factorials += 16\n        factorials += 17\n        factorials += 18\n \
    \       factorials += 19\n        factorials += 20\n        factorials += 21\n\
    \        factorials += 22\n        factorials += 23\n        factorials += 24\n\
    \        factorials += 25\n        factorials += 26\n        factorials += 27\n\
    \        factorials += 28\n        factorials += 29\n        factorials += 30\n\
    \        factorials += 31\n        factorials += 32\n        factorials += 33\n\
    \        factorials += 34\n        factorials += 35\n        factorials += 36\n\
    \        factorials += 37\n        factorials += 38\n        factorials += 39\n\
    \        factorials += 40\n        factorials += 41\n        factorials += 42\n\
    \        factorials += 43\n        factorials += 44\n        factorials += 45\n\
    \        factorials += 46\n        factorials += 47\n        factorials += 48\n\
    \        factorials += 49\n        factorials += 50\n        factorials += 51\n\
    \        factorials += 52\n        factorials += 53\n        factorials += 54\n\
    \        factorials += 55\n        factorials += 56\n        factorials += 57\n\
    \        factorials += 58\n        factorials += 59\n        factorials += 60\n\
    \        factorials += 61\n        factorials += 62\n        factorials += 63\n\
    \        factorials += 64\n        factorials += 65\n        factorials += 66\n\
    \        factorials += 67\n        factorials += 68\n        factorials += 69\n\
    \        factorials += 70\n        factorials += 71\n        factorials += 72\n\
    \        factorials += 73\n        factorials += 74\n        factorials += 75\n\
    \        factorials += 76\n        factorials += 77\n        factorials += 78\n\
    \        factorials += 79\n        factorials += 80\n        factorials += 81\n\
    \        factorials += 82\n        factorials += 83\n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzrfvvt9y.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010201
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n     \
    \           factorials += factorial(i) * i\n            }else{\n             \
    \   factorials += sum\n            }\n            sum += i\n        }\n      \
    \  factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplwlcjj_g.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplwlcjj_g.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplwlcjj_g.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // i starts\
    \ from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n            } else {\n                odds += i\n         \
    \   }\n            factorials += i\n            sums += i\n            i += 1\n\
    \        }\n        evens.toList ++ sums.toList ++ factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaw2b7eta.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpaw2b7eta.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpaw2b7eta.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpaw2b7eta.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpaw2b7eta.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val i = 1 // start\
    \ from 1\n        while (i <= n) {\n            if (i % 2 == 0) {\n          \
    \      evens += i\n            } else {\n                odds += i\n         \
    \   }\n            factorials += i\n            sums += i\n            i += 1\n\
    \        }\n        evens.toList ++ sums.toList ++ factorials.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmply6sxus8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmply6sxus8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmply6sxus8.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmply6sxus8.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmply6sxus8.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            i += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:67:8 -------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 1\n        for(i <- 1 to n) {\n    \
    \        factorial *= i\n            sum += i\n            factorials += factorial\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp52e7_fli.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp52e7_fli.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1 // 1 factorial\n        factorials += factorials.head * 2\
    \ // 2 factorials\n        factorials += factorials.head * factorials.head * 3\
    \ // 3 factorials\n        factorials += factorials.head * factorials.head * factorials.head\
    \ * 4 // 4 factorials\n        factorials += factorials.head * factorials.head\
    \ * factorials.head * factorials.head * 5 // 5 factorials\n        factorials\
    \ += factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * 6 // 6 factorials\n        factorials += factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * 7\
    \ // 7 factorials\n        factorials += factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * 8\
    \ // 8 factorials\n        factorials += factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * 9 // 9 factorials\n        factorials += factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * 10 // 10 factorials\n        factorials\
    \ += factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head \n \
    \   }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5itwt7ly.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010205
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            factorials += i\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpne7xnzjz.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpne7xnzjz.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010210
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n){\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3xa9nd2b.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3xa9nd2b.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3xa9nd2b.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010211
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += (i-1)\n            }\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqg941y44.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqg941y44.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail\n  \
    \      factorials += factorials.head * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorial\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7pozbixr.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val i = 2\n        while (i <= n) {\n          \
    \  if (i % 2 == 0) {\n                factorials += factorial\n              \
    \  sums += sum\n            }\n            else {\n                factorial *=\
    \ i\n                sum += i\n            }\n            i += 1\n        }\n\
    \        factorials ++= factorial\n        sums ++= sum\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4pz_6p02.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp4pz_6p02.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp4pz_6p02.scala:22:26 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp4pz_6p02.scala:23:20 ------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4pz_6p02.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += i\n            }else{\n                sum += i\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph2qwb68i.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph2qwb68i.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmph2qwb68i.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n\
    \                factorials += i\n            } else {\n                sum +=\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc8kee0f6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc8kee0f6.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc8kee0f6.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyuus7qw4.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpyuus7qw4.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyuus7qw4.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpyuus7qw4.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += (i * (i + 1))\n  \
    \          }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe4m8nmwl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe4m8nmwl.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= Seq(1 until n)\n        factorials.map(x => if (x % 2 == 0)\
    \ x * factorials.filter(y => y > x).sum else x * factorials.filter(y => y > x).sum\
    \ + 1)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2dz9lpz8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr70rlnve.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpr70rlnve.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        for(i <- 1 to n) {\n            if(i % 2 == 0) {\n\
    \                factorials += factorial\n                sums += sum\n      \
    \      } else {\n                factorial *= i\n                sum += i\n  \
    \          }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqtslvbxn.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpqtslvbxn.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpqtslvbxn.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqtslvbxn.scala:20:26\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpqtslvbxn.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += factorials.last * i\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphmjhjxfw.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphmjhjxfw.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010212
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmtdxog1g.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpmtdxog1g.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n) {\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bsaiw3e.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0bsaiw3e.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp45mrafib.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp45mrafib.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010181
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n) {\n            val fact = if (i\
    \ % 2 == 0) 1L else i\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7ybkwjft.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7ybkwjft.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7ybkwjft.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfyttoc2w.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfyttoc2w.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010214
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.sum + i\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpogn7y9li.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpogn7y9li.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0\n        for(i <- 1 to n) {\n            val factorial = factorials.foldLeft(1L){\
    \ (acc, x) => acc * x}\n            factorials += factorial\n            sum +=\
    \ factorial\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc5fynspj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc5fynspj.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc5fynspj.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials filter (_ % 2 == 0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmposa41av3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010211
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n\
    \                factorials += i\n            } else {\n                sum +=\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2raa9hj3.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2raa9hj3.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2raa9hj3.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp48hmssbc.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp48hmssbc.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n) {\n            val factorial =\
    \ factorials.foldLeft(1L)((acc, x) => acc * x)\n            factorials += factorial\n\
    \            sum += factorial\n        }\n        factorials.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_upqdb11.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_upqdb11.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_upqdb11.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 1\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n   \
    \             factorials += factorial(i) * i\n            } else {\n         \
    \       factorials += sum\n            }\n            sum += i\n        }\n  \
    \      factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp23b2mjne.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp23b2mjne.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp23b2mjne.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val factorial = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n\
    \                factorial *= i\n                factorials += factorial\n   \
    \         }else{\n                factorials += factorial * (i-1)\n          \
    \  }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj0pbddd7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj0pbddd7.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj0pbddd7.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n) {\n            val factorial =\
    \ factorials.foldLeft(1L)((acc, x) => acc * x)\n            factorials += factorial\n\
    \            sum += factorial\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8pjak_f8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8pjak_f8.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8pjak_f8.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += factorial\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp6bycga7l.scala:21:4 ----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp6bycga7l.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 1\n        for (i <- 1 to n) {\n   \
    \         if (i % 2 == 0) {\n                factorial *= i\n                factorials\
    \ += factorial\n            } else {\n                sum += i\n             \
    \   factorials += sum\n            }\n        }\n        factorials\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpibhu1ev6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpibhu1ev6.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n) {\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bsaiw3e.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0bsaiw3e.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials(i-1) *\
    \ i\n            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakzg1_vn.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpakzg1_vn.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last + 1\n        factorials\
    \ += factorials.last * factorials.last + 2\n        factorials += factorials.last\
    \ * factorials.last + 3\n        factorials += factorials.last * factorials.last\
    \ + 4\n        factorials += factorials.last * factorials.last + 5\n        factorials\
    \ += factorials.last * factorials.last + 6\n        factorials += factorials.last\
    \ * factorials.last + 7\n        factorials += factorials.last * factorials.last\
    \ + 8\n        factorials += factorials.last * factorials.last + 9\n        factorials\
    \ += factorials.last * factorials.last + 10\n        factorials += factorials.last\
    \ * factorials.last + 11\n        factorials += factorials.last * factorials.last\
    \ + 12\n        factorials += factorials.last * factorials.last + 13\n       \
    \ factorials += factorials.last * factorials.last + 14\n        factorials +=\
    \ factorials.last * factorials.last + 15\n        factorials += factorials.last\
    \ * factorials.last + 16\n        factorials += factorials.last * factorials.last\
    \ + 17\n        factorials += factorials.last * factorials.last + 18\n       \
    \ factorials += factorials.last * factorials.last + 19\n        factorials +=\
    \ factorials.last * factorials.last + 20\n        factorials += factorials.last\
    \ * factorials.last + 21\n        factorials += factorials.last * factorials.last\
    \ + 22\n        factorials += factorials.last * factorials.last + 23\n       \
    \ factorials += factorials.last * factorials.last + 24\n        factorials +=\
    \ factorials.last * factorials.last + 25\n        factorials += factorials.last\
    \ * factorials.last + 26\n        factorials += factorials.last * factorials.last\
    \ + 27\n        factorials += factorials.last * factorials.last + 28\n       \
    \ factorials += factorials.last * factorials.last + 29\n        factorials +=\
    \ factorials.last * factorials.last + 30\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1eu1pw1a.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010216
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        val even = 1L\n        val odd = 1L\n        val factorial\
    \ = 1L\n        val evenFactorial = 1L\n        val oddFactorial = 1L\n      \
    \  val evenSum = 0L\n        val oddSum = 0L\n        val evenFactorialSum = 0L\n\
    \        val oddFactorialSum = 0L\n        val evenSumOfFactorials = 0L\n    \
    \    val oddSumOfFactorials = 0L\n        val evenSumOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorials = 0L\n        val evenSumOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorials = 0L\n        val\
    \ evenSumOfFactorialsOfFactorialsOfFactorialsOfFactorials = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val evenSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val evenSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val evenSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val evenSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n        val oddSumOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorialsOfFactorials\
    \ = 0L\n\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfue865ln.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfue865ln.scala:39:5 ---------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptsrnpbyg.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcatrauj7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcatrauj7.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOfNumbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val sumOfNumbers = 1\n        val factorials = mutable.Array\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsunxzj4.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0msumOfNumbers\
    \ is already defined as \e[33mvalue\e[0m \e[35msumOfNumbers\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsunxzj4.scala:15:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwsunxzj4.scala:16:12 ---------------------------\e[0m\e[0m\n\e\
    [31m16 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfNumbers is already defined as \e[33mvalue\e[0m \e[35msumOfNumbers\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpwsunxzj4.scala:17:12 ---------------------------\e[0m\e[0m\n\e\
    [31m17 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfactorial is already\
    \ defined as \e[33mvalue\e[0m \e[35mfactorial\e[0m\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpwsunxzj4.scala:18:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36msumOfNumbers\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfNumbers is already defi"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 1\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n   \
    \             factorials += i * sum\n            } else {\n                factorials\
    \ += sum\n            }\n            sum += i\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8d8isvt_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8d8isvt_.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8d8isvt_.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += (i-1)\n            }\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_937y2n5.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_937y2n5.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x => x *\
    \ factorials.indexOf(x)).take(n)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptxna0g5d.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials +=\
    \ factorial\n                sums += i\n            }else{\n                factorial\
    \ *= i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjq4b743d.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpjq4b743d.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjq4b743d.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjq4b743d.scala:19:26\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:67:8 -------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.sum + i\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpogn7y9li.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpogn7y9li.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptum0teyc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += n * factorials.head\n        factorials.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf5lt3y0c.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val evenFactorials = mutable.ListBuffer[Long]()\n\
    \        val oddFactorials = mutable.ListBuffer[Long]()\n        val sumEvens\
    \ = mutable.ListBuffer[Long]()\n        val sumOdds = mutable.ListBuffer[Long]()\n\
    \        val evenSums = mutable.ListBuffer[Long]()\n        val oddSums = mutable.ListBuffer[Long]()\n\
    \        val evenSumEvens = mutable.ListBuffer[Long]()\n        val evenSumOdds\
    \ = mutable.ListBuffer[Long]()\n        val oddSumEvens = mutable.ListBuffer[Long]()\n\
    \        val oddSumOdds = mutable.ListBuffer[Long]()\n        val evenSumEvenOdds\
    \ = mutable.ListBuffer[Long]()\n        val evenSumOddEvens = mutable.ListBuffer[Long]()\n\
    \        val oddSumEvenOdds = mutable.ListBuffer[Long]()\n        val oddSumOddEvens\
    \ = mutable.ListBuffer[Long]()\n        val evenSumEvenOddEvens = mutable.ListBuffer[Long]()\n\
    \        val evenSumOddEvenOdds = mutable.ListBuffer[Long]()\n        val oddSumEvenOddEvens\
    \ = mutable.ListBuffer[Long]()\n        val oddSumOddEvenOdds = mutable.ListBuffer[Long]()\n\
    \        val evenSumEvenOddEvenOdds = mutable.ListBuffer[Long]()\n        val\
    \ evenSumOddEvenOddEvens = mutable.ListBuffer[Long]()\n        val oddSumEvenOddEvenOdds\
    \ = mutable.ListBuffer[Long]()\n        val oddSumOddEvenOddEvens = mutable.ListBuffer[Long]()\n\
    \        val evenSumEvenOddEvenOddEvens = mutable.ListBuffer[Long]()\n       \
    \ val evenSumOddEvenOddEvenOdds = mutable.ListBuffer[Long]()\n        val oddSumEvenOddEvenOddEvenOdds\
    \ = mutable.ListBuffer[Long]()\n        val oddSumOddEvenOddEvenOddEvens = mutable.ListBuffer[Long\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo5aqe214.scala:41:4 ----------------------------\e\
    [0m\e[0m\n\e[31m41 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ']' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo5aqe214.scala:11:25\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpo5aqe214.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpo5aqe214.scala:13:20 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \             Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpo5aqe214.scala:14:19 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpo5aqe214.scala:15:29 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mevenFactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                             Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m l"
  stdout: ''
  timestamp: 1660010223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeyc7n6e_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeyc7n6e_.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 1\n        val even = 1\n        val odd = 1\n        val evenFactorial\
    \ = 1\n        val oddFactorial = 1\n        val factorial = 1\n        val factorials\
    \ = mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]()\n        val factorials =\
    \ mutable.ListBuffer[Long]()\n        val factorials = mutable.ListBuffer[Long]()\n\
    \        val factorials = mutable.ListBuffer[Long]\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj6a_vuop.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj6a_vuop.scala:19:12 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj6a_vuop.scala:20:12 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj6a_vuop.scala:21:12 ---------------------------\e[0m\e[0m\n\e\
    [31m21 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfactorials is already defined as \e[33mvalue\e[0m \e[35mfactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpj6a_vuop.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e"
  stdout: ''
  timestamp: 1660010224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppss_ix_o.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppss_ix_o.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 0\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorial *= i\n\
    \                factorials += factorial\n            } else {\n             \
    \   sum += i\n            }\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_9qpvi1.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfFactorials = mutable.ListBuffer[Long]()\n        val evenFactorials\
    \ = mutable.ListBuffer[Long]()\n        val sumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfFactorials = mutable.ListBuffer[Long]()\n        val sumOfSumOfEvenFactorials\
    \ = mutable.ListBuffer[Long]()\n        val sumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n       \
    \ val sumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n      \
    \  val sumOfSumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfSumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials = mutable.ListBuffer[Long]()\n\
    \        val sumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials = mutable.List\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp8a8pmwit.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials is already\
    \ defined as \e[33mvalue\e[0m \e[35msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfFactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp8a8pmwit.scala:30:12 ---------------------------\e[0m\e[0m\n\e\
    [31m30 |\e[0m        \e[33mval\e[0m \e[36msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials\e\
    [0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials is\
    \ already defined as \e[33mvalue\e[0m \e[35msumOfSumOfSumOfSumOfSumOfSumOfSumOfSumOfEvenFactorials\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp8a8pmwit.scala:11:25 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp8a8pmwit.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfFactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling wit"
  stdout: ''
  timestamp: 1660010224
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpodou6khr.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpodou6khr.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last\n  \
    \      factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n        factorials += factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last *\
    \ factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp48hmssbc.scala:26:4 ----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp48hmssbc.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010188
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials ++= Seq(1 until n)\n        factorials.filter(_ % 2 == 0).map(x\
    \ => x * factorials.filter(_ % 2 == 0).map(y => y * x).sum)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp268zpmv8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 0\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorial *= i\n\
    \                factorials += factorial\n            } else {\n             \
    \   sum += i\n            }\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn_9qpvi1.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var sum = 0L\n        var i = 2L\n        while (i <= n) {\n            if\
    \ (i % 2 == 0) {\n                factorials += i\n                sum += i\n\
    \            } else {\n                factorials += sum\n                sum\
    \ += i\n            }\n            i += 1\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv6b0hba8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val evens = mutable.ArrayBuffer.empty[Long]\n\
    \        val odds = mutable.ArrayBuffer.empty[Long]\n        val sumEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val sumOdds = mutable.ArrayBuffer.empty[Long]\n        val evenSumOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvens = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvenOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n        val\
    \ evenSumOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n        val evenSumEvenOddEvenOdds\
    \ = mutable.ArrayBuffer.empty[Long]\n        val evenSumOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n  \
    \      val evenSumOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n     \
    \   val evenSumEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n    \
    \    val evenSumEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOddEvenOdds = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumEvenOddEvenOddEvenOddEvenOddEvenOddEvens = mutable.ArrayBuffer.empty[Long]\n\
    \        val evenSumOddEvenOddEvenO\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpieukv45b.scala:37:4 ----------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpieukv45b.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mval\e[0m\
    \ \e[36mevenSumOddEvenOddEvenOdds\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mevenSumOddEvenOddEvenOdds is already defined as \e[33mvalue\e\
    [0m \e[35mevenSumOddEvenOddEvenOdds\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote\
    \ that overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpieukv45b.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpieukv45b.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpieukv45b.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpieukv45b.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ArrayBuffer"
  stdout: ''
  timestamp: 1660010226
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sums = mutable.ArrayBuffer.empty[Long]\n        val factorial = 1\n\
    \        val sum = 1\n        val i = 2\n        while (i <= n) {\n          \
    \  if (i % 2 == 0) {\n                factorials += factorial\n              \
    \  sums += sum\n            }\n            else {\n                factorial *=\
    \ i\n                sum += i\n            }\n            i += 1\n        }\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuztflbxo.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuztflbxo.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpuztflbxo.scala:22:26 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpuztflbxo.scala:23:20 ------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuztflbxo.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvl586ku.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvl586ku.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                factorials\
    \ += i\n            }else{\n                factorials += (i * factorials.last)\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsnj31sh4.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsnj31sh4.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials.filter(_ % 2 == 0).map(x => x *\
    \ factorials.indexOf(x) + factorials.indexOf(x) + 1)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppwinkvd2.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010223
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val evens = mutable.ListBuffer[Long]()\n\
    \        val odds = mutable.ListBuffer[Long]()\n        val i = 1 // i starts\
    \ from 1\n        val factorial = 1 // factorial starts from 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                evens += i\n    \
    \            factorial *= i\n            } else {\n                odds += i\n\
    \                factorial *= i\n            }\n            factorials += factorial\n\
    \            sums += factorial\n            i += 1\n        }\n        evens.toList\
    \ ++ sums.toList ++ odds.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa5z47hs_.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpa5z47hs_.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpa5z47hs_.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mevens\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpa5z47hs_.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36modds\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpa5z47hs_.scala:20:26 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is not\
    \ a member of Int - did you mean factorial.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpa5z47hs_.scala:23:26 ------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                factorial *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value *= is not a member of Int - di"
  stdout: ''
  timestamp: 1660010228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n) {\n            if(i%2 == 0) {\n  \
    \              factorials += i\n            } else {\n                sum += i\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppqj5wr85.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppqj5wr85.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppqj5wr85.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val numbers = mutable.ArrayBuffer.empty[Long]\n        val factorial\
    \ = 1\n        val number = 1\n        val sum = 0\n        val even = 1\n   \
    \     val odd = 1\n        val evenSum = 0\n        val oddSum = 0\n        val\
    \ evenFactorial = 1\n        val oddFactorial = 1\n        val evenSumFactorial\
    \ = 1\n        val oddSumFactorial = 1\n        val evenSumEven = 1\n        val\
    \ oddSumEven = 1\n        val evenSumOdd = 1\n        val oddSumOdd = 1\n    \
    \    val evenSumEvenFactorial = 1\n        val oddSumEvenFactorial = 1\n     \
    \   val evenSumOddFactorial = 1\n        val oddSumOddFactorial = 1\n        val\
    \ evenSumEvenEven = 1\n        val oddSumEvenEven = 1\n        val evenSumOddEven\
    \ = 1\n        val oddSumOddEven = 1\n        val evenSumEvenOdd = 1\n       \
    \ val oddSumEvenOdd = 1\n        val evenSumOddOdd = 1\n        val oddSumOddOdd\
    \ = 1\n        val evenSumEvenEvenFactorial = 1\n        val oddSumEvenEvenFactorial\
    \ = 1\n        val evenSumOddEvenFactorial = 1\n        val oddSumOddEvenFactorial\
    \ = 1\n        val evenSumEvenOddFactorial = 1\n        val oddSumEvenOddFactorial\
    \ = 1\n        val evenSumOddOddFactorial = 1\n        val oddSumOddOddFactorial\
    \ = 1\n        val evenSumEvenEvenEven = 1\n        val oddSumEvenEven = 1\n \
    \       val evenSumOddEven = 1\n        val oddSumEvenOdd = 1\n        val evenSumEvenOdd\
    \ = 1\n        val oddSumOddEven = 1\n        val evenSumOddOdd = 1\n        val\
    \ oddSumOddOdd = 1\n        val evenSumEvenEvenFactorial = 1\n        val oddSumEvenEvenFactorial\
    \ = 1\n        val evenSumOddEvenFactorial = 1\n        val oddSumOddEvenFactorial\
    \ = 1\n        val evenSumEvenOddFactorial = 1\n        val oddSumEvenOddFactorial\
    \ = 1\n        val evenSumOddOddFactorial = 1\n        val oddSumOdd\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpqu_oidci.scala:64:4 ----------------------------\e\
    [0m\e[0m\n\e[31m64 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=' expected, but '}' found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqu_oidci.scala:49:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m49 |\e[0m        \e[33mval\e[0m\
    \ \e[36moddSumEvenEven\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0moddSumEvenEven is already defined as \e[33mvalue\e[0m \e[35moddSumEvenEven\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqu_oidci.scala:50:12 ---------------------------\e[0m\e[0m\n\e\
    [31m50 |\e[0m        \e[33mval\e[0m \e[36mevenSumOddEven\e[0m = \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mevenSumOddEven\
    \ is already defined as \e[33mvalue\e[0m \e[35mevenSumOddEven\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqu_oidci.scala:51:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m51 |\e[0m        \e[33mval\e[0m\
    \ \e[36moddSumEvenOdd\e[0m = \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0moddSumEvenOdd is already defined as \e[33mvalue\e[0m \e[35moddSumEvenOdd\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpqu_oidci.scala:52:12 ---------------------------\e[0m\e[0m\n\e\
    [31m52 |\e[0m        \e[33mval\e[0m \e[36mevenSumEvenOdd\e[0m = \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mevenSumEvenOdd\
    \ is already defined as \e[33mvalue\e[0m \e[35mevenSumEvenOdd\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the same\
    \ group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpqu_oidci.scala:53:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m53 |\e[0m        \e[33mval\e[0m\
    \ \e[36modd"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials filter (_ % 2 == 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphm1c1dlt.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2 ==\
    \ 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                factorials += factorial\n             \
    \   factorial *= i\n            }\n        }\n        factorials\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjo273v3a.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjo273v3a.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val numbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n   \
    \     val number = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n \
    \               factorials += factorial\n                numbers += number\n \
    \           }\n            else{\n                factorial *= i\n           \
    \     number += 1\n            }\n        }\n        factorials += factorial\n\
    \        numbers += number\n        numbers.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaa327ai0.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpaa327ai0.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpaa327ai0.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaa327ai0.scala:21:26\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpaa327ai0.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                number += \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m               value\
    \ += is not a member of Int - did you mean number.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += n * factorials.last\n        factorials.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptwfnpkuh.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010227
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:67:8 -------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0\n        for (i <- 1 to n) {\n            if (i % 2 == 0)\
    \ {\n                factorials += i\n            } else {\n                sum\
    \ += i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt6hwpnbc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt6hwpnbc.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt6hwpnbc.scala:17:20\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                sum += i\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value += is not a member of Int - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail\n        factorials += factorials.head\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail\n  \
    \      factorials += factorials.head * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail\n        factorials += factorials.head *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail\n        factorials += factorials.head * factorials.tail *\
    \ factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail\n        factorials +=\
    \ factorials.head * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorials.tail\
    \ * factorials.tail * factorials.tail * factorials.tail * factorials.tail * factorial\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7pozbixr.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        val sum = 0L\n        for(i <- 1 to n){\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3xa9nd2b.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3xa9nd2b.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3xa9nd2b.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010211
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.foldLeft(0)(_*_)\n\
    \            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_4wslonw.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_4wslonw.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val factorial = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n\
    \                factorials += factorial\n            }\n            else{\n \
    \               factorials += factorial*i\n            }\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph_tpw47x.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph_tpw47x.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010232
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfNumbers = mutable.ListBuffer[Long]()\n        val factorial = 1\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorial\
    \ *= i\n                factorials += factorial\n            } else {\n      \
    \          sumOfNumbers += i\n            }\n        }\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpws1jrq0r.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpws1jrq0r.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfNumbers\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                           ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpws1jrq0r.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpws1jrq0r.scala:16:26\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last * 3\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * 4\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * 5\n        factorials\
    \ += factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * 6\n        factorials += factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * 7\n        factorials\
    \ += factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * 8\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * 9\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * 10\n\
    \        factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6a2d6ja.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * 2\n        factorials\
    \ += factorials.head * factorials.head * 3\n        factorials += factorials.head\
    \ * factorials.head * factorials.head * 4\n        factorials += factorials.head\
    \ * factorials.head * factorials.head * factorials.head * 5\n        factorials\
    \ += factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * 6\n        factorials += factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * 7\n        factorials\
    \ += factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * 8\n        factorials += factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * 9\n        factorials += factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * 10\n\
    \        factorials += factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head * factorials.head * factorials.head * factorials.head\
    \ * factorials.head * factorials.head \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzlrr_r1c.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkej1b8ja.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkej1b8ja.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials(i-1) *\
    \ i\n            }\n        }\n        factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpakzg1_vn.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpakzg1_vn.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials.drop(1).takeWhile(x => x % 2 == 0).map(x => x * factorials.drop(1).takeWhile(y\
    \ => y % 2 == 0).sum)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0lxdbtia.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmppazzywyg.scala:25:4 ----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmppazzywyg.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last * 3\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * 4\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * 5\n        factorials\
    \ += factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * 6\n        factorials += factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * 7\n        factorials\
    \ += factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * 8\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * 9\n        factorials += factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * 10\n\
    \        factorials += factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last * factorials.last * factorials.last * factorials.last\
    \ * factorials.last * factorials.last\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6a2d6ja.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010229
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr70rlnve.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpr70rlnve.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.last * 2\n        factorials\
    \ += factorials.last * factorials.last\n        factorials += factorials.last\
    \ * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factorials.last * factorials.last\n        factorials += factorials.last * factorials.last\n\
    \        factorials += factorials.last * factorials.last\n        factorials +=\
    \ factori\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7071p9az.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n) {\n            factorials += factorial\n\
    \            sums += sum\n            factorial *= i\n            sum += i\n \
    \       }\n        sums.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr55ehbv1.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpr55ehbv1.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpr55ehbv1.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr55ehbv1.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            factorial *=\
    \ i\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       value *= is not a member of Int - did you mean factorial.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpr55ehbv1.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= Seq(1 until n).map(x => x * factorials.last)\n        factorials\
    \ ++= Seq(1 until n).map(x => x * factorials.last)\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppmfdy2e6.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n){\n            factorials += factorial\n\
    \            sums += sum\n        }\n        factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp94lnabe8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp94lnabe8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp94lnabe8.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2 ==\
    \ 0) {\n                factorial *= i\n                factorials += factorial\n\
    \            } else {\n                factorials += factorial\n            }\n\
    \        }\n        factorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7nt5gk_x.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7nt5gk_x.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7nt5gk_x.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head\n        factorials\
    \ += factorials.head * factorials.tail\n        factorials.take(n)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptum0teyc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var sum = 0L\n        for(i <- 1L to n){\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpainp97al.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n) {\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb8ln3qx7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ln3qx7.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb8ln3qx7.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1 // 1 factorial is 1\n        factorials += 2 // 2 factorials\
    \ are 1 and 2\n        factorials += 3 // 3 factorials are 1, 2, 3 and 6\n   \
    \     factorials += 4 // 4 factorials are 1, 2, 3, 6, 24\n        factorials +=\
    \ 5 // 5 factorials are 1, 2, 3, 6, 24, 120\n        factorials += 6 // 6 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320\n        factorials += 7 // 7 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 8 // 8 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 9 // 9 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 10 // 10 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 11 // 11 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 12 // 12 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 13 // 13 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 14 // 14 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 15 // 15 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 16 // 16 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 17 // 17 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 18 // 18 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 19 // 19 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 20 // 20 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 21 // 21 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 22 // 22 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 23 // 23 factorials\
    \ are 1, 2, 3, 6, 24, 120, 720, 5040, 40320,\n        factorials += 24 // 24 factorials\
    \ are 1, 2, 3, 6, 24, 120, \n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzn0_ozys.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    var factorial = 1\n        var sum = 0\n        var i = 1\n        while\
    \ (i <= n) {\n            if (i % 2 == 0) {\n                factorial *= i\n\
    \                sum += factorial\n            }\n            else {\n       \
    \         factorial *= i + 1\n                sum += factorial\n            }\n\
    \            factorials += factorial\n            i += 1\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6l700e1m.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n) {\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0bsaiw3e.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0bsaiw3e.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcz2amzi8.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for(i <- 1 to n){\n            factorials += i\n        }\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppss_ix_o.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppss_ix_o.scala:12:22 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010192
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:67:8 -------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        for(i <- 1 to n) {\n            val fact = i.toLong\
    \ * factorials.last\n            factorials += fact\n            sum += fact\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb8ln3qx7.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb8ln3qx7.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb8ln3qx7.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            sum += fact\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sums = mutable.ListBuffer[Long]()\n        val factorial = 1\n      \
    \  val sum = 1\n        for(i <- 1 to n){\n            if(i%2 == 0){\n       \
    \         factorial *= i\n                factorials += factorial\n          \
    \      sums += sum\n            }else{\n                sum += i\n           \
    \ }\n        }\n        factorials\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz9e4rqxp.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpz9e4rqxp.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpz9e4rqxp.scala:15:22 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz9e4rqxp.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpz9e4rqxp.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                sum += i\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean sum.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val factorial = 1\n        for(i <- 1 to n){\n            if(i % 2 == 0){\n\
    \                factorial *= i\n                factorials += factorial\n   \
    \         }else{\n                factorial += i\n                factorials +=\
    \ factorial\n            }\n        }\n        factorials\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3t3f6psi.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3t3f6psi.scala:13:22 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3t3f6psi.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                factorial\
    \ *= i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \            value *= is not a member of Int - did you mean factorial.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp3t3f6psi.scala:18:26 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                factorial += i\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean factorial.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorials ++= 1 to n\n        factorials ++= 1 to n\n        factorials\
    \ ++= 1 to n\n        factorials ++= 1 to n\n        factorials ++= 1 to n\n \
    \       factorial\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpi8bayrdl.scala:67:8 -------------------------\e\
    [0m\e[0m\n\e[31m67 |\e[0m        factorial\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.head\n        factorials += factorials.head\
    \ * factorials.tail.tail.tail.tail.tail.tail.tail.tail.head\n        factorials\
    \ += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head\n\
    \        factorials += factorials.head * factorials.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpr70rlnve.scala:23:4 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpr70rlnve.scala:11:25 ------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        factorials += 1\n        factorials += factorials(1) * factorials(2)\
    \ * factorials(3)\n        factorials += factorials(1) * factorials(2) * factorials(3)\n\
    \        factorials += factorials(1) * factorials(2) * factorials(3)\n       \
    \ factorials += factorials(1) * factorials(2) * factorials(3)\n        factorials\
    \ += factorials(1) * factorials(2) * factorials(3)\n        factorials += factorials(1)\
    \ * factorials(2) * factorials(3)\n        factorials += factorials(1) * factorials(2)\
    \ * factorials(3)\n        factorials += factorials(1) * factorials(2) * factorials(3)\n\
    \        factorials += factorials(1) * factorials(2) * factorials(3)\n       \
    \ factorials += factorials(1) * factorials(2) * factorials(3)\n        factorials\
    \ += factorials(1) * factorials(2) * factorials(3)\n        factorials += factorials(1)\
    \ * factorials(2) * factorials(3)\n        factorials += factorials(1) * factorials(2)\
    \ * factorials(3)\n        factorials += factorials(1) * factorials(2) * factorials(3)\n\
    \        factorials += factorials(1) * factorials(2) * factorials(3)\n       \
    \ factorials += factorials(1) * factorials(2) * factorials(3)\n        factorials\
    \ += factorials(1) * factorials(2) * factorials(3)\n        factorials += factorials(1)\
    \ * factorials(2) * factorials(3)\n        factorials += factorials(1) * factorials(2)\
    \ * factorials(3)\n        factorials += factorials(1) * factorials(2) * factorials(3)\n\
    \        factorials += factorials(1) * factorials(2) * factorials(3)\n       \
    \ factorials += factorials(1) * factorials(2) * factorials(3)\n        factorials\
    \ += factorials(1) * factorials(2) * factorials(3)\n        factorials += factorials(1)\
    \ * factorials(2) * factorials(3)\n        factorials += factorials(1) * factorials(2)\
    \ * factorials(3)\n        factorials += factorials(1) * factorials(2) * factorials(3)\n\
    \        factorials += factorials(1) * factorials(2) * factorials(3)\n       \
    \ factorials += factorials(1) * factorials(2) * factorials(3)\n        factorials\
    \ += factorials(1) * factorials(2) * factorials(3)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6tisledj.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sumOfFactorials = mutable.ListBuffer[Long]()\n        factorials += 1\n\
    \        factorials += 2\n        factorials += 3\n        factorials += 4\n \
    \       factorials += 5\n        factorials += 6\n        factorials += 7\n  \
    \      factorials += 8\n        factorials += 9\n        factorials += 10\n  \
    \      factorials += 11\n        factorials += 12\n        factorials += 13\n\
    \        factorials += 14\n        factorials += 15\n        factorials += 16\n\
    \        factorials += 17\n        factorials += 18\n        factorials += 19\n\
    \        factorials += 20\n        factorials += 21\n        factorials += 22\n\
    \        factorials += 23\n        factorials += 24\n        factorials += 25\n\
    \        factorials += 26\n        factorials += 27\n        factorials += 28\n\
    \        factorials += 29\n        factorials += 30\n        factorials += 31\n\
    \        factorials += 32\n        factorials += 33\n        factorials += 34\n\
    \        factorials += 35\n        factorials += 36\n        factorials += 37\n\
    \        factorials += 38\n        factorials += 39\n        factorials += 40\n\
    \        factorials += 41\n        factorials += 42\n        factorials += 43\n\
    \        factorials += 44\n        factorials += 45\n        factorials += 46\n\
    \        factorials += 47\n        factorials += 48\n        factorials += 49\n\
    \        factorials += 50\n        factorials += 51\n        factorials += 52\n\
    \        factorials += 53\n        factorials += 54\n        factorials += 55\n\
    \        factorials += 56\n        factorials += 57\n        factorials += 58\n\
    \        factorials += 59\n        factorials += 60\n        factorials += 61\n\
    \        factorials += 62\n        factorials += 63\n        factorials += 64\n\
    \        factorials += 65\n        factorials += 66\n        factorials += 67\n\
    \        factorials += 68\n        factorials += 69\n        factorials += 70\n\
    \        factorials += 71\n        factorials += 72\n        factorials += 73\n\
    \        factorials += 74\n        factorials += 75\n        factorials += 76\n\
    \        factorials += 77\n        factorials += 78\n        factorials += 79\n\
    \        factorials += 80\n        \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfq1os0dc.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpfq1os0dc.scala:12:30 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msumOfFactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                              ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                              Not found: mutable\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    factorials += 1\n        factorials += factorials.head * factorials.tail\n\
    \        factorials.take(n)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4fxi9b5q.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010189
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorials\
    \ += i\n            } else {\n                factorials += factorials.head *\
    \ i\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprvl586ku.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvl586ku.scala:12:23 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    def f(n : Long)\
    \ : List[Long] = {\n        val factorials = mutable.ListBuffer[Long]()\n    \
    \    val sum = 0L\n        factorials += 1L\n        factorials += 2L\n      \
    \  factorials += 3L\n        factorials += 4L\n        factorials += 5L\n    \
    \    factorials += 6L\n        factorials += 7L\n        factorials += 8L\n  \
    \      factorials += 9L\n        factorials += 10L\n        factorials += 11L\n\
    \        factorials += 12L\n        factorials += 13L\n        factorials += 14L\n\
    \        factorials += 15L\n        factorials += 16L\n        factorials += 17L\n\
    \        factorials += 18L\n        factorials += 19L\n        factorials += 20L\n\
    \        factorials += 21L\n        factorials += 22L\n        factorials += 23L\n\
    \        factorials += 24L\n        factorials += 25L\n        factorials += 26L\n\
    \        factorials += 27L\n        factorials += 28L\n        factorials += 29L\n\
    \        factorials += 30L\n        factorials += 31L\n        factorials += 32L\n\
    \        factorials += 33L\n        factorials += 34L\n        factorials += 35L\n\
    \        factorials += 36L\n        factorials += 37L\n        factorials += 38L\n\
    \        factorials += 39L\n        factorials += 40L\n        factorials += 41L\n\
    \        factorials += 42L\n        factorials += 43L\n        factorials += 44L\n\
    \        factorials += 45L\n        factorials += 46L\n        factorials += 47L\n\
    \        factorials += 48L\n        factorials += 49L\n        factorials += 50L\n\
    \        factorials += 51L\n        factorials += 52L\n        factorials += 53L\n\
    \        factorials += 54L\n        factorials += 55L\n        factorials += 56L\n\
    \        factorials += 57L\n        factorials += 58L\n        factorials += 59L\n\
    \        factorials += 60L\n        factorials += 61L\n        factorials += 62L\n\
    \        factorials += 63L\n        factorials += 64L\n        factorials += 65L\n\
    \        factorials += 66L\n        factorials += 67L\n        factorials += 68L\n\
    \        factorials += 69L\n        factorials += 70L\n        factori\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplu63apiy.scala:11:25 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmplu63apiy.scala:83:8 -------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m        factori\n\e[31m\e[31m   |\e[0m        ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Not found: factori\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010235

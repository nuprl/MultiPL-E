name: HumanEval_157_right_angle_triangle
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return True if the three\n\
  \    // sides form a right-angled triangle, False otherwise.\n    // A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n    // 90 degree.\n\
  \    // Example:\n    def rightAngleTriangle(a : Long, b : Long, c : Long) : Boolean\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(rightAngleTriangle((3l),\
  \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
  \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) ==\
  \ (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
  \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) ==\
  \ (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n   \
  \ assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (10l)) == (false));\n    }\n\n}\n"
completions: ["        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bcd = math.abs(bc + ab)\n        abc > bcd", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1\
    \ - a1)\n        val a3 = math.abs(a2 - b2)\n        val b3 = math.abs(b2 - c2)\n\
    \        val c3 = math.abs(c2 - a2)\n        val a4 = math.abs(a3 - b3)\n    \
    \    val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c4 - a3)\n        (a1\
    \ + b1 + c1 == a2 + b2 + c2 && a2 + b2 + c2 == a3 + b3 + c3 && a3 + b3 + c3 ==\
    \ a4 + b4 + c4)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3\
    \ + c3\n        val c4 = c3 + a3\n        (a1 == a2 && b1 == b2 && c1 == c2) ||\
    \ (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 == b4 && c1 == c4)", " \
    \       val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) == (a4 + b4 + c4) *\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && ", "        val ab =\
    \ math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n      \
    \  val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab == ac", "       \
    \ val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1) != (a2 + b2 + c2) && \n        (a2 + b2 + c2) != (a1 +\
    \ b1 + c1) && \n        (a1 + b1 + c1) != (a2 + b2 + c2) && \n        (a2 + b2\
    \ + c2) != (a1 + b1 + c1) && \n        (a1 + b1 + c1) != (a2 + b2 + c2) && \n\
    \        (a2 + b2 + c2) != (a1 + b1 + c1) && \n        (a1 + b1 + c1) != (a2 +\
    \ b2 + c2) && \n        (a2 + b2 + c2) != (a1 + b1 + c1)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2\
    \ + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a", "        val ab = math.abs(a\
    \ - b)\n        val bc = math.abs(b - c)\n        val ac = math.abs(a - c)\n \
    \       ab * bc > ac", "        val ab = math.sqrt((b*b) - (a*a))\n        val\
    \ bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n \
    \       ab == bc && ab == ac", "        val a1 = a / 2\n        val b1 = b / 2\n\
    \        val c1 = c / 2\n        val a2 = a1 + a1\n        val b2 = b1 + b1\n\
    \        val c2 = c1 + c1\n        val a3 = a2 + a1\n        val b3 = b2 + b1\n\
    \        val c3 = c2 + c1\n        val a4 = a3 + a1\n        val b4 = b3 + b1\n\
    \        val c4 = c3 + c1\n        val a5 = a4 + a1\n        val b5 = b5 + b1\n\
    \        val c5 = c5 + c1\n        val a6 = a6 + a1\n        val b6 = b6 + b1\n\
    \        val c6 = c6 + c1\n        val a7 = a7 + a1\n        val b7 = b7 + b1\n\
    \        val c7 = c7 + c1\n        val a8 = a8 + a1\n        val b8 = b8 + b1\n\
    \        val c8 = c8 + c1\n        val a9 = a9 + a1\n        val b9 = b9 + b1\n\
    \        val c9 = c9 + c1\n        val a10 = a10 + a1\n        val b10 = b10 +\
    \ b1\n        val c10 = c10 + c1\n        val a11 = a11 + a1\n        val b11\
    \ = b11 + b1\n        val c11 = c11 + c1\n        val a12 = a12 + a1\n       \
    \ val b12 = b12 + b1\n        val c12 = c12 + c1\n        val a13 = a13 + a1\n\
    \        val b13 = b13 + b1\n        val c13 = c13 + c1\n        val a14 = a14\
    \ + a1\n        val b14 = b14 + b1\n        val c14 = c14 + c1\n        val a15\
    \ = a15 + a1\n        val b15 = b15 + b1\n        val c15 = c15 + c1\n       \
    \ val a16 = a16 + a1\n        val b16 = b16 + b1\n        val c16 = c16 + c1\n\
    \        val a17 = a17 + a1\n        val b17 = b17 + b1\n        val c17 = c17\
    \ + c1\n        val a18 = a18 + a1\n        val b18 = b18 + b1\n        val c18\
    \ = c18 + c1\n        val a19 = a19 + a1\n        val b19 = b19 + b1\n       \
    \ val c19 = c19 + c1\n        val a20 = a20 + a1\n        val b20 = b20 + b1\n\
    \        val c20 = c20 + c1", "        val ab = math.abs(a - b)\n        val ac\
    \ = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab == ac && ab\
    \ == bc", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n      \
    \  val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 * b1\
    \ * c2) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b2 * c1) > 0", "        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.abs(a + b)\n        val bc = math.abs(b + c)\n        val\
    \ ac = math.abs(a + c)\n        val abc = math.abs(ab + bc)\n        val bcd =\
    \ math.abs(bc + ac)\n        val abcd = math.abs(abc + bcd) \n        abc <= bcd",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd ", "        val a = math.abs(a)\n     \
    \   val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,2)\n\
    \        val bc = math.pow(b,2)\n        val cd = math.pow(c,2)\n        val abc\
    \ = math.pow(ab,2)\n        val bcd = math.pow(bc,2)\n        val abcd = math.pow(abc,2)\n\
    \        val abbc = math.pow(ab,2)\n        val bcbc = math.pow(bc,2)\n      \
    \  val cbcd = math.pow(c,2)\n        val abcab = math.pow(ab,2)\n        val bcbcd\
    \ = math.pow(bc,2)\n        val cbcab = math.pow(c,2)\n        val abcbb = math.pow(ab,2)\n\
    \        val bcbcbb = math.pow(bc,2)\n        val cbcabc = math.pow(c,2)\n   \
    \     val abcabb = math.pow(ab,2)\n        val bcbcbc = math.pow(bc,2)\n     \
    \   val cbcabb = math.pow(c,2)\n        val abcbbc = math.pow(ab,2)\n        val\
    \ bcbcbb = math.pow(bc,2)\n        val cbcabc = math.pow(c,2)\n        val abcabbc\
    \ = math.pow(ab,2)\n        val bcbcbcb = math.pow(bc,2)\n        val cbcabbc\
    \ = math.pow(c,2)\n        val abcbbcd = math.pow(ab,2)\n        val bcbcbcb =\
    \ math.pow(bc,2)\n        val cbcabbc = math.pow(c,2)\n        val abcbbcbb =\
    \ math.pow(ab,2)\n        val bcbcbcd = math.pow(bc,2)\n        val cbcabbd =\
    \ math.pow(c,2)\n        val abcbbcbbc = math.pow(ab,2)\n        val bcbcbcd =\
    \ math.pow(bc,2)\n        val cbcabbd = math.pow(c,2)\n        val abcbbcbbb =\
    \ math.pow(ab,2)\n        val bcbcbcd = math.pow(bc,2)\n        val cbcabbd =\
    \ math.pow(c,2)\n        val abcbbcbbcb = math.pow(ab,2)\n        val bcbcbcd\
    \ = math.pow(bc,2)\n        val cbcabbd = math.pow(c,2)\n        val abcbbcbbcd\
    \ = math.pow(ab,2)\n        val bcbcbcd = math.pow(bc,2)\n        val cbcabbd\
    \ = math.pow", "        val a = math.abs(a)\n        val b = math.abs(b)\n   \
    \     val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b,\
    \ 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a1, 2)\n    \
    \    val b2 = math.pow(b1, 2)\n        val c2 = math.pow(c1, 2)\n        val a3\
    \ = math.pow(a2, 2)\n        val b3 = math.pow(b2, 2)\n        val c3 = math.pow(c2,\
    \ 2)\n        val a4 = math.pow(a3, 2)\n        val b4 = math.pow(b3, 2)\n   \
    \     val c4 = math.pow(c3, 2)\n        val a5 = math.pow(a4, 2)\n        val\
    \ b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4, 2)\n        val a6 = math.pow(a5,\
    \ 2)\n        val b6 = math.pow(b5, 2)\n        val c6 = math.pow(c5, 2)\n   \
    \     val a7 = math.pow(a6, 2)\n        val b7 = math.pow(b6, 2)\n        val\
    \ c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7, 2)\n        val b8 = math.pow(b7,\
    \ 2)\n        val c8 = math.pow(c7, 2)\n        val a9 = math.pow(a8, 2)\n   \
    \     val b9 = math.pow(b8, 2)\n        val c9 = math.pow(c8, 2)\n        val\
    \ a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9, 2)\n        val c10 =\
    \ math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n        val b11 = math.pow(b10,\
    \ 2)\n        val c11 = math.pow(c10, 2)\n        val a12 = math.pow(a11, 2)\n\
    \        val b12 = math.pow(b11, 2)\n        val c12 = math.pow(c11, 2)\n    \
    \    val a13 = math.pow(a12, 2)\n        val b13 = math.pow(b12, 2)\n        val\
    \ c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13, 2)\n        val b14\
    \ = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n        val a15 = math.pow(a14,\
    \ 2)\n        val b15 = math.pow(b14, 2)\n        val c15 = math.pow(c14, 2)\n\
    \        val a16 = math.pow(a15, 2)\n        val b16 = math.pow(b15, 2)\n    \
    \    val c16 = math.pow(c15, 2)\n        val ", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc\
    \ < b * c", "        val ab = math.sqrt((b * b) - (a * a))\n        val ac = math.sqrt((c\
    \ * c) - (a * a))\n        val bc = (b * b) - (c * c)\n        val abc = math.sqrt((abc\
    \ * abc) - (ab * ab))\n        abc < 0", "        val ab = math.abs(a - b)\n \
    \       val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n        ab\
    \ == ac && ab == bc", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd // if abc < bcd then abc\
    \ is a right-angled triangle", "        // Write your code here\n        val side1\
    \ = math.sqrt(a * a + b * b)\n        val side2 = math.sqrt(c * c + d * d)\n \
    \       val side3 = math.sqrt(a * a + c * c)\n        val side4 = math.sqrt(b\
    \ * b + d * d)\n        val side5 = math.sqrt(c * c + b * b)\n        val side6\
    \ = math.sqrt(a * a + d * d)\n        val side7 = math.sqrt(b * b + c * c)\n \
    \       val side8 = math.sqrt(c * c + d * d)\n        val side9 = math.sqrt(a\
    \ * a + b * b)\n        val side10 = math.sqrt(c * c + d * d)\n        val side11\
    \ = math.sqrt(a * a + c * c)\n        val side12 = math.sqrt(b * b + d * d)\n\
    \        val side13 = math.sqrt(c * c + b * b)\n        val side14 = math.sqrt(a\
    \ * a + d * d)\n        val side15 = math.sqrt(b * b + c * c)\n        val side16\
    \ = math.sqrt(c * c + d * d)\n        val side17 = math.sqrt(a * a + b * b)\n\
    \        val side18 = math.sqrt(c * c + d * d)\n        val side19 = math.sqrt(a\
    \ * a + c * c)\n        val side20 = math.sqrt(b * b + d * d)\n        val side21\
    \ = math.sqrt(c * c + b * b)\n        val side22 = math.sqrt(a * a + d * d)\n\
    \        val side23 = math.sqrt(b * b + c * c)\n        val side24 = math.sqrt(c\
    \ * c + d * d)\n        val side25 = math.sqrt(a * a + b * b)\n        val side26\
    \ = math.sqrt(c * c + d * d)\n        val side27 = math.sqrt(a * a + c * c)\n\
    \        val side28 = math.sqrt(b * b + d * d)\n        val side29 = math.sqrt(c\
    \ * c + b * b)\n        val side30 = math.sqrt(a * a + d * d)\n        val side31\
    \ = math.sqrt(b * b + c * c)\n        val side32 = math.sqrt(c * c + d * d)\n\
    \        val side33 = math.sqrt(a * a + b * b)\n        val side34 = math.sqrt(c\
    \ * c + d * d)\n        val side35 = math.sqrt(a * a + c * c)\n        val side36\
    \ = math.sqrt(b * b + d * d)\n        val side37 = math.sqrt(c * c + b * b)\n\
    \        val side38 = math.sqrt(a * a + d * d)\n        val side39 = math.sqrt(b\
    \ * b + c * c)\n        val side40 = math.sqrt(c * c + d * d)\n        val side41\
    \ = math.sqrt(a * a + b * b)\n        val side42 = math.sqrt(", "        val a1\
    \ = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (b2 + c2 + a2) - (a1\
    \ + b1 + c1) * (c2 + a2 + b2)", "        val ab = math.abs(b - a)\n        val\
    \ ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val\
    \ ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab ==\
    \ ac", "        // Write your code here\n        val ab = math.abs(a-b)\n    \
    \    val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc =\
    \ math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n        val abbc = math.abs(a-b)+math.abs(b-c)+math.abs(c-b)\n\
    \        val abac = math.abs(a-b)+math.abs(a-c)+math.abs(c-a)\n        val abcab\
    \ = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)\n        val abcabc\
    \ = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)\n  \
    \      val abcabbc = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-b)\n\
    \        val abcabac = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)\n\
    \        val abcabcab = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)\n\
    \        val abcabcabc = math.abs(a-b)+math.abs(b-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(c-a)+math.abs(c-b)+math.abs(c-c)+math.abs(",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1\
    \ + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a", "        val ab =\
    \ math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        abc > ab || (abc < ab &&\
    \ abc > bc)", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b)\
    \ - (c*c))\n        val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab\
    \ == ac", "        val ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n  \
    \      val bc = math.abs(b-c)\n        ab == ac && ab == bc", "        val a1\
    \ = math.abs(a * Math.cos(math.pi/180.0))\n        val a2 = math.abs(a * Math.sin(math.pi/180.0))\n\
    \        val b1 = math.abs(b * Math.cos(math.pi/180.0))\n        val b2 = math.abs(b\
    \ * Math.sin(math.pi/180.0))\n        val c1 = math.abs(c * Math.cos(math.pi/180.0))\n\
    \        val c2 = math.abs(c * Math.sin(math.pi/180.0))\n        (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) <= 0", "        val ab = math.abs(b - a)\n        val ac =\
    \ math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        abc < ab", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c2\n        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4\
    \ + c3\n        val c4 = c4 + a4 \n        (a1 + b1 + c1 == a2 + b2 + c2 && a2\
    \ + b2 + c2 == a3 + b3 + c3 && a3 + b3 + c3 == a4 + b4 + c4 && a4 + b4 + c4 ==\
    \ a1)", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n    \
    \    val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        ab == abc && ac == bc && ab != 0", "        val a = math.abs(a)\n   \
    \     val b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a,\
    \ 2)\n        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n     \
    \   val abc = math.pow(ab, b)\n        val bcd = math.pow(bc, c)\n        val\
    \ abcd = math.pow(abc, c)\n        val abbc = math.pow(ab, b)\n        val bccd\
    \ = math.pow(bc, c)\n        val bcda = math.pow(bc, a)\n        val cdaa = math.pow(cd,\
    \ a)\n        val daab = math.pow(a, 2)\n        val dabc = math.pow(a, 2)\n \
    \       val dabcd = math.pow(a, 2)\n        val dabcda = math.pow(a, 2)\n    \
    \    val dabbca = math.pow(a, 2)\n        val dabbcdc = math.pow(a, 2)\n     \
    \   val dabbcda = math.pow(a, 2)\n        val dabbcdcd = math.pow(a, 2)\n    \
    \    val dabbcdaa = math.pow(a, 2)\n        val dabbcdcdd = math.pow(a, 2)\n \
    \       val dabbcdaab = math.pow(a, 2)\n        val dabbcdcdda = math.pow(a, 2)\n\
    \        val dabbcdaabc = math.pow(a, 2)\n        val dabbcdcddaa = math.pow(a,\
    \ 2)\n        val dabbcdaabcdd = math.pow(a, 2)\n        val dabbcdaabcdda = math.pow(a,\
    \ 2)\n        val dabbcdaabcddaa = math.pow(a, 2)\n        val dabbcdaabcddaab\
    \ = math.pow(a, 2)\n        val dabbcdaabcddaabc = math.pow(a, 2)\n        val\
    \ dabbcdaabcddaabbc = math.pow(a, 2)\n        val dabbcdaabcddaabbcd = math.pow(a,\
    \ 2)\n        val dabbcdaabcddaabbccd = math.pow(a, 2)\n        val dabbcdaabcddaabbcda\
    \ = math.pow(a, 2)\n        val dabbcdaabcddaabbcdc = math.pow(a, 2)\n       \
    \ val dabbcdaabcddaabbcdda = math.pow(a, 2)\n        val dabbcdaabcddaabbcddaa\
    \ = math.pow(a, 2)\n        val dabbcdaabcddaabbcddaab = math.pow(a, 2)\n    \
    \    val dabbcdaabcddaabbcdda", "        val a1 = math.abs(a) \n        val b1\
    \ = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n    \
    \    val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1\
    \ && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1\
    \ && c1 == a2)", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n\
    \        val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        abc < ab*ac && abc < bc*ac", "        val a1 = a / 2\n        val b1\
    \ = b / 2\n        val c1 = c / 2\n        val a2 = a1 + a1\n        val b2 =\
    \ b1 + b1\n        val c2 = c1 + c1\n        val a3 = a2 + a2\n        val b3\
    \ = b2 + b2\n        val c3 = c3 + c3\n        val a4 = a3 + a3\n        val b4\
    \ = b4 + b4\n        val c4 = c4 + c4\n        val a5 = a4 + a4\n        val b5\
    \ = b5 + b5\n        val c5 = c5 + c5\n        val a6 = a5 + a5\n        val b6\
    \ = b6 + b6\n        val c6 = c6 + c6\n        val a7 = a6 + a6\n        val b7\
    \ = b7 + b7\n        val c7 = c7 + c7\n        val a8 = a7 + a8\n        val b8\
    \ = b8 + b8\n        val c8 = c8 + c8\n        val a9 = a7 + a9\n        val b9\
    \ = b9 + b9\n        val c9 = c9 + c9\n        val a10 = a9 + a10\n        val\
    \ b10 = b9 + b10\n        val c10 = c9 + c10\n        val a11 = a10 + a10\n  \
    \      val b11 = b10 + b11\n        val c11 = c10 + c11\n        val a12 = a11\
    \ + a11\n        val b12 = b11 + b12\n        val c12 = c11 + c12\n        val\
    \ a13 = a12 + a12\n        val b13 = b12 + b13\n        val c13 = c12 + c13\n\
    \        val a14 = a13 + a13\n        val b14 = b13 + b14\n        val c14 = c13\
    \ + c14\n        val a15 = a14 + a14\n        val b15 = b14 + b15\n        val\
    \ c15 = c14 + c15\n        val a16 = a15 + a15\n        val b16 = b15 + b16\n\
    \        val c16 = c15 + c16\n        val a17 = a16 + a16\n        val b17 = b16\
    \ + b17\n        val c17 = c16 + c17\n        val a18 = a17 + a17\n        val\
    \ b18 = b17 + b18\n        val c18 = c17 + c18\n        val a19 = a18 + a18\n\
    \        val b19 = b18 + b19\n        val c19 = c18 + c19\n        val a20 = a19",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1\
    \ + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a", "        val ab =\
    \ math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n\
    \        abc < bcd // return true if abc < bcd", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2)", " \
    \       val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b) -\
    \ (c*c))\n        val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab ==\
    \ ac", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n \
    \       val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n      \
    \  val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a\
    \ - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n \
    \       ab == ac && ab == bc", "        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 &&\
    \ c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc\
    \ = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n        abc < ab*ac && abc < bc*ac",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd,\
    \ 2)\n        abc > 0 && (ab - bc) * (b - c) >= 0", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc\
    \ = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n        abc < ab*ac*bc", "    \
    \    val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1\
    \ + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a", "        val a1 =\
    \ math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n  \
    \      val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || \n\
    \            (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)\
    \ || \n            (a1 + b1 + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 ==\
    \ c2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b2\
    \ && b1 == c2 && c1 == a2) || (a2 == b1 && b2 == c1 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c1 == a2) || (a1 == b1 && b2 == c2 && c1 == a2) || (a1 == b2\
    \ && b2 == c1 && c1 == a2) || (a2 == b1 && b2 == c2 && c1 == a2) || (a2 == b2\
    \ && b2 == c2 && c1 == a2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c3\n        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4\
    \ + c3\n        val c4 = c4 + a4\n        (a1 + b1 + c1) * (a2 + b2 + c2) * (a3\
    \ + b3 + c3) == (a4 + b4 + c4) * (a1 + b1 + c1) * (a2 + b2 + c2) * (a3 + b3 +\
    \ c3)", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c)\
    \ - (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab\
    \ == ac", "        val ab = math.abs(a - b)\n        val ac = math.abs(a - c)\n\
    \        val bc = math.abs(b - c)\n        ab == ac && ab == bc", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(c - a)\n        val bc = math.abs(c\
    \ - b)\n        ab == ac && ab == bc", "        val ab = math.abs(a-b)\n     \
    \   val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc =\
    \ math.abs(ab+ac+bc)\n        abc > Math.sqrt(ab*ab+ac*ac+bc*bc) && abc > Math.sqrt(ab*ab+ac*ac+bc*bc)",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) <= 0", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) < 0", "        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 &&\
    \ c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 &&\
    \ c1 == a2)", "        val ab = math.abs(b - a)\n        val ac = math.abs(c -\
    \ a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c)\
    \ - (a*a))\n        ab == bc && ab == ac", "        val ab = math.sqrt((b*b) -\
    \ (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c)\
    \ - (a*a))\n        ab == bc && ab == ac", "        val a1 = math.abs(a); val\
    \ b1 = math.abs(b); val c1 = math.abs(c)\n        val a2 = a1 + b1; val b2 = b1\
    \ + c1; val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 +\
    \ c1) * (a2 + b2 + c2) * (a1 + b1 + c1) > 0", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2)", "        val a1 = math.abs(a)\n        val b1\
    \ = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n    \
    \    val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2\
    \ + b2 + c2) < 0", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        abc < math.min(ab, bc)", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c) -\
    \ (a*a))\n        ab == bc && ab == ac", "        val a1 = math.abs(a)\n     \
    \   val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 +\
    \ b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c3\n        val c3 = c2 + a3\n        val a4 = a3\
    \ + b3\n        val b4 = b4 + c3\n        val c4 = c4 + a4\n        (a1 == a2\
    \ && b1 == b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4\
    \ && b1 == b4 && c1 == c4)", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a,\
    \ 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n     \
    \   val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 =\
    \ math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b,\
    \ 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n     \
    \   val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 =\
    \ math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c,\
    \ 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n     \
    \   val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 =\
    \ math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a,\
    \ 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n  \
    \      val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val\
    \ c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n        val b11 =\
    \ math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a,\
    \ 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n\
    \        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n      \
    \  val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n        val b14\
    \ = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a,\
    \ 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n\
    \        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n      \
    \  val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n        val b17\
    \ = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a,\
    \ 19)\n        val b18 = math.", "        val a1 = (a / 2)\n        val b1 = (b\
    \ / 2)\n        val c1 = (c / 2)\n        val a2 = (a1 + b1)\n        val b2 =\
    \ (b1 + c1)\n        val c2 = (c1 + a1)\n        val a3 = (a2 + b2)\n        val\
    \ b3 = (b2 + c2)\n        val c3 = (c2 + a2)\n        val a4 = (a3 + b3)\n   \
    \     val b4 = (b3 + c3)\n        val c4 = (c3 + a3)\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) == (a4 + b4 + c4)", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 && c2 == a2)", "      \
    \  val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc\
    \ = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc\
    \ + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a", "        // Write your code here\n        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val d = math.abs(a\
    \ + b + c)\n        val e = math.abs(a - b - c)\n        val f = math.abs(a +\
    \ b - c)\n        val g = math.abs(a - b + c)\n        val h = math.abs(a + b\
    \ + c)\n        val i = math.abs(a - b - c)\n        val j = math.abs(a - b +\
    \ c)\n        val k = math.abs(a + b - c)\n        val l = math.abs(a + b + c)\n\
    \        val m = math.abs(a - b - c)\n        val n = math.abs(a - b + c)\n  \
    \      val o = math.abs(a + b - c)\n        val p = math.abs(a + b + c)\n    \
    \    val q = math.abs(a - b - c)\n        val r = math.abs(a - b + c)\n      \
    \  val s = math.abs(a + b - c)\n        val t = math.abs(a + b + c)\n        val\
    \ u = math.abs(a - b - c)\n        val v = math.abs(a - b + c)\n        val w\
    \ = math.abs(a + b - c)\n        val x = math.abs(a + b + c)\n        val y =\
    \ math.abs(a - b - c)\n        val z = math.abs(a - b + c)\n        val A = math.abs(a\
    \ + b + c)\n        val B = math.abs(a - b - c)\n        val C = math.abs(a -\
    \ b + c)\n        val D = math.abs(a + b - c)\n        val E = math.abs(a + b\
    \ + c)\n        val F = math.abs(a - b - c)\n        val G = math.abs(a - b +\
    \ c)\n        val H = math.abs(a + b - c)\n        val I = math.abs(a - b - c)\n\
    \        val J = math.abs(a - b + c)\n        val K = math.abs(a + b - c)\n  \
    \      val L = math.abs(a + b + c)\n        val M = math.abs(a - b - c)\n    \
    \    val N = math.abs(a - b + c)\n        val O = math.abs(a + b - c)\n      \
    \  val P = math.abs(a + b + c)\n        val Q = math.abs(a - b - c)\n        val\
    \ R = math.abs(a - b + c)\n        val S = math.abs(a + b - c)\n        val T\
    \ = math.abs(a + b + c)\n        val U = math.abs(a - b - c)\n        val V =\
    \ math.abs(a - b + c)\n        val W = math.abs(a + b - c)\n        val X = math.abs(a\
    \ + b + c)\n        val Y = math.abs(a - b", "        // Write your code here\n\
    \        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 =\
    \ math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val\
    \ c2 = c1 + a1\n        (a1 + b1 + c1) != (a2 + b2 + c2)", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 ==\
    \ c1 && c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 ==\
    \ c1 && c1 == a2) || (a1 == c2 && b1 == c1 && c1 == a2) || (a1 == c2 && b1 ==\
    \ c2 && c1 == a2)", "        // Write your code here\n        val a1 = (a / 2)\n\
    \        val b1 = (b / 2)\n        val c1 = (c / 2)\n        val a2 = (a1 + b1)\n\
    \        val b2 = (b1 + c1)\n        val c2 = (c1 + a1)\n        val a3 = (a2\
    \ + b2)\n        val b3 = (b2 + c2)\n        val c3 = (c2 + a2)\n        val a4\
    \ = (a3 + b3)\n        val b4 = (b3 + c3)\n        val c4 = (c3 + a3)\n      \
    \  val a5 = (a4 + b4)\n        val b5 = (b5 + c4)\n        val c5 = (c4 + a4)\n\
    \        val a6 = (a5 + b5)\n        val b6 = (b6 + c5)\n        val c6 = (c5\
    \ + a5)\n        (a6 == b6 || a6 == c6 || a6 == a6)", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc > bcd // if abc > bcd then a\
    \ is right angle", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a,\
    \ 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n     \
    \   val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 =\
    \ math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b,\
    \ 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n     \
    \   val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 =\
    \ math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c,\
    \ 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n     \
    \   val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 =\
    \ math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a,\
    \ 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n  \
    \      val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val\
    \ c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n        val b11 =\
    \ math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a,\
    \ 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n\
    \        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n      \
    \  val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n        val b14\
    \ = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a,\
    \ 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n\
    \        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n      \
    \  val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n        val b17\
    \ = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a,\
    \ 19)\n        val b18 = math.", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c) -\
    \ (a*a))\n        ab == bc && ab == ac", "        val a = math.abs(a)\n      \
    \  val b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.abs(a\
    \ * 0.5)\n        val b1 = math.abs(b * 0.5)\n        val c1 = math.abs(c * 0.5)\n\
    \        val a2 = math.abs(a * 0.5)\n        val b2 = math.abs(b * 0.5)\n    \
    \    val c2 = math.abs(c * 0.5)\n        val a3 = math.abs(a * 0.5)\n        val\
    \ b3 = math.abs(b * 0.5)\n        val c3 = math.abs(c * 0.5)\n        val a4 =\
    \ math.abs(a * 0.5)\n        val b4 = math.abs(b * 0.5)\n        val c4 = math.abs(c\
    \ * 0.5)\n        val a5 = math.abs(a * 0.5)\n        val b5 = math.abs(b * 0.5)\n\
    \        val c5 = math.abs(c * 0.5)\n        val a6 = math.abs(a * 0.5)\n    \
    \    val b6 = math.abs(b * 0.5)\n        val c6 = math.abs(c * 0.5)\n        val\
    \ a7 = math.abs(a * 0.5)\n        val b7 = math.abs(b * 0.5)\n        val c7 =\
    \ math.abs(c * 0.5)\n        val a8 = math.abs(a * 0.5)\n        val b8 = math.abs(b\
    \ * 0.5)\n        val c8 = math.abs(c * 0.5)\n        val a9 = math.abs(a * 0.5)\n\
    \        val b9 = math.abs(b * 0.5)\n        val c9 = math.abs(c * 0.5)\n    \
    \    val a10 = math.abs(a * 0.5)\n        val b10 = math.abs(b * 0.5)\n      \
    \  val c10 = math.abs(c * 0.5)\n        val a11 = math.abs(a * 0.5)\n        val\
    \ b11 = math.abs(b * 0.5)\n        val c11 = math.abs(c * 0.5)\n        val a12\
    \ = math.abs(a * 0.5)\n        val b12 = math.abs(b * 0.5)\n        val c12 =\
    \ math.abs(c * 0.5)\n        val a13 = math.abs(a * 0.5)\n        val b13 = math.abs(b\
    \ * 0.5)\n        val c13 = math.abs(c * 0.5)\n        val a14 = math.abs(a *\
    \ 0.5)\n        val b14 = math.abs(b * 0.5)\n        val c14 = math.abs(c * 0.5)\n\
    \        val a15 = math.abs(a * 0.5)\n        val b15 = math.abs(b * 0.5)\n  \
    \      val c15 = math.abs(c * 0.5)\n        val a16 = math.abs(a * 0.5)\n    \
    \    val b16 = math.abs(b * 0.5)\n        val c16 = math.abs(c * 0.5)", "    \
    \    val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc =\
    \ math.abs(c-b)\n        val abc = math.abs(ab+ac+bc)\n        abc < math.min(ab,ac,bc)",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((c*c) - (b*b))\n        val ac = math.sqrt((a*a) -\
    \ (c*c))\n        ab == bc && ab == ac", "        val ab = math.sqrt((b*b) - (a*a))\n\
    \        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c) -\
    \ (a*a))\n        ab == bc && ab == ac", "        val a = math.abs(a)\n      \
    \  val b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a,\
    \ 2)\n        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n     \
    \   val a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 =\
    \ math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b,\
    \ 4)\n        val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n     \
    \   val b4 = math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 =\
    \ math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c,\
    \ 6)\n        val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n     \
    \   val c6 = math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 =\
    \ math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a,\
    \ 9)\n        val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n     \
    \   val a9 = math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9\
    \ = math.pow(c, 10)\n        (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 ==\
    \ a4 + b4 + c4 && a5 + b5 + c5 == a6 + b6 + c6 && a7 + b7 + c7 == a8 + b8 + c8\
    \ && a9 + b9 + c9 == a10 + b10 + c10)", "        val ab = math.abs(a - b)\n  \
    \      val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        ab\
    \ > ac && ab > bc", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = math.abs(a1 - b1)\n        val\
    \ b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1 - a1)\n        (a1 + b1\
    \ + c1) - (a2 + b2 + c2) < 0", "        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 * b1 * c2) - (a2 * b1 * c1) - (a1 * b2 * c1) - (a2 * b2 * c1)\
    \ > 0", "        val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n    \
    \    val bc = math.abs(c-b)\n        val abc = math.abs(ab+ac+bc)\n        abc\
    \ > a && abc > b", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd && abc < ab", "      \
    \  val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n\
    \        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n        val acb\
    \ = math.abs(c-a)+math.abs(c-b)\n        val bcd = math.abs(c-b)+math.abs(c-d)\n\
    \        val abcd = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)+math.abs(c-d)\n\
    \        ab == abc && ac == acb && bc == bcd && abc == abcd", "        val ab\
    \ = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n    \
    \    val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab == ac", "     \
    \   // Write your code here\n        val a1 = math.abs(a); val b1 = math.abs(b);\
    \ val c1 = math.abs(c)\n        val a2 = a1 + b1; val b2 = b1 + c1; val c2 = c1\
    \ + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 == b2 && b2 == c2 &&\
    \ c2 == a2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n  \
    \      val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        val a4 = a3 + b3\n        val b4 = b3 + c3\n\
    \        val c4 = c3 + a3\n        (a1 == a2 && b1 == b2 && c1 == c2) || (a1 ==\
    \ a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 == b4 && c1 == c4)", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.pow(a1, 2)\n        val b2 = math.pow(b1, 2)\n        val\
    \ c2 = math.pow(c1, 2)\n        val a3 = math.pow(a1, 3)\n        val b3 = math.pow(b1,\
    \ 3)\n        val c3 = math.pow(c1, 3)\n        val a4 = math.pow(a2, 2)\n   \
    \     val b4 = math.pow(b2, 2)\n        val c4 = math.pow(c2, 2)\n        val\
    \ a5 = math.pow(a2, 3)\n        val b5 = math.pow(b2, 3)\n        val c5 = math.pow(c2,\
    \ 3)\n        val a6 = math.pow(a3, 2)\n        val b6 = math.pow(b3, 2)\n   \
    \     val c6 = math.pow(c3, 2)\n        val a7 = math.pow(a3, 3)\n        val\
    \ b7 = math.pow(b3, 3)\n        val c7 = math.pow(c3, 3)\n        val a8 = math.pow(a4,\
    \ 2)\n        val b8 = math.pow(b4, 2)\n        val c8 = math.pow(c4, 2)\n   \
    \     val a9 = math.pow(a4, 3)\n        val b9 = math.pow(b4, 3)\n        val\
    \ c9 = math.pow(c4, 3)\n        val a10 = math.pow(a5, 2)\n        val b10 = math.pow(b5,\
    \ 2)\n        val c10 = math.pow(c5, 2)\n        val a11 = math.pow(a5, 3)\n \
    \       val b11 = math.pow(b5, 3)\n        val c11 = math.pow(c5, 3)\n       \
    \ val a12 = math.pow(a6, 2)\n        val b12 = math.pow(b6, 2)\n        val c12\
    \ = math.pow(c6, 2)\n        val a13 = math.pow(a6, 3)\n        val b13 = math.pow(b6,\
    \ 3)\n        val c13 = math.pow(c6, 3)\n        val a14 = math.pow(a7, 2)\n \
    \       val b14 = math.pow(b7, 2)\n        val c14 = math.pow(c7, 2)\n       \
    \ val a15 = math.pow(a7, 3)\n        val b15 = math.pow(b7, 3)\n        val c15\
    \ = math.pow(c7, 3)\n        val a16 = math.pow(a8, 2)\n        val b16 = math.pow(b8,\
    \ 2)\n        val c16 = math.pow(c8, 2)\n        val a17 = math.pow(a8, 3)\n \
    \       val b17 = math.pow(b8, 3)\n        val c17", "        val a1 = math.abs(a\
    \ * Math.cos(math.pi/180))\n        val b1 = math.abs(b * Math.cos(math.pi/180))\n\
    \        val c1 = math.abs(c * Math.cos(math.pi/180))\n        val a2 = math.abs(a\
    \ * Math.sin(math.pi/180))\n        val b2 = math.abs(b * Math.sin(math.pi/180))\n\
    \        val c2 = math.abs(c * Math.sin(math.pi/180))\n        (a1 + b1 + c1)\
    \ < (a2 + b2 + c2)", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.abs(a * 0.5)\n        val\
    \ b1 = math.abs(b * 0.5)\n        val c1 = math.abs(c * 0.5)\n        val a2 =\
    \ math.abs(a * 0.5)\n        val b2 = math.abs(b * 0.5)\n        val c2 = math.abs(c\
    \ * 0.5)\n        val a3 = math.abs(a * 0.5)\n        val b3 = math.abs(b * 0.5)\n\
    \        val c3 = math.abs(c * 0.5)\n        val a4 = math.abs(a * 0.5)\n    \
    \    val b4 = math.abs(b * 0.5)\n        val c4 = math.abs(c * 0.5)\n        val\
    \ a5 = math.abs(a * 0.5)\n        val b5 = math.abs(b * 0.5)\n        val c5 =\
    \ math.abs(c * 0.5)\n        val a6 = math.abs(a * 0.5)\n        val b6 = math.abs(b\
    \ * 0.5)\n        val c6 = math.abs(c * 0.5)\n        val a7 = math.abs(a * 0.5)\n\
    \        val b7 = math.abs(b * 0.5)\n        val c7 = math.abs(c * 0.5)\n    \
    \    val a8 = math.abs(a * 0.5)\n        val b8 = math.abs(b * 0.5)\n        val\
    \ c8 = math.abs(c * 0.5)\n        val a9 = math.abs(a * 0.5)\n        val b9 =\
    \ math.abs(b * 0.5)\n        val c9 = math.abs(c * 0.5)\n        val a10 = math.abs(a\
    \ * 0.5)\n        val b10 = math.abs(b * 0.5)\n        val c10 = math.abs(c *\
    \ 0.5)\n        val a11 = math.abs(a * 0.5)\n        val b11 = math.abs(b * 0.5)\n\
    \        val c11 = math.abs(c * 0.5)\n        val a12 = math.abs(a * 0.5)\n  \
    \      val b12 = math.abs(b * 0.5)\n        val c12 = math.abs(c * 0.5)\n    \
    \    val a13 = math.abs(a * 0.5)\n        val b13 = math.abs(b * 0.5)\n      \
    \  val c13 = math.abs(c * 0.5)\n        val a14 = math.abs(a * 0.5)\n        val\
    \ b14 = math.abs(b * 0.5)\n        val c14 = math.abs(c * 0.5)\n        val a15\
    \ = math.abs(a * 0.5)\n        val b15 = math.abs(b * 0.5)\n        val c15 =\
    \ math.abs(c * 0.5)\n        val a16 = math.abs(a * 0.5)\n        val b16 = math.abs(b\
    \ * 0.5)\n        val c16 = math.abs(c * 0.5)", "        val ab = math.abs(b -\
    \ a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n     \
    \   abc < bcd", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        abc < ab", "        val ab = math.sqrt((b * b) - (a * a))\n        val\
    \ bc = math.sqrt((c * c) - (b * b))\n        val ac = math.sqrt((c * c) - (a *\
    \ a))\n        ab == bc && ab == ac", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n\
    \        val b1 = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val\
    \ a2 = math.pow(a, 3)\n        val b2 = math.pow(b, 3)\n        val c2 = math.pow(c,\
    \ 3)\n        val a3 = math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n     \
    \   val c3 = math.pow(c, 4)\n        val a4 = math.pow(a, 5)\n        val b4 =\
    \ math.pow(b, 5)\n        val c4 = math.pow(c, 5)\n        val a5 = math.pow(a,\
    \ 6)\n        val b5 = math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n     \
    \   val a6 = math.pow(a, 7)\n        val b6 = math.pow(b, 7)\n        val c6 =\
    \ math.pow(c, 7)\n        val a7 = math.pow(a, 8)\n        val b7 = math.pow(b,\
    \ 8)\n        val c7 = math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n     \
    \   val b8 = math.pow(b, 9)\n        val c8 = math.pow(c, 9)\n        val a9 =\
    \ math.pow(a, 10)\n        val b9 = math.pow(b, 10)\n        val c9 = math.pow(c,\
    \ 10)\n        val a10 = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n\
    \        val c10 = math.pow(c, 11)\n        val a11 = math.pow(a, 12)\n      \
    \  val b11 = math.pow(b, 12)\n        val c11 = math.pow(c, 12)\n        val a12\
    \ = math.pow(a, 13)\n        val b12 = math.pow(b, 13)\n        val c12 = math.pow(c,\
    \ 13)\n        val a13 = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n\
    \        val c13 = math.pow(c, 14)\n        val a14 = math.pow(a, 15)\n      \
    \  val b14 = math.pow(b, 15)\n        val c14 = math.pow(c, 15)\n        val a15\
    \ = math.pow(a, 16)\n        val b15 = math.pow(b, 16)\n        val c15 = math.pow(c,\
    \ 16)\n        val a16 = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n\
    \        val c16 = math.pow(c, 17)\n        val a17 = math.pow(a, 18)\n      \
    \  val b17 = math.pow(b, 18)\n        val c17 = math.pow(c, 18)\n        val a18\
    \ = math.pow(a, 19)\n        val b18 = math.", "        val ab = math.abs(b -\
    \ a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n   \
    \     val abc = math.abs(ab + ac)\n        val bca = math.abs(bc - ab)\n     \
    \   abc < bca && abc < ab", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) *\
    \ (a2 + b2 + c2) < 0", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ + b1 + c1) * (b2 + c2 + a2) - (a1 + b1 + c1) * (c2 + a2 + b2) - (a2 + b2 + c2)\
    \ * (a1 + b1 + c1) - (a2 + b2 + c2) * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 +\
    \ a1 + b1) - (a2 + b2 + c2) * (c1 + b1 + a1) - (b2 + c2 + a2) * (a1 + b1 + c1)\
    \ - (b2 + c2 + a2) * (b1 + c1 + a1) - (b2 + c2 + a2) * (c1 + a1 + b1) - (b2 +\
    \ c2 + a2) * (c1 + b1 + a1) - (c2 + a2 + b2) * (a1 + b1 + c1) - (c2 + a2 + b2)\
    \ * (b1 + c1 + a1) - (c2 + a2 + b2) * (c1 + a1 + b1) - (c2 + a2 + b2) * (c1 +\
    \ b1 + a1) - (a2 + c2 + b2) * (a1 + b1 + c1) - (a2 + c2 + b2) * (b1 + c1 + a1)\
    \ - (a2 + c2 + b2) * (c1 + a1 + b1) - (a2 + c2 + b2) * (c1 + b1 + a1) - (b2 +\
    \ c1 + a2) * (a1 + b1 + c1) - (b2 + c1 + a2) * (b1 + c1 + a1) - (b2 + c1 + a2)\
    \ * (c1 + a1 + b1) - (b2 + c1 + a2) * (c1 + b1 + a1) - (c1 + a1 + b2) * (a1 +\
    \ b1 + c1) - (c1 + a1 + b2) * (b1 + c1 + a1) - (c1 + a1 + b2) * (c1 + b1 + a1)\
    \ - (a1 + b1 + c2) * (a2 + b2 + c2) - (a1 + b1 + c2) * (b2 + c2 + a2) - (a1 +\
    \ b1 + c2) * (c2 + a2 + b2) - (a2 + b2 + c2) * (a1 + b1 + c1) - (a2 + b2 + c2)\
    \ * (b1 + c1 + a1) - (a2 + b2 + c2) * (c1 + a1 + b1) - (a2 + b2 + c2) * (c1 +\
    \ b1 + a1) - (b", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1\
    \ = math.pow(b, 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a1,\
    \ 2)\n        val b2 = math.pow(b1, 2)\n        val c2 = math.pow(c1, 2)\n   \
    \     val a3 = math.pow(a2, 2)\n        val b3 = math.pow(b2, 2)\n        val\
    \ c3 = math.pow(c2, 2)\n        val a4 = math.pow(a3, 2)\n        val b4 = math.pow(b3,\
    \ 2)\n        val c4 = math.pow(c3, 2)\n        val a5 = math.pow(a4, 2)\n   \
    \     val b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4, 2)\n        val\
    \ a6 = math.pow(a5, 2)\n        val b6 = math.pow(b5, 2)\n        val c6 = math.pow(c5,\
    \ 2)\n        val a7 = math.pow(a6, 2)\n        val b7 = math.pow(b6, 2)\n   \
    \     val c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7, 2)\n        val\
    \ b8 = math.pow(b7, 2)\n        val c8 = math.pow(c7, 2)\n        val a9 = math.pow(a8,\
    \ 2)\n        val b9 = math.pow(b8, 2)\n        val c9 = math.pow(c8, 2)\n   \
    \     val a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9, 2)\n        val\
    \ c10 = math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n        val b11 =\
    \ math.pow(b10, 2)\n        val c11 = math.pow(c10, 2)\n        val a12 = math.pow(a11,\
    \ 2)\n        val b12 = math.pow(b11, 2)\n        val c12 = math.pow(c11, 2)\n\
    \        val a13 = math.pow(a12, 2)\n        val b13 = math.pow(b12, 2)\n    \
    \    val c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13, 2)\n        val\
    \ b14 = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n        val a15\
    \ = math.pow(a14, 2)\n        val b15 = math.pow(b14, 2)\n        val c15 = math.pow(c14,\
    \ 2)\n        val a16 = math.pow(a15, 2)\n        val b16 = math.pow(b15, 2)\n\
    \        val c16 = math.pow(c15, 2)\n        val ", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a3\n        (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a2) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a3) || (a1 ==\
    \ b1 && b1 == c1 && c1 == a3) || (a1 == b1 && b1 == c1 && c1 == ", "        val\
    \ ab = math.abs(a-b)\n        val ac = math.abs(a-c)\n        val bc = math.abs(b-c)\n\
    \        ab > ac && ab > bc", "        val ab = math.abs(a-b)\n        val ac\
    \ = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc = math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n\
    \        ab == abc && ac == bc && ab != 0", "        val a1 = math.abs(a)\n  \
    \      val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1\
    \ + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        val a3 = a2\
    \ + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a3\n        (a1 + b1 +\
    \ c1) * (a2 + b2 + c2) * (a3 + b3 + c3) == (a1 * b2 * c3 - a2 * b1 * c3 + a3 *\
    \ b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 *\
    \ b1 * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 *\
    \ b2 * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2\
    \ * c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3\
    \ * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3\
    \ * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1\
    \ * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1\
    \ * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2\
    \ * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 *\
    \ c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 *\
    \ c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1 * c2 - a1 * b3 *\
    \ c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1 * c3 + a3 * b1 *\
    \ c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) * (a1 * b2 * c3 - a2 * b1 *\
    \ c3 + a3 * b1 * c2 - a1 * b3 * c1 + a2 * b3 * c1 - a3 * b2 * c2) ", "       \
    \ val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc =\
    \ math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < ab && abc\
    \ < bc", "        val a1 = math.abs(a).toInt\n        val b1 = math.abs(b).toInt\n\
    \        val c1 = math.abs(c).toInt\n        val a2 = a1 + 1\n        val b2 =\
    \ b1 + 1\n        val c2 = c1 + 1\n        val a3 = a2 + 1\n        val b3 = b2\
    \ + 1\n        val c3 = c3 + 1\n        val a4 = a3 + 1\n        val b4 = b4 +\
    \ 1\n        val c4 = c4 + 1\n        val a5 = a4 + 1\n        val b5 = b5 + 1\n\
    \        val c5 = c5 + 1\n        val a6 = a6 + 1\n        val b6 = b6 + 1\n \
    \       val c6 = c6 + 1\n        val a7 = a7 + 1\n        val b7 = b7 + 1\n  \
    \      val c7 = c7 + 1\n        val a8 = a8 + 1\n        val b8 = b8 + 1\n   \
    \     val c8 = c8 + 1\n        val a9 = a9 + 1\n        val b9 = b9 + 1\n    \
    \    val c9 = c9 + 1\n        val a10 = a10 + 1\n        val b10 = b10 + 1\n \
    \       val c10 = c10 + 1\n        val a11 = a11 + 1\n        val b11 = b11 +\
    \ 1\n        val c11 = c11 + 1\n        val a12 = a12 + 1\n        val b12 = b12\
    \ + 1\n        val c12 = c12 + 1\n        val a13 = a13 + 1\n        val b13 =\
    \ b13 + 1\n        val c13 = c13 + 1\n        val a14 = a14 + 1\n        val b14\
    \ = b14 + 1\n        val c14 = c14 + 1\n        val a15 = a15 + 1\n        val\
    \ b15 = b15 + 1\n        val c15 = c15 + 1\n        val a16 = a16 + 1\n      \
    \  val b16 = b16 + 1\n        val c16 = c16 + 1\n        val a17 = a17 + 1\n \
    \       val b17 = b17 + 1\n        val c17 = c17 + 1\n        val a18 = a18 +\
    \ 1\n        val b18 = b18 + 1\n        val c18 = c18 + 1\n        val a19 = a19\
    \ + 1\n        val b19 = b19 + 1\n        val c19 = c19 + 1\n        val a20 =\
    \ a20 + 1\n        val b20 = b20 + 1\n        val c20 = c20 + 1\n        val a21\
    \ = a21 + 1\n        val b21 = b21 + 1\n        val c21 = c21 + 1\n        val\
    \ a22 = a22 + 1\n        val b22 = b22 + 1\n        val c22 = c", "        //\
    \ Write your code here\n        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b", "        val ab = math.abs(b - a)\n        val ac = math.abs(c -\
    \ a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd // if abc < bcd then abc\
    \ is a right-angled triangle", "        // Write your code here\n        val a1\
    \ = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n        val a2 = a1\
    \ + 1\n        val b2 = b1 + 1\n        val c2 = c1 + 1\n        val a3 = a2 +\
    \ 1\n        val b3 = b2 + 1\n        val c3 = c3 + 1\n        val a4 = a3 + 1\n\
    \        val b4 = b4 + 1\n        val c4 = c4 + 1\n        val a5 = a4 + 1\n \
    \       val b5 = b5 + 1\n        val c5 = c5 + 1\n        val a6 = a6 + 1\n  \
    \      val b6 = b6 + 1\n        val c6 = c6 + 1\n        val a7 = a7 + 1\n   \
    \     val b7 = b7 + 1\n        val c7 = c7 + 1\n        val a8 = a8 + 1\n    \
    \    val b8 = b8 + 1\n        val c8 = c8 + 1\n        val a9 = a9 + 1\n     \
    \   val b9 = b9 + 1\n        val c9 = c9 + 1\n        val a10 = a10 + 1\n    \
    \    val b10 = b10 + 1\n        val c10 = c10 + 1\n        val a11 = a11 + 1\n\
    \        val b11 = b11 + 1\n        val c11 = c11 + 1\n        val a12 = a12 +\
    \ 1\n        val b12 = b12 + 1\n        val c12 = c12 + 1\n        val a13 = a13\
    \ + 1\n        val b13 = b13 + 1\n        val c13 = c13 + 1\n        val a14 =\
    \ a14 + 1\n        val b14 = b14 + 1\n        val c14 = c14 + 1\n        val a15\
    \ = a15 + 1\n        val b15 = b15 + 1\n        val c15 = c15 + 1\n        val\
    \ a16 = a16 + 1\n        val b16 = b16 + 1\n        val c16 = c16 + 1\n      \
    \  val a17 = a17 + 1\n        val b17 = b17 + 1\n        val c17 = c17 + 1\n \
    \       val a18 = a18 + 1\n        val b18 = b18 + 1\n        val c18 = c18 +\
    \ 1\n        val a19 = a19 + 1\n        val b19 = b19 + 1\n        val c19 = c19\
    \ + 1\n        val a20 = a20 + 1\n        val b20 = b20 + 1\n        val c20 =\
    \ c20 + 1\n        val a21 = a21 + 1\n        val b21 = b21 + 1\n        val c21\
    \ = c21 + 1\n        val a22 = a22 + 1\n        val b22 = b22 + 1\n        val\
    \ c22 = c22", "        // Write your code here\n        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1 == a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2) || (a1 + b1 + c1 ==\
    \ a2 && b1 + c1 + a2 == b2 && c1 + a2 + b2 == c2)", "        // Write your code\
    \ here\n        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a1\n        (a1 + b1 + c1) != (a2 + b2 + c2)", "        val\
    \ ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n\
    \        abc < bcd // if abc < bcd then a is right angle", "        // Write your\
    \ code here\n        val a1 = math.abs(a * 0.5)\n        val b1 = math.abs(b *\
    \ 0.5)\n        val c1 = math.abs(c * 0.5)\n        val a2 = math.abs(a * 0.5)\n\
    \        val b2 = math.abs(b * 0.5)\n        val c2 = math.abs(c * 0.5)\n    \
    \    val a3 = math.abs(a * 0.5)\n        val b3 = math.abs(b * 0.5)\n        val\
    \ c3 = math.abs(c * 0.5)\n        val a4 = math.abs(a * 0.5)\n        val b4 =\
    \ math.abs(b * 0.5)\n        val c4 = math.abs(c * 0.5)\n        val a5 = math.abs(a\
    \ * 0.5)\n        val b5 = math.abs(b * 0.5)\n        val c5 = math.abs(c * 0.5)\n\
    \        val a6 = math.abs(a * 0.5)\n        val b6 = math.abs(b * 0.5)\n    \
    \    val c6 = math.abs(c * 0.5)\n        val a7 = math.abs(a * 0.5)\n        val\
    \ b7 = math.abs(b * 0.5)\n        val c7 = math.abs(c * 0.5)\n        val a8 =\
    \ math.abs(a * 0.5)\n        val b8 = math.abs(b * 0.5)\n        val c8 = math.abs(c\
    \ * 0.5)\n        val a9 = math.abs(a * 0.5)\n        val b9 = math.abs(b * 0.5)\n\
    \        val c9 = math.abs(c * 0.5)\n        val a10 = math.abs(a * 0.5)\n   \
    \     val b10 = math.abs(b * 0.5)\n        val c10 = math.abs(c * 0.5)\n     \
    \   val a11 = math.abs(a * 0.5)\n        val b11 = math.abs(b * 0.5)\n       \
    \ val c11 = math.abs(c * 0.5)\n        val a12 = math.abs(a * 0.5)\n        val\
    \ b12 = math.abs(b * 0.5)\n        val c12 = math.abs(c * 0.5)\n        val a13\
    \ = math.abs(a * 0.5)\n        val b13 = math.abs(b * 0.5)\n        val c13 =\
    \ math.abs(c * 0.5)\n        val a14 = math.abs(a * 0.5)\n        val b14 = math.abs(b\
    \ * 0.5)\n        val c14 = math.abs(c * 0.5)\n        val a15 = math.abs(a *\
    \ 0.5)\n        val b15 = math.abs(b * 0.5)\n        val c15 = math.abs(c * 0.5)\n\
    \        val a16 = math.abs(a * 0.5)\n        val b16 = math.abs(b * 0.5)\n  \
    \      val c16 = math.abs(c * 0.5)\n        val a17 = math.abs(a * 0.5)\n    \
    \    val b17", "        // Write your code here\n        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3\
    \ = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4\
    \ = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n        (a1 ==\
    \ a2 && b1 == b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3) || (a1 ==\
    \ a4 && b1 == b4 && c1 == c4)", "        // Write your code here\n        val\
    \ a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val\
    \ c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        ", "        val\
    \ ab = math.abs(a - b)\n        val ac = math.abs(c - a)\n        val bc = math.abs(c\
    \ - b)\n        val abc = math.abs(ab - ac)\n        abc < bc / 2", "        val\
    \ ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b\
    \ - c)\n        val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n\
    \        abc < bcd", "        val a1 = (a + b + c) / 2\n        val b1 = (a +\
    \ b - c) / 2\n        val c1 = (a - b - c) / 2\n        val a2 = (a1 + b1 + c1)\
    \ / 2\n        val b2 = (a1 + b1 - c1) / 2\n        val c2 = (a1 - b1 - c2) /\
    \ 2\n        val a3 = (a2 + b2 + c2) / 2\n        val b3 = (a2 + b2 - c2) / 2\n\
    \        val c3 = (a2 - b2 - c3) / 2\n        (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ * (a3 + b3 + c3) == 0 ||\n            (a1 + b1 - c1) * (a2 + b2 - c2) * (a3\
    \ + b3 + c3) == 0 ||\n            (a1 - b1 - c1) * (a2 + b2 - c2) * (a3 + b3 +\
    \ c3) == 0 ||\n            (a1 - b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) ==\
    \ 0 ||\n            (a1 - b1 - c1) * (a2 + b2 - c2) * (a3 + b3 + c3) == 0 ||\n\
    \            (a1 - b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) == 0 ||\n      \
    \      (a1 - b1 - c1) * (a2 + b2 - c2) * (a3 + b3 + c3) == 0 ||\n            (a1\
    \ - b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) == 0 ||\n            (a1 - b1 -\
    \ c1) * (a2 + b2 - c2) * (a3 + b3 + c3) == 0 ||\n            (a1 - b1 + c1) *\
    \ (a2 + b2 + c2) * (a3 + b3 + c3) == 0 ||\n            (a1 - b1 - c1) * (a2 +\
    \ b2 - c2) * (a3 + b3 + c3) == 0 ||\n            (a1 - b1 + c1) * (a2 + b2 + c2)\
    \ * (a3 + b3 + c3) == 0 ||\n            (a1 - b1 - c1) * (a2 + b2 - c2) * (a3\
    \ + b3 + c3) == 0 ||\n            (a1 - b1 + c1) * (a2 + b2 + c2) * (a3 + b3 +\
    \ c3) == 0 ||\n            (a1 - b1 - c1) * (a2 + b2 - c2) * (a3 + b3 + c3) ==\
    \ 0 ||\n            (a1 - b1 + c1) * (a2 + b2 + c2) * (a3 + b3 + c3) == 0 ||\n\
    \            (a1 - b1 - c1) * (a2 + b2 - c2) * (a3 + b3 + c3) == 0 ||\n      \
    \      (a1 - b1 + ", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a\
    \ - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n \
    \       ab == ac && ab == bc", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n        val bc\
    \ = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val abc = math.pow(ab,\
    \ 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc > 0 && (ab - bc) * (b -\
    \ c) >= 0", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c)\
    \ - (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab\
    \ == ac", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n\
    \        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n     \
    \   val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a = math.abs(a)\n\
    \        val b = math.abs(b)\n        val c = math.abs(c)\n        val d = math.sqrt((b*b)\
    \ + (c*c))\n        val e = math.sqrt((b*b) + (a*a))\n        val f = math.sqrt((c*c)\
    \ + (a*a))\n        val g = math.sqrt((c*c) + (b*b))\n        val h = math.sqrt((c*c)\
    \ + (c*c))\n        val i = math.sqrt((e*e) + (f*f))\n        val j = math.sqrt((e*e)\
    \ + (g*g))\n        val k = math.sqrt((e*e) + (h*h))\n        val l = math.sqrt((f*f)\
    \ + (g*g))\n        val m = math.sqrt((f*f) + (h*h))\n        val n = math.sqrt((g*g)\
    \ + (h*h))\n        val o = math.sqrt((h*h) + (i*i))\n        val p = math.sqrt((h*h)\
    \ + (j*j))\n        val q = math.sqrt((h*h) + (k*k))\n        val r = math.sqrt((h*h)\
    \ + (l*l))\n        val s = math.sqrt((i*i) + (j*j))\n        val t = math.sqrt((i*i)\
    \ + (k*k))\n        val u = math.sqrt((i*i) + (l*l))\n        val v = math.sqrt((j*j)\
    \ + (k*k))\n        val w = math.sqrt((j*j) + (l*l))\n        val x = math.sqrt((k*k)\
    \ + (l*l))\n        val y = math.sqrt((l*l) + (m*m))\n        val z = math.sqrt((l*l)\
    \ + (n*n))\n        val a = math.sqrt((m*m) + (n*n))\n        val b = math.sqrt((n*n)\
    \ + (o*o))\n        val c = math.sqrt((n*n) + (p*p))\n        val d = math.sqrt((n*n)\
    \ + (q*q))\n        val e = math.sqrt((n*n) + (r*r))\n        val f = math.sqrt((n*n)\
    \ + (s*s))\n        val g = math.sqrt((n*n) + (t*t))\n        val h = math.sqrt((n*n)\
    \ + (u*u))\n        val i = math.sqrt((o*o) + (p*p))\n        val j = math.sqrt((o*o)\
    \ + (q*q))\n        val k = math.sqrt((o*o) + (r*r))\n        val l = math.sqrt((o*o)\
    \ + (s*s))\n        val m = math.sqrt((o*o) + (t*t))\n        val n = math.sqrt((o*o)\
    \ + (u*u))\n        val o = math.sqrt((p*p) + (q*q", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd // if abc < bcd then abc is a right angle triangle", "       \
    \ val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n\
    \        val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab == ac", " \
    \       val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n\
    \        val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        (a1 == b1 && b1 == c1 && c1 == a1) || (a2 == b2 && b2 == c2 && c2 ==\
    \ a2) || (a3 == b3 && b3 == c3 && c3 == a3) || (a4 == b4 && b4 == c4 && c4 ==\
    \ a4) || (a5 == b5 && b5 == c5 && c5 == a5)", "        val ab = math.abs(b - a)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bca = math.abs(bc - ab)\n        val bcb\
    \ = math.abs(bc - bc)\n        abc < bca && abc < bcb", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val ac = math.sqrt((c*c) - (a*a))\n        val bc = math.sqrt((b*b)\
    \ - (c*c))\n        val abc = math.sqrt((abc*abc) - (ab*ab))\n        abc > ab\
    \ && abc > ac && abc > bc", "        val ab = math.abs(b - a)\n        val ac\
    \ = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd // if abc < bcd\
    \ then a is right angle", "        val ab = math.abs(b - a)\n        val ac =\
    \ math.abs(c - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab\
    \ + ac)\n        val bcd = math.abs(bc + ab)\n        abc < bcd // if abc < bcd\
    \ then a is right angle", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = math.abs(a1\
    \ - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1 - a1)\n\
    \        val a3 = math.abs(a2 - b2)\n        val b3 = math.abs(b2 - c2)\n    \
    \    val c3 = math.abs(c2 - a2)\n        val a4 = math.abs(a3 - b3)\n        val\
    \ b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c3 - a3)\n        (a1 + b1\
    \ + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4 && a1 + b1 + c1 == a2 +\
    \ b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4 && a1 + b1 + c1 == a2 + b2 + c2 && a3\
    \ + b3 + c3 == a4 + b4 + c4 && a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 ==\
    \ a4 + b4 + c4 && a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4)",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n    \
    \    val c2 = math.abs(c1 - a1)\n        val a3 = math.abs(a2 - b2)\n        val\
    \ b3 = math.abs(b2 - c2)\n        val c3 = math.abs(c2 - a2)\n        val a4 =\
    \ math.abs(a3 - b3)\n        val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c4\
    \ - a3)\n        (a1 + b1 + c1 == a2 + b2 + c2 && a1 + b1 == a2 + b2 && c1 + a1\
    \ == c2 + a2 && a1 + c1 == a2 + c2 && b1 + a1 == b2 + c2 && c1 + b1 == c2 + b2)\
    \ || (a1 + b1 == a2 + b2 && c1 + b1 == c2 + b2 && a1 + c1 == a2 + c2 && b1 + c1\
    \ == b2 + c2)", "        val a = math.abs(a)\n        val b = math.abs(b)\n  \
    \      val c = math.abs(c)\n        val a1 = math.abs(a * 0.5)\n        val b1\
    \ = math.abs(b * 0.5)\n        val c1 = math.abs(c * 0.5)\n        val a2 = math.abs(a\
    \ * 0.5)\n        val b2 = math.abs(b * 0.5)\n        val c2 = math.abs(c * 0.5)\n\
    \        val a3 = math.abs(a * 0.5)\n        val b3 = math.abs(b * 0.5)\n    \
    \    val c3 = math.abs(c * 0.5)\n        val a4 = math.abs(a * 0.5)\n        val\
    \ b4 = math.abs(b * 0.5)\n        val c4 = math.abs(c * 0.5)\n        val a5 =\
    \ math.abs(a * 0.5)\n        val b5 = math.abs(b * 0.5)\n        val c5 = math.abs(c\
    \ * 0.5)\n        val a6 = math.abs(a * 0.5)\n        val b6 = math.abs(b * 0.5)\n\
    \        val c6 = math.abs(c * 0.5)\n        val a7 = math.abs(a * 0.5)\n    \
    \    val b7 = math.abs(b * 0.5)\n        val c7 = math.abs(c * 0.5)\n        val\
    \ a8 = math.abs(a * 0.5)\n        val b8 = math.abs(b * 0.5)\n        val c8 =\
    \ math.abs(c * 0.5)\n        val a9 = math.abs(a * 0.5)\n        val b9 = math.abs(b\
    \ * 0.5)\n        val c9 = math.abs(c * 0.5)\n        val a10 = math.abs(a * 0.5)\n\
    \        val b10 = math.abs(b * 0.5)\n        val c10 = math.abs(c * 0.5)\n  \
    \      val a11 = math.abs(a * 0.5)\n        val b11 = math.abs(b * 0.5)\n    \
    \    val c11 = math.abs(c * 0.5)\n        val a12 = math.abs(a * 0.5)\n      \
    \  val b12 = math.abs(b * 0.5)\n        val c12 = math.abs(c * 0.5)\n        val\
    \ a13 = math.abs(a * 0.5)\n        val b13 = math.abs(b * 0.5)\n        val c13\
    \ = math.abs(c * 0.5)\n        val a14 = math.abs(a * 0.5)\n        val b14 =\
    \ math.abs(b * 0.5)\n        val c14 = math.abs(c * 0.5)\n        val a15 = math.abs(a\
    \ * 0.5)\n        val b15 = math.abs(b * 0.5)\n        val c15 = math.abs(c *\
    \ 0.5)\n        val a16 = math.abs(a * 0.5)\n        val b16 = math.abs(b * 0.5)\n\
    \        val c16 = math.abs(c * 0.5)", "        val a = math.abs(a)\n        val\
    \ b = math.abs(b)\n        val c = math.abs(c)\n        val ab = math.pow(a, 2)\n\
    \        val bc = math.pow(b, 2)\n        val cd = math.pow(c, 2)\n        val\
    \ abc = math.pow(ab, 2) + math.pow(bc, 2) + math.pow(cd, 2)\n        abc < b *\
    \ c", "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n  \
    \      val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n       \
    \ val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ math.abs(a1 - b1)\n        val b2 = math.abs(b1 - c1)\n        val c2 = math.abs(c1\
    \ - a1)\n        val a3 = math.abs(a2 - b2)\n        val b3 = math.abs(b2 - c2)\n\
    \        val c3 = math.abs(c2 - a2)\n        val a4 = math.abs(a3 - b3)\n    \
    \    val b4 = math.abs(b3 - c3)\n        val c4 = math.abs(c4 - a3)\n        (a1\
    \ + b1 + c1) < (a2 + b2 + c2) &&\n        (a2 + b2 + c2) < (a3 + b3 + c3) &&\n\
    \        (a3 + b3 + c3) < (a4 + b4 + c4)", "        val ab = math.abs(b - a)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        abc < bc // if abc < bc then abc is a right-angled\
    \ triangle", "        val a = math.abs(a)\n        val b = math.abs(b)\n     \
    \   val c = math.abs(c)\n        val a1 = math.abs(a * 0.5)\n        val b1 =\
    \ math.abs(b * 0.5)\n        val c1 = math.abs(c * 0.5)\n        val a2 = math.abs(a\
    \ * 0.5)\n        val b2 = math.abs(b * 0.5)\n        val c2 = math.abs(c * 0.5)\n\
    \        val a3 = math.abs(a * 0.5)\n        val b3 = math.abs(b * 0.5)\n    \
    \    val c3 = math.abs(c * 0.5)\n        val a4 = math.abs(a * 0.5)\n        val\
    \ b4 = math.abs(b * 0.5)\n        val c4 = math.abs(c * 0.5)\n        val a5 =\
    \ math.abs(a * 0.5)\n        val b5 = math.abs(b * 0.5)\n        val c5 = math.abs(c\
    \ * 0.5)\n        val a6 = math.abs(a * 0.5)\n        val b6 = math.abs(b * 0.5)\n\
    \        val c6 = math.abs(c * 0.5)\n        val a7 = math.abs(a * 0.5)\n    \
    \    val b7 = math.abs(b * 0.5)\n        val c7 = math.abs(c * 0.5)\n        val\
    \ a8 = math.abs(a * 0.5)\n        val b8 = math.abs(b * 0.5)\n        val c8 =\
    \ math.abs(c * 0.5)\n        val a9 = math.abs(a * 0.5)\n        val b9 = math.abs(b\
    \ * 0.5)\n        val c9 = math.abs(c * 0.5)\n        val a10 = math.abs(a * 0.5)\n\
    \        val b10 = math.abs(b * 0.5)\n        val c10 = math.abs(c * 0.5)\n  \
    \      val a11 = math.abs(a * 0.5)\n        val b11 = math.abs(b * 0.5)\n    \
    \    val c11 = math.abs(c * 0.5)\n        val a12 = math.abs(a * 0.5)\n      \
    \  val b12 = math.abs(b * 0.5)\n        val c12 = math.abs(c * 0.5)\n        val\
    \ a13 = math.abs(a * 0.5)\n        val b13 = math.abs(b * 0.5)\n        val c13\
    \ = math.abs(c * 0.5)\n        val a14 = math.abs(a * 0.5)\n        val b14 =\
    \ math.abs(b * 0.5)\n        val c14 = math.abs(c * 0.5)\n        val a15 = math.abs(a\
    \ * 0.5)\n        val b15 = math.abs(b * 0.5)\n        val c15 = math.abs(c *\
    \ 0.5)\n        val a16 = math.abs(a * 0.5)\n        val b16 = math.abs(b * 0.5)\n\
    \        val c16 = math.abs(c * 0.5)", "        val ab = math.abs(a-b)\n     \
    \   val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc =\
    \ math.abs(a-b)+math.abs(c-a)+math.abs(c-b)\n        abc < ab*ac*bc", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 ==\
    \ a2) || (a1 == b1 && b1 == c1 && c1 == a2)", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc\
    \ = math.abs(a-c)\n        val acb = math.abs(c-b)\n        val bcd = math.abs(b-c)\n\
    \        ab == abc && ac == acb && bc == bcd", "        val ab = math.sqrt((b*b)\
    \ - (a*a))\n        val bc = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c)\
    \ - (a*a))\n        ab == bc && ab == ac", "        val ab = math.abs(a - b)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        ab\
    \ > ac && ab > bc", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = math.abs(a1 - b1 - c1)\n     \
    \   val b2 = math.abs(b1 - a1 - c1)\n        val c2 = math.abs(c1 - a1 - b1)\n\
    \        val a3 = math.abs(a2 - b2 - c2)\n        val b3 = math.abs(b2 - a2 -\
    \ c2)\n        val c3 = math.abs(c2 - a2 - b2)\n        val a4 = math.abs(a3 -\
    \ b3 - c3)\n        val b4 = math.abs(b3 - a3 - c3)\n        val c4 = math.abs(c3\
    \ - a3 - b3)\n        (a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4\
    \ + c4 && a1 + b1 + c1 == a2 + b2 + c2 && a3 + b3 + c3 == a4 + b4 + c4)", "  \
    \      val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c) - (b*b))\n\
    \        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab == ac", " \
    \       val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.abs(a1 + b1 + c1)\n        val b2 = math.abs(b1 + c1 +\
    \ a1)\n        val c2 = math.abs(c1 + a1 + b1)\n        val a3 = math.abs(a2 +\
    \ b2 + c2)\n        val b3 = math.abs(b2 + c2 + a2)\n        val c3 = math.abs(c2\
    \ + a2 + b2)\n        val a4 = math.abs(a3 + b3 + c3)\n        val b4 = math.abs(b3\
    \ + c3 + a3)\n        val c4 = math.abs(c3 + a3 + b3)\n        (a1 + b1 + c1 ==\
    \ a2 + b2 + c2 && b1 + c1 + a1 == b2 + c2 + a2 && c1 + a1 + b1 == c2 + a2 + b2)\
    \ ||\n            (a3 + b3 + c3 == a4 + b4 + c4 && b3 + c3 + a3 == b4 + c4 + a3\
    \ && c3 + a3 + b3 == c4 + a4 + b4)", "        val a1 = math.abs(a)\n        val\
    \ b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n \
    \       val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        (a1 == a2 && b1 ==\
    \ b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 ==\
    \ b4 && c1 == c4)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2) || (a2 == b2 && b2 == c2 && c2 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val ab = math.abs(b - a)\n   \
    \     val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c)\
    \ - (b*b))\n        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab\
    \ == ac", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((b*b)\
    \ - (c*c))\n        val ac = math.sqrt((a*a) - (c*c))\n        ab == bc && ab\
    \ == ac", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc = math.sqrt((c*c)\
    \ - (b*b))\n        val ac = math.sqrt((c*c) - (a*a))\n        ab == bc && ab\
    \ == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n      \
    \  val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val ab = math.abs(a-b)\n\
    \        val ac = math.abs(c-a)\n        val bc = math.abs(c-b)\n        val abc\
    \ = math.abs(ab+ac+bc)\n        abc > a && abc > b && abc > c", "        val a1\
    \ = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n\
    \        (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1\
    \ + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 +\
    \ b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2)\
    \ - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 +\
    \ b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a1 + b1 + c1)\
    \ * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c2) - (a", "        val a1 =\
    \ math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n  \
    \      val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 ==\
    \ a2) || (a1 == b1 && b1 == c1 && c1 == a2)", "        val ab = math.abs(b - a)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val\
    \ c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n     \
    \   val c2 = c1 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a1 == b1\
    \ && b1 == c1 && c1 == a2) || (a1 == b1 && b1 == c1 && c1 == a2)", "        val\
    \ ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b * b) - (c *\
    \ c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab == bc && ab ==\
    \ ac", "        // Write your code here\n        val a1 = math.abs(a)\n      \
    \  val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 + b1 + c1) !=\
    \ (a2 + b2 + c2)", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b1 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 == c1 && c1 == a2) ||\
    \ (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 == c1 && c1 == a2) ||\
    \ (a1 == c2 && b1 == c2 && c1 == a2)", "        val ab = math.abs(b - a)\n   \
    \     val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        abc < math.min(ab, bc) || abc > math.max(bc,\
    \ ab)", "        val ab = math.sqrt((b * b) - (a * a))\n        val bc = math.sqrt((b\
    \ * b) - (c * c))\n        val ac = math.sqrt((a * a) - (c * c))\n        ab ==\
    \ bc && ab == ac", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 && c1 == a2) ||\
    \ (a2 == b2 && b2 == c2 && c2 == a2)", "        val a1 = math.abs(a)\n       \
    \ val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n\
    \        val b2 = b1 + c1\n        val c2 = c1 + a1\n        val a3 = a2 + b2\n\
    \        val b3 = b2 + c2\n        val c3 = c2 + a2\n        val a4 = a3 + b3\n\
    \        val b4 = b3 + c3\n        val c4 = c3 + a3\n        (a1 == a2 && b1 ==\
    \ b2 && c1 == c2) || (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 ==\
    \ b4 && c1 == c4)", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc < bcd", "        val a1 = math.abs(a)\n\
    \        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n        val a2 =\
    \ a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a2\n        (a1 + b1\
    \ + c1) * (a2 + b2 + c2) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) -\
    \ (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1\
    \ + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) *\
    \ (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a1 + b1 + c1) * (a2 + b2\
    \ + c1) - (a1 + b1 + c1) * (a2 + b2 + c1) - (a", "        val ab = math.abs(a\
    \ - b)\n        val ac = math.abs(a - c)\n        val bc = math.abs(b - c)\n \
    \       ab == ac && ab == bc", "        val ab = math.abs(a-b)\n        val ac\
    \ = math.abs(c-a)\n        val bc = math.abs(c-b)\n        ab > ac && ab > bc",
  "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = math.pow(a1, 2)\n        val b2 = math.pow(b1, 2)\n        val\
    \ c2 = math.pow(c1, 2)\n        val a3 = math.pow(a2, 2)\n        val b3 = math.pow(b2,\
    \ 2)\n        val c3 = math.pow(c2, 2)\n        val a4 = math.pow(a3, 2)\n   \
    \     val b4 = math.pow(b3, 2)\n        val c4 = math.pow(c3, 2)\n        val\
    \ a5 = math.pow(a4, 2)\n        val b5 = math.pow(b4, 2)\n        val c5 = math.pow(c4,\
    \ 2)\n        val a6 = math.pow(a5, 2)\n        val b6 = math.pow(b5, 2)\n   \
    \     val c6 = math.pow(c5, 2)\n        val a7 = math.pow(a6, 2)\n        val\
    \ b7 = math.pow(b6, 2)\n        val c7 = math.pow(c6, 2)\n        val a8 = math.pow(a7,\
    \ 2)\n        val b8 = math.pow(b7, 2)\n        val c8 = math.pow(c7, 2)\n   \
    \     val a9 = math.pow(a8, 2)\n        val b9 = math.pow(b8, 2)\n        val\
    \ c9 = math.pow(c8, 2)\n        val a10 = math.pow(a9, 2)\n        val b10 = math.pow(b9,\
    \ 2)\n        val c10 = math.pow(c9, 2)\n        val a11 = math.pow(a10, 2)\n\
    \        val b11 = math.pow(b10, 2)\n        val c11 = math.pow(c10, 2)\n    \
    \    val a12 = math.pow(a11, 2)\n        val b12 = math.pow(b11, 2)\n        val\
    \ c12 = math.pow(c11, 2)\n        val a13 = math.pow(a12, 2)\n        val b13\
    \ = math.pow(b12, 2)\n        val c13 = math.pow(c12, 2)\n        val a14 = math.pow(a13,\
    \ 2)\n        val b14 = math.pow(b13, 2)\n        val c14 = math.pow(c13, 2)\n\
    \        val a15 = math.pow(a14, 2)\n        val b15 = math.pow(b14, 2)\n    \
    \    val c15 = math.pow(c14, 2)\n        val a16 = math.pow(a15, 2)\n        val\
    \ b16 = math.pow(b15, 2)\n        val c16 = math.pow(c15, 2)\n        val a17\
    \ = math.pow(a16, 2)\n        val b17 = math.pow(b16, 2)\n        val c17", " \
    \       val ab = math.abs(a-b)\n        val ac = math.abs(c-a)\n        val bc\
    \ = math.abs(c-b)\n        val abc = math.abs(a-c)\n        val bcd = math.abs(b-c)\n\
    \        ab == abc && ac == bcd && b == c || ab == bcd && ac == abc && b == c",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b, 2)\n        val\
    \ c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n        val b2 = math.pow(b,\
    \ 3)\n        val c2 = math.pow(c, 3)\n        val a3 = math.pow(a, 4)\n     \
    \   val b3 = math.pow(b, 4)\n        val c3 = math.pow(c, 4)\n        val a4 =\
    \ math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n        val c4 = math.pow(c,\
    \ 5)\n        val a5 = math.pow(a, 6)\n        val b5 = math.pow(b, 6)\n     \
    \   val c5 = math.pow(c, 6)\n        val a6 = math.pow(a, 7)\n        val b6 =\
    \ math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n        val a7 = math.pow(a,\
    \ 8)\n        val b7 = math.pow(b, 8)\n        val c7 = math.pow(c, 8)\n     \
    \   val a8 = math.pow(a, 9)\n        val b8 = math.pow(b, 9)\n        val c8 =\
    \ math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n        val b9 = math.pow(b,\
    \ 10)\n        val c9 = math.pow(c, 10)\n        val a10 = math.pow(a, 11)\n \
    \       val b10 = math.pow(b, 11)\n        val c10 = math.pow(c, 11)\n       \
    \ val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n        val c11\
    \ = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n        val b12 = math.pow(b,\
    \ 13)\n        val c12 = math.pow(c, 13)\n        val a13 = math.pow(a, 14)\n\
    \        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c, 14)\n      \
    \  val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n        val c14\
    \ = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n        val b15 = math.pow(b,\
    \ 16)\n        val c15 = math.pow(c, 16)\n        val a16 = math.pow(a, 17)\n\
    \        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c, 17)\n      \
    \  val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n        val c17\
    \ = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n        val b18 = math.",
  "        val a = math.abs(a)\n        val b = math.abs(b)\n        val c = math.abs(c)\n\
    \        val ab = math.pow(a, 2)\n        val bc = math.pow(b, 2)\n        val\
    \ cd = math.pow(c, 2)\n        val abc = math.pow(ab + bc + cd, 0.5)\n       \
    \ abc < b + c + a", "        val ab = math.abs(b - a)\n        val ac = math.abs(c\
    \ - a)\n        val bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n\
    \        val bcd = math.abs(bc + ab)\n        abc > bcd // if abc > bcd then abc\
    \ is a right-angled triangle", "        val a1 = math.abs(a)\n        val b1 =\
    \ math.abs(b)\n        val c1 = math.abs(c)\n        val a2 = a1 + b1\n      \
    \  val b2 = b1 + c1\n        val c2 = c1 + a1\n        (a1 == b1 && b1 == c1 &&\
    \ c1 == a2) || (a1 == b1 && b1 == c2 && c1 == a2) || (a1 == b2 && b1 == c1 &&\
    \ c1 == a2) || (a1 == b2 && b1 == c2 && c1 == a2) || (a1 == c2 && b1 == c1 &&\
    \ c1 == a2) || (a1 == c2 && b1 == c2 && c1 == a2)", "        val ab = math.abs(b\
    \ - a)\n        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n \
    \       val abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n   \
    \     abc < bcd", "        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n\
    \        val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 +\
    \ c1\n        val c2 = c1 + a2\n        val a3 = a2 + b2\n        val b3 = b2\
    \ + c3\n        val c3 = c2 + a3\n        val a4 = a3 + b3\n        val b4 = b4\
    \ + c3\n        val c4 = c4 + a4\n        (a1 == a2 && b1 == b2 && c1 == c2) ||\
    \ (a1 == a3 && b1 == b3 && c1 == c3) || (a1 == a4 && b1 == b4 && c1 == c4)", " \
    \       val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        abc < ab",
  "        val ab = math.abs(b - a)\n        val ac = math.abs(c - a)\n        val\
    \ bc = math.abs(b - c)\n        val abc = math.abs(ab + ac)\n        val bcd =\
    \ math.abs(bc + ab)\n        abc < bcd", "        // Write your code here\n  \
    \      val a1 = a / 2\n        val b1 = b / 2\n        val c1 = c / 2\n      \
    \  val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n    \
    \    val a3 = a2 + b2\n        val b3 = b2 + c2\n        val c3 = c2 + a2\n  \
    \      val a4 = a3 + b3\n        val b4 = b3 + c3\n        val c4 = c3 + a3\n\
    \        val a5 = a4 + b4\n        val b5 = b4 + c4\n        val c5 = c4 + a4\n\
    \        val a6 = a5 + b5\n        val b6 = b5 + c5\n        val c6 = c5 + a5\n\
    \        val a7 = a6 + b6\n        val b7 = b6 + c6\n        val c7 = c6 + a6\n\
    \        val a8 = a7 + b7\n        val b8 = b7 + c7\n        val c8 = c7 + a7\n\
    \        (a8 - a1) * (b2 - b1) - (b8 - b1) * (a2 - a1) - (c8 - a1) * (b8 - b1)\
    \ > 0", "        val a = math.abs(a)\n        val b = math.abs(b)\n        val\
    \ c = math.abs(c)\n        val a1 = math.pow(a, 2)\n        val b1 = math.pow(b,\
    \ 2)\n        val c1 = math.pow(c, 2)\n        val a2 = math.pow(a, 3)\n     \
    \   val b2 = math.pow(b, 3)\n        val c2 = math.pow(c, 3)\n        val a3 =\
    \ math.pow(a, 4)\n        val b3 = math.pow(b, 4)\n        val c3 = math.pow(c,\
    \ 4)\n        val a4 = math.pow(a, 5)\n        val b4 = math.pow(b, 5)\n     \
    \   val c4 = math.pow(c, 5)\n        val a5 = math.pow(a, 6)\n        val b5 =\
    \ math.pow(b, 6)\n        val c5 = math.pow(c, 6)\n        val a6 = math.pow(a,\
    \ 7)\n        val b6 = math.pow(b, 7)\n        val c6 = math.pow(c, 7)\n     \
    \   val a7 = math.pow(a, 8)\n        val b7 = math.pow(b, 8)\n        val c7 =\
    \ math.pow(c, 8)\n        val a8 = math.pow(a, 9)\n        val b8 = math.pow(b,\
    \ 9)\n        val c8 = math.pow(c, 9)\n        val a9 = math.pow(a, 10)\n    \
    \    val b9 = math.pow(b, 10)\n        val c9 = math.pow(c, 10)\n        val a10\
    \ = math.pow(a, 11)\n        val b10 = math.pow(b, 11)\n        val c10 = math.pow(c,\
    \ 11)\n        val a11 = math.pow(a, 12)\n        val b11 = math.pow(b, 12)\n\
    \        val c11 = math.pow(c, 12)\n        val a12 = math.pow(a, 13)\n      \
    \  val b12 = math.pow(b, 13)\n        val c12 = math.pow(c, 13)\n        val a13\
    \ = math.pow(a, 14)\n        val b13 = math.pow(b, 14)\n        val c13 = math.pow(c,\
    \ 14)\n        val a14 = math.pow(a, 15)\n        val b14 = math.pow(b, 15)\n\
    \        val c14 = math.pow(c, 15)\n        val a15 = math.pow(a, 16)\n      \
    \  val b15 = math.pow(b, 16)\n        val c15 = math.pow(c, 16)\n        val a16\
    \ = math.pow(a, 17)\n        val b16 = math.pow(b, 17)\n        val c16 = math.pow(c,\
    \ 17)\n        val a17 = math.pow(a, 18)\n        val b17 = math.pow(b, 18)\n\
    \        val c17 = math.pow(c, 18)\n        val a18 = math.pow(a, 19)\n      \
    \  val b18 = math.", "        val ab = math.sqrt((b*b) - (a*a))\n        val bc\
    \ = math.sqrt((b*b) - (c*c))\n        val ac = math.sqrt((c*c) - (a*a))\n    \
    \    ab == bc && ab == ac", "        val a = math.abs(a)\n        val b = math.abs(b)\n\
    \        val c = math.abs(c)\n        val ab = math.abs(a-b)\n        val ac =\
    \ math.abs(a-c)\n        val bc = math.abs(b-c)\n        val abc = math.abs(ab-ac)\n\
    \        val bcd = math.abs(bc-ab)\n        abc > bcd", "        // Write your\
    \ code here\n        val a1 = math.abs(a)\n        val b1 = math.abs(b)\n    \
    \    val c1 = math.abs(c)\n        val a2 = a1 + b1\n        val b2 = b1 + c1\n\
    \        val c2 = c1 + a1\n        val a3 = a2 + b2\n        val b3 = b2 + c2\n\
    \        val c3 = c2 + a2\n        (a1 == b1 && b1 == c1 && c1 == a2) || (a2 ==\
    \ b2 && b2 == c2 && c2 == a3) || (a3 == b3 && b3 == c3 && c3 == a3)", "      \
    \  val a1 = math.abs(a)\n        val b1 = math.abs(b)\n        val c1 = math.abs(c)\n\
    \        val a2 = a1 + b1\n        val b2 = b1 + c1\n        val c2 = c1 + a1\n\
    \        (a1 + b1 + c1) != (a2 + b2 + c2)", "        val ab = math.abs(b - a)\n\
    \        val ac = math.abs(c - a)\n        val bc = math.abs(b - c)\n        val\
    \ abc = math.abs(ab + ac)\n        val bcd = math.abs(bc + ab)\n        abc <\
    \ bcd"]
stop_tokens:
- "\n    }\n"

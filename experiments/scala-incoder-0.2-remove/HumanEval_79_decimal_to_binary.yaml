name: HumanEval_79_decimal_to_binary
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You will be given a number in decimal form and your task is to convert it\
  \ to\n    // binary format. The function should return a string, with each character\
  \ representing a binary\n    // number. Each character in the string will be '0'\
  \ or '1'.\n    // There will be an extra couple of characters 'db' at the beginning\
  \ and at the end of the string.\n    // The extra characters are there to help with\
  \ the format.\n    // Examples:\n    def decimalToBinary(decimal : Long) : String\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
  db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
  db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
  \    }\n\n}\n"
completions: ["        val binary = decimal.toBinaryString\n        binary.dropRight(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length) + db + binary.substring(0,\
    \ binary.length - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        binary.drop(binary.length - 2)", "        val binary = decimal.toBinaryString\n\
    \        binary.substring(0, binary.length-1)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        binary.dropRight(binary.length\
    \ + 2)", "        val binary = decimal.toBinaryString\n        val db = \"db\"\
    .toBinaryString\n        val result = binary.dropRight(binary.length + 2)\n  \
    \      result + db + result", "        val binary = decimal.toBinaryString\n \
    \       val db = \"db\"\n        val result = binary.substring(binary.length -\
    \ db.length, binary.length) + db\n        return result", "        val binary\
    \ = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n       \
    \ val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db + binary.substring(0, binary.length - db.length)\n       \
    \ return result", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = binary.substring(binary.length - 2, binary.length)\n        val extraCharsReversed\
    \ = extraChars.reverse\n        val extraCharsReversedString = extraCharsReversed.mkString\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n",
  "        val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        binary.substring(binary.length - 2) + \"db\"",
  "        val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.dropRight(binary.length)\
    \ + db + binary.drop(binary.length)\n        result", "        val binary = decimal.toBinaryString\n\
    \        binary.drop(1).dropRight(1)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.dropRight(binary.length - db.length) +\
    \ db + binary.take(binary.length - db.length)\n        return result", "     \
    \   val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 3)\n        result + db + binary.substring(0,\
    \ binary.length - 3)", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.substring(binary.length - 3)\n    \
    \    result + db + binary.substring(0, binary.length - 3)", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(0,binary.length-1)\n\
    \        result + db + binary.substring(binary.length-1)", "        val binary\
    \ = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2, binary.length)\n        val extraCharsReversed = extraChars.reverse\n \
    \       val extraCharsReversedString = extraCharsReversed.mkString\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n", "     \
    \   val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(0,binary.length-1)\n\
    \        result + db + binary.substring(binary.length-1)", "        var binary\
    \ = \"\"\n        var remainder = decimal\n        while(decimal != 0) {\n   \
    \         binary += remainder % 2\n            remainder = remainder / 2\n   \
    \     }\n        binary += \"db\"\n        binary", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        binary.dropRight(binary.length\
    \ + db.length)", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.substring(binary.length - db.length) +\
    \ db\n        return result", "        val binary = decimal.toBinaryString\n \
    \       val extraChars = if (binary == decimal.toBinaryString) \"\" else binary\n\
    \        val extraCharsLength = extraChars.length\n        val binaryLength =\
    \ binary.length\n        val binaryStringLength = binaryLength + extraCharsLength\n\
    \        val binaryString = new Array[Char](binaryStringLength)\n        val extraCharsArray\
    \ = new Array[Char](extraCharsLength)\n        val extraCharsArrayIndex = 0\n\
    \        val binaryArrayIndex = 0\n        val binaryStringIndex = 0\n       \
    \ while (binaryArrayIndex < binaryLength) {\n            binaryString(binaryStringIndex)\
    \ = binary(binaryArrayIndex)\n            extraCharsArray(extraCharsArrayIndex)\
    \ = extraChars(extraCharsArrayIndex)\n            extraCharsArrayIndex += 1\n\
    \            binaryArrayIndex += 1\n            binaryStringIndex += 1\n     \
    \   }\n        val binaryStringBuilder = new StringBuilder\n        binaryStringBuilder.append(extraCharsArray(0))\n\
    \        binaryStringBuilder.append(binaryString(0))\n        binaryStringBuilder.toString",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length) + db + binary.substring(0,\
    \ binary.length - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        var binary = \"\"\n        var remainder = decimal\n\
    \        while(decimal != 0){\n            binary += (decimal % 2).toChar\n  \
    \          remainder = decimal / 2\n        }\n        binary += remainder.toChar\n\
    \        binary += \"db\"\n        binary", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.replace(\"0\",\"db\")\n        val binary = binary.replace(\"\
    1\",\"0\")\n        binary.substring(2)", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length, binary.length) + db\n        return result", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db + binary.substring(0, binary.length - db.length)\n       \
    \ return result", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.dropRight(binary.length) + db + binary.take(binary.length)\n\
    \        result", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.substring(binary.length - db.length) +\
    \ db\n        return result", "        val binary = decimal.toBinaryString\n \
    \       val db = \"db\"\n        val result = binary.dropRight(binary.length -\
    \ db.length) + db + binary.take(binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2)\n        val extraCharsLength = extraChars.length\n        val extraCharsString\
    \ = \"db\" + extraChars\n        val binaryLength = binary.length\n        val\
    \ binaryString = \"0\" * (binaryLength - extraCharsLength) + binary + extraCharsString\n\
    \        binaryString.substring(0,binaryString.length - 2)", "        val binary\
    \ = decimal.toBinaryString\n        binary.substring(0,1) + binary.substring(1,binary.length-1)\
    \ + \"db\"", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = if (decimal == 0) \"db\" else \"\"\n        binary.dropRight(binary.length\
    \ - extraChars.length) + extraChars", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        binary.dropRight(binary.length - db.length)\
    \ + db + binary.drop(binary.length - db.length)", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        binary.substring(0,binary.length-1)", "    \
    \    val binary = decimal.toBinaryString\n        binary.substring(binary.length\
    \ - 2) + \"db\"", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.substring(binary.length - db.length) +\
    \ db + binary.substring(0, binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        val bin = binary.substring(binary.length\
    \ - 2)\n        val binary = bin.substring(0, bin.length - 1)\n        binary.toCharArray",
  "        val binary = decimal.toBinaryString\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(1)", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ - db.length) + db + binary.drop(binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.dropRight(binary.length - 2)\n        result + db + binary.dropLeft(binary.length\
    \ - 2)", "        val binary = decimal.toBinaryString\n        val db = \"db\"\
    \n        binary.dropRight(binary.length + db.length)", "        val binary =\
    \ decimal.toBinaryString\n        val extraChars = if (decimal == 0) \"db\" else\
    \ \"\"\n        binary.dropRight(binary.length) + extraChars", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - 2)\n        result + db + binary.substring(0, binary.length - 2)", "     \
    \   val binary = decimal.toBinaryString\n        val bin = binary.substring(binary.length\
    \ - 2)\n        val binary = bin.substring(0, bin.length - 1)\n        val binary\
    \ = binary.concat(\"db\")\n        binary.toUpperCase", "        val binary =\
    \ decimal.toBinaryString\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        binary.substring(0,binary.length-1)+db+binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length, binary.length)\n      \
    \  result + db", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        binary.substring(0,binary.length-1)+db+binary.substring(binary.length-1)",
  "        var binary = \"\"\n        var remainder = decimal\n        while(decimal\
    \ != 0) {\n            binary += remainder % 2\n            remainder = remainder\
    \ / 2\n        }\n        binary += \"db\"\n        binary", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        binary.substring(0,binary.length-1)+db+binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val bin = binary.substring(binary.length\
    \ - 2)\n        val binary = bin.substring(0, bin.length - 1)\n        val binary\
    \ = binary.concat(\"db\")\n        binary", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2, binary.length)\n\
    \        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedStringLength =\
    \ extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        binary.substring(0,binary.length-1)+db+binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length) + db\n        return result",
  "        val binary = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.toCharArray\n        val binary = binary.map(_ + \"\")\n   \
    \     val binary = binary.mkString(\"db\")\n        binary.toString", "      \
    \  val binary = decimal.toBinaryString\n        val binary = binary.reverse\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n   \
    \     val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.",
  "        val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val extraChars = if (binary == \"1\") \"db\"\
    \ else \"\"\n        binary.dropRight(binary.length) + extraChars", "        val\
    \ binary = decimal.toBinaryString\n        val extraChars = if (binary == decimal.toBinaryString)\
    \ \"\" else binary\n        val extraCharsLen = extraChars.length\n        val\
    \ binLen = binary.length\n        val result = new StringBuilder(binLen)\n   \
    \     val remainder = decimal.asInstanceOf[Long] % 2\n        val remainderChar\
    \ = if (remainder == 0) \"0\" else \"1\"\n        val remainderLen = remainderChar.length\n\
    \        result.append('b').append(remainderChar)\n        val remainderIndex\
    \ = binLen - remainderLen - 1\n        val remainderCharIndex = binLen - remainderLen\
    \ - remainderIndex - 1\n        val remainderCharIndex2 = binLen - remainderLen\
    \ - remainderIndex - 2\n        val remainderCharIndex3 = binLen - remainderLen\
    \ - remainderIndex - 3\n        val remainderCharIndex4 = binLen - remainderLen\
    \ - remainderIndex - 4\n        val remainderCharIndex5 = binLen - remainderLen\
    \ - remainderIndex - 5\n        val remainderCharIndex6 = binLen - remainderLen\
    \ - remainderIndex - 6\n        val remainderCharIndex7 = binLen - remainderLen\
    \ - remainderIndex - 7\n        val remainderCharIndex8 = binLen - remainderLen\
    \ - remainderIndex - 8\n        val remainderCharIndex9 = binLen - remainderLen\
    \ - remainderIndex - 9\n        val remainderCharIndex10 = binLen - remainderLen\
    \ - remainderIndex - 10\n        val remainderCharIndex11 = binLen - remainderLen\
    \ - remainderIndex - 11\n        val remainderCharIndex12 = binLen - remainderLen\
    \ - remainderIndex - 12\n        val remainderCharIndex13 = binLen - remainderLen\
    \ - remainderIndex - 13\n        val remainderCharIndex14 = binLen - remainderLen\
    \ - remainderIndex - 14\n        val remainderCharIndex15 = binLen - remainderLen\
    \ - remainderIndex - 15\n        val remainderCharIndex16 = binLen - remainderLen\
    \ - remainderIndex - 16\n        val remainderCharIndex17 = binLen - remainderLen\
    \ - remainderIndex - 17\n        val remainderCharIndex18 = binLen - remainderLen\
    \ - remainderIndex - 18\n        val remainderCharIndex19 = binLen - remainderLen\
    \ - remainderIndex - 19\n        val remainderCharIndex20", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ - db.length) + db + binary.take(binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        binary.substring(0,binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse", "      \
    \  val binary = decimal.toBinaryString\n        binary.substring(binary.length\
    \ - 2)", "        val binary = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse", "      \
    \  val binary = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2, binary.length)\n        val extraCharsReversed = extraChars.reverse\n \
    \       val extraCharsReversedString = extraCharsReversed.mkString\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n", "     \
    \   val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length) + db + binary.substring(0,\
    \ binary.length - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        binary.substring(binary.length - 2, binary.length) + binary.substring(0,\
    \ binary.length - 2)", "        val binary = decimal.toBinaryString\n        val\
    \ extraChars = if (decimal == 0) \"\" else s\"db${decimal.toBinaryString}\"\n\
    \        binary.dropRight(binary.length) + extraChars", "        val binary =\
    \ decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val result = binary.reverse.dropWhile(_\
    \ == '0').dropWhile(_ == '1').mkString\n        result + \"db\"", "        val\
    \ binary = decimal.toBinaryString\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.dropRight(binary.length - db.length) + db + binary.take(binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ + 2)\n        result + db + binary.drop(binary.length + 2)", "        val binary\
    \ = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2)\n        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedStringLength =\
    \ extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extra", "        val binary =\
    \ decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ - 2)\n        result + db + binary.drop(binary.length - 2)", "        val binary\
    \ = decimal.toBinaryString\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.dropRight(binary.length - db.length) + db + binary.takeRight(binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ - db.length) + db + binary.drop(binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n       \
    \ val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse", "      \
    \  val binary = decimal.toBinaryString\n        val db = \"db\"\n        val result\
    \ = binary.substring(binary.length - db.length) + db + binary.substring(0, binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\".toBinaryString\n        val result = binary.padTo(binary.length,\
    \ \"0\")\n        result + db", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 3)\n        result + db", "      \
    \  val binary = decimal.toBinaryString\n        val db = \"db\"\n        val result\
    \ = binary.substring(binary.length - db.length) + db + binary.substring(0, binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val result = binary.substring(binary.length - 2)\n        result + \"\
    db\"", "        val binary = decimal.toBinaryString\n        val db = \"db\"\n\
    \        val result = binary.substring(binary.length - db.length) + db\n     \
    \   return result", "        val binary = decimal.toBinaryString\n        val\
    \ binary = binary.substring(binary.length - 2)\n        val binary = binary.substring(0,\
    \ binary.length - 2)\n        binary.toCharArray", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.dropRight(binary.length - db.length) +\
    \ db + binary.drop(binary.length - db.length)\n        return result", "     \
    \   val binary = decimal.toBinaryString\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val extraChars = if (binary\
    \ == decimal.toBinaryString) \"\" else binary\n        val extraCharsLength =\
    \ extraChars.length\n        val result = binary.padToLength(binary.length + extraCharsLength,\
    \ \"0\")\n        result + extraChars", "        val binary = decimal.toBinaryString\n\
    \        binary.substring(binary.length - 2) +\n            binary.substring(0,\
    \ binary.length - 2)", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.dropRight(binary.length - db.length)\
    \ + db + binary.take(binary.length - db.length)\n        return result", "   \
    \     val binary = decimal.toBinaryString\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        var binary\
    \ = \"\"\n        var remainder = decimal\n        while(decimal != 0) {\n   \
    \         binary += remainder % 2\n            remainder = remainder / 2\n   \
    \     }\n        binary += \"db\"\n        binary", "        var binary = \"\"\
    \n        var remainder = decimal\n        while(decimal != 0){\n            binary\
    \ += remainder % 2\n            remainder = remainder / 2\n        }\n       \
    \ binary += \"db\"\n        binary", "        val binary = decimal.toBinaryString\n\
    \        val result = binary.substring(binary.length - 2)\n        val extraChars\
    \ = binary.substring(binary.length - 2, binary.length)\n        val extraCharsLength\
    \ = extraChars.length\n        val extraCharsString = extraChars.substring(0,\
    \ extraCharsLength)\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extraCharsString.length\n        val extraCharsStringLength\
    \ = extraCharsString.length\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringLength = extra", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = if (binary == \"11111111\") \"db\" else \"\"\n     \
    \   binary.substring(1) + extraChars", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\".toBinaryString\n        binary.substring(binary.length\
    \ - db.length) + db + binary.substring(0, binary.length - db.length)", "     \
    \   val binary = decimal.toBinaryString\n        val db = \"db\"\n        binary.substring(0,1)\
    \ + db + binary.substring(binary.length-1)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = binary.substring(binary.length - 2)\n        val extraCharsReversed = extraChars.reverse\n\
    \        val extraCharsReversedString = extraCharsReversed.mkString\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extra", "        val binary = decimal.toBinaryString\n        val db = \"db\"\
    \n        val result = binary.substring(binary.length - 3)\n        result + db\
    \ + binary.substring(0, binary.length - 3)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.",
  "        val binary = decimal.toBinaryString\n        val extraChars = if (decimal\
    \ == 0) \"db\" else \"\"\n        binary.dropRight(binary.length) + extraChars",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 2)\n        result + db", "      \
    \  val binary = decimal.toBinaryString\n        binary.dropRight(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(0,binary.length-1)\n        val result = result +\
    \ db\n        result + db", "        val binary = decimal.toBinaryString\n   \
    \     val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary",
  "        val binary = decimal.toBinaryString\n        val extraChars = if (binary.length\
    \ < 8) {\n            Array(binary.charAt(0), binary.charAt(binary.length - 1))\n\
    \        } else {\n            Array(binary.charAt(0), binary.charAt(binary.length\
    \ - 1), binary.charAt(binary.length - 2))\n        }\n        extraChars.mkString(\"\
    \")", "        val binary = decimal.toBinaryString\n        val db = \"db\"\n\
    \        val result = binary.dropRight(binary.length - 2)\n        result + db\
    \ + binary.takeRight(binary.length - 2)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.substring(binary.length - 2)\n        val binary\
    \ = binary.substring(0, binary.length - 2)\n        val binary = binary.toCharArray\n\
    \        val binary = binary.map(x => if (x == '1') '0' else '1')\n        val\
    \ binary = binary.mkString(\"\")\n        val binary = binary.concat(\"db\")\n\
    \        binary", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.dropRight(binary.length - 2)\n       \
    \ result + db + binary.dropLeft(binary.length - 2)", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db + binary.substring(0, binary.length - db.length)\n       \
    \ return result", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\".toCharArray\n        val result = binary.dropRight(binary.length -\
    \ db.length) + db + binary.drop(binary.length - db.length)\n        return result",
  "        val binary = decimal.toBinaryString\n        binary.substring(binary.length\
    \ - 2) + \"db\"", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = binary.substring(binary.length - 2)\n        val extraCharsDb = \"db\" + extraChars\n\
    \        binary.substring(1) + extraCharsDb + extraChars", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length, binary.length)\n        result + db", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2)\n        val extraCharsReversed\
    \ = extraChars.reverse\n        val extraCharsReversedLength = extraCharsReversed.length\n\
    \        val extraCharsReversedLength = extraCharsReversedLength + 2\n       \
    \ val extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraCharsReversedLength\
    \ = extraCharsReversedLength + 2\n        val extraCharsReversedLength = extraCharsReversedLength\
    \ + 2\n        val extraCharsReversedLength = extraCharsReversedLength + 2\n \
    \       val extraCharsReversedLength = extraCharsReversedLength + 2\n        val\
    \ extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraCharsReversedLength\
    \ = extraCharsReversedLength + 2\n        val extraCharsReversedLength = extraCharsReversedLength\
    \ + 2\n        val extraCharsReversedLength = extraCharsReversedLength + 2\n \
    \       val extraCharsReversedLength = extraCharsReversedLength + 2\n        val\
    \ extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraCharsReversedLength\
    \ = extraCharsReversedLength + 2\n        val extraCharsReversedLength = extraCharsReversedLength\
    \ + 2\n        val extraCharsReversedLength = extraCharsReversedLength + 2\n \
    \       val extraCharsReversedLength = extraCharsReversedLength + 2\n        val\
    \ extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraCharsReversedLength\
    \ = extraCharsReversedLength + 2\n        val extraCharsReversedLength = extraCharsReversedLength\
    \ + 2\n        val extraCharsReversedLength = extraCharsReversedLength + 2\n \
    \       val extraCharsReversedLength = extraCharsReversedLength + 2\n        val\
    \ extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraCharsReversedLength\
    \ = extraCharsReversedLength + 2\n        val extraCharsReversedLength = extraCharsReversedLength\
    \ + 2\n        val extraCharsReversedLength = extraCharsReversedLength + 2\n \
    \       val extraCharsReversedLength = extraCharsReversedLength + 2\n        val\
    \ extraCharsReversedLength = extraCharsReversedLength + 2\n        val extraChar",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 2)\n        result + db + binary.substring(0,\
    \ binary.length - 2)", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.dropRight(binary.length - 2)\n    \
    \    result + db + binary.takeRight(binary.length - 2)", "        val binary =\
    \ decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(binary.length\
    \ - db.length) + db\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.substring(0,binary.length-1)\n       \
    \ result + db + binary.substring(binary.length-1)", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(binary.length-1)\n        val binary =\
    \ binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(binary.length-1)\n\
    \        val binary = binary.drop(binary.length-1)\n        val binary = binary.drop(",
  "        val binary = decimal.toBinaryString\n        val extraChars = if (binary.length\
    \ < 8) \"db\" else \"\"\n        binary.padTo(8, extraChars)", "        val binary\
    \ = decimal.toBinaryString\n        binary.dropRight(binary.length + 2)", "  \
    \      val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.dropRight(binary.length - db.length) + db + binary.take(binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val db\
    \ = \"db\"\n        val result = binary.substring(binary.length - 2)\n       \
    \ result + db", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        binary.substring(binary.length\
    \ - 2) +\n            binary.substring(0, binary.length - 2)", "        val binary\
    \ = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.replace(\"0\",\"db\")\n        val binary = binary.replace(\"\
    1\",\"db\")\n        binary", "        val binary = decimal.toBinaryString\n \
    \       val db = \"db\"\n        val result = binary.substring(binary.length -\
    \ 2)\n        result + db + binary.substring(0, binary.length - 2)", "       \
    \ val binary = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2, binary.length)\n        val extraCharsReversed = extraChars.reverse\n \
    \       val extraCharsReversedString = extraCharsReversed.mkString\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n        val\
    \ extraCharsReversedStringLength = extraCharsReversedString.length\n", "     \
    \   val binary = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.toCharArray\n        val binary = binary.map(_ + 48)\n     \
    \   val binary = binary.toList\n        val binary = binary.toString.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.", "        val binary\
    \ = decimal.toBinaryString\n        val bin = binary.substring(binary.length -\
    \ 2)\n        val binary = bin.substring(0, bin.length - 1)\n        val binary\
    \ = binary.concat(\"db\")\n        binary.toUpperCase", "        val binary =\
    \ decimal.toBinaryString\n        val binary = binary.replace(\"0\",\"db\")\n\
    \        val binary = binary.replace(\"1\",\"0\")\n        binary", "        val\
    \ binary = decimal.toBinaryString\n        val extraChars = if (decimal == 0)\
    \ \"db\" else \"\"\n        binary.dropRight(binary.length - extraChars.length)\
    \ + extraChars", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = binary.substring(binary.length - 2, binary.length)\n        val extraCharsString\
    \ = extraChars.toUpperCase\n        val extraCharsStringLength = extraCharsString.length\n\
    \        val extraCharsStringWithDb = extraCharsString + extraCharsString.substring(0,\
    \ extraCharsStringLength - 1) + extraCharsString.substring(extraCharsStringLength\
    \ - 1, extraCharsStringLength)\n        val extraCharsStringWithDbLength = extraCharsStringWithDb.length\n\
    \        val extraCharsStringWithDbWithDb = extraCharsStringWithDb + extraCharsStringWithDb.substring(0,\
    \ extraCharsStringWithDbLength - 1) + extraCharsStringWithDb.substring(extraCharsStringWithDbLength\
    \ - 1, extraCharsStringWithDbLength)\n        val extraCharsStringWithDbWithDbLength\
    \ = extraCharsStringWithDbWithDb.length\n        val extraCharsStringWithDbWithDbWithDb\
    \ = extraCharsStringWithDbWithDb + extraCharsStringWithDbWithDb.substring(0, extraCharsStringWithDbWithDbLength\
    \ - 1) + extraCharsStringWithDbWithDb.substring(extraCharsStringWithDbWithDbLength\
    \ - 1, extraCharsStringWithDbWithDbLength)\n        val extraCharsStringWithDbWithDbWithDbLength\
    \ = extraCharsStringWithDbWithDbWithDbWithDb.length\n        val extraCharsStringWithDbWithDbWithDbWithDb\
    \ = extraCharsStringWithDbWithDbWithDb + extraCharsStringWithDbWithDbWithDbWithDb.substring(0,\
    \ extraCharsStringWithDbWithDbWithDbWithDbLength - 1) + extraCharsStringWithDbWithDbWithDbWithDb.substring(extraCharsStringWithDbWithDbWithDbLength\
    \ - 1, extraCharsStringWithDbWithDbWithDbLength)\n        val extraCharsStringWithDbWithDbWithDbWithDbLength\
    \ = extraCharsStringWithDbWithDbWithDbWithDbWithDb.length\n        val extraCharsStringWithDbWithDbWithDbWithDbWithDb\
    \ = extraCharsStringWithDbWithDbWithDbWithDb + extraCharsStringWithDbWithDbWithDbWithDbWithDb.substring(0,\
    \ extraCharsStringWithDbWithDbWithDbWithDbWithDbWithDbLength - 1) + extraCharsStringWithDbWithDbWithDbWithDbWithDb.substring(extraCharsStringWith",
  "        val binary = decimal.toBinaryString\n        val db = \"db\".toCharArray\n\
    \        val result = binary.dropRight(binary.length - db.length) + db + binary.take(binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val db = \"db\"\n        val result = binary.dropRight(binary.length\
    \ - 2)\n        result + db + binary.dropLeft(binary.length - 2)", "        var\
    \ binary = \"\"\n        var remainder = decimal\n        while(decimal != 0)\
    \ {\n            decimal /= 2\n            binary += \"0\"\n        }\n      \
    \  while(decimal != 0) {\n            decimal /= 2\n            binary += \"1\"\
    \n        }\n        binary += \"db\"\n        while(decimal != 0) {\n       \
    \     decimal /= 2\n            binary += \"0\"\n        }\n        while(decimal\
    \ != 0) {\n            decimal /= 2\n            binary += \"1\"\n        }\n\
    \        binary += \"db\"\n        while(decimal != 0) {\n            decimal\
    \ /= 2\n            binary += \"0\"\n        }\n        while(decimal != 0) {\n\
    \            decimal /= 2\n            binary += \"1\"\n        }\n        binary\
    \ += \"db\"\n        while(decimal != 0) {\n            decimal /= 2\n       \
    \     binary += \"0\"\n        }\n        while(decimal != 0) {\n            decimal\
    \ /= 2\n            binary += \"1\"\n        }\n        binary += \"db\"\n   \
    \     while(decimal != 0) {\n            decimal /= 2\n            binary += \"\
    0\"\n        }\n        while(decimal != 0) {\n            decimal /= 2\n    \
    \        binary += \"1\"\n        }\n        binary += \"db\"\n        while(decimal\
    \ != 0) {\n            decimal /= 2\n            binary += \"0\"\n        }\n\
    \        while(decimal != 0) {\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        binary += \"db\"\n        while(decimal != 0) {\n\
    \            decimal /= 2\n            binary += \"0\"\n        }\n        while(decimal\
    \ != 0) {\n            decimal /= 2\n            binary += \"1\"\n        }\n\
    \        binary += \"db\"\n        while(decimal != 0) {\n            decimal\
    \ /= 2\n            binary += \"0\"\n        }\n        while(decimal != 0) {\n\
    \            decimal /= 2\n            binary += \"1\"\n        }\n        binary\
    \ += \"db\"\n        while(decimal != 0) {\n            decimal /= 2\n       \
    \     binary += \"0\"\n        }\n        while(decimal != 0) {\n            decimal\
    \ /= 2\n            binary += \"1\"\n        }\n        binary += \"db\"\n   \
    \     while(decimal != 0) {\n            decimal /= 2\n            binary += \"\
    0\"\n        }\n        while(decimal != 0) {\n            decimal /= 2\n    \
    \        binary += \"1\"\n        }\n        binary += \"db\"\n        while(decimal\
    \ != 0) {\n            decimal /= 2\n            binary += \"0\"\n        }\n\
    \        while(decimal != 0) {\n            decimal /= 2\n            binary +=\
    \ \"1\"\n        }\n        binary += \"db\"\n        while(decimal != 0) {\n\
    \            decimal /= 2\n            binary += \"0\"\n        }\n        while(decimal\
    \ != 0) {\n            decimal /= 2\n            binary += \"1\"\n        }\n\
    \        binary += \"db", "        val binary = decimal.toBinaryString\n     \
    \   val extraChars = binary.substring(binary.length - 2)\n        val extraCharsLen\
    \ = extraChars.length\n        val extraCharsStr = \"db\" + extraChars\n     \
    \   val binaryLen = binary.length\n        val binaryStr = \"db\" + binary\n \
    \       val result = extraCharsStr + binaryStr\n        result", "        val\
    \ binary = decimal.toBinaryString\n        val db = \"db\"\n        val result\
    \ = binary.substring(binary.length - db.length) + db\n        return result",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 2)\n        result + db + binary.substring(0,\
    \ binary.length - 2)", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.substring(binary.length - 2)\n    \
    \    result + db", "        val binary = decimal.toBinaryString\n        val binary\
    \ = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        binary.dropRight(binary.length\
    \ + 2)", "        val binary = decimal.toBinaryString\n        val db = \"db\"\
    \n        val result = binary.substring(binary.length - db.length, binary.length)\n\
    \        result + db", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.dropRight(binary.length - db.length)\
    \ + db + binary.drop(binary.length - db.length)\n        return result", "   \
    \     val binary = decimal.toBinaryString\n        val db = \"db\"\n        binary.substring(0,binary.length-1)+db+binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - 2)\n        val result = db + result\n\
    \        result", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = if (binary == decimal.toBinaryString) \"\" else binary\n        val extraCharsLen\
    \ = extraChars.length\n        val extraCharsLen2 = extraCharsLen / 2\n      \
    \  val extraCharsLen3 = extraCharsLen - extraCharsLen2\n        val extraCharsLen4\
    \ = extraCharsLen - extraCharsLen2 - extraCharsLen3\n        val extraCharsLen5\
    \ = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4\n       \
    \ val extraCharsLen6 = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4\
    \ - extraCharsLen5\n        val extraCharsLen7 = extraCharsLen - extraCharsLen2\
    \ - extraCharsLen3 - extraCharsLen4 - extraCharsLen5 - extraCharsLen6\n      \
    \  val extraCharsLen8 = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4\
    \ - extraCharsLen5 - extraCharsLen6 - extraCharsLen7\n        val extraCharsLen9\
    \ = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4 - extraCharsLen5\
    \ - extraCharsLen6 - extraCharsLen7 - extraCharsLen8\n        val extraCharsLen10\
    \ = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4 - extraCharsLen5\
    \ - extraCharsLen6 - extraCharsLen7 - extraCharsLen8 - extraCharsLen9\n      \
    \  val extraCharsLen11 = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4\
    \ - extraCharsLen5 - extraCharsLen6 - extraCharsLen7 - extraCharsLen8 - extraCharsLen9\
    \ - extraCharsLen10\n        val extraCharsLen12 = extraCharsLen - extraCharsLen2\
    \ - extraCharsLen3 - extraCharsLen4 - extraCharsLen5 - extraCharsLen6 - extraCharsLen7\
    \ - extraCharsLen8 - extraCharsLen9 - extraCharsLen10 - extraCharsLen11\n    \
    \    val extraCharsLen13 = extraCharsLen - extraCharsLen2 - extraCharsLen3 - extraCharsLen4\
    \ - extraCharsLen5 - extra", "        val binary = decimal.toBinaryString\n  \
    \      binary.substring(0,1) + binary.substring(1,binary.length-1) + binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.dropRight(binary.length - db.length) + db + binary.drop(binary.length\
    \ - db.length)\n        return result", "        val binary = decimal.toBinaryString\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val bin", "        val binary = decimal.toBinaryString\n        val extraChars\
    \ = binary.substring(binary.length - 2)\n        val extraCharsLength = extraChars.length\n\
    \        val extraCharsLengthInt = extraCharsLength.toInt\n        val extraCharsLengthString\
    \ = extraChars.substring(extraCharsLengthInt - 1)\n        val extraCharsLengthStringInt\
    \ = extraCharsLengthString.toInt\n        val extraCharsLengthStringString = extraCharsLengthString.substring(extraCharsLengthStringInt\
    \ - 1)\n        val extraCharsLengthStringIntString = extraCharsLengthStringString.toInt\n\
    \        val extraCharsLengthStringStringString = extraCharsLengthStringString.substring(extraCharsLengthStringIntString\
    \ - 1)\n        val extraCharsLengthStringIntStringString = extraCharsLengthStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringString = extraCharsLengthStringIntStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringString = extraCharsLengthStringIntStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringString = extraCharsLengthStringIntStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringString = extraCharsLengthStringIntStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringString\
    \ = extraCharsLengthStringIntStringStringStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringString\
    \ = extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString.toInt\n\
    \        val extraCharsLengthStringIntStringStringStringStringStringStringStringStringStringStringStringStringStringStringString",
  "        val binary = decimal.toBinaryString\n        val binary = binary.substring(binary.length\
    \ - 2)\n        val binary = binary.substring(0, binary.length - 2)\n        val\
    \ binary = binary.toCharArray\n        val binary = binary.map(x => if (x == '1')\
    \ '0' else '1')\n        val binary = binary.mkString(\"\")\n        val binary\
    \ = binary.concat(\"db\")\n        val binary = binary.concat(\"db\")\n      \
    \  binary.toString", "        val binary = decimal.toBinaryString\n        val\
    \ db = \"db\"\n        val result = binary.dropRight(binary.length - 2)\n    \
    \    result + db + binary.dropLeft(binary.length - 2)", "        val binary =\
    \ decimal.toBinaryString\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = binary.reverse\n        val binary = binary.dropRight(binary.length-1)\n\
    \        val binary = bin", "        val binary = decimal.toBinaryString\n   \
    \     val binary = binary.substring(binary.length - 2)\n        val binary = binary.substring(0,\
    \ binary.length - 2)\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse\n        val binary = binary.reverse\n        val binary\
    \ = binary.reverse\n        val binary = binary.reverse\n        val binary =\
    \ binary.reverse\n        val binary = binary.reverse\n        val binary = binary.reverse\n\
    \        val binary = binary.reverse\n        val binary = binary.reverse\n  \
    \      val binary = binary.reverse\n        val binary = binary.reverse\n    \
    \    val binary = binary.reverse\n        val binary = binary.reverse\n      \
    \  val binary = binary.reverse\n        val binary = binary.reverse\n        val\
    \ binary = binary.reverse", "        val binary = decimal.toBinaryString\n   \
    \     val result = binary.substring(binary.length - 2)\n        result + binary.substring(0,\
    \ binary.length - 2)", "        val binary = decimal.toBinaryString\n        binary.dropRight(binary.length\
    \ + 2)", "        val binary = decimal.toBinaryString\n        binary.substring(binary.length-1)",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(0,binary.length-1)\n        val dbResult = binary.substring(binary.length-1)\n\
    \        result + db + dbResult", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = if (binary == decimal.toBinaryString) \"\" else binary\n\
    \        val db = \"db\" + extraChars\n        binary.dropRight(binary.length\
    \ - extraChars.length) + db + binary.takeRight(binary.length - extraChars.length)",
  "        val binary = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2)\n        val extraCharsReversed = extraChars.reverse\n        val extraCharsReversedString\
    \ = extraCharsReversed.mkString\n        val extraCharsReversedStringLength =\
    \ extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extraCharsReversedStringLength\
    \ = extraCharsReversedString.length\n        val extra", "        val binary =\
    \ decimal.toBinaryString\n        val binary = binary.dropRight(1)\n        val\
    \ binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n   \
    \     val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val binary = binary.dropRight(1)\n\
    \        val binary = binary.dropRight(1)\n        val bin", "        val binary\
    \ = decimal.toBinaryString\n        val db = \"db\"\n        val result = binary.substring(0,binary.length-1)\n\
    \        val extra = binary.substring(binary.length-1)\n        result + db +\
    \ extra", "        val binary = decimal.toBinaryString\n        val db = \"db\"\
    \n        val result = binary.substring(0,binary.length-1)\n        result + db\
    \ + binary.substring(binary.length-1)", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = binary.substring(binary.length - 2)\n        val extraCharsReversed\
    \ = extraChars.reverse\n        val extraCharsReversedString = extraCharsReversed.mkString\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extraCharsReversedStringLength = extraCharsReversedString.length\n\
    \        val extra", "        val binary = decimal.toBinaryString\n        val\
    \ binary = binary.substring(binary.length - 2)\n        val binary = binary.substring(0,\
    \ binary.length - 2)\n        val binary = binary.toCharArray\n        val binary\
    \ = binary.map(x => if (x == '1') '0' else '1')\n        val binary = binary.mkString(\"\
    \")\n        val binary = binary.concat(\"db\")\n        binary", "        val\
    \ binary = decimal.toBinaryString\n        val db = \"db\"\n        val result\
    \ = binary.dropRight(binary.length - 2)\n        result + db + binary.takeRight(binary.length\
    \ - 2)", "        var binary = \"\"\n        var remainder = decimal\n       \
    \ var remainder2 = decimal\n        while(decimal != 0) {\n            decimal\
    \ /= 2\n            remainder2 = remainder * 2\n            binary = remainder2\
    \ + binary\n            remainder = decimal % 2\n        }\n        binary = binary\
    \ + \"db\"\n        return binary", "        val binary = decimal.toBinaryString\n\
    \        val bin = binary.substring(binary.length - 2)\n        val binary = bin.substring(0,\
    \ bin.length - 1)\n        val binary = binary.concat(\"db\")\n        binary",
  "        val binary = decimal.toBinaryString\n        val db = \"db\"\n        val\
    \ result = binary.substring(binary.length - db.length) + db\n        result",
  "        val binary = decimal.toBinaryString\n        val extraChars = binary.substring(binary.length\
    \ - 2)\n        val extraCharsDb = \"db\" + extraChars\n        binary.substring(0,binary.length\
    \ - 2) + extraCharsDb + extraChars", "        val binary = decimal.toBinaryString\n\
    \        val extraChars = if (binary.length < 8) \"db\" else \"\"\n        binary.padToLength(8)\
    \ + extraChars", "        val binary = decimal.toBinaryString\n        val bin\
    \ = binary.dropRight(binary.length-1)\n        val bin2 = bin.dropRight(bin.length-1)\n\
    \        val bin3 = bin2.dropRight(bin2.length-1)\n        val bin4 = bin3.dropRight(bin3.length-1)\n\
    \        val bin5 = bin4.dropRight(bin4.length-1)\n        val bin6 = bin5.dropRight(bin5.length-1)\n\
    \        val bin7 = bin6.dropRight(bin6.length-1)\n        val bin8 = bin7.dropRight(bin7.length-1)\n\
    \        val bin9 = bin8.dropRight(bin8.length-1)\n        val bin10 = bin9.dropRight(bin9.length-1)\n\
    \        val bin11 = bin10.dropRight(bin10.length-1)\n        val bin12 = bin11.dropRight(bin11.length-1)\n\
    \        val bin13 = bin12.dropRight(bin12.length-1)\n        val bin14 = bin13.dropRight(bin13.length-1)\n\
    \        val bin15 = bin14.dropRight(bin14.length-1)\n        val bin16 = bin15.dropRight(bin15.length-1)\n\
    \        val bin17 = bin16.dropRight(bin16.length-1)\n        val bin18 = bin17.dropRight(bin17.length-1)\n\
    \        val bin19 = bin18.dropRight(bin18.length-1)\n        val bin20 = bin19.dropRight(bin19.length-1)\n\
    \        val bin21 = bin20.dropRight(bin20.length-1)\n        val bin22 = bin21.dropRight(bin21.length-1)\n\
    \        val bin23 = bin22.dropRight(bin22.length-1)\n        val bin24 = bin23.dropRight(bin23.length-1)\n\
    \        val bin25 = bin24.dropRight(bin24.length-1)\n        val bin26 = bin25.dropRight(bin25.length-1)\n\
    \        val bin27 = bin26.dropRight(bin26.length-1)\n        val bin28 = bin27.dropRight(bin27.length-1)\n\
    \        val bin29 = bin28.dropRight(bin28.length-1)\n        val bin30 = bin29.dropRight(bin29.length-1)\n\
    \        val bin31 = bin30.dropRight(bin30.length-1)\n        val bin32 = bin31.dropRight(bin31.length-1)\n\
    \        val bin33 = bin32.dropRight(bin32.length-1)\n        val bin34 = bin33.dropRight(bin33.length-1)\n\
    \        val bin35 = bin"]
stop_tokens:
- "\n    }\n"

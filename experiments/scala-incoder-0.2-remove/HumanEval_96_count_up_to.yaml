name: HumanEval_96_count_up_to
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Implement a function that takes an non-negative integer and returns an array\
  \ of the first n\n    // integers that are prime numbers and less than n.\n    //\
  \ for example:\n    def countUpTo(n : Long) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(countUpTo((5l)).equals((List[Long](2l.toLong,\
  \ 3l.toLong))));\n    assert(countUpTo((6l)).equals((List[Long](2l.toLong, 3l.toLong,\
  \ 5l.toLong))));\n    assert(countUpTo((7l)).equals((List[Long](2l.toLong, 3l.toLong,\
  \ 5l.toLong))));\n    assert(countUpTo((10l)).equals((List[Long](2l.toLong, 3l.toLong,\
  \ 5l.toLong, 7l.toLong))));\n    assert(countUpTo((0l)).equals((List[Long]())));\n\
  \    assert(countUpTo((22l)).equals((List[Long](2l.toLong, 3l.toLong, 5l.toLong,\
  \ 7l.toLong, 11l.toLong, 13l.toLong, 17l.toLong, 19l.toLong))));\n    assert(countUpTo((1l)).equals((List[Long]())));\n\
  \    assert(countUpTo((18l)).equals((List[Long](2l.toLong, 3l.toLong, 5l.toLong,\
  \ 7l.toLong, 11l.toLong, 13l.toLong, 17l.toLong))));\n    assert(countUpTo((47l)).equals((List[Long](2l.toLong,\
  \ 3l.toLong, 5l.toLong, 7l.toLong, 11l.toLong, 13l.toLong, 17l.toLong, 19l.toLong,\
  \ 23l.toLong, 29l.toLong, 31l.toLong, 37l.toLong, 41l.toLong, 43l.toLong))));\n\
  \    assert(countUpTo((101l)).equals((List[Long](2l.toLong, 3l.toLong, 5l.toLong,\
  \ 7l.toLong, 11l.toLong, 13l.toLong, 17l.toLong, 19l.toLong, 23l.toLong, 29l.toLong,\
  \ 31l.toLong, 37l.toLong, 41l.toLong, 43l.toLong, 47l.toLong, 53l.toLong, 59l.toLong,\
  \ 61l.toLong, 67l.toLong, 71l.toLong, 73l.toLong, 79l.toLong, 83l.toLong, 89l.toLong,\
  \ 97l.toLong))));\n    }\n\n}\n"
completions: ["        val primes = mutable.ArrayBuffer(2)\n        val counter =\
    \ mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        val limit = n / 2\n        val maxLimit = n / 2\n        val maxLimit2\
    \ = n / 2\n        val maxLimit3 = n / 2\n        val maxLimit4 = n / 2\n    \
    \    val maxLimit5 = n / 2\n        val maxLimit6 = n / 2\n        val maxLimit7\
    \ = n / 2\n        val maxLimit8 = n / 2\n        val maxLimit9 = n / 2\n    \
    \    val maxLimit10 = n / 2\n        val maxLimit11 = n / 2\n        val maxLimit12\
    \ = n / 2\n        val maxLimit13 = n / 2\n        val maxLimit14 = n / 2\n  \
    \      val maxLimit15 = n / 2\n        val maxLimit16 = n / 2\n        val maxLimit17\
    \ = n / 2\n        val maxLimit18 = n / 2\n        val maxLimit19 = n / 2\n  \
    \      val maxLimit20 = n / 2\n        val maxLimit21 = n / 2\n        val maxLimit22\
    \ = n / 2\n        val maxLimit23 = n / 2\n        val maxLimit24 = n / 2\n  \
    \      val maxLimit25 = n / 2\n        val maxLimit26 = n / 2\n        val maxLimit27\
    \ = n / 2\n        val maxLimit28 = n / 2\n        val maxLimit29 = n / 2\n  \
    \      val maxLimit30 = n / 2\n        val maxLimit31 = n / 2\n        val maxLimit32\
    \ = n / 2\n        val maxLimit33 = n / 2\n        val maxLimit34 = n / 2\n  \
    \      val maxLimit35 = n / 2\n        val maxLimit36 = n / 2\n        val maxLimit37\
    \ = n / 2\n        val maxLimit38 = n / 2\n        val maxLimit39 = n / 2\n  \
    \      val maxLimit40 = n / 2\n        val maxLimit41 = n / 2\n        val maxLimit42\
    \ = n / 2\n        val maxLimit43 = n / 2\n        val maxLimit44 = n / 2\n  \
    \      val maxLimit45 = n / 2\n        val maxLimit46 = n / 2\n        val maxLimit47\
    \ = n / 2\n        val maxLimit48 = n / 2\n        val maxLimit49", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 3 until n by 2) {\n            val isPrime = true\n       \
    \     primes.foreach { p =>\n                if (i % p == 0) {\n             \
    \       isPrime = false\n                }\n            }\n            if (isPrime)\
    \ {\n                result += i\n            }\n        }\n        result", " \
    \       val primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n) {\n           \
    \ if (primes.contains(i)) {\n                continue\n            }\n       \
    \     primes += i\n        }\n        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            } else {\n                val isPrime\
    \ = true\n                for (j <- 2 to i by 2) {\n                    if (i\
    \ % j == 0) {\n                        isPrime = false\n                     \
    \   break\n                    }\n                }\n                if (isPrime)\
    \ {\n                    primes += i\n                }\n            }\n     \
    \       i += 1\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    count += 1\n           \
    \         primes += j\n                }\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    primes += j\n                    break\n                }\n\
    \            }\n            if(primes.contains(i)){\n                count +=\
    \ 1\n            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var primesFound = 0\n        var primesFoundSoFar = 0\n        var primesFoundSoFar2\
    \ = 0\n        var primesFoundSoFar3 = 0\n        var primesFoundSoFar4 = 0\n\
    \        var primesFoundSoFar5 = 0\n        var primesFoundSoFar6 = 0\n      \
    \  var primesFoundSoFar7 = 0\n        var primesFoundSoFar8 = 0\n        var primesFoundSoFar9\
    \ = 0\n        var primesFoundSoFar10 = 0\n        var primesFoundSoFar11 = 0\n\
    \        var primesFoundSoFar12 = 0\n        var primesFoundSoFar13 = 0\n    \
    \    var primesFoundSoFar14 = 0\n        var primesFoundSoFar15 = 0\n        var\
    \ primesFoundSoFar16 = 0\n        var primesFoundSoFar17 = 0\n        var primesFoundSoFar18\
    \ = 0\n        var primesFoundSoFar19 = 0\n        var primesFoundSoFar20 = 0\n\
    \        var primesFoundSoFar21 = 0\n        var primesFoundSoFar22 = 0\n    \
    \    var primesFoundSoFar23 = 0\n        var primesFoundSoFar24 = 0\n        var\
    \ primesFoundSoFar25 = 0\n        var primesFoundSoFar26 = 0\n        var primesFoundSoFar27\
    \ = 0\n        var primesFoundSoFar28 = 0\n        var primesFoundSoFar29 = 0\n\
    \        var primesFoundSoFar30 = 0\n        var primesFoundSoFar31 = 0\n    \
    \    var primesFoundSoFar32 = 0\n        var primesFoundSoFar33 = 0\n        var\
    \ primesFoundSoFar34 = 0\n        var primesFoundSoFar35 = 0\n        var primesFoundSoFar36\
    \ = 0\n        var primesFoundSoFar37 = 0\n        var primesFoundSoFar38 = 0\n\
    \        var primesFoundSoFar39 = 0\n        var primesFoundSoFar40 = 0\n    \
    \    var primesFoundSoFar41 = 0\n        var primesFoundSoFar42 = 0\n        var\
    \ primesFoundSoFar43 = 0\n        var primesFoundSoFar44 = 0\n        var primesFoundSoFar45\
    \ = 0\n        var primesFoundSoFar46 = 0\n        var primesFoundSoFar47 = 0\n\
    \        var primesFoundSoFar48 = 0\n        var primesFoundSoFar49 = 0\n    \
    \    var primesFoundSoFar50 = 0\n        var primesFoundSoFar51 = 0\n        var\
    \ primesFoundSoFar52 = 0\n        var primesFoundSoFar53 = 0\n        var primesFoundSoFar54\
    \ = 0\n        var primesFoundSoFar55 = 0\n        var prime", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        while (primes.length\
    \ < n) {\n            val next = primes.last\n            if (next == 1) {\n \
    \               count += 1\n                primes += next\n            } else\
    \ {\n                val isPrime = true\n                for (i <- 2 to next -\
    \ 1) {\n                    if (next % i == 0) {\n                        isPrime\
    \ = false\n                        break\n                    }\n            \
    \    }\n                if (isPrime) {\n                    count += 1\n     \
    \               primes += next\n                }\n            }\n        }\n\
    \        primes.take(n)", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                i += 1\n            } else {\n                primes += i\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \          count += 1\n                    break\n                }\n        \
    \    }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var prime = 1\n        var count = 1\n        while (primes.size < n)\
    \ {\n            prime += 1\n            primes += prime\n            count +=\
    \ 1\n        }\n        primes.take(n).toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        for(i <- 2 to n\
    \ by 2){\n            for(j <- 2 to i by 2){\n                if(i % j == 0){\n\
    \                    primes += j\n                }\n            }\n        }\n\
    \        primes.toList.foreach(x => result += x)\n        result.toList", "  \
    \      val primes = mutable.ArrayBuffer.empty[Long]\n        val counter = mutable.ArrayBuffer.empty[Long]\n\
    \        val primesSet = mutable.Set[Long]()\n        val counterSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val counterSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val counterSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val counterSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val counterSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val counterSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val counterSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val counterSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val counterSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val counterSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val counterSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val counterSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val counterSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val counterSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val counterSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val counterSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val counterSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val ", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n) {\n            val isPrime = true\n            primes.foreach\
    \ { p =>\n                if (i % p == 0) isPrime = false\n            }\n   \
    \         if (isPrime) {\n                result += i\n            }\n       \
    \ }\n        result", "        val primes = mutable.ArrayBuffer(2)\n        val\
    \ primesSet = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n     \
    \   val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        val primesCount = mutable.Set(2)\n        val primesCount = mutable.Set(2)\n\
    \        ", "        val primes = mutable.ListBuffer(2)\n        var count = 0\n\
    \        for(i <- 3 to n by 2){\n            for(j <- 3 to i by 2){\n        \
    \        if(i % j == 0){\n                    primes += j\n                }\n\
    \            }\n        }\n        primes.takeWhile(p => p < n).toList", "   \
    \     val primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i\
    \ < n) {\n            if (primes.contains(i)) {\n                primes += i\n\
    \            }\n            i += 1\n        }\n        primes.toList", "     \
    \   val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n by 2){\n            for(j <- 2 to i by 2){\n                if(i %\
    \ j == 0){\n                    primes += j\n                    count += 1\n\
    \                    break\n                }\n            }\n        }\n    \
    \    primes.toList", "        val primes = mutable.ListBuffer[Long]()\n      \
    \  for (i <- 2 to n) {\n            if (primes.contains(i)) {\n              \
    \  continue\n            }\n            primes += i\n            if (primes.takeWhile(p\
    \ => p < n).forall(p => n % p == 0)) {\n                primes -= i\n        \
    \    }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val counter = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer(n)\n\
    \        val isPrime = mutable.ArrayBuffer(true)\n        val isPrime2 = mutable.ArrayBuffer(true)\n\
    \        val isPrime3 = mutable.ArrayBuffer(true)\n        val isPrime4 = mutable.ArrayBuffer(true)\n\
    \        val isPrime5 = mutable.ArrayBuffer(true)\n        val isPrime6 = mutable.ArrayBuffer(true)\n\
    \        val isPrime7 = mutable.ArrayBuffer(true)\n        val isPrime8 = mutable.ArrayBuffer(true)\n\
    \        val isPrime9 = mutable.ArrayBuffer(true)\n        val isPrime10 = mutable.ArrayBuffer(true)\n\
    \        val isPrime11 = mutable.ArrayBuffer(true)\n        val isPrime12 = mutable.ArrayBuffer(true)\n\
    \        val isPrime13 = mutable.ArrayBuffer(true)\n        val isPrime14 = mutable.ArrayBuffer(true)\n\
    \        val isPrime15 = mutable.ArrayBuffer(true)\n        val isPrime16 = mutable.ArrayBuffer(true)\n\
    \        val isPrime17 = mutable.ArrayBuffer(true)\n        val isPrime18 = mutable.ArrayBuffer(true)\n\
    \        val isPrime19 = mutable.ArrayBuffer(true)\n        val isPrime20 = mutable.ArrayBuffer(true)\n\
    \        val isPrime21 = mutable.ArrayBuffer(true)\n        val isPrime22 = mutable.ArrayBuffer(true)\n\
    \        val isPrime23 = mutable.ArrayBuffer(true)\n        val isPrime24 = mutable.ArrayBuffer(true)\n\
    \        val isPrime25 = mutable.ArrayBuffer(true)\n        val isPrime26 = mutable.ArrayBuffer(true)\n\
    \        val isPrime27 = mutable.ArrayBuffer(true)\n        val isPrime28 = mutable.ArrayBuffer(true)\n\
    \        val isPrime29 = mutable.ArrayBuffer(true)\n        val isPrime30 = mutable.ArrayBuffer(true)\n\
    \        val isPrime31 = mutable.ArrayBuffer(true)\n        val isPrime32 = mutable.ArrayBuffer(true)\n\
    \        val isPrime33 = mutable.ArrayBuffer(true)\n        val isPrime34 = mutable.ArrayBuffer(true)\n\
    \        val isPrime35 = mutable.ArrayBuffer(true)\n        val isPrime36 = mutable.ArrayBuffer(true)\n\
    \        val isPrime37 = mutable.ArrayBuffer(true)\n        val isPrime38 = mutable.ArrayBuffer(true)\n\
    \        ", "        val primes = mutable.ArrayBuffer(2)\n        var i = 2\n\
    \        while (i <= n) {\n            if (primes.contains(i)) {\n           \
    \     primes += i\n                i += 1\n            } else {\n            \
    \    i += 1\n            }\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i <- 2 to n){\n\
    \            for(j <- primes.iterator; j <- primes.iterator){\n              \
    \  if(i % j == 0){\n                    primes = primes.filterNot(_ % j == 0)\n\
    \                    count += 1\n                    break\n                }\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n by 2){\n            for(j <- 2\
    \ to i by 2){\n                if(i % j == 0){\n                    primes +=\
    \ j\n                    break\n                }\n            }\n           \
    \ count += 1\n        }\n        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val primesCount = mutable.ListBuffer[Long]()\n        val isPrime = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount = mutable.ListBuffer[Boolean]()\n        val isPrimeCount2\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount3 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount4 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount5\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount6 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount7 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount8\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount9 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount10 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount11\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount12 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount13 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount14\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount15 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount16 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount17\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount18 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount19 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount20\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount21 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount22 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount23\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount24 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount25 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount26\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeCount27 = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeCount28 = mutable.ListBuffer[Boolean]()\n        val isPrimeCount29",
  "        val primes = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n)\
    \ {\n            if (isPrime(i)) {\n                primes += i\n            }\n\
    \        }\n        primes.toList", "        var primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var primesCount = 0\n        var currentPrime = 1\n        var currentPrimeCount\
    \ = 0\n        var currentPrimeIndex = 0\n        var currentPrimeIndexCount =\
    \ 0\n        var currentPrimeIndexLast = 0\n        var currentPrimeIndexLastCount\
    \ = 0\n        var currentPrimeIndexLastLast = 0\n        var currentPrimeIndexLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLast = 0\n        var currentPrimeIndexLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLast = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var current", "        var primes = mutable.ArrayBuffer(2)\n  \
    \      var primesCount = 0\n        var primesSum = 0\n        var sum = 0\n \
    \       var currentSum = 0\n        var currentSum2 = 0\n        var currentSum3\
    \ = 0\n        var currentSum4 = 0\n        var currentSum5 = 0\n        var currentSum6\
    \ = 0\n        var currentSum7 = 0\n        var currentSum8 = 0\n        var currentSum9\
    \ = 0\n        var currentSum10 = 0\n        var currentSum11 = 0\n        var\
    \ currentSum12 = 0\n        var currentSum13 = 0\n        var currentSum14 = 0\n\
    \        var currentSum15 = 0\n        var currentSum16 = 0\n        var currentSum17\
    \ = 0\n        var currentSum18 = 0\n        var currentSum19 = 0\n        var\
    \ currentSum20 = 0\n        var currentSum21 = 0\n        var currentSum22 = 0\n\
    \        var currentSum23 = 0\n        var currentSum24 = 0\n        var currentSum25\
    \ = 0\n        var currentSum26 = 0\n        var currentSum27 = 0\n        var\
    \ currentSum28 = 0\n        var currentSum29 = 0\n        var currentSum30 = 0\n\
    \        var currentSum31 = 0\n        var currentSum32 = 0\n        var currentSum33\
    \ = 0\n        var currentSum34 = 0\n        var currentSum35 = 0\n        var\
    \ currentSum36 = 0\n        var currentSum37 = 0\n        var currentSum38 = 0\n\
    \        var currentSum39 = 0\n        var currentSum40 = 0\n        var currentSum41\
    \ = 0\n        var currentSum42 = 0\n        var currentSum43 = 0\n        var\
    \ currentSum44 = 0\n        var currentSum45 = 0\n        var currentSum46 = 0\n\
    \        var currentSum47 = 0\n        var currentSum48 = 0\n        var currentSum49\
    \ = 0\n        var currentSum50 = 0\n        var currentSum51 = 0\n        var\
    \ currentSum52 = 0\n        var currentSum53 = 0\n        var currentSum54 = 0\n\
    \        var currentSum55 = 0\n        var currentSum56 = 0\n        var currentSum57\
    \ = 0\n        var currentSum58 = 0\n        var currentSum59 = 0\n        var\
    \ currentSum60 = 0\n        var currentSum61 = 0\n        var currentSum62 = 0\n\
    \        var currentSum63 = 0\n        var currentSum64 = 0\n        var currentSum65\
    \ = 0\n        var currentSum66 = 0\n        var currentSum67 = 0\n        var\
    \ currentSum68 = 0\n        var currentSum69 = 0\n        var currentSum70 = 0\n\
    \        var currentSum71 = 0\n        var currentSum72 = 0\n        var currentSum73\
    \ = 0\n        var currentSum74 = 0\n        var currentSum75 = 0\n        var\
    \ currentSum76 = 0\n        var currentSum77 = 0\n        var currentSum78 = 0\n\
    \        var currentSum79 = 0\n        var currentSum80 = 0\n        var currentSum81\
    \ = 0\n        var current", "        val primes = mutable.ArrayBuffer(2)\n  \
    \      var i = 2\n        while(i <= n){\n            val isPrime = true\n   \
    \         for(j <- primes.indices; j <- primes.indices; j <- primes.indices) {\n\
    \                if(i % primes(j) == 0){\n                    isPrime = false\n\
    \                    break\n                }\n            }\n            if(isPrime){\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       primes.take(n)", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n \
    \               if(i % j == 0){\n                    count = count + 1\n     \
    \               primes += j\n                }\n            }\n        }\n   \
    \     primes.toList", "        var primes = mutable.ListBuffer[Long]()\n     \
    \   var i = 2\n        while(i < n){\n            primes += i\n            i +=\
    \ 2\n        }\n        primes.toList", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (isPrime(i)) {\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       primes.toList", "        val primes = mutable.ArrayBuffer(2)\n       \
    \ var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n  \
    \              if(i % j == 0){\n                    primes += j\n            \
    \    }\n            }\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n) {\n           \
    \ if (primes.contains(i)) {\n                primes += i\n            }\n    \
    \        else {\n                for (j <- 2 to i) {\n                    if (i\
    \ % j == 0) {\n                        break\n                    }\n        \
    \        }\n                if (j == i) {\n                    primes += i\n \
    \               }\n            }\n        }\n        primes.toList", "       \
    \ val primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i <=\
    \ n) {\n            if (primes.contains(i)) {\n                primes += i\n \
    \               i += 1\n            } else {\n                i += 1\n       \
    \     }\n        }\n        primes.toList", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes = primes.filter(_ != i)\n            } else {\n  \
    \              primes = primes.+(i)\n            }\n            i += 1\n     \
    \   }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val primesCount = mutable.ArrayBuffer(2)\n        val primesCount2 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount3 = mutable.ArrayBuffer(2)\n\
    \        val primesCount4 = mutable.ArrayBuffer(2)\n        val primesCount5 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount6 = mutable.ArrayBuffer(2)\n\
    \        val primesCount7 = mutable.ArrayBuffer(2)\n        val primesCount8 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount9 = mutable.ArrayBuffer(2)\n\
    \        val primesCount10 = mutable.ArrayBuffer(2)\n        val primesCount11\
    \ = mutable.ArrayBuffer(2)\n        val primesCount12 = mutable.ArrayBuffer(2)\n\
    \        val primesCount13 = mutable.ArrayBuffer(2)\n        val primesCount14\
    \ = mutable.ArrayBuffer(2)\n        val primesCount15 = mutable.ArrayBuffer(2)\n\
    \        val primesCount16 = mutable.ArrayBuffer(2)\n        val primesCount17\
    \ = mutable.ArrayBuffer(2)\n        val primesCount18 = mutable.ArrayBuffer(2)\n\
    \        val primesCount19 = mutable.ArrayBuffer(2)\n        val primesCount20\
    \ = mutable.ArrayBuffer(2)\n        val primesCount21 = mutable.ArrayBuffer(2)\n\
    \        val primesCount22 = mutable.ArrayBuffer(2)\n        val primesCount23\
    \ = mutable.ArrayBuffer(2)\n        val primesCount24 = mutable.ArrayBuffer(2)\n\
    \        val primesCount25 = mutable.ArrayBuffer(2)\n        val primesCount26\
    \ = mutable.ArrayBuffer(2)\n        val primesCount27 = mutable.ArrayBuffer(2)\n\
    \        val primesCount28 = mutable.ArrayBuffer(2)\n        val primesCount29\
    \ = mutable.ArrayBuffer(2)\n        val primesCount30 = mutable.ArrayBuffer(2)\n\
    \        val primesCount31 = mutable.ArrayBuffer(2)\n        val primesCount32\
    \ = mutable.ArrayBuffer(2)\n        val primesCount33 = mutable.ArrayBuffer(2)\n\
    \        val primesCount34 = mutable.ArrayBuffer(2)\n        val primesCount35\
    \ = mutable.ArrayBuffer(2)\n        val primesCount36 = mutable.ArrayBuffer(2)\n\
    \        val primesCount37 = mutable.ArrayBuffer(2)\n        val primesCount38\
    \ = mutable.ArrayBuffer(2)\n        val primesCount39 = mutable.ArrayBuffer(2)\n\
    \        val primesCount40 = mut", "        val primes = mutable.ListBuffer[Long]()\n\
    \        for (i <- 2 to n) {\n            if (primes.contains(i)) {\n        \
    \        primes += i\n            }\n        }\n        primes.toList", "    \
    \    val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n) {\n            if (primes.contains(i)) {\n        \
    \        primes.updated(i, false)\n            } else {\n                primes\
    \ += i\n                result += i\n            }\n        }\n        result",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    primes += j\n                    count = primes.size\n  \
    \                  break\n                }\n            }\n        }\n      \
    \  primes.take(count).toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val primesFound = mutable.ArrayBuffer(2)\n        val primesFoundCount\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount2 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount3 = mutable.ArrayBuffer(2)\n        val primesFoundCount4\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount5 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount6 = mutable.ArrayBuffer(2)\n        val primesFoundCount7\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount8 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount9 = mutable.ArrayBuffer(2)\n        val primesFoundCount10\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount11 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount12 = mutable.ArrayBuffer(2)\n        val primesFoundCount13\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount14 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount15 = mutable.ArrayBuffer(2)\n        val primesFoundCount16\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount17 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount18 = mutable.ArrayBuffer(2)\n        val primesFoundCount19\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount20 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount21 = mutable.ArrayBuffer(2)\n        val primesFoundCount22\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount23 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount24 = mutable.ArrayBuffer(2)\n        val primesFoundCount25\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount26 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount27 = mutable.ArrayBuffer(2)\n        val primesFoundCount28\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount29 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount30 = mutable.ArrayBuffer(2)\n        val primesFoundCount31\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount32 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount33 = mutable.ArrayBuffer(2)\n        val primesFoundCount34\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount35 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount36 = mutable.ArrayBuffer(2)", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n) {\n\
    \            if (isPrime(i)) {\n                primes += i\n            }\n \
    \           i += 1\n        }\n        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2L\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            }\n            i += 1\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        for (i <- 2 to n) {\n            if (primes.contains(i))\
    \ {\n                count += 1\n            } else {\n                primes\
    \ += i\n            }\n        }\n        primes.take(n)", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var counter = 2\n        while (counter <\
    \ n) {\n            if (primes.contains(counter)) {\n                primes +=\
    \ counter\n                counter += 1\n            } else {\n              \
    \  val isPrime = primes.forall(p => n % p == 0)\n                if (isPrime)\
    \ {\n                    primes += counter\n                    counter += 1\n\
    \                }\n            }\n        }\n        primes.take(n)", "     \
    \   val primes = mutable.ArrayBuffer(2)\n        val primesFound = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount = mutable.ArrayBuffer(2)\n        val primesFoundCount2\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount3 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount4 = mutable.ArrayBuffer(2)\n        val primesFoundCount5\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount6 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount7 = mutable.ArrayBuffer(2)\n        val primesFoundCount8\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount9 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount10 = mutable.ArrayBuffer(2)\n        val primesFoundCount11\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount12 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount13 = mutable.ArrayBuffer(2)\n        val primesFoundCount14\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount15 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount16 = mutable.ArrayBuffer(2)\n        val primesFoundCount17\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount18 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount19 = mutable.ArrayBuffer(2)\n        val primesFoundCount20\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount21 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount22 = mutable.ArrayBuffer(2)\n        val primesFoundCount23\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount24 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount25 = mutable.ArrayBuffer(2)\n        val primesFoundCount26\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount27 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount28 = mutable.ArrayBuffer(2)\n        val primesFoundCount29\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount30 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount31 = mutable.ArrayBuffer(2)\n        val primesFoundCount32\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount33 = mutable.ArrayBuffer(2)\n\
    \        val primesFoundCount34 = mutable.ArrayBuffer(2)\n        val primesFoundCount35\
    \ = mutable.ArrayBuffer(2)\n        val primesFoundCount36 = mutable.ArrayBuffer(2)",
  "        val primes = mutable.ArrayBuffer(2)\n        val counter = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer(n)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val counterCount = mutable.ArrayBuffer(2)\n        val resultCount =\
    \ mutable.ArrayBuffer(n)\n        val primesCount2 = mutable.ArrayBuffer(2)\n\
    \        val counterCount2 = mutable.ArrayBuffer(2)\n        val resultCount2\
    \ = mutable.ArrayBuffer(n)\n        val primesCount3 = mutable.ArrayBuffer(2)\n\
    \        val counterCount3 = mutable.ArrayBuffer(2)\n        val resultCount3\
    \ = mutable.ArrayBuffer(n)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val counterCount4 = mutable.ArrayBuffer(2)\n        val resultCount4\
    \ = mutable.ArrayBuffer(n)\n        val primesCount5 = mutable.ArrayBuffer(2)\n\
    \        val counterCount5 = mutable.ArrayBuffer(2)\n        val resultCount5\
    \ = mutable.ArrayBuffer(n)\n        val primesCount6 = mutable.ArrayBuffer(2)\n\
    \        val counterCount6 = mutable.ArrayBuffer(2)\n        val resultCount6\
    \ = mutable.ArrayBuffer(n)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val counterCount7 = mutable.ArrayBuffer(2)\n        val resultCount7\
    \ = mutable.ArrayBuffer(n)\n        val primesCount8 = mutable.ArrayBuffer(2)\n\
    \        val counterCount8 = mutable.ArrayBuffer(2)\n        val resultCount8\
    \ = mutable.ArrayBuffer(n)\n        val primesCount9 = mutable.ArrayBuffer(2)\n\
    \        val counterCount9 = mutable.ArrayBuffer(2)\n        val resultCount9\
    \ = mutable.ArrayBuffer(n)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val counterCount10 = mutable.ArrayBuffer(2)\n        val resultCount10\
    \ = mutable.ArrayBuffer(n)\n        val primesCount11 = mutable.ArrayBuffer(2)\n\
    \        val counterCount11 = mutable.ArrayBuffer(2)\n        val resultCount11\
    \ = mutable.ArrayBuffer(n)\n        val primesCount12 = mutable.ArrayBuffer(2)\n\
    \        val counterCount12 = mutable.ArrayBuffer(2)\n        val resultCount12\
    \ = mutable.ArrayBuffer(n)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val counterCount13 = mutable.ArrayBuffer(2)\n        val resultCount13\
    \ = mutable.ArrayBuffer(n)\n        val primesCount14 = mutable.ArrayBuffer(2)\n\
    \        val counterCount14 = mutable.ArrayBuffer(2)\n        val resultCount14\
    \ = mutable.ArrayBuffer(n)\n        val primes", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while (primes.size < n) {\n            val nextPrime\
    \ = primes.last\n            if (nextPrime < n / nextPrime) {\n              \
    \  primes += nextPrime\n                count += 1\n            }\n        }\n\
    \        primes.take(n).toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while(primes.size < n) {\n            val p =\
    \ primes.last\n            primes += p\n            count += p\n        }\n  \
    \      primes.take(n)", "        val primes = mutable.ListBuffer[Long]()\n   \
    \     var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            }\n            i += 1\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        while (count < n) {\n            val prime = primes.last\n\
    \            val isPrime = true\n            primes.foreach { p =>\n         \
    \       if (p > prime) {\n                    isPrime = false\n              \
    \  }\n            }\n            if (isPrime) {\n                primes += prime\n\
    \                count += 1\n            }\n        }\n        primes.take(n)",
  "        val primes = mutable.ListBuffer(2)\n        val primesFound = mutable.ListBuffer[Long]()\n\
    \        val primesFoundInOrder = mutable.ListBuffer[Long]()\n        val isPrime\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeInOrderInReverse = mutable.ListBuffer[Boolean]()\n       \
    \ val isPrimeInOrderInReverseInOrder = mutable.ListBuffer[Boolean]()\n       \
    \ val isPrimeInOrderInReverseInOrderInReverse = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeInOrderInReverseInOrderInReverseInOrder = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverse = mutable.ListBuffer[Boolean]()\n\
    \        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrder =\
    \ mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverse\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverse\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverse\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrder\
    \ = mutable.ListBuffer[Boolean]()\n        val isPrimeInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverseInOrderInReverse\
    \ = mutable.List", "        val primes = mutable.ArrayBuffer(2)\n        val result\
    \ = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n) {\n           \
    \ if (primes.contains(i)) {\n                primes += i\n                result\
    \ += i\n            }\n        }\n        result", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var i = 2\n        while(i < n) {\n            val isPrime = true\n \
    \           for(j <- primes) {\n                if(i % j == 0) {\n           \
    \         isPrime = false\n                    break\n                }\n    \
    \        }\n            if(isPrime) {\n                primes += i\n         \
    \   }\n            i += 1\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        var primes\
    \ = mutable.ArrayBuffer(2)\n        var primesCount = mutable.ArrayBuffer(2)\n\
    \        var primesCount2 = mutable.ArrayBuffer(2)\n        var primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        var primesCount4 = mutable.ArrayBuffer(2)\n\
    \        var primesCount5 = mutable.ArrayBuffer(2)\n        var primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        var primesCount7 = mutable.ArrayBuffer(2)\n\
    \        var primesCount8 = mutable.ArrayBuffer(2)\n        var primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        var primesCount10 = mutable.ArrayBuffer(2)\n\
    \        var primesCount11 = mutable.ArrayBuffer(2)\n        var primesCount12\
    \ = mutable.ArrayBuffer(2)\n        var primesCount13 = mutable.ArrayBuffer(2)\n\
    \        var primesCount14 = mutable.ArrayBuffer(2)\n        var primesCount15\
    \ = mutable.ArrayBuffer(2)\n        var primesCount16 = mutable.ArrayBuffer(2)\n\
    \        var primesCount17 = mutable.ArrayBuffer(2)\n        var primesCount18\
    \ = mutable.ArrayBuffer(2)\n        var primesCount19 = mutable.ArrayBuffer(2)\n\
    \        var primesCount20 = mutable.ArrayBuffer(2)\n        var primesCount21\
    \ = mutable.ArrayBuffer(2)\n        var primesCount22 = mutable.ArrayBuffer(2)\n\
    \        var primesCount23 = mutable.ArrayBuffer(2)\n        var primesCount24\
    \ = mutable.ArrayBuffer(2)\n        var primesCount25 = mutable.ArrayBuffer(2)\n\
    \        var primesCount26 = mutable.ArrayBuffer(2)\n        var primesCount27\
    \ = mutable.ArrayBuffer(2)\n        var primesCount28 = mutable.ArrayBuffer(2)\n\
    \        var primesCount29 = mutable.ArrayBuffer(2)\n        var primesCount30\
    \ = mutable.ArrayBuffer(2)\n        var primesCount31 = mutable.ArrayBuffer(2)\n\
    \        var primesCount32 = mutable.ArrayBuffer(2)\n        var primesCount33\
    \ = mutable.ArrayBuffer(2)\n        var primesCount34 = mutable.ArrayBuffer(2)\n\
    \        var primesCount35 = mutable.ArrayBuffer(2)\n        var primesCount36\
    \ = mutable.ArrayBuffer(2)\n        var primesCount37 = mutable.ArrayBuffer(2)\n\
    \        var primesCount38 = mutable.ArrayBuffer(2)\n        var primesCount39\
    \ = mutable.ArrayBuffer(2)\n        var primesCount40 = mutable.ArrayBuffer(2)\n\
    \        var primesCount41 = mutable.ArrayBuffer(2)\n        var primesCount42\
    \ = mutable.ArrayBuffer(2)\n        var primesCount43 = mutable.ArrayBuffer(2)\n",
  "        val primes = mutable.ArrayBuffer(2)\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesArray = mutable.Array[Long](2)\n        val primesArray2 =\
    \ mutable.Array[Long](3)\n        val primesArray3 = mutable.Array[Long](5)\n\
    \        val primesArray4 = mutable.Array[Long](7)\n        val primesArray5 =\
    \ mutable.Array[Long](11)\n        val primesArray6 = mutable.Array[Long](13)\n\
    \        val primesArray7 = mutable.Array[Long](17)\n        val primesArray8\
    \ = mutable.Array[Long](19)\n        val primesArray9 = mutable.Array[Long](23)\n\
    \        val primesArray10 = mutable.Array[Long](29)\n        val primesArray11\
    \ = mutable.Array[Long](31)\n        val primesArray12 = mutable.Array[Long](37)\n\
    \        val primesArray13 = mutable.Array[Long](41)\n        val primesArray14\
    \ = mutable.Array[Long](43)\n        val primesArray15 = mutable.Array[Long](47)\n\
    \        val primesArray16 = mutable.Array[Long](53)\n        val primesArray17\
    \ = mutable.Array[Long](59)\n        val primesArray18 = mutable.Array[Long](61)\n\
    \        val primesArray19 = mutable.Array[Long](67)\n        val primesArray20\
    \ = mutable.Array[Long](71)\n        val primesArray21 = mutable.Array[Long](73)\n\
    \        val primesArray22 = mutable.Array[Long](79)\n        val primesArray23\
    \ = mutable.Array[Long](83)\n        val primesArray24 = mutable.Array[Long](89)\n\
    \        val primesArray25 = mutable.Array[Long](97)\n        val primesArray26\
    \ = mutable.Array[Long](101)\n        val primesArray27 = mutable.Array[Long](103)\n\
    \        val primesArray28 = mutable.Array[Long](107)\n        val primesArray29\
    \ = mutable.Array[Long](109)\n        val primesArray30 = mutable.Array[Long](113)\n\
    \        val primesArray31 = mutable.Array[Long](127)\n        val primesArray32\
    \ = mutable.Array[Long", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n \
    \               if(i % j == 0){\n                    primes += j\n           \
    \         break\n                }\n            }\n            count += 1\n  \
    \      }\n        primes.toList", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        var count = 0\n        for (i <- 2 to n) {\n            if (primes.contains(i))\
    \ {\n                count += 1\n            } else {\n                primes\
    \ += i\n            }\n        }\n        primes.take(n)", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        val limit = (2 to n).toList\n        limit foreach { n =>\n         \
    \   primes foreach { p =>\n                if (n % p == 0) return result\n   \
    \         }\n            primes += n\n            result += n\n        }\n   \
    \     result", "        val primes = mutable.ArrayBuffer(2)\n        val counter\
    \ = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer(2)\n    \
    \    val isPrime = mutable.ArrayBuffer(2)\n        val isPrime2 = mutable.ArrayBuffer(2)\n\
    \        val isPrime3 = mutable.ArrayBuffer(2)\n        val isPrime4 = mutable.ArrayBuffer(2)\n\
    \        val isPrime5 = mutable.ArrayBuffer(2)\n        val isPrime6 = mutable.ArrayBuffer(2)\n\
    \        val isPrime7 = mutable.ArrayBuffer(2)\n        val isPrime8 = mutable.ArrayBuffer(2)\n\
    \        val isPrime9 = mutable.ArrayBuffer(2)\n        val isPrime10 = mutable.ArrayBuffer(2)\n\
    \        val isPrime11 = mutable.ArrayBuffer(2)\n        val isPrime12 = mutable.ArrayBuffer(2)\n\
    \        val isPrime13 = mutable.ArrayBuffer(2)\n        val isPrime14 = mutable.ArrayBuffer(2)\n\
    \        val isPrime15 = mutable.ArrayBuffer(2)\n        val isPrime16 = mutable.ArrayBuffer(2)\n\
    \        val isPrime17 = mutable.ArrayBuffer(2)\n        val isPrime18 = mutable.ArrayBuffer(2)\n\
    \        val isPrime19 = mutable.ArrayBuffer(2)\n        val isPrime20 = mutable.ArrayBuffer(2)\n\
    \        val isPrime21 = mutable.ArrayBuffer(2)\n        val isPrime22 = mutable.ArrayBuffer(2)\n\
    \        val isPrime23 = mutable.ArrayBuffer(2)\n        val isPrime24 = mutable.ArrayBuffer(2)\n\
    \        val isPrime25 = mutable.ArrayBuffer(2)\n        val isPrime26 = mutable.ArrayBuffer(2)\n\
    \        val isPrime27 = mutable.ArrayBuffer(2)\n        val isPrime28 = mutable.ArrayBuffer(2)\n\
    \        val isPrime29 = mutable.ArrayBuffer(2)\n        val isPrime30 = mutable.ArrayBuffer(2)\n\
    \        val isPrime31 = mutable.ArrayBuffer(2)\n        val isPrime32 = mutable.ArrayBuffer(2)\n\
    \        val isPrime33 = mutable.ArrayBuffer(2)\n        val isPrime34 = mutable.ArrayBuffer(2)\n\
    \        val isPrime35 = mutable.ArrayBuffer(2)\n        val isPrime36 = mutable.ArrayBuffer(2)\n\
    \        val isPrime37 = mutable.ArrayBuffer(2)\n        val isPrime38 = mutable.ArrayBuffer(2)\n\
    \        ", "        val primes = mutable.ArrayBuffer(2)\n        val result =\
    \ mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.continually(primes.takeWhile(_ <= n).contains(_)).takeWhile(_\
    \ <= n)\n        val isPrimeIter2 = Iterator.continually(primes.takeWhile(_ <=\
    \ n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter3 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter4 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter5 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter6 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter7 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter8 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter9 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter10 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter11 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter12 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter13 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter14 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter15 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter16 = Iterator.continually(primes.takeWhile(_\
    \ <= n).contains(_)).takeWhile(_ <= n)\n        val isPrimeIter17", "        var\
    \ primes = mutable.ArrayBuffer(2)\n        var primesCount = 0\n        var primesSum\
    \ = 0\n        var sum = 0\n        var i = 0\n        while (i < n) {\n     \
    \       sum += i\n            if (primesCount < primes.length) {\n           \
    \     val p = primes(primesCount)\n                primesCount += 1\n        \
    \        primesSum += p\n                if (sum > n) {\n                    primes\
    \ = primes.drop(primesCount)\n                    primesCount = primes.length\n\
    \                    primesSum = 0\n                }\n            }\n       \
    \     i += 1\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \          break\n                }\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var prime = 1\n        var\
    \ count = 0\n        while(primes.size < n){\n            prime = primes.last\n\
    \            primes = primes.filter(_ != prime)\n            count = primes.count(_\
    \ == prime)\n            if(count > 0){\n                primes = primes.filter(_\
    \ != prime)\n                primes = primes.filter(_ % prime == 0)\n        \
    \        primes = primes.filter(_ % prime != 0)\n                primes = primes.filter(_\
    \ % prime != 0)\n                primes = primes.filter(_ % prime != 0)\n    \
    \            primes = primes.filter(_ % prime != 0)\n                primes =\
    \ primes.filter(_ % prime != 0)\n                primes = primes.filter(_ % prime\
    \ != 0)\n                primes = primes.filter(_ % prime != 0)\n            \
    \    primes = primes.filter(_ % prime != 0)\n                primes = primes.filter(_\
    \ % prime != 0)\n                primes = primes.filter(_ % prime != 0)\n    \
    \            primes = primes.filter(_ % prime != 0)\n                primes =\
    \ primes.filter(_ % prime != 0)\n                primes = primes.filter(_ % prime\
    \ != 0)\n                primes = primes.filter(_ % prime != 0)\n            \
    \    primes = primes.filter(_ % prime != 0)\n                primes = primes.filter(_\
    \ % prime != 0)\n                primes = primes.filter(_ % prime != 0)\n    \
    \            primes = primes.filter(_ % prime != 0)\n                primes =\
    \ primes.filter(_ % prime != 0)\n                primes = primes.filter(_ % prime\
    \ != 0)\n                primes = primes.filter(_ % prime != 0)\n            \
    \    primes = primes.filter(_ % prime != 0)\n                primes = primes.filter(_\
    \ % prime != 0)\n                primes = primes.filter(_ % prime != 0)\n    \
    \            primes = primes.filter(_ % prime != 0)\n                primes =\
    \ primes.filter(_ % prime != 0)\n                primes = primes.filter(_ % prime\
    \ != 0)\n                primes = primes.filter(_ % prime != 0)\n            \
    \    primes = primes.filter(_ % prime != 0)\n                primes = primes.filter(_\
    \ % prime != 0)\n                primes = primes.filter(_ % prime != 0)\n    \
    \            primes = primes.filter(_ % prime != 0)\n                primes =\
    \ primes.filter(_ % prime != 0)\n                primes = primes.filter(_ % prime\
    \ != 0)\n                primes = primes.filter(_ % prime != 0)\n            \
    \    primes = primes.filter(_ % prime ", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeCount = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val primesCount = mutable.ArrayBuffer.empty[Long]\n        ", "     \
    \   val primes = mutable.ArrayBuffer(2)\n        var i = 0\n        while (i <\
    \ n) {\n            primes += 2\n            i += 1\n        }\n        primes.takeWhile(p\
    \ => p < n).reverse.takeWhile(p => p < n).reverse.toList", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        var prime = 1\n        while (prime <=\
    \ n) {\n            if (primes.contains(prime)) {\n                primes += 1\n\
    \            } else {\n                primes += prime\n            }\n      \
    \      prime += 1\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        val primes", "        var primes = mutable.ListBuffer[Long]()\n     \
    \   var i = 2\n        while (i <= n) {\n            if (isPrime(i)) {\n     \
    \           primes += i\n            }\n            i += 1\n        }\n      \
    \  primes.toList", "        val primes = mutable.ArrayBuffer(2)\n        var count\
    \ = 0\n        while(primes.size < n){\n            val nextPrime = primes.last\n\
    \            primes += nextPrime\n            count += 1\n            val isPrime\
    \ = primes.takeWhile(p => p < n).forall(p => n % p == 0)\n            if(isPrime){\n\
    \                primes -= nextPrime\n                count += 1\n           \
    \ }\n        }\n        primes.take(count).toList", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n) {\n            if (primes.contains(i)) {\n        \
    \        continue\n            }\n            val isPrime = true\n           \
    \ for (j <- 2 to i) {\n                if (i % j == 0) {\n                   \
    \ isPrime = false\n                    break\n                }\n            }\n\
    \            if (isPrime) {\n                primes += i\n            }\n    \
    \    }\n        primes.toList", "        var primes = mutable.ArrayBuffer(2)\n\
    \        var primesCount = 0\n        var currentPrime = 2\n        var currentPrimeCount\
    \ = 0\n        var currentPrimeIndex = 0\n        var currentPrimeIndex2 = 0\n\
    \        var currentPrimeIndex3 = 0\n        var currentPrimeIndex4 = 0\n    \
    \    var currentPrimeIndex5 = 0\n        var currentPrimeIndex6 = 0\n        var\
    \ currentPrimeIndex7 = 0\n        var currentPrimeIndex8 = 0\n        var currentPrimeIndex9\
    \ = 0\n        var currentPrimeIndex10 = 0\n        var currentPrimeIndex11 =\
    \ 0\n        var currentPrimeIndex12 = 0\n        var currentPrimeIndex13 = 0\n\
    \        var currentPrimeIndex14 = 0\n        var currentPrimeIndex15 = 0\n  \
    \      var currentPrimeIndex16 = 0\n        var currentPrimeIndex17 = 0\n    \
    \    var currentPrimeIndex18 = 0\n        var currentPrimeIndex19 = 0\n      \
    \  var currentPrimeIndex20 = 0\n        var currentPrimeIndex21 = 0\n        var\
    \ currentPrimeIndex22 = 0\n        var currentPrimeIndex23 = 0\n        var currentPrimeIndex24\
    \ = 0\n        var currentPrimeIndex25 = 0\n        var currentPrimeIndex26 =\
    \ 0\n        var currentPrimeIndex27 = 0\n        var currentPrimeIndex28 = 0\n\
    \        var currentPrimeIndex29 = 0\n        var currentPrimeIndex30 = 0\n  \
    \      var currentPrimeIndex31 = 0\n        var currentPrimeIndex32 = 0\n    \
    \    var currentPrimeIndex33 = 0\n        var currentPrimeIndex34 = 0\n      \
    \  var currentPrimeIndex35 = 0\n        var currentPrimeIndex36 = 0\n        var\
    \ currentPrimeIndex37 = 0\n        var currentPrimeIndex38 = 0\n        var currentPrimeIndex39\
    \ = 0\n        var currentPrimeIndex40 = 0\n        var currentPrimeIndex41 =\
    \ 0\n        var currentPrimeIndex42 = 0\n        var currentPrimeIndex43 = 0\n\
    \        var currentPrimeIndex44 = 0\n        var currentPrimeIndex45 = 0\n  \
    \      var currentPrimeIndex46 = 0\n        var currentPrimeIndex47 = 0\n    \
    \    var currentPrimeIndex48 = 0\n        var currentPrimeIndex49 = 0\n      \
    \  var currentPrimeIndex50 = 0\n        var currentPrimeIndex51 = 0\n        var\
    \ currentPrimeIndex52 = 0\n        var currentPrimeIndex53 = 0\n        var currentPrimeIndex54\
    \ = 0\n        var currentPrimeIndex55 = 0\n        var currentPrimeIndex56 =\
    \ 0\n        var currentPrimeIndex57 = 0\n        var currentPrimeIndex58 = 0\n\
    \        var currentPrimeIndex59 = 0\n        var currentPrimeIndex60 = 0\n  \
    \      var currentPrimeIndex", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \          break\n                }\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var primesCount = 0\n    \
    \    for(i <- 2 to n){\n            for(j <- 2 to i){\n                if(i %\
    \ j == 0){\n                    primesCount += 1\n                    primes +=\
    \ j\n                }\n            }\n        }\n        primes.take(primesCount)",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for\
    \ (i <- 2 to n) {\n            if (primes.contains(i)) {\n                count\
    \ += 1\n            } else {\n                primes += i\n            }\n   \
    \     }\n        primes.take(n)", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeIter = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter2\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter3 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter4 = Iterator.iterate(2)(x => x + 1)\n    \
    \    val isPrimeIter5 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter6\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter7 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter8 = Iterator.iterate(2)(x => x + 1)\n    \
    \    val isPrimeIter9 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter10\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter11 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter12 = Iterator.iterate(2)(x => x + 1)\n   \
    \     val isPrimeIter13 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter14\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter15 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter16 = Iterator.iterate(2)(x => x + 1)\n   \
    \     val isPrimeIter17 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter18\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter19 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter20 = Iterator.iterate(2)(x => x + 1)\n   \
    \     val isPrimeIter21 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter22\
    \ = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter23 = Iterator.iterate(2)(x\
    \ => x + 1)\n        val isPrimeIter24 = Iterator.iterate(2)(x => x + 1)\n   \
    \     val isPrimeIter25 = Iterator.iterate(2)(x => x + 1)\n        val isPrimeIter26\
    \ = Iterator.iterate(", "        val primes = mutable.ListBuffer[Long]()\n   \
    \     val i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            }\n            i += 1\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        var prime: Long = 2\n        while (count < n) {\n \
    \           prime = primes.last\n            if (prime == 0) {\n             \
    \   primes.clear()\n                prime = primes.last\n            }\n     \
    \       primes = primes.filter(_ % prime != 0)\n            count += 1\n     \
    \   }\n        primes.take(n).toList", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes = primes.filterNot(_ == i)\n            } else {\n\
    \                primes = primes ++ List(i)\n            }\n            i += 1\n\
    \        }\n        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (isPrime(i)) {\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       primes.toList", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n) {\n            if (primes.contains(i)) {\n        \
    \        continue\n            }\n            primes += i\n            if (primes.takeWhile(_\
    \ < n).forall(i => primes.contains(i))) {\n                return primes.takeWhile(_\
    \ < n).toList\n            }\n        }\n        primes.toList", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer(n)\n        val isPrime = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount = mutable.ArrayBuffer(true)\n        val isPrimeCount2\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount3 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount4 = mutable.ArrayBuffer(true)\n        val isPrimeCount5\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount6 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount7 = mutable.ArrayBuffer(true)\n        val isPrimeCount8\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount9 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount10 = mutable.ArrayBuffer(true)\n        val isPrimeCount11\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount12 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount13 = mutable.ArrayBuffer(true)\n        val isPrimeCount14\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount15 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount16 = mutable.ArrayBuffer(true)\n        val isPrimeCount17\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount18 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount19 = mutable.ArrayBuffer(true)\n        val isPrimeCount20\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount21 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount22 = mutable.ArrayBuffer(true)\n        val isPrimeCount23\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount24 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount25 = mutable.ArrayBuffer(true)\n        val isPrimeCount26\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount27 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount28 = mutable.ArrayBuffer(true)\n        val isPrimeCount29\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount30 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount31 = mutable.ArrayBuffer(true)\n        val isPrimeCount32\
    \ = mutable.ArrayBuffer(true)\n        val isPrimeCount33 = mutable.ArrayBuffer(true)\n\
    \        val isPrimeCount34 = mutable.ArrayBuffer(true)\n        val isPrimeCount35",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        var\
    \ prime = 1\n        while (count < n) {\n            if (primes.contains(prime))\
    \ {\n                prime = prime + 1\n            } else {\n               \
    \ prime = prime + 1\n                primes += prime\n                count =\
    \ count + 1\n            }\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var i = 0\n        while (i < n) {\n     \
    \       val isPrime = true\n            primes.foreach { p =>\n              \
    \  if (i % p == 0) {\n                    isPrime = false\n                }\n\
    \            }\n            if (isPrime) {\n                primes += i\n    \
    \            i += 1\n            }\n        }\n        primes.take(n)", "    \
    \    val primes = mutable.ListBuffer[Long]()\n        val limit = n / 2\n    \
    \    for (i <- 2 to limit) {\n            if (n % i == 0) {\n                primes\
    \ += i\n            }\n        }\n        primes.take(n)", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val i = 2\n        while (i <= n) {\n\
    \            if (primes.contains(i)) {\n                primes += i\n        \
    \    }\n            i += 1\n        }\n        primes.toList", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n) {\n            val isPrime\
    \ = true\n            for (j <- 2 to i) {\n                if (i % j == 0) {\n\
    \                    isPrime = false\n                    break\n            \
    \    }\n            }\n            if (isPrime) {\n                primes += i\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n\
    \        val i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            }\n            i += 1\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var i = 2\n        while (i <= n) {\n            if (primes.contains(i)) {\n\
    \                primes += i\n                i += 1\n            } else {\n \
    \               i += 1\n            }\n        }\n        primes.toList", "  \
    \      val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    count = count + 1\n                    primes = primes ++\
    \ Array(j)\n                }\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer.empty[Long]\n        val counter = mutable.ArrayBuffer.empty[Long]\n\
    \        var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                counter.append(i)\n            }\n            primes += i\n\
    \            i += 2\n        }\n        counter.toList", "        val primes =\
    \ mutable.ListBuffer(2)\n        val primesCount = mutable.ListBuffer(2)\n   \
    \     val primesCount2 = mutable.ListBuffer(2)\n        val primesCount3 = mutable.ListBuffer(2)\n\
    \        val primesCount4 = mutable.ListBuffer(2)\n        val primesCount5 =\
    \ mutable.ListBuffer(2)\n        val primesCount6 = mutable.ListBuffer(2)\n  \
    \      val primesCount7 = mutable.ListBuffer(2)\n        val primesCount8 = mutable.ListBuffer(2)\n\
    \        val primesCount9 = mutable.ListBuffer(2)\n        val primesCount10 =\
    \ mutable.ListBuffer(2)\n        val primesCount11 = mutable.ListBuffer(2)\n \
    \       val primesCount12 = mutable.ListBuffer(2)\n        val primesCount13 =\
    \ mutable.ListBuffer(2)\n        val primesCount14 = mutable.ListBuffer(2)\n \
    \       val primesCount15 = mutable.ListBuffer(2)\n        val primesCount16 =\
    \ mutable.ListBuffer(2)\n        val primesCount17 = mutable.ListBuffer(2)\n \
    \       val primesCount18 = mutable.ListBuffer(2)\n        val primesCount19 =\
    \ mutable.ListBuffer(2)\n        val primesCount20 = mutable.ListBuffer(2)\n \
    \       val primesCount21 = mutable.ListBuffer(2)\n        val primesCount22 =\
    \ mutable.ListBuffer(2)\n        val primesCount23 = mutable.ListBuffer(2)\n \
    \       val primesCount24 = mutable.ListBuffer(2)\n        val primesCount25 =\
    \ mutable.ListBuffer(2)\n        val primesCount26 = mutable.ListBuffer(2)\n \
    \       val primesCount27 = mutable.ListBuffer(2)\n        val primesCount28 =\
    \ mutable.ListBuffer(2)\n        val primesCount29 = mutable.ListBuffer(2)\n \
    \       val primesCount30 = mutable.ListBuffer(2)\n        val primesCount31 =\
    \ mutable.ListBuffer(2)\n        val primesCount32 = mutable.ListBuffer(2)\n \
    \       val primesCount33 = mutable.ListBuffer(2)\n        val primesCount34 =\
    \ mutable.ListBuffer(2)\n        val primesCount35 = mutable.ListBuffer(2)\n \
    \       val primesCount36 = mutable.ListBuffer(2)\n        val primesCount37 =\
    \ mutable.ListBuffer(2)\n        val primesCount38 = mutable.ListBuffer(2)\n \
    \       val primesCount39 = mutable.ListBuffer(2)\n        val primesCount40 =\
    \ mut", "        val primes = mutable.ArrayBuffer(2)\n        var primesCount\
    \ = 0\n        var primesSum = 0\n        var primesSum2 = 0\n        var primesSum3\
    \ = 0\n        var primesSum4 = 0\n        var primesSum5 = 0\n        var primesSum6\
    \ = 0\n        var primesSum7 = 0\n        var primesSum8 = 0\n        var primesSum9\
    \ = 0\n        var primesSum10 = 0\n        var primesSum11 = 0\n        var primesSum12\
    \ = 0\n        var primesSum13 = 0\n        var primesSum14 = 0\n        var primesSum15\
    \ = 0\n        var primesSum16 = 0\n        var primesSum17 = 0\n        var primesSum18\
    \ = 0\n        var primesSum19 = 0\n        var primesSum20 = 0\n        var primesSum21\
    \ = 0\n        var primesSum22 = 0\n        var primesSum23 = 0\n        var primesSum24\
    \ = 0\n        var primesSum25 = 0\n        var primesSum26 = 0\n        var primesSum27\
    \ = 0\n        var primesSum28 = 0\n        var primesSum29 = 0\n        var primesSum30\
    \ = 0\n        var primesSum31 = 0\n        var primesSum32 = 0\n        var primesSum33\
    \ = 0\n        var primesSum34 = 0\n        var primesSum35 = 0\n        var primesSum36\
    \ = 0\n        var primesSum37 = 0\n        var primesSum38 = 0\n        var primesSum39\
    \ = 0\n        var primesSum40 = 0\n        var primesSum41 = 0\n        var primesSum42\
    \ = 0\n        var primesSum43 = 0\n        var primesSum44 = 0\n        var primesSum45\
    \ = 0\n        var primesSum46 = 0\n        var primesSum47 = 0\n        var primesSum48\
    \ = 0\n        var primesSum49 = 0\n        var primesSum50 = 0\n        var primesSum51\
    \ = 0\n        var primesSum52 = 0\n        var primesSum53 = 0\n        var primesSum54\
    \ = 0\n        var primesSum55 = 0\n        var primesSum56 = 0\n        var primesSum57\
    \ = 0\n        var primesSum58 = 0\n        var primesSum59 = 0\n        var primesSum60\
    \ = 0\n        var primesSum61 = 0\n        var primesSum62 = 0\n        var primesSum63\
    \ = 0\n        var primesSum64 = 0\n        var primesSum65 = 0\n        var primesSum66\
    \ = 0\n        var primesSum67 = 0\n        var primesSum68 = 0\n        var primesSum69\
    \ = 0\n        var primesSum70 = 0\n        var primesSum71 = 0\n", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while(primes.size\
    \ < n) {\n            primes += i\n            i += 1\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    primes += j\n                }\n            }\n         \
    \   if(primes.contains(i)){\n                count += 1\n            }\n     \
    \   }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val counter = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer(n)\n\
    \        val limit = n / 2\n        while (primes.size < limit) {\n          \
    \  val nextPrime = primes.last\n            if (nextPrime == 1) {\n          \
    \      primes += nextPrime\n                counter += nextPrime\n           \
    \ } else {\n                val nextPrimes = primes.takeWhile(p => p < nextPrime)\n\
    \                val nextCounter = counter.takeWhile(p => p < nextPrime)\n   \
    \             val nextResult = result.takeWhile(p => p < nextPrime)\n        \
    \        val nextLimit = nextPrime * 2\n                nextPrimes foreach { p\
    \ =>\n                    if (nextCounter.contains(p)) {\n                   \
    \     nextResult += p\n                        nextCounter -= p\n            \
    \        }\n                }\n                primes += nextPrime\n         \
    \       counter += nextPrime\n                result += nextPrime\n          \
    \      counter -= nextPrime\n                result -= nextPrime\n           \
    \ }\n        }\n        result", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to\
    \ n) {\n            if (primes.contains(i)) {\n                primes += i\n \
    \               result += i\n            }\n        }\n        result", "    \
    \    val primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i\
    \ <= n) {\n            if (primes.contains(i)) {\n                primes += i\n\
    \                i += 1\n            } else {\n                i += 1\n      \
    \      }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while(primes.size < n){\n            val prime\
    \ = primes.last\n            primes ++= primes.dropWhile(x => x % prime == 0)\n\
    \            count += 1\n        }\n        primes.take(n).toList", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        var prime = 1\n        var count =\
    \ 0\n        while (primes.size < n) {\n            if (prime % primes.size ==\
    \ 0) {\n                primes += prime\n                count += 1\n        \
    \    }\n            prime += 1\n        }\n        primes.take(n)", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        for (i <- 2 to n) {\n         \
    \   if (isPrime(i)) {\n                primes += i\n            }\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  val counter = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        val limit = n / 2\n        val counter2 = limit / 2\n        val limit2\
    \ = limit / 2\n        val limit3 = limit / 2\n        val limit4 = limit / 2\n\
    \        val limit5 = limit / 2\n        val limit6 = limit / 2\n        val limit7\
    \ = limit / 2\n        val limit8 = limit / 2\n        val limit9 = limit / 2\n\
    \        val limit10 = limit / 2\n        val limit11 = limit / 2\n        val\
    \ limit12 = limit / 2\n        val limit13 = limit / 2\n        val limit14 =\
    \ limit / 2\n        val limit15 = limit / 2\n        val limit16 = limit / 2\n\
    \        val limit17 = limit / 2\n        val limit18 = limit / 2\n        val\
    \ limit19 = limit / 2\n        val limit20 = limit / 2\n        val limit21 =\
    \ limit / 2\n        val limit22 = limit / 2\n        val limit23 = limit / 2\n\
    \        val limit24 = limit / 2\n        val limit25 = limit / 2\n        val\
    \ limit26 = limit / 2\n        val limit27 = limit / 2\n        val limit28 =\
    \ limit / 2\n        val limit29 = limit / 2\n        val limit30 = limit / 2\n\
    \        val limit31 = limit / 2\n        val limit32 = limit / 2\n        val\
    \ limit33 = limit / 2\n        val limit34 = limit / 2\n        val limit35 =\
    \ limit / 2\n        val limit36 = limit / 2\n        val limit37 = limit / 2\n\
    \        val limit38 = limit / 2\n        val limit39 = limit / 2\n        val\
    \ limit40 = limit / 2\n        val limit41 = limit / 2\n        val limit42 =\
    \ limit / 2\n        val limit43 = limit / 2\n        val limit44 = limit / 2\n\
    \        val limit45 = limit / 2\n        val limit46 = limit / 2\n        val\
    \ limit47 = limit / 2\n        val limit48 = limit / 2\n        val limit49 =\
    \ limit / 2\n        val limit50 = limit / 2\n        val limit51 = limit / 2\n\
    \        val limit52 = limit / 2\n        val limit53 = limit / 2\n        val\
    \ limit54 = limit / 2", "        var primes = mutable.ArrayBuffer(2)\n       \
    \ var primesCount = 0\n        var primesSum = 0\n        var primesSum2 = 0\n\
    \        var primesSum3 = 0\n        var primesSum4 = 0\n        var primesSum5\
    \ = 0\n        var primesSum6 = 0\n        var primesSum7 = 0\n        var primesSum8\
    \ = 0\n        var primesSum9 = 0\n        var primesSum10 = 0\n        var primesSum11\
    \ = 0\n        var primesSum12 = 0\n        var primesSum13 = 0\n        var primesSum14\
    \ = 0\n        var primesSum15 = 0\n        var primesSum16 = 0\n        var primesSum17\
    \ = 0\n        var primesSum18 = 0\n        var primesSum19 = 0\n        var primesSum20\
    \ = 0\n        var primesSum21 = 0\n        var primesSum22 = 0\n        var primesSum23\
    \ = 0\n        var primesSum24 = 0\n        var primesSum25 = 0\n        var primesSum26\
    \ = 0\n        var primesSum27 = 0\n        var primesSum28 = 0\n        var primesSum29\
    \ = 0\n        var primesSum30 = 0\n        var primesSum31 = 0\n        var primesSum32\
    \ = 0\n        var primesSum33 = 0\n        var primesSum34 = 0\n        var primesSum35\
    \ = 0\n        var primesSum36 = 0\n        var primesSum37 = 0\n        var primesSum38\
    \ = 0\n        var primesSum39 = 0\n        var primesSum40 = 0\n        var primesSum41\
    \ = 0\n        var primesSum42 = 0\n        var primesSum43 = 0\n        var primesSum44\
    \ = 0\n        var primesSum45 = 0\n        var primesSum46 = 0\n        var primesSum47\
    \ = 0\n        var primesSum48 = 0\n        var primesSum49 = 0\n        var primesSum50\
    \ = 0\n        var primesSum51 = 0\n        var primesSum52 = 0\n        var primesSum53\
    \ = 0\n        var primesSum54 = 0\n        var primesSum55 = 0\n        var primesSum56\
    \ = 0\n        var primesSum57 = 0\n        var primesSum58 = 0\n        var primesSum59\
    \ = 0\n        var primesSum60 = 0\n        var primesSum61 = 0\n        var primesSum62\
    \ = 0\n        var primesSum63 = 0\n        var primesSum64 = 0\n        var primesSum65\
    \ = 0\n        var primesSum66 = 0\n        var primesSum67 = 0\n        var primesSum68\
    \ = 0\n        var primesSum69 = 0\n        var primesSum70 = 0\n        var primesSum71\
    \ = 0\n        var ", "        val primes = mutable.ArrayBuffer(2)\n        var\
    \ i = 2\n        while (i <= n) {\n            if (primes.contains(i)) {\n   \
    \             primes += i\n            }\n            i += 1\n        }\n    \
    \    primes.toList", "        var primes = mutable.ArrayBuffer.empty[Long]\n \
    \       var i = 2\n        while (i < n) {\n            if (primes.contains(i))\
    \ {\n                i += 1\n            } else {\n                primes += i\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var primesCount = 0\n        var primesIndex = 0\n        var primesIndex2\
    \ = 0\n        var primesIndex3 = 0\n        var primesIndex4 = 0\n        var\
    \ primesIndex5 = 0\n        var primesIndex6 = 0\n        var primesIndex7 = 0\n\
    \        var primesIndex8 = 0\n        var primesIndex9 = 0\n        var primesIndex10\
    \ = 0\n        var primesIndex11 = 0\n        var primesIndex12 = 0\n        var\
    \ primesIndex13 = 0\n        var primesIndex14 = 0\n        var primesIndex15\
    \ = 0\n        var primesIndex16 = 0\n        var primesIndex17 = 0\n        var\
    \ primesIndex18 = 0\n        var primesIndex19 = 0\n        var primesIndex20\
    \ = 0\n        var primesIndex21 = 0\n        var primesIndex22 = 0\n        var\
    \ primesIndex23 = 0\n        var primesIndex24 = 0\n        var primesIndex25\
    \ = 0\n        var primesIndex26 = 0\n        var primesIndex27 = 0\n        var\
    \ primesIndex28 = 0\n        var primesIndex29 = 0\n        var primesIndex30\
    \ = 0\n        var primesIndex31 = 0\n        var primesIndex32 = 0\n        var\
    \ primesIndex33 = 0\n        var primesIndex34 = 0\n        var primesIndex35\
    \ = 0\n        var primesIndex36 = 0\n        var primesIndex37 = 0\n        var\
    \ primesIndex38 = 0\n        var primesIndex39 = 0\n        var primesIndex40\
    \ = 0\n        var primesIndex41 = 0\n        var primesIndex42 = 0\n        var\
    \ primesIndex43 = 0\n        var primesIndex44 = 0\n        var primesIndex45\
    \ = 0\n        var primesIndex46 = 0\n        var primesIndex47 = 0\n        var\
    \ primesIndex48 = 0\n        var primesIndex49 = 0\n        var primesIndex50\
    \ = 0\n        var primesIndex51 = 0\n        var primesIndex52 = 0\n        var\
    \ primesIndex53 = 0\n        var primesIndex54 = 0\n        var primesIndex55\
    \ = 0\n        var primesIndex56 = 0\n        var primesIndex57 = 0\n        var\
    \ primesIndex58 = 0\n        var primesIndex59 = 0\n        var primesIndex60\
    \ = 0\n        var primesIndex61 = 0\n        var primesIndex62 = 0\n        var\
    \ primesIndex63 = 0\n        var primesIndex64 = 0\n        var primesIndex65\
    \ = 0\n        var primesIndex66 = 0\n        var primesIndex67 = 0\n        var\
    \ primesIndex68 = 0\n        var primesIndex69 = 0\n        var primesIndex70\
    \ = 0\n        var primesIndex71 = 0\n", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n) {\n            for(j <- primes.takeWhile(_\
    \ <= i).toList if i % j == 0) {\n                count += 1\n                primes\
    \ += j\n            }\n        }\n        primes.take(count).toList", "      \
    \  val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        var prime\
    \ = 1\n        while (count < n) {\n            prime = primes.last\n        \
    \    primes = primes.dropWhile(p => p < prime)\n            primes = primes.takeWhile(p\
    \ => p <= n)\n            count = primes.last\n            primes = primes.dropWhile(p\
    \ => p < prime)\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var prime = 1\n        while(primes.size < n){\n            prime = prime\
    \ + 1\n            primes = primes ++ List(prime)\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    primes += j\n                    count += 1\n           \
    \         break\n                }\n            }\n        }\n        primes.take(count).toList",
  "        val primes = mutable.ArrayBuffer.empty[Long]\n        val counter = mutable.ArrayBuffer.empty[Long]\n\
    \        val primeFactors = mutable.ArrayBuffer.empty[Long]\n        val isPrime\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactor = mutable.ArrayBuffer.empty[Boolean]\n\
    \        val isPrimeFactors = mutable.ArrayBuffer.empty[Boolean]\n        val\
    \ isPrimeFactorsUpTo = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUp\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAndDown\
    \ = mutable.ArrayBuffer.empty[Boolean]\n        val isPrimeFactorsUpToAndDownAndUpAndDownAndUpAndDownAndUpAndDownAndUpAnd",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        while\
    \ (count < n) {\n            val isPrime = true\n            primes.foreach {\
    \ prime =>\n                if (n % prime == 0) {\n                    isPrime\
    \ = false\n                }\n            }\n            if (isPrime) {\n    \
    \            count += 1\n                primes += n\n            }\n        }\n\
    \        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n      \
    \  var count = 0\n        var prime = 1\n        while (primes.size < n) {\n \
    \           prime = primes.last\n            primes = primes.filter(_ % prime\
    \ != 0)\n            count += 1\n        }\n        primes.take(n)", "       \
    \ val primes = mutable.ArrayBuffer(2)\n        val counter = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer(2)\n        val counters = mutable.ArrayBuffer(2)\n\
    \        val countersPrimes = mutable.ArrayBuffer(2)\n        val countersPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n\
    \        val countersPrimesPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n     \
    \   val countersPrimesPrimesPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n    \
    \    val countersPrimesPrimesPrimesPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n\
    \        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n\
    \        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes = mutable.ArrayBuffer(2)\n\
    \        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = mutable.ArrayBuffer(2)\n        val countersPrimesPrimesPrimesPrimesPrimesPrimesPrimesPrimes",
  "        val primes = mutable.ArrayBuffer(2)\n        var primeCount = 0\n     \
    \   for(i <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j\
    \ == 0){\n                    primeCount += 1\n                    primes += j\n\
    \                }\n            }\n        }\n        primes.toList", "      \
    \  val primes = mutable.ArrayBuffer(2)\n        var primesCount = 0\n        var\
    \ primesIndex = 0\n        var primesIndex2 = 0\n        var primesIndex3 = 0\n\
    \        var primesIndex4 = 0\n        var primesIndex5 = 0\n        var primesIndex6\
    \ = 0\n        var primesIndex7 = 0\n        var primesIndex8 = 0\n        var\
    \ primesIndex9 = 0\n        var primesIndex10 = 0\n        var primesIndex11 =\
    \ 0\n        var primesIndex12 = 0\n        var primesIndex13 = 0\n        var\
    \ primesIndex14 = 0\n        var primesIndex15 = 0\n        var primesIndex16\
    \ = 0\n        var primesIndex17 = 0\n        var primesIndex18 = 0\n        var\
    \ primesIndex19 = 0\n        var primesIndex20 = 0\n        var primesIndex21\
    \ = 0\n        var primesIndex22 = 0\n        var primesIndex23 = 0\n        var\
    \ primesIndex24 = 0\n        var primesIndex25 = 0\n        var primesIndex26\
    \ = 0\n        var primesIndex27 = 0\n        var primesIndex28 = 0\n        var\
    \ primesIndex29 = 0\n        var primesIndex30 = 0\n        var primesIndex31\
    \ = 0\n        var primesIndex32 = 0\n        var primesIndex33 = 0\n        var\
    \ primesIndex34 = 0\n        var primesIndex35 = 0\n        var primesIndex36\
    \ = 0\n        var primesIndex37 = 0\n        var primesIndex38 = 0\n        var\
    \ primesIndex39 = 0\n        var primesIndex40 = 0\n        var primesIndex41\
    \ = 0\n        var primesIndex42 = 0\n        var primesIndex43 = 0\n        var\
    \ primesIndex44 = 0\n        var primesIndex45 = 0\n        var primesIndex46\
    \ = 0\n        var primesIndex47 = 0\n        var primesIndex48 = 0\n        var\
    \ primesIndex49 = 0\n        var primesIndex50 = 0\n        var primesIndex51\
    \ = 0\n        var primesIndex52 = 0\n        var primesIndex53 = 0\n        var\
    \ primesIndex54 = 0\n        var primesIndex55 = 0\n        var primesIndex56\
    \ = 0\n        var primesIndex57 = 0\n        var primesIndex58 = 0\n        var\
    \ primesIndex59 = 0\n        var primesIndex60 = 0\n        var primesIndex61\
    \ = 0\n        var primesIndex62 = 0\n        var primesIndex63 = 0\n        var\
    \ primesIndex64 = 0\n        var primesIndex65 = 0\n        var primesIndex66\
    \ = 0\n        var primesIndex67 = 0\n        var primesIndex68 = 0\n        var\
    \ primesIndex69 = 0\n        var primesIndex70 = 0\n        var primesIndex71\
    \ = 0\n", "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n\
    \        var isPrime = true\n        var prime = primes.last\n        while (count\
    \ < n && isPrime) {\n            prime = primes.last\n            primes = primes.dropRight(1)\n\
    \            isPrime = true\n            primes.foreach { p =>\n             \
    \   if (n % p == 0) {\n                    isPrime = false\n                }\n\
    \            }\n            if (isPrime) {\n                count += 1\n     \
    \           primes += prime\n            }\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n by 2){\n            for(j <- 2 to i by 2){\n                if(i %\
    \ j == 0){\n                    primes += j\n                    count += 1\n\
    \                    break\n                }\n            }\n        }\n    \
    \    primes.take(count).toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while(primes.size < n) {\n            val nextPrime\
    \ = primes.last\n            primes = primes.filter(_ % nextPrime != 0)\n    \
    \        count += 1\n        }\n        primes.take(n)", "        val primes =\
    \ mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 2 to n by 2){\n            for(j <- primes.lastOption to i by\
    \ 2){\n                if(i % j == 0){\n                    primes += j\n    \
    \                break\n                }\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var counter = 2\n        while (counter <\
    \ n) {\n            if (primes.contains(counter)) {\n                primes +=\
    \ counter\n                counter += 1\n            } else {\n              \
    \  val isPrime = counter.forall(x => x % _ == 0)\n                if (isPrime)\
    \ {\n                    primes += counter\n                    counter += 1\n\
    \                }\n            }\n        }\n        primes.toList", "      \
    \  val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i <-\
    \ 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n \
    \                   primes += j\n                }\n            }\n          \
    \  if(primes.contains(i)){\n                count += 1\n            }\n      \
    \  }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n \
    \       var primesCount = 0\n        for(i <- 2 to n){\n            for(j <- 2\
    \ to i){\n                if(i % j == 0){\n                    primesCount +=\
    \ 1\n                    primes += j\n                }\n            }\n     \
    \   }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \      }\n            }\n        }\n        primes.takeWhile(p => p < n).reverse.takeWhile(p\
    \ => p < n).reverse.toList", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (isPrime(i)) {\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       primes.toList", "        val primes = mutable.ArrayBuffer(2)\n       \
    \ var count = 0\n        while (primes.size < n) {\n            val nextPrime\
    \ = primes.last\n            primes = primes.filter(_ % nextPrime != 0)\n    \
    \        count += 1\n        }\n        primes.take(n)", "        val primes =\
    \ mutable.ArrayBuffer(2)\n        var count = 0\n        var prime = 1\n     \
    \   while (count < n) {\n            if (primes.contains(prime)) {\n         \
    \       count += 1\n            } else {\n                primes += prime\n  \
    \              count += 1\n            }\n            prime += 1\n        }\n\
    \        primes.toList", "        val primes = mutable.ListBuffer[Long]()\n  \
    \      var i = 2L\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                primes += i\n            } else {\n                primes\
    \ += i\n                i += 1\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (isPrime(i)) {\n                primes += i\n   \
    \         }\n            i += 1\n        }\n        primes.toList", "        val\
    \ primes = mutable.ListBuffer[Long]()\n        for (i <- 2 to n by 2) {\n    \
    \        if (n % i == 0) {\n                primes += i\n            }\n     \
    \   }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while (count < n) {\n            val nextPrime\
    \ = primes.last\n            if (nextPrime < n) {\n                primes += nextPrime\n\
    \                count += 1\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ListBuffer[Long]()\n        var i = 2\n        while\
    \ (i <= n) {\n            if (isPrime(i)) {\n                primes += i\n   \
    \         }\n            i += 1\n        }\n        primes.toList", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesArray = mutable.ArrayBuffer(2)\n        val primesArraySet\
    \ = mutable.Set[Long]()\n        val primesArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArray = mutable.ArrayBuffer(2)\n        val\
    \ primesArrayArrayArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n      \
    \  val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArrayArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n \
    \       val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n       \
    \ val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n   \
    \     val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n    \
    \    val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()", " \
    \       val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n) {\n            val isPrime = true\n            primes.foreach\
    \ { p =>\n                if (i % p == 0) isPrime = false\n            }\n   \
    \         if (isPrime) result += i\n        }\n        result.toList", "     \
    \   val primes = mutable.ArrayBuffer(2)\n        val primesFound = mutable.ArrayBuffer(2)\n\
    \        val primesFound2 = mutable.ArrayBuffer(2)\n        val primesFound3 =\
    \ mutable.ArrayBuffer(2)\n        val primesFound4 = mutable.ArrayBuffer(2)\n\
    \        val primesFound5 = mutable.ArrayBuffer(2)\n        val primesFound6 =\
    \ mutable.ArrayBuffer(2)\n        val primesFound7 = mutable.ArrayBuffer(2)\n\
    \        val primesFound8 = mutable.ArrayBuffer(2)\n        val primesFound9 =\
    \ mutable.ArrayBuffer(2)\n        val primesFound10 = mutable.ArrayBuffer(2)\n\
    \        val primesFound11 = mutable.ArrayBuffer(2)\n        val primesFound12\
    \ = mutable.ArrayBuffer(2)\n        val primesFound13 = mutable.ArrayBuffer(2)\n\
    \        val primesFound14 = mutable.ArrayBuffer(2)\n        val primesFound15\
    \ = mutable.ArrayBuffer(2)\n        val primesFound16 = mutable.ArrayBuffer(2)\n\
    \        val primesFound17 = mutable.ArrayBuffer(2)\n        val primesFound18\
    \ = mutable.ArrayBuffer(2)\n        val primesFound19 = mutable.ArrayBuffer(2)\n\
    \        val primesFound20 = mutable.ArrayBuffer(2)\n        val primesFound21\
    \ = mutable.ArrayBuffer(2)\n        val primesFound22 = mutable.ArrayBuffer(2)\n\
    \        val primesFound23 = mutable.ArrayBuffer(2)\n        val primesFound24\
    \ = mutable.ArrayBuffer(2)\n        val primesFound25 = mutable.ArrayBuffer(2)\n\
    \        val primesFound26 = mutable.ArrayBuffer(2)\n        val primesFound27\
    \ = mutable.ArrayBuffer(2)\n        val primesFound28 = mutable.ArrayBuffer(2)\n\
    \        val primesFound29 = mutable.ArrayBuffer(2)\n        val primesFound30\
    \ = mutable.ArrayBuffer(2)\n        val primesFound31 = mutable.ArrayBuffer(2)\n\
    \        val primesFound32 = mutable.ArrayBuffer(2)\n        val primesFound33\
    \ = mutable.ArrayBuffer(2)\n        val primesFound34 = mutable.ArrayBuffer(2)\n\
    \        val primesFound35 = mutable.ArrayBuffer(2)\n        val primesFound36\
    \ = mutable.ArrayBuffer(2)\n        val primesFound37 = mutable.ArrayBuffer(2)\n\
    \        val primesFound38 = mutable.ArrayBuffer(2)\n        val primesFound39\
    \ = mutable.ArrayBuffer(2)\n        val primesFound40 = ", "        var primes\
    \ = mutable.ArrayBuffer(2)\n        var primesCount = 0\n        var primesSum\
    \ = 0\n        var primesSum2 = 0\n        var primesSum3 = 0\n        var primesSum4\
    \ = 0\n        var primesSum5 = 0\n        var primesSum6 = 0\n        var primesSum7\
    \ = 0\n        var primesSum8 = 0\n        var primesSum9 = 0\n        var primesSum10\
    \ = 0\n        var primesSum11 = 0\n        var primesSum12 = 0\n        var primesSum13\
    \ = 0\n        var primesSum14 = 0\n        var primesSum15 = 0\n        var primesSum16\
    \ = 0\n        var primesSum17 = 0\n        var primesSum18 = 0\n        var primesSum19\
    \ = 0\n        var primesSum20 = 0\n        var primesSum21 = 0\n        var primesSum22\
    \ = 0\n        var primesSum23 = 0\n        var primesSum24 = 0\n        var primesSum25\
    \ = 0\n        var primesSum26 = 0\n        var primesSum27 = 0\n        var primesSum28\
    \ = 0\n        var primesSum29 = 0\n        var primesSum30 = 0\n        var primesSum31\
    \ = 0\n        var primesSum32 = 0\n        var primesSum33 = 0\n        var primesSum34\
    \ = 0\n        var primesSum35 = 0\n        var primesSum36 = 0\n        var primesSum37\
    \ = 0\n        var primesSum38 = 0\n        var primesSum39 = 0\n        var primesSum40\
    \ = 0\n        var primesSum41 = 0\n        var primesSum42 = 0\n        var primesSum43\
    \ = 0\n        var primesSum44 = 0\n        var primesSum45 = 0\n        var primesSum46\
    \ = 0\n        var primesSum47 = 0\n        var primesSum48 = 0\n        var primesSum49\
    \ = 0\n        var primesSum50 = 0\n        var primesSum51 = 0\n        var primesSum52\
    \ = 0\n        var primesSum53 = 0\n        var primesSum54 = 0\n        var primesSum55\
    \ = 0\n        var primesSum56 = 0\n        var primesSum57 = 0\n        var primesSum58\
    \ = 0\n        var primesSum59 = 0\n        var primesSum60 = 0\n        var primesSum61\
    \ = 0\n        var primesSum62 = 0\n        var primesSum63 = 0\n        var primesSum64\
    \ = 0\n        var primesSum65 = 0\n        var primesSum66 = 0\n        var primesSum67\
    \ = 0\n        var primesSum68 = 0\n        var primesSum69 = 0\n        var primesSum70\
    \ = 0\n        var primesSum71 = 0\n        var ", "        val primes = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val i = 2\n   \
    \     while (i <= n) {\n            if (primes.contains(i)) {\n              \
    \  result += i\n                primes += i\n            }\n            i += 1\n\
    \        }\n        result", "        val primes = mutable.ArrayBuffer(2)\n  \
    \      var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \      }\n            }\n        }\n        primes.takeWhile(_ < n).reverse.take(n).toList",
  "        val primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i <- 2 to n){\n\
    \            for(j <- primes.iterator; j <- primes.iterator + 2){\n          \
    \      if(i % j == 0){\n                    primes = primes.updated(j, i)\n  \
    \                  count = count + 1\n                    break\n            \
    \    }\n            }\n        }\n        primes.take(count).toList", "      \
    \  val primes = mutable.ArrayBuffer(2)\n        var primeCount = 0\n        for(i\
    \ <- 2 to n by 2){\n            primeCount += 1\n            val isPrime = true\n\
    \            for(j <- primes.indices; j <- primes.indices){\n                if(i\
    \ % primes(j) == 0){\n                    isPrime = false\n                  \
    \  break\n                }\n            }\n            if(isPrime){\n       \
    \         primes += i\n            }\n        }\n        primes.take(n)", "  \
    \      val primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        var prime = 1\n   \
    \     while (count < n) {\n            prime = primes.last\n            if (prime\
    \ == 0 || prime == 1) {\n                prime = primes.last\n            }\n\
    \            if (n % prime == 0) {\n                primes = primes :+ prime\n\
    \                count += 1\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for\
    \ (i <- 2 to n) {\n            if (primes.contains(i)) {\n                count\
    \ += 1\n                primes = primes.filterNot(_ == i)\n            } else\
    \ {\n                primes = primes :+ i\n            }\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 2 to n){\n            for(j <- primes.iterator; j <- primes.iterator){\n\
    \                if(i % j == 0){\n                    primes.clear()\n       \
    \             result.clear()\n                    break\n                }\n \
    \           }\n            primes += i\n            result += i\n        }\n \
    \       result.toList", "        val primes = mutable.ArrayBuffer(2)\n       \
    \ var i = 2\n        while(i < n){\n            primes += i\n            i +=\
    \ 2\n        }\n        primes.takeWhile(p => p < n).toList", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        val nums = mutable.ListBuffer[Long]()\n\
    \        for (i <- 2 to n) {\n            if (isPrime(i)) {\n                primes\
    \ += i\n                nums += i\n            }\n        }\n        nums.toList",
  "        val primes = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            val isPrime = true\n            val j = 2\n        \
    \    while (j <= i && isPrime) {\n                if (i % j == 0) isPrime = false\n\
    \                j += 1\n            }\n            if (isPrime) primes += i\n\
    \            i += 1\n        }\n        primes.toList", "        var primes =\
    \ mutable.ArrayBuffer(2)\n        var primesCount = 2\n        var primesIndex\
    \ = 0\n        var primesIndex2 = 0\n        var primesIndex3 = 0\n        var\
    \ primesIndex4 = 0\n        var primesIndex5 = 0\n        var primesIndex6 = 0\n\
    \        var primesIndex7 = 0\n        var primesIndex8 = 0\n        var primesIndex9\
    \ = 0\n        var primesIndex10 = 0\n        var primesIndex11 = 0\n        var\
    \ primesIndex12 = 0\n        var primesIndex13 = 0\n        var primesIndex14\
    \ = 0\n        var primesIndex15 = 0\n        var primesIndex16 = 0\n        var\
    \ primesIndex17 = 0\n        var primesIndex18 = 0\n        var primesIndex19\
    \ = 0\n        var primesIndex20 = 0\n        var primesIndex21 = 0\n        var\
    \ primesIndex22 = 0\n        var primesIndex23 = 0\n        var primesIndex24\
    \ = 0\n        var primesIndex25 = 0\n        var primesIndex26 = 0\n        var\
    \ primesIndex27 = 0\n        var primesIndex28 = 0\n        var primesIndex29\
    \ = 0\n        var primesIndex30 = 0\n        var primesIndex31 = 0\n        var\
    \ primesIndex32 = 0\n        var primesIndex33 = 0\n        var primesIndex34\
    \ = 0\n        var primesIndex35 = 0\n        var primesIndex36 = 0\n        var\
    \ primesIndex37 = 0\n        var primesIndex38 = 0\n        var primesIndex39\
    \ = 0\n        var primesIndex40 = 0\n        var primesIndex41 = 0\n        var\
    \ primesIndex42 = 0\n        var primesIndex43 = 0\n        var primesIndex44\
    \ = 0\n        var primesIndex45 = 0\n        var primesIndex46 = 0\n        var\
    \ primesIndex47 = 0\n        var primesIndex48 = 0\n        var primesIndex49\
    \ = 0\n        var primesIndex50 = 0\n        var primesIndex51 = 0\n        var\
    \ primesIndex52 = 0\n        var primesIndex53 = 0\n        var primesIndex54\
    \ = 0\n        var primesIndex55 = 0\n        var primesIndex56 = 0\n        var\
    \ primesIndex57 = 0\n        var primesIndex58 = 0\n        var primesIndex59\
    \ = 0\n        var primesIndex60 = 0\n        var primesIndex61 = 0\n        var\
    \ primesIndex62 = 0\n        var primesIndex63 = 0\n        var primesIndex64\
    \ = 0\n        var primesIndex65 = 0\n        var primesIndex66 = 0\n        var\
    \ primesIndex67 = 0\n        var primesIndex68 = 0\n        var primesIndex69\
    \ = 0\n        var primesIndex70 = 0\n        var primesIndex71 = 0\n        var ",
  "        val primes = mutable.ListBuffer(2)\n        val primesFound = mutable.ListBuffer[Long]()\n\
    \        val primesFound2 = mutable.ListBuffer[Long]()\n        val primesFound3\
    \ = mutable.ListBuffer[Long]()\n        val primesFound4 = mutable.ListBuffer[Long]()\n\
    \        val primesFound5 = mutable.ListBuffer[Long]()\n        val primesFound6\
    \ = mutable.ListBuffer[Long]()\n        val primesFound7 = mutable.ListBuffer[Long]()\n\
    \        val primesFound8 = mutable.ListBuffer[Long]()\n        val primesFound9\
    \ = mutable.ListBuffer[Long]()\n        val primesFound10 = mutable.ListBuffer[Long]()\n\
    \        val primesFound11 = mutable.ListBuffer[Long]()\n        val primesFound12\
    \ = mutable.ListBuffer[Long]()\n        val primesFound13 = mutable.ListBuffer[Long]()\n\
    \        val primesFound14 = mutable.ListBuffer[Long]()\n        val primesFound15\
    \ = mutable.ListBuffer[Long]()\n        val primesFound16 = mutable.ListBuffer[Long]()\n\
    \        val primesFound17 = mutable.ListBuffer[Long]()\n        val primesFound18\
    \ = mutable.ListBuffer[Long]()\n        val primesFound19 = mutable.ListBuffer[Long]()\n\
    \        val primesFound20 = mutable.ListBuffer[Long]()\n        val primesFound21\
    \ = mutable.ListBuffer[Long]()\n        val primesFound22 = mutable.ListBuffer[Long]()\n\
    \        val primesFound23 = mutable.ListBuffer[Long]()\n        val primesFound24\
    \ = mutable.ListBuffer[Long]()\n        val primesFound25 = mutable.ListBuffer[Long]()\n\
    \        val primesFound26 = mutable.ListBuffer[Long]()\n        val primesFound27\
    \ = mutable.ListBuffer[Long]()\n        val primesFound28 = mutable.ListBuffer[Long]()\n\
    \        val primesFound29 = mutable.ListBuffer[Long]()\n        val primesFound30\
    \ = mutable.ListBuffer[Long]()\n        val primesFound31 = mutable.ListBuffer[Long]()\n\
    \        val primesFound32 = mutable.ListBuffer[Long]()\n        val ", "    \
    \    val primes = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val primesCount2 = mutable.ArrayBuffer(2)\n        val primesCount3 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val primesCount5 = mutable.ArrayBuffer(2)\n        val primesCount6 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val primesCount8 = mutable.ArrayBuffer(2)\n        val primesCount9 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val primesCount11 = mutable.ArrayBuffer(2)\n        val primesCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val primesCount14 = mutable.ArrayBuffer(2)\n        val primesCount15\
    \ = mutable.ArrayBuffer(2)\n        val primesCount16 = mutable.ArrayBuffer(2)\n\
    \        val primesCount17 = mutable.ArrayBuffer(2)\n        val primesCount18\
    \ = mutable.ArrayBuffer(2)\n        val primesCount19 = mutable.ArrayBuffer(2)\n\
    \        val primesCount20 = mutable.ArrayBuffer(2)\n        val primesCount21\
    \ = mutable.ArrayBuffer(2)\n        val primesCount22 = mutable.ArrayBuffer(2)\n\
    \        val primesCount23 = mutable.ArrayBuffer(2)\n        val primesCount24\
    \ = mutable.ArrayBuffer(2)\n        val primesCount25 = mutable.ArrayBuffer(2)\n\
    \        val primesCount26 = mutable.ArrayBuffer(2)\n        val primesCount27\
    \ = mutable.ArrayBuffer(2)\n        val primesCount28 = mutable.ArrayBuffer(2)\n\
    \        val primesCount29 = mutable.ArrayBuffer(2)\n        val primesCount30\
    \ = mutable.ArrayBuffer(2)\n        val primesCount31 = mutable.ArrayBuffer(2)\n\
    \        val primesCount32 = mutable.ArrayBuffer(2)\n        val primesCount33\
    \ = mutable.ArrayBuffer(2)\n        val primesCount34 = mutable.ArrayBuffer(2)\n\
    \        val primesCount35 = mutable.ArrayBuffer(2)\n        val primesCount36\
    \ = mutable.ArrayBuffer(2)\n        val primesCount37 = mutable.ArrayBuffer(2)\n\
    \        val primesCount38 = mutable.ArrayBuffer(2)\n        val primesCount39\
    \ = mutable.ArrayBuffer(2)\n        val primesCount40 = mut", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var prime = 1\n        while(primes.size <\
    \ n) {\n            prime += 1\n            primes += prime\n        }\n     \
    \   primes.take(n)", "        val primes = mutable.ArrayBuffer(2)\n        var\
    \ counter = 2\n        while (counter <= n) {\n            if (primes.contains(counter))\
    \ {\n                primes += counter\n                counter += 1\n       \
    \     } else {\n                val isPrime = primes.forall(p => n % p == 0)\n\
    \                if (isPrime) {\n                    primes += counter\n     \
    \               counter += 1\n                }\n            }\n        }\n  \
    \      primes.take(n)", "        val primes = mutable.ArrayBuffer(2)\n       \
    \ var prime = 1\n        var count = 0\n        while (prime <= n) {\n       \
    \     if (n % prime == 0) {\n                primes += prime\n               \
    \ count += 1\n            }\n            prime += 1\n        }\n        primes.take(count).toList",
  "        val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n by 2) {\n            primes += i\n        }\n      \
    \  primes.foreach { p =>\n            if (n % p == 0) {\n                result.add(p)\n\
    \            }\n        }\n        result.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for (i <- 2 to n) {\n            if (primes.contains(i))\
    \ {\n                count += 1\n            } else {\n                primes\
    \ += i\n            }\n        }\n        primes.take(n)", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        for (i <- 2 to n) {\n            if (isPrime(i))\
    \ {\n                primes += i\n            }\n        }\n        primes.toList",
  "        var primes = mutable.ListBuffer[Long]()\n        var i = 2\n        while\
    \ (i <= n) {\n            if (isPrime(i)) {\n                primes += i\n   \
    \         }\n            i += 1\n        }\n        primes.toList", "        val\
    \ primes = mutable.ArrayBuffer(2)\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesSet2 = mutable.Set[Long]()\n        val primesSet3 = mutable.Set[Long]()\n\
    \        val primesSet4 = mutable.Set[Long]()\n        val primesSet5 = mutable.Set[Long]()\n\
    \        val primesSet6 = mutable.Set[Long]()\n        val primesSet7 = mutable.Set[Long]()\n\
    \        val primesSet8 = mutable.Set[Long]()\n        val primesSet9 = mutable.Set[Long]()\n\
    \        val primesSet10 = mutable.Set[Long]()\n        val primesSet11 = mutable.Set[Long]()\n\
    \        val primesSet12 = mutable.Set[Long]()\n        val primesSet13 = mutable.Set[Long]()\n\
    \        val primesSet14 = mutable.Set[Long]()\n        val primesSet15 = mutable.Set[Long]()\n\
    \        val primesSet16 = mutable.Set[Long]()\n        val primesSet17 = mutable.Set[Long]()\n\
    \        val primesSet18 = mutable.Set[Long]()\n        val primesSet19 = mutable.Set[Long]()\n\
    \        val primesSet20 = mutable.Set[Long]()\n        val primesSet21 = mutable.Set[Long]()\n\
    \        val primesSet22 = mutable.Set[Long]()\n        val primesSet23 = mutable.Set[Long]()\n\
    \        val primesSet24 = mutable.Set[Long]()\n        val primesSet25 = mutable.Set[Long]()\n\
    \        val primesSet26 = mutable.Set[Long]()\n        val primesSet27 = mutable.Set[Long]()\n\
    \        val primesSet28 = mutable.Set[Long]()\n        val primesSet29 = mutable.Set[Long]()\n\
    \        val primesSet30 = mutable.Set[Long]()\n        val primesSet31 = mutable.Set[Long]()\n\
    \        val primesSet32 = mutable.Set[Long]()\n        val primesSet33 = mutable.Set[Long]()\n\
    \        val primesSet34 = mutable.Set[Long]()\n        val primes", "       \
    \ val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer(true, true)\n        val isPrime2 =\
    \ mutable.ArrayBuffer(true, true)\n        val isPrime3 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime4 = mutable.ArrayBuffer(true, true)\n        val isPrime5\
    \ = mutable.ArrayBuffer(true, true)\n        val isPrime6 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime7 = mutable.ArrayBuffer(true, true)\n        val isPrime8\
    \ = mutable.ArrayBuffer(true, true)\n        val isPrime9 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime10 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime11 = mutable.ArrayBuffer(true, true)\n        val isPrime12 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime13 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime14 = mutable.ArrayBuffer(true, true)\n        val isPrime15 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime16 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime17 = mutable.ArrayBuffer(true, true)\n        val isPrime18 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime19 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime20 = mutable.ArrayBuffer(true, true)\n        val isPrime21 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime22 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime23 = mutable.ArrayBuffer(true, true)\n        val isPrime24 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime25 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime26 = mutable.ArrayBuffer(true, true)\n        val isPrime27 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime28 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime29 = mutable.ArrayBuffer(true, true)\n        val isPrime30 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime31 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime32 = mutable.ArrayBuffer(true, true)\n        val isPrime33 = mutable.ArrayBuffer(true,\
    \ true)\n        val isPrime34 = mutable.ArrayBuffer(true, true)\n        val\
    \ isPrime35 = mutable.ArrayBuffer(true, true)\n        val isPrime36 = mutable.ArrayBuffer(true, ",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i\
    \ <- 2 to n){\n            for(j <- 2 to i){\n                if(i % j == 0){\n\
    \                    count += 1\n                    primes += j\n           \
    \     }\n            }\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        var isPrime = true\n\
    \        var prime = primes.head\n        while(count < n && isPrime) {\n    \
    \        isPrime = true\n            prime = primes.head\n            primes.clear()\n\
    \            for(i <- 2 to prime) {\n                if(prime % i == 0) {\n  \
    \                  isPrime = false\n                    break\n              \
    \  }\n            }\n            if(isPrime) {\n                primes += prime\n\
    \                count += 1\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        while(primes.size\
    \ < n) {\n            val nextPrime = primes.last\n            primes += nextPrime\n\
    \            count += nextPrime\n        }\n        primes.take(n).toList", " \
    \       val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        while\
    \ (primes.size < n) {\n            val nextPrime = primes.last\n            val\
    \ isPrime = true\n            for (i <- primes.indices) {\n                if\
    \ (i % nextPrime == 0) {\n                    isPrime = false\n              \
    \      break\n                }\n            }\n            if (isPrime) {\n \
    \               primes += nextPrime\n                count += 1\n            }\n\
    \        }\n        primes.take(n).toList", "        var primes = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        var primesCount = 0\n        var currentPrime = 1\n        var currentPrimeCount\
    \ = 0\n        var currentPrimeIndex = 0\n        var currentPrimeIndexCount =\
    \ 0\n        var currentPrimeIndexLast = 0\n        var currentPrimeIndexLastCount\
    \ = 0\n        var currentPrimeIndexLastLast = 0\n        var currentPrimeIndexLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLast = 0\n        var currentPrimeIndexLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLast = 0\n        var currentPrimeIndexLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastLast = 0\n        var currentPrimeIndexLastLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastLastLast = 0\n        var\
    \ currentPrimeIndexLastLastLastLastLastCount = 0\n        var currentPrimeIndexLastLastLastLastLastLast\
    \ = 0\n        var currentPrimeIndexLastLastLastLastLastLastCount = 0\n      \
    \  var currentPrimeIndexLastLastLastLastLastLastLast = 0\n        var currentPrimeIndexLastLastLastLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastLastLastLastLast = 0\n   \
    \     var currentPrimeIndexLastLastLastLastLastLastLastCount = 0\n        var\
    \ currentPrimeIndexLastLastLastLastLastLastLastLast = 0\n        var currentPrimeIndexLastLastLastLastLastLastLastLastCount\
    \ = 0\n        var currentPrimeIndexLastLastLastLastLastLastLastLastLast = 0\n\
    \        var currentPrimeIndexLastLastLastLastLastLastLastLastLastCount = 0\n\
    \        var currentPrimeIndexLastLastLastLastLastLastLastLastLastLast = 0\n \
    \       var currentPrimeIndexLastLastLastLastLastLastLastLastLastCount = 0\n \
    \       var currentPrimeIndexLastLastLastLastLastLastLastLastLastLast = 0\n  \
    \      var currentPrimeIndexLastLastLastLastLastLastLastLastLastCount = 0\n  \
    \      var currentPrimeIndexLastLastLastLastLastLastLastLastLastLast = 0\n   \
    \     var currentPrimeIndexLastLastLastLastLastLastLastLastLastLastCount = 0\n\
    \        var currentPrimeIndexLastLastLastLastLastLastLastLastLastLast = 0\n \
    \       var currentPrimeIndexLastLastLastLastLastLastLastLastLastLastCount = 0\n\
    \        var currentPrimeIndexLastLastLastLastLastLastLastLastLastLast = 0\n \
    \       var currentPrimeIndexLastLastLastLastLastLastLastLastLastLastCount = 0\n\
    \        var currentPrimeIndexLastLastLastLast", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        while(primes.size < n) {\n            val nextPrime\
    \ = primes.last\n            primes += nextPrime\n            count += nextPrime\n\
    \        }\n        primes.take(n)", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (isPrime(i)) {\n\
    \                primes += i\n            }\n            i += 1\n        }\n \
    \       primes.toList", "        val primes = mutable.ArrayBuffer(2)\n       \
    \ val count = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer(n)\n\
    \        val primesCount = mutable.ArrayBuffer(2)\n        val countCount = mutable.ArrayBuffer(2)\n\
    \        val resultCount = mutable.ArrayBuffer(n)\n        val primesCountCount\
    \ = mutable.ArrayBuffer(2)\n        val countCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCount = mutable.ArrayBuffer(n)\n        val primesCountCountCount\
    \ = mutable.ArrayBuffer(2)\n        val countCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCountCount = mutable.ArrayBuffer(n)\n        val primesCountCountCountCount\
    \ = mutable.ArrayBuffer(2)\n        val countCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCountCountCount = mutable.ArrayBuffer(n)\n        val\
    \ primesCountCountCountCountCount = mutable.ArrayBuffer(2)\n        val countCountCountCountCountCount\
    \ = mutable.ArrayBuffer(2)\n        val resultCountCountCountCountCount = mutable.ArrayBuffer(n)\n\
    \        val primesCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n \
    \       val countCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n   \
    \     val resultCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n    \
    \    val primesCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n     \
    \   val countCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n       \
    \ val resultCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n        val\
    \ primesCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n       \
    \ val countCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n    \
    \    val resultCountCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n\
    \        val primesCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val countCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n\
    \        val primesCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val countCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n\
    \        val primesCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val countCountCountCountCountCountCountCount = mutable.ArrayBuffer(2)\n\
    \        val resultCountCountCountCountCountCountCount = mutable.ArrayBuffer(n)\n\
    \        val primesCountCountCountCountCountCountCount = ", "        val primes\
    \ = mutable.ListBuffer[Long]()\n        var i = 2L\n        while (i < n) {\n\
    \            if (primes.contains(i)) {\n                i += 1\n            }\
    \ else {\n                primes += i\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        val counter = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer(n)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val counterCount = mutable.ArrayBuffer(2)\n        val resultCount =\
    \ mutable.ArrayBuffer(n)\n        val primesCount2 = mutable.ArrayBuffer(2)\n\
    \        val counterCount2 = mutable.ArrayBuffer(2)\n        val resultCount2\
    \ = mutable.ArrayBuffer(n)\n        val primesCount3 = mutable.ArrayBuffer(2)\n\
    \        val counterCount3 = mutable.ArrayBuffer(2)\n        val resultCount3\
    \ = mutable.ArrayBuffer(n)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val counterCount4 = mutable.ArrayBuffer(2)\n        val resultCount4\
    \ = mutable.ArrayBuffer(n)\n        val primesCount5 = mutable.ArrayBuffer(2)\n\
    \        val counterCount5 = mutable.ArrayBuffer(2)\n        val resultCount5\
    \ = mutable.ArrayBuffer(n)\n        val primesCount6 = mutable.ArrayBuffer(2)\n\
    \        val counterCount6 = mutable.ArrayBuffer(2)\n        val resultCount6\
    \ = mutable.ArrayBuffer(n)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val counterCount7 = mutable.ArrayBuffer(2)\n        val resultCount7\
    \ = mutable.ArrayBuffer(n)\n        val primesCount8 = mutable.ArrayBuffer(2)\n\
    \        val counterCount8 = mutable.ArrayBuffer(2)\n        val resultCount8\
    \ = mutable.ArrayBuffer(n)\n        val primesCount9 = mutable.ArrayBuffer(2)\n\
    \        val counterCount9 = mutable.ArrayBuffer(2)\n        val resultCount9\
    \ = mutable.ArrayBuffer(n)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val counterCount10 = mutable.ArrayBuffer(2)\n        val resultCount10\
    \ = mutable.ArrayBuffer(n)\n        val primesCount11 = mutable.ArrayBuffer(2)\n\
    \        val counterCount11 = mutable.ArrayBuffer(2)\n        val resultCount11\
    \ = mutable.ArrayBuffer(n)\n        val primesCount12 = mutable.ArrayBuffer(2)\n\
    \        val counterCount12 = mutable.ArrayBuffer(2)\n        val resultCount12\
    \ = mutable.ArrayBuffer(n)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val counterCount13 = mutable.ArrayBuffer(2)\n        val resultCount13\
    \ = mutable.ArrayBuffer(n)\n        val primesCount14 = mutable.ArrayBuffer(2)\n\
    \        val counterCount14 = mutable.ArrayBuffer(2)\n        val resultCount14\
    \ = mutable.ArrayBuffer(n)\n        val primes", "        val primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i <= n) {\n            if (primes.contains(i))\
    \ {\n                i += 1\n            } else {\n                primes += i\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        for(i <- 2 to n){\n            for(j <- 2 to i){\n\
    \                if(i % j == 0){\n                    primes += j\n          \
    \      }\n            }\n        }\n        primes.toList", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i <- 2 to n){\n\
    \            for(j <- 2 to i){\n                if(i % j == 0){\n            \
    \        count = count + 1\n                    primes = primes ++ List(j)\n \
    \               }\n            }\n        }\n        primes.toList", "       \
    \ val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        while(primes.size\
    \ < n) {\n            val p = primes.last\n            primes += p\n         \
    \   count += p\n            if(p * p > n) break\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        val primesSet = mutable.Set[Long]()\n\
    \        val primesArray = mutable.ArrayBuffer(2)\n        val primesArraySet\
    \ = mutable.Set[Long]()\n        val primesArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArray = mutable.ArrayBuffer(2)\n        val\
    \ primesArrayArrayArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n      \
    \  val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n        val primesArrayArrayArrayArrayArrayArray\
    \ = mutable.ArrayBuffer(2)\n        val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n\
    \        val primesArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n \
    \       val primesArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n       \
    \ val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n   \
    \     val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n    \
    \    val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()\n \
    \       val primesArrayArrayArrayArrayArrayArrayArray = mutable.ArrayBuffer(2)\n\
    \        val primesArrayArrayArrayArrayArrayArraySet = mutable.Set[Long]()", " \
    \       val primes = mutable.ArrayBuffer(2)\n        val count = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer.empty[Long]\n        val limit = n /\
    \ 2\n        while (primes.size < limit) {\n            val nextPrime = primes.last\n\
    \            if (nextPrime == 2) {\n                primes += nextPrime\n    \
    \            count += 2\n            } else {\n                val nextPrimes\
    \ = primes.takeWhile(p => p < nextPrime)\n                val nextCount = count.takeWhile(p\
    \ => p < nextPrime)\n                if (nextPrimes.forall(p => nextCount.forall(c\
    \ => p % c == 0))) result += (nextPrimes.last + nextCount.last)\n            \
    \    primes += nextPrime\n                count += nextCount\n            }\n\
    \        }\n        result", "        val primes = mutable.ArrayBuffer(2)\n  \
    \      val primesCount = mutable.ArrayBuffer(2)\n        val primesCount2 = mutable.ArrayBuffer(2)\n\
    \        val primesCount3 = mutable.ArrayBuffer(2)\n        val primesCount4 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount5 = mutable.ArrayBuffer(2)\n\
    \        val primesCount6 = mutable.ArrayBuffer(2)\n        val primesCount7 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount8 = mutable.ArrayBuffer(2)\n\
    \        val primesCount9 = mutable.ArrayBuffer(2)\n        val primesCount10\
    \ = mutable.ArrayBuffer(2)\n        val primesCount11 = mutable.ArrayBuffer(2)\n\
    \        val primesCount12 = mutable.ArrayBuffer(2)\n        val primesCount13\
    \ = mutable.ArrayBuffer(2)\n        val primesCount14 = mutable.ArrayBuffer(2)\n\
    \        val primesCount15 = mutable.ArrayBuffer(2)\n        val primesCount16\
    \ = mutable.ArrayBuffer(2)\n        val primesCount17 = mutable.ArrayBuffer(2)\n\
    \        val primesCount18 = mutable.ArrayBuffer(2)\n        val primesCount19\
    \ = mutable.ArrayBuffer(2)\n        val primesCount20 = mutable.ArrayBuffer(2)\n\
    \        val primesCount21 = mutable.ArrayBuffer(2)\n        val primesCount22\
    \ = mutable.ArrayBuffer(2)\n        val primesCount23 = mutable.ArrayBuffer(2)\n\
    \        val primesCount24 = mutable.ArrayBuffer(2)\n        val primesCount25\
    \ = mutable.ArrayBuffer(2)\n        val primesCount26 = mutable.ArrayBuffer(2)\n\
    \        val primesCount27 = mutable.ArrayBuffer(2)\n        val primesCount28\
    \ = mutable.ArrayBuffer(2)\n        val primesCount29 = mutable.ArrayBuffer(2)\n\
    \        val primesCount30 = mutable.ArrayBuffer(2)\n        val primesCount31\
    \ = mutable.ArrayBuffer(2)\n        val primesCount32 = mutable.ArrayBuffer(2)\n\
    \        val primesCount33 = mutable.ArrayBuffer(2)\n        val primesCount34\
    \ = mutable.ArrayBuffer(2)\n        val primesCount35 = mutable.ArrayBuffer(2)\n\
    \        val primesCount36 = mutable.ArrayBuffer(2)\n        val primesCount37\
    \ = mutable.ArrayBuffer(2)\n        val primesCount38 = mutable.ArrayBuffer(2)\n\
    \        val primesCount39 = mutable.ArrayBuffer(2)\n        val primesCount40\
    \ = mut", "        val primes = mutable.ArrayBuffer(2)\n        val primesCount\
    \ = mutable.ArrayBuffer(2)\n        val primesCount2 = mutable.ArrayBuffer(2)\n\
    \        val primesCount3 = mutable.ArrayBuffer(2)\n        val primesCount4 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount5 = mutable.ArrayBuffer(2)\n\
    \        val primesCount6 = mutable.ArrayBuffer(2)\n        val primesCount7 =\
    \ mutable.ArrayBuffer(2)\n        val primesCount8 = mutable.ArrayBuffer(2)\n\
    \        val primesCount9 = mutable.ArrayBuffer(2)\n        val primesCount10\
    \ = mutable.ArrayBuffer(2)\n        val primesCount11 = mutable.ArrayBuffer(2)\n\
    \        val primesCount12 = mutable.ArrayBuffer(2)\n        val primesCount13\
    \ = mutable.ArrayBuffer(2)\n        val primesCount14 = mutable.ArrayBuffer(2)\n\
    \        val primesCount15 = mutable.ArrayBuffer(2)\n        val primesCount16\
    \ = mutable.ArrayBuffer(2)\n        val primesCount17 = mutable.ArrayBuffer(2)\n\
    \        val primesCount18 = mutable.ArrayBuffer(2)\n        val primesCount19\
    \ = mutable.ArrayBuffer(2)\n        val primesCount20 = mutable.ArrayBuffer(2)\n\
    \        val primesCount21 = mutable.ArrayBuffer(2)\n        val primesCount22\
    \ = mutable.ArrayBuffer(2)\n        val primesCount23 = mutable.ArrayBuffer(2)\n\
    \        val primesCount24 = mutable.ArrayBuffer(2)\n        val primesCount25\
    \ = mutable.ArrayBuffer(2)\n        val primesCount26 = mutable.ArrayBuffer(2)\n\
    \        val primesCount27 = mutable.ArrayBuffer(2)\n        val primesCount28\
    \ = mutable.ArrayBuffer(2)\n        val primesCount29 = mutable.ArrayBuffer(2)\n\
    \        val primesCount30 = mutable.ArrayBuffer(2)\n        val primesCount31\
    \ = mutable.ArrayBuffer(2)\n        val primesCount32 = mutable.ArrayBuffer(2)\n\
    \        val primesCount33 = mutable.ArrayBuffer(2)\n        val primesCount34\
    \ = mutable.ArrayBuffer(2)\n        val primesCount35 = mutable.ArrayBuffer(2)\n\
    \        val primesCount36 = mutable.ArrayBuffer(2)\n        val primesCount37\
    \ = mutable.ArrayBuffer(2)\n        val primesCount38 = mutable.ArrayBuffer(2)\n\
    \        val primesCount39 = mutable.ArrayBuffer(2)\n        val primesCount40\
    \ = mut", "        val primes = mutable.ArrayBuffer(2)\n        var i = 2\n  \
    \      while (i <= n) {\n            if (primes.contains(i)) {\n             \
    \   primes += i\n            }\n            i += 1\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var prime = 1\n        var\
    \ count = 0\n        while(primes.size < n) {\n            prime = primes.last\n\
    \            primes = primes.filter(_ != prime)\n            val isPrime = primes.forall(x\
    \ => x % prime == 0)\n            if(isPrime) {\n                count += 1\n\
    \                primes += prime\n            }\n        }\n        primes.take(n)",
  "        val primes = mutable.ArrayBuffer(2)\n        var i = 2\n        while (i\
    \ < n) {\n            if (primes.contains(i)) {\n                primes += i\n\
    \            }\n            i += 1\n        }\n        primes.toList", "     \
    \   val primes = mutable.ArrayBuffer.empty[Long]\n        for (i <- 2 to n by\
    \ 2) {\n            if (isPrime(i)) {\n                primes += i\n         \
    \   }\n        }\n        primes.toList", "        var primes = mutable.ArrayBuffer(2)\n\
    \        var primesCount = 0\n        var primesSum = 0\n        var primesSum2\
    \ = 0\n        var primesSum3 = 0\n        var primesSum4 = 0\n        var primesSum5\
    \ = 0\n        var primesSum6 = 0\n        var primesSum7 = 0\n        var primesSum8\
    \ = 0\n        var primesSum9 = 0\n        var primesSum10 = 0\n        var primesSum11\
    \ = 0\n        var primesSum12 = 0\n        var primesSum13 = 0\n        var primesSum14\
    \ = 0\n        var primesSum15 = 0\n        var primesSum16 = 0\n        var primesSum17\
    \ = 0\n        var primesSum18 = 0\n        var primesSum19 = 0\n        var primesSum20\
    \ = 0\n        var primesSum21 = 0\n        var primesSum22 = 0\n        var primesSum23\
    \ = 0\n        var primesSum24 = 0\n        var primesSum25 = 0\n        var primesSum26\
    \ = 0\n        var primesSum27 = 0\n        var primesSum28 = 0\n        var primesSum29\
    \ = 0\n        var primesSum30 = 0\n        var primesSum31 = 0\n        var primesSum32\
    \ = 0\n        var primesSum33 = 0\n        var primesSum34 = 0\n        var primesSum35\
    \ = 0\n        var primesSum36 = 0\n        var primesSum37 = 0\n        var primesSum38\
    \ = 0\n        var primesSum39 = 0\n        var primesSum40 = 0\n        var primesSum41\
    \ = 0\n        var primesSum42 = 0\n        var primesSum43 = 0\n        var primesSum44\
    \ = 0\n        var primesSum45 = 0\n        var primesSum46 = 0\n        var primesSum47\
    \ = 0\n        var primesSum48 = 0\n        var primesSum49 = 0\n        var primesSum50\
    \ = 0\n        var primesSum51 = 0\n        var primesSum52 = 0\n        var primesSum53\
    \ = 0\n        var primesSum54 = 0\n        var primesSum55 = 0\n        var primesSum56\
    \ = 0\n        var primesSum57 = 0\n        var primesSum58 = 0\n        var primesSum59\
    \ = 0\n        var primesSum60 = 0\n        var primesSum61 = 0\n        var primesSum62\
    \ = 0\n        var primesSum63 = 0\n        var primesSum64 = 0\n        var primesSum65\
    \ = 0\n        var primesSum66 = 0\n        var primesSum67 = 0\n        var primesSum68\
    \ = 0\n        var primesSum69 = 0\n        var primesSum70 = 0\n        var primesSum71\
    \ = 0\n        var ", "        val primes = mutable.ArrayBuffer(2)\n        var\
    \ primesCount = 0\n        var primesIndex = 0\n        var primesIndex2 = 0\n\
    \        var primesIndex3 = 0\n        var primesIndex4 = 0\n        var primesIndex5\
    \ = 0\n        var primesIndex6 = 0\n        var primesIndex7 = 0\n        var\
    \ primesIndex8 = 0\n        var primesIndex9 = 0\n        var primesIndex10 =\
    \ 0\n        var primesIndex11 = 0\n        var primesIndex12 = 0\n        var\
    \ primesIndex13 = 0\n        var primesIndex14 = 0\n        var primesIndex15\
    \ = 0\n        var primesIndex16 = 0\n        var primesIndex17 = 0\n        var\
    \ primesIndex18 = 0\n        var primesIndex19 = 0\n        var primesIndex20\
    \ = 0\n        var primesIndex21 = 0\n        var primesIndex22 = 0\n        var\
    \ primesIndex23 = 0\n        var primesIndex24 = 0\n        var primesIndex25\
    \ = 0\n        var primesIndex26 = 0\n        var primesIndex27 = 0\n        var\
    \ primesIndex28 = 0\n        var primesIndex29 = 0\n        var primesIndex30\
    \ = 0\n        var primesIndex31 = 0\n        var primesIndex32 = 0\n        var\
    \ primesIndex33 = 0\n        var primesIndex34 = 0\n        var primesIndex35\
    \ = 0\n        var primesIndex36 = 0\n        var primesIndex37 = 0\n        var\
    \ primesIndex38 = 0\n        var primesIndex39 = 0\n        var primesIndex40\
    \ = 0\n        var primesIndex41 = 0\n        var primesIndex42 = 0\n        var\
    \ primesIndex43 = 0\n        var primesIndex44 = 0\n        var primesIndex45\
    \ = 0\n        var primesIndex46 = 0\n        var primesIndex47 = 0\n        var\
    \ primesIndex48 = 0\n        var primesIndex49 = 0\n        var primesIndex50\
    \ = 0\n        var primesIndex51 = 0\n        var primesIndex52 = 0\n        var\
    \ primesIndex53 = 0\n        var primesIndex54 = 0\n        var primesIndex55\
    \ = 0\n        var primesIndex56 = 0\n        var primesIndex57 = 0\n        var\
    \ primesIndex58 = 0\n        var primesIndex59 = 0\n        var primesIndex60\
    \ = 0\n        var primesIndex61 = 0\n        var primesIndex62 = 0\n        var\
    \ primesIndex63 = 0\n        var primesIndex64 = 0\n        var primesIndex65\
    \ = 0\n        var primesIndex66 = 0\n        var primesIndex67 = 0\n        var\
    \ primesIndex68 = 0\n        var primesIndex69 = 0\n        var primesIndex70\
    \ = 0\n        var primesIndex71 = 0\n", "        var primes = mutable.ListBuffer[Long]()\n\
    \        var i = 2\n        while (i < n) {\n            if (primes.contains(i))\
    \ {\n                i += 1\n            } else {\n                primes += i\n\
    \            }\n        }\n        primes.toList", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var primeCount = 0\n        var currentPrime = 2\n        var currentPrimeCount\
    \ = 0\n        var currentPrimeCountMax = 2\n        while(primeCount < n) {\n\
    \            primeCount += 1\n            currentPrimeCountMax += 1\n        \
    \    currentPrimeCount = 0\n            while(currentPrimeCount < currentPrimeCountMax)\
    \ {\n                currentPrimeCount += 1\n                if(primes.contains(currentPrime))\
    \ {\n                    currentPrimeCountMax = currentPrimeCount\n          \
    \      }\n                else {\n                    currentPrimeCount += 1\n\
    \                    primes += currentPrime\n                }\n            }\n\
    \        }\n        primes.take(n)", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var count = 0\n        var prime = 1\n        while(primes.size < n){\n\
    \            prime = primes.last\n            primes = primes ++ primes.filter(_\
    \ % prime == 0)\n            count = count + 1\n        }\n        primes.take(n)",
  "        val primes = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (primes.contains(i)) {\n                primes +=\
    \ i\n            }\n            i += 1\n        }\n        primes.toList", " \
    \       val primes = mutable.ListBuffer[Long]()\n        val i = 2\n        while\
    \ (i <= n) {\n            if (primes.contains(i)) {\n                primes +=\
    \ i\n            }\n            i += 1\n        }\n        primes.toList", " \
    \       val primes = mutable.ArrayBuffer(2)\n        val counter = mutable.ArrayBuffer(2)\n\
    \        val result = mutable.ArrayBuffer(2)\n        val primesCount = mutable.ArrayBuffer(2)\n\
    \        val counterCount = mutable.ArrayBuffer(2)\n        val resultCount =\
    \ mutable.ArrayBuffer(2)\n        val primesCount2 = mutable.ArrayBuffer(2)\n\
    \        val counterCount2 = mutable.ArrayBuffer(2)\n        val resultCount2\
    \ = mutable.ArrayBuffer(2)\n        val primesCount3 = mutable.ArrayBuffer(2)\n\
    \        val counterCount3 = mutable.ArrayBuffer(2)\n        val resultCount3\
    \ = mutable.ArrayBuffer(2)\n        val primesCount4 = mutable.ArrayBuffer(2)\n\
    \        val counterCount4 = mutable.ArrayBuffer(2)\n        val resultCount4\
    \ = mutable.ArrayBuffer(2)\n        val primesCount5 = mutable.ArrayBuffer(2)\n\
    \        val counterCount5 = mutable.ArrayBuffer(2)\n        val resultCount5\
    \ = mutable.ArrayBuffer(2)\n        val primesCount6 = mutable.ArrayBuffer(2)\n\
    \        val counterCount6 = mutable.ArrayBuffer(2)\n        val resultCount6\
    \ = mutable.ArrayBuffer(2)\n        val primesCount7 = mutable.ArrayBuffer(2)\n\
    \        val counterCount7 = mutable.ArrayBuffer(2)\n        val resultCount7\
    \ = mutable.ArrayBuffer(2)\n        val primesCount8 = mutable.ArrayBuffer(2)\n\
    \        val counterCount8 = mutable.ArrayBuffer(2)\n        val resultCount8\
    \ = mutable.ArrayBuffer(2)\n        val primesCount9 = mutable.ArrayBuffer(2)\n\
    \        val counterCount9 = mutable.ArrayBuffer(2)\n        val resultCount9\
    \ = mutable.ArrayBuffer(2)\n        val primesCount10 = mutable.ArrayBuffer(2)\n\
    \        val counterCount10 = mutable.ArrayBuffer(2)\n        val resultCount10\
    \ = mutable.ArrayBuffer(2)\n        val primesCount11 = mutable.ArrayBuffer(2)\n\
    \        val counterCount11 = mutable.ArrayBuffer(2)\n        val resultCount11\
    \ = mutable.ArrayBuffer(2)\n        val primesCount12 = mutable.ArrayBuffer(2)\n\
    \        val counterCount12 = mutable.ArrayBuffer(2)\n        val resultCount12\
    \ = mutable.ArrayBuffer(2)\n        val primesCount13 = mutable.ArrayBuffer(2)\n\
    \        val counterCount13 = mutable.ArrayBuffer(2)\n        val resultCount13\
    \ = mutable.ArrayBuffer(2)\n        val primesCount14 = mutable.ArrayBuffer(2)\n\
    \        val counterCount14 = mutable.ArrayBuffer(2)\n        val resultCount14\
    \ = mutable.ArrayBuffer(2)\n        val primes", "        val primes = mutable.ArrayBuffer(2)\n\
    \        var primesFound = 0\n        var primesFoundSoFar = 0\n        var primesFoundSoFar2\
    \ = 0\n        var primesFoundSoFar3 = 0\n        var primesFoundSoFar4 = 0\n\
    \        var primesFoundSoFar5 = 0\n        var primesFoundSoFar6 = 0\n      \
    \  var primesFoundSoFar7 = 0\n        var primesFoundSoFar8 = 0\n        var primesFoundSoFar9\
    \ = 0\n        var primesFoundSoFar10 = 0\n        var primesFoundSoFar11 = 0\n\
    \        var primesFoundSoFar12 = 0\n        var primesFoundSoFar13 = 0\n    \
    \    var primesFoundSoFar14 = 0\n        var primesFoundSoFar15 = 0\n        var\
    \ primesFoundSoFar16 = 0\n        var primesFoundSoFar17 = 0\n        var primesFoundSoFar18\
    \ = 0\n        var primesFoundSoFar19 = 0\n        var primesFoundSoFar20 = 0\n\
    \        var primesFoundSoFar21 = 0\n        var primesFoundSoFar22 = 0\n    \
    \    var primesFoundSoFar23 = 0\n        var primesFoundSoFar24 = 0\n        var\
    \ primesFoundSoFar25 = 0\n        var primesFoundSoFar26 = 0\n        var primesFoundSoFar27\
    \ = 0\n        var primesFoundSoFar28 = 0\n        var primesFoundSoFar29 = 0\n\
    \        var primesFoundSoFar30 = 0\n        var primesFoundSoFar31 = 0\n    \
    \    var primesFoundSoFar32 = 0\n        var primesFoundSoFar33 = 0\n        var\
    \ primesFoundSoFar34 = 0\n        var primesFoundSoFar35 = 0\n        var primesFoundSoFar36\
    \ = 0\n        var primesFoundSoFar37 = 0\n        var primesFoundSoFar38 = 0\n\
    \        var primesFoundSoFar39 = 0\n        var primesFoundSoFar40 = 0\n    \
    \    var primesFoundSoFar41 = 0\n        var primesFoundSoFar42 = 0\n        var\
    \ primesFoundSoFar43 = 0\n        var primesFoundSoFar44 = 0\n        var primesFoundSoFar45\
    \ = 0\n        var primesFoundSoFar46 = 0\n        var primesFoundSoFar47 = 0\n\
    \        var primesFoundSoFar48 = 0\n        var primesFoundSoFar49 = 0\n    \
    \    var primesFoundSoFar50 = 0\n        var primesFoundSoFar51 = 0\n        var\
    \ primesFoundSoFar52 = 0\n        var primesFoundSoFar53 = 0\n        var primesFoundSoFar54\
    \ = 0\n        var primesFoundSoFar55 = 0\n        var prime", "        val primes\
    \ = mutable.ArrayBuffer(2)\n        var count = 0\n        for(i <- 2 to n){\n\
    \            for(j <- 2 to i){\n                if(i % j == 0){\n            \
    \        primes += j\n                }\n            }\n            if(primes.contains(i)){\n\
    \                count += 1\n            }\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 2 to n by 2) {\n            if (primes.contains(i)) {\n   \
    \             primes += i\n                result += i\n            }\n      \
    \  }\n        result.toList", "        val primes = mutable.ArrayBuffer.empty[Long]\n\
    \        val isPrime = mutable.ArrayBuffer.empty[Boolean]\n        val count =\
    \ mutable.ArrayBuffer.empty[Long]\n        for (i <- 1 to n) {\n            val\
    \ isPrime = true\n            val prime = i\n            primes += prime\n   \
    \         isPrime += isPrime\n            count += prime\n        }\n        primes.toList",
  "        val primes = mutable.ArrayBuffer(2)\n        var count = 0\n        while(primes.size\
    \ < n) {\n            val nextPrime = primes.last\n            primes = primes.filter(_\
    \ % nextPrime != 0)\n            count += 1\n        }\n        primes.take(n)",
  "        val primes = mutable.ListBuffer[Long]()\n        val n = n\n        val\
    \ i = 2\n        while (i <= n) {\n            if (primes.contains(i)) {\n   \
    \             primes += i\n            }\n            i += 1\n        }\n    \
    \    primes.take(n)", "        val primes = mutable.ListBuffer[Long]()\n     \
    \   val primesSet = mutable.Set[Long]()\n        val primesSet2 = mutable.Set[Long]()\n\
    \        val primesSet3 = mutable.Set[Long]()\n        val primesSet4 = mutable.Set[Long]()\n\
    \        val primesSet5 = mutable.Set[Long]()\n        val primesSet6 = mutable.Set[Long]()\n\
    \        val primesSet7 = mutable.Set[Long]()\n        val primesSet8 = mutable.Set[Long]()\n\
    \        val primesSet9 = mutable.Set[Long]()\n        val primesSet10 = mutable.Set[Long]()\n\
    \        val primesSet11 = mutable.Set[Long]()\n        val primesSet12 = mutable.Set[Long]()\n\
    \        val primesSet13 = mutable.Set[Long]()\n        val primesSet14 = mutable.Set[Long]()\n\
    \        val primesSet15 = mutable.Set[Long]()\n        val primesSet16 = mutable.Set[Long]()\n\
    \        val primesSet17 = mutable.Set[Long]()\n        val primesSet18 = mutable.Set[Long]()\n\
    \        val primesSet19 = mutable.Set[Long]()\n        val primesSet20 = mutable.Set[Long]()\n\
    \        val primesSet21 = mutable.Set[Long]()\n        val primesSet22 = mutable.Set[Long]()\n\
    \        val primesSet23 = mutable.Set[Long]()\n        val primesSet24 = mutable.Set[Long]()\n\
    \        val primesSet25 = mutable.Set[Long]()\n        val primesSet26 = mutable.Set[Long]()\n\
    \        val primesSet27 = mutable.Set[Long]()\n        val primesSet28 = mutable.Set[Long]()\n\
    \        val primesSet29 = mutable.Set[Long]()\n        val primesSet30 = mutable.Set[Long]()\n\
    \        val primesSet31 = mutable.Set[Long]()\n        val primesSet32 = mutable.Set[Long]()\n\
    \        val primesSet33 = mutable.Set[Long]()\n        val primesSet34 = mutable.Set[Long]()\n\
    \        ", "        val primes = mutable.ArrayBuffer(2)\n        var count =\
    \ 0\n        var prime = 1\n        while (count < n) {\n            prime = primes.last\n\
    \            primes = primes.filter(_ % prime != 0)\n            count += 1\n\
    \        }\n        primes.toList"]
stop_tokens:
- "\n    }\n"

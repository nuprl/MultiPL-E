language: scala
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -1 else\
    \ 1)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvp02iuvc.scala:10)\n\tat Problem.main(tmpvp02iuvc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ gcd + 1\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9m4fw6wj.scala:10)\n\tat Problem.main(tmp9m4fw6wj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm\n        else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpusc_kq4_.scala:12)\n\tat Problem.main(tmpusc_kq4_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ gcd + 1\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9m4fw6wj.scala:10)\n\tat Problem.main(tmp9m4fw6wj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd > 0) gcd else lcm\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb_dcii6s.scala:11)\n\tat Problem.main(tmpb_dcii6s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 0\n        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp7e_dodm.scala:10)\n\tat Problem.main(tmpp7e_dodm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (lcm / gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjle9khhz.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0) b\n\
    \        else if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = if (a % b == 0) a else greatestCommonDivisor(b, lcm)\n\
    \        lcm\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp0qpfvwj4.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp0qpfvwj4.scala:7)\n\tat Problem$.main(tmp0qpfvwj4.scala:11)\n\
    \tat Problem.main(tmp0qpfvwj4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm\n        else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpusc_kq4_.scala:12)\n\tat Problem.main(tmpusc_kq4_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0) b\n\
    \        else if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm\n        else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpusc_kq4_.scala:12)\n\tat Problem.main(tmpusc_kq4_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        lcm / gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpictr7tjt.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpictr7tjt.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = if (a\
    \ > b) a else b\n        val gcd = if (lcm % a == 0 && lcm % b == 0) lcm / a else\
    \ lcm\n        gcd + 1\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6c9kbvt9.scala:11)\n\tat Problem.main(tmp6c9kbvt9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        lcm / gcd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2sr9q9os.scala:11)\n\tat Problem.main(tmp2sr9q9os.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = if (a\
    \ > b) a else b\n        val gcd = if (lcm == 0) a else greatestCommonDivisor(lcm,\
    \ b / lcm)\n        lcm\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\tat Problem$.greatestCommonDivisor(tmpbqcr9nnc.scala:7)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        gcd match {\n            case 0 => lcm\n\
    \            case _ => greatestCommonDivisor(lcm, gcd)\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpux6e63kk.scala:14)\n\tat Problem.main(tmpux6e63kk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        gcd match {\n            case 0 => lcm\n\
    \            case _ => greatestCommonDivisor(lcm, gcd)\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpux6e63kk.scala:14)\n\tat Problem.main(tmpux6e63kk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm\n        else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpusc_kq4_.scala:12)\n\tat Problem.main(tmpusc_kq4_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (b > 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1tey0mhe.scala:10)\n\tat Problem.main(tmp1tey0mhe.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 1\n        else if (a > 0 && b > 0) greatestCommonDivisor(b, a % b)\n\
    \        else if (a > 0 && b < 0) greatestCommonDivisor(b, a % b)\n        else\
    \ if (a < 0 && b > 0) greatestCommonDivisor(b, a % b)\n        else if (a < 0\
    \ && b < 0) greatestCommonDivisor(b, a % b)\n        else 0\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkad2hd81.scala:15)\n\tat Problem.main(tmpkad2hd81.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0 && b\
    \ < 0) -1 else if (a < 0 && b > 0) 1 else 0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        lcm / gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpictr7tjt.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpictr7tjt.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd > 0) gcd else\
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        lcm / gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpictr7tjt.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpictr7tjt.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd > 0) gcd else\
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        gcd match {\n            case 0 => lcm\n\
    \            case _ => greatestCommonDivisor(lcm, gcd)\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpux6e63kk.scala:14)\n\tat Problem.main(tmpux6e63kk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (b > 0) a else\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1tey0mhe.scala:10)\n\tat Problem.main(tmp1tey0mhe.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -1 else\
    \ 1)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvp02iuvc.scala:10)\n\tat Problem.main(tmpvp02iuvc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < b) a else\
    \ b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt6br4fjr.scala:10)\n\tat Problem.main(tmpt6br4fjr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = if (a\
    \ > b) a else b\n        val gcd = if (lcm == 0) a else lcm\n        gcd / b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdo19s5cb.scala:12)\n\tat Problem.main(tmpdo19s5cb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -a else\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw5cl0824.scala:10)\n\tat Problem.main(tmpw5cl0824.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd > 0) gcd else\
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ gcd + 1\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9m4fw6wj.scala:10)\n\tat Problem.main(tmp9m4fw6wj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / a\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplt4wypdv.scala:10)\n\tat Problem.main(tmplt4wypdv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        lcm / gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpictr7tjt.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpictr7tjt.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ gcd + 1\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9m4fw6wj.scala:10)\n\tat Problem.main(tmp9m4fw6wj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 1\n        else {\n            val c = a % b\n            if (c == 0)\
    \ a else greatestCommonDivisor(b,c)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp95g20qmb.scala:13)\n\tat Problem.main(tmp95g20qmb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (b == 0) a else\
    \ a / b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq_58r7mz.scala:10)\n\tat Problem.main(tmpq_58r7mz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -1 else\
    \ 1)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvp02iuvc.scala:10)\n\tat Problem.main(tmpvp02iuvc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -1 else\
    \ 1)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvp02iuvc.scala:10)\n\tat Problem.main(tmpvp02iuvc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(a, gcd)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_iz_8bi1.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        gcd match {\n            case 0 => lcm\n\
    \            case _ => greatestCommonDivisor(lcm, gcd)\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpux6e63kk.scala:14)\n\tat Problem.main(tmpux6e63kk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        if (gcd > lcm) gcd else lcm\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7ufx2ku3.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp7ufx2ku3.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979818
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = math.gcd(a, b)\n        lcm / gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpictr7tjt.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpictr7tjt.scala:7:23 -------------------------\e[0m\e[0m\n\e[31m7 |\e\
    [0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m                  value gcd is\
    \ not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = if (a\
    \ < b) a else b\n        val gcd = if (a > b) a / lcm else b / lcm\n        lcm\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpn1qx9w4e.scala:11)\n\tat Problem.main(tmpn1qx9w4e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd > 0) gcd else\
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 0\n        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp7e_dodm.scala:10)\n\tat Problem.main(tmpp7e_dodm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (a < 0) -a else\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw5cl0824.scala:10)\n\tat Problem.main(tmpw5cl0824.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + (if (b == 0) a else\
    \ a / gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvyqg22kc.scala:10)\n\tat Problem.main(tmpvyqg22kc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd / b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:7)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmp_7zaseai.scala:6)\n\tat Problem$.main(tmp_7zaseai.scala:10)\n\
    \tat Problem.main(tmp_7zaseai.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = if (a\
    \ > b) a else b\n        val gcd = if (a > b) a / lcm else b / lcm\n        lcm\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3ibz27_o.scala:11)\n\tat Problem.main(tmp3ibz27_o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else\
    \ greatestCommonDivisor(gcd, a)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\tat Problem$.greatestCommonDivisor(tmpu7kabdee.scala:6)\n\
    \tat Problem$.greatestCommonDivis"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 1\n        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc5jqgp5d.scala:11)\n\tat Problem.main(tmpc5jqgp5d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979817
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (b == 0) a\n\
    \        else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979631
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        if (gcd > 0) gcd else\
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (lcm / gcd)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjle9khhz.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        gcd * (gcd > b ? gcd : b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqlpnrndj.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 1\n        else if (a > b) greatestCommonDivisor(b, a % b)\n       \
    \ else greatestCommonDivisor(a % b, b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979822
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        if (a == 0 ||\
    \ b == 0) 1\n        else if (a > b) greatestCommonDivisor(b, a % b)\n       \
    \ else greatestCommonDivisor(a % b, b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979822
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val gcd = if (b\
    \ == 0) a else greatestCommonDivisor(b, a % b)\n        gcd + 1\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptka5_d6r.scala:10)\n\tat Problem.main(tmptka5_d6r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = math.lcm(a,\
    \ b)\n        val gcd = a / lcm\n        lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm059v0po.scala:6:23 -------------------------\e\
    [0m\e[0m\n\e[31m6 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm(a, b)\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \        value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979807
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        if (gcd == 0) lcm else greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplyyy7rq6.scala:11)\n\tat Problem.main(tmplyyy7rq6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979806
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    def\
    \ greatestCommonDivisor(a : Long, b : Long) : Long = {\n        val lcm = a /\
    \ b\n        val gcd = a % b\n        lcm match {\n            case 0 => gcd\n\
    \            case _ => greatestCommonDivisor(lcm, gcd)\n        }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx7h42w1e.scala:14)\n\tat Problem.main(tmpx7h42w1e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979818

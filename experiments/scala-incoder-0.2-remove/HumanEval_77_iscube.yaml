name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    def iscube(a : Long) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val cube = a.toInt\n        cube == cube * cube * cube", " \
    \       val cube = a.toInt\n        val cubes = mutable.Set[Long]()\n        cubes\
    \ += cube\n        cubes += cube * cube\n        cubes += cube * cube * cube\n\
    \        cubes.contains(a)", "        val cube = a.toInt\n        val cubes =\
    \ cube.toLong * cube * cube\n        cubes % 1 == 0", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube * cube\n        cubes % 1 == 0", "        val cube\
    \ = a.toInt\n        val cubes = cube.toInt\n        cubes <= 0 || cubes % 3 ==\
    \ 0", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesset = mutable.HashSet[Long]()\n        cubesset += cube\n  \
    \      cubesset += cube*cube\n        cubesset += cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube\n     \
    \   cubesset += cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube", "        val cube = a % 3\n\
    \        if (cube == 0) true\n        else false", "        val cube = a.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n      \
    \  cubes.contains(cube)", "        val cube = a % 3\n        cube == 0 || cube\
    \ == 1 || cube == 2", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube * cube\n        cubes % 1 == 0", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     cubes += cube\n        cubes.contains(cube)", "        val cube = a % 3\n\
    \        cube == 0 || cube == 3 || cube == 6", "        val cube = a.toInt\n \
    \       cube == cube * cube * cube", "        val cube = a.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a.toInt\n        cube == cube *\
    \ cube * cube", "        val cube = a.toInt\n        cube == cube * cube * cube",
  "        val cube = a.toInt\n        val cubes = cube.toLong\n        val cubes3\
    \ = cubes * cubes * cubes\n        val cubes5 = cubes * cubes * cubes * cubes\n\
    \        val cubes7 = cubes * cubes * cubes * cubes * cubes\n        val cubes9\
    \ = cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes11 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes13 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes15\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n  \
    \      val cubes17 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes19 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes21 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes\n        val cubes23 = cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes25\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes\n        val cubes27 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes29 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes31 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n    \
    \    val cubes33 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n  \
    \      val cubes35 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n  \
    \      val cubes37 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * ",
  "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n   \
    \     val cubesset = mutable.Set[Long]()\n        cubesset += cube\n        cubesset\
    \ += cube*cube\n        cubesset += cube*cube*cube\n        cubesset += cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*", "        val cube = a.toInt\n\
    \        val cubes = cube.toInt\n        val cubes3 = cubes * cubes * cube\n \
    \       val cubes5 = cubes * cubes * cubes * cube\n        val cubes7 = cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes9 = cubes * cubes * cubes *\
    \ cubes * cubes * cube\n        val cubes11 = cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cube\n        val cubes13 = cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cube\n        val cubes15 = cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cube\n        val cubes17 = cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n     \
    \   val cubes19 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes21 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n\
    \        val cubes23 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cube\n        val cubes25 =\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cube\n        val cubes27 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes29 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes31 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cube\n        val cubes33 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cube\n        val cubes35\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n   \
    \     val cubes37 = cubes * cubes * cube", "        val cube = a.toInt\n     \
    \   cube == cube * cube * cube", "        val cube = a.toInt\n        cube ==\
    \ cube * cube * cube", "        val cube = a / 3\n        val square = a / 4\n\
    \        val cubeAndSquare = cube + square\n        cubeAndSquare == a", "   \
    \     val cube = a % 3\n        if (cube == 0) true\n        else false", "  \
    \      val cube = a.toInt\n        val cubes = cube.toLong\n        val cubesRemainder\
    \ = cubes % 3\n        cubesRemainder == 0", "        val cube = a % 3\n     \
    \   cube == 0 || cube == 1 || cube == 2", "        val cube = a.toString.toLong\
    \ * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a % 3\n        cube == 0 || cube == 3 || cube == 6", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong * cube * cube\n        cubes % 1 == 0", "   \
    \     val cube = a.toInt\n        val cubes = cube.toLong * cube * cube\n    \
    \    cubes % 1 == 0", "        val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n\
    \        cubes == a", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube.toLong * cube.toLong\n        cubes % 1 == 0", "        val cube = a\
    \ % 3\n        if (cube == 0)\n            return true\n        else\n       \
    \     return false", "        val cube = a / 3\n        val square = a / 3\n \
    \       val cube2 = a / 3\n        val square2 = a / 3\n        val cube3 = a\
    \ / 3\n        val square3 = a / 3\n        val cube4 = a / 3\n        val square4\
    \ = a / 3\n        val cube5 = a / 3\n        val square5 = a / 3\n        val\
    \ cube6 = a / 3\n        val square6 = a / 3\n        val cube7 = a / 3\n    \
    \    val square7 = a / 3\n        val cube8 = a / 3\n        val square8 = a /\
    \ 3\n        val cube9 = a / 3\n        val square9 = a / 3\n        val cube10\
    \ = a / 3\n        val square10 = a / 3\n        val cube11 = a / 3\n        val\
    \ square11 = a / 3\n        val cube12 = a / 3\n        val square12 = a / 3\n\
    \        val cube13 = a / 3\n        val square13 = a / 3\n        val cube14\
    \ = a / 3\n        val square14 = a / 3\n        val cube15 = a / 3\n        val\
    \ square15 = a / 3\n        val cube16 = a / 3\n        val square16 = a / 3\n\
    \        val cube17 = a / 3\n        val square17 = a / 3\n        val cube18\
    \ = a / 3\n        val square18 = a / 3\n        val cube19 = a / 3\n        val\
    \ square19 = a / 3\n        val cube20 = a / 3\n        val square20 = a / 3\n\
    \        val cube21 = a / 3\n        val square21 = a / 3\n        val cube22\
    \ = a / 3\n        val square22 = a / 3\n        val cube23 = a / 3\n        val\
    \ square23 = a / 3\n        val cube24 = a / 3\n        val square24 = a / 3\n\
    \        val cube25 = a / 3\n        val square25 = a / 3\n        val cube26\
    \ = a / 3\n        val square26 = a / 3\n        val cube27 = a / 3\n        val\
    \ square27 = a / 3\n        val cube28 = a / 3\n        val square28 = a / 3\n\
    \        val cube29 = a / 3\n        val square29 = a / 3\n        val cube30\
    \ = a / 3\n        val square30 = ", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        cubesRemainder\
    \ == 0", "        val cube = a.toInt\n        val cubes = cube.toLong\n      \
    \  val cubesRemainder = cubes % 3\n        cubesRemainder == 0", "        val\
    \ cube = a.toInt\n        val cubes = mutable.ListBuffer(cube)\n        cubes\
    \ foreach { x =>\n            cubes += x * x\n        }\n        cubes.size ==\
    \ a", "        val cube = a.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toInt\n        cube == cube * cube * cube", "        val cube =\
    \ a % 3\n        if (cube == 0) true\n        else false", "        val cube =\
    \ a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a / 3\n        val square = a / 3\n        val cube2 = a / 3\n\
    \        val square2 = a / 3\n        val cube3 = a / 3\n        val square3 =\
    \ a / 3\n        val cube4 = a / 3\n        val square4 = a / 3\n        val cube5\
    \ = a / 3\n        val square5 = a / 3\n        val cube6 = a / 3\n        val\
    \ square6 = a / 3\n        val cube7 = a / 3\n        val square7 = a / 3\n  \
    \      val cube8 = a / 3\n        val square8 = a / 3\n        val cube9 = a /\
    \ 3\n        val square9 = a / 3\n        val cube10 = a / 3\n        val square10\
    \ = a / 3\n        val cube11 = a / 3\n        val square11 = a / 3\n        val\
    \ cube12 = a / 3\n        val square12 = a / 3\n        val cube13 = a / 3\n \
    \       val square13 = a / 3\n        val cube14 = a / 3\n        val square14\
    \ = a / 3\n        val cube15 = a / 3\n        val square15 = a / 3\n        val\
    \ cube16 = a / 3\n        val square16 = a / 3\n        val cube17 = a / 3\n \
    \       val square17 = a / 3\n        val cube18 = a / 3\n        val square18\
    \ = a / 3\n        val cube19 = a / 3\n        val square19 = a / 3\n        val\
    \ cube20 = a / 3\n        val square20 = a / 3\n        val cube21 = a / 3\n \
    \       val square21 = a / 3\n        val cube22 = a / 3\n        val square22\
    \ = a / 3\n        val cube23 = a / 3\n        val square23 = a / 3\n        val\
    \ cube24 = a / 3\n        val square24 = a / 3\n        val cube25 = a / 3\n \
    \       val square25 = a / 3\n        val cube26 = a / 3\n        val square26\
    \ = a / 3\n        val cube27 = a / 3\n        val square27 = a / 3\n        val\
    \ cube28 = a / 3\n        val square28 = a / 3\n        val cube29 = a / 3\n \
    \       val square29 = a / 3\n        val cube30 = a / 3\n        val square30\
    \ = ", "        val cube = a % 3\n        cube == 0 || cube == 1 || cube == 2",
  "        val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n        cubes\
    \ % a == 0", "        val cube = a.toString.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        cube == cube * cube *\
    \ cube", "        val cube = a.toInt\n        cube == cube * cube * cube", " \
    \       val cube = a % 3\n        if (cube == 0) true else false", "        val\
    \ cube = a.toInt\n        val cubes = cube.toLong * cube * cube\n        cubes\
    \ % 1 == 0", "        val cube = a % 3\n        if (cube == 0) true else false",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a / 3\n        val cube2 = a / 3\n        val cube3 = a / 3\n        val cube4\
    \ = a / 3\n        val cube5 = a / 3\n        val cube6 = a / 3\n        val cube7\
    \ = a / 3\n        val cube8 = a / 3\n        val cube9 = a / 3\n        val cube10\
    \ = a / 3\n        val cube11 = a / 3\n        val cube12 = a / 3\n        val\
    \ cube13 = a / 3\n        val cube14 = a / 3\n        val cube15 = a / 3\n   \
    \     val cube16 = a / 3\n        val cube17 = a / 3\n        val cube18 = a /\
    \ 3\n        val cube19 = a / 3\n        val cube20 = a / 3\n        val cube21\
    \ = a / 3\n        val cube22 = a / 3\n        val cube23 = a / 3\n        val\
    \ cube24 = a / 3\n        val cube25 = a / 3\n        val cube26 = a / 3\n   \
    \     val cube27 = a / 3\n        val cube28 = a / 3\n        val cube29 = a /\
    \ 3\n        val cube30 = a / 3\n        val cube31 = a / 3\n        val cube32\
    \ = a / 3\n        val cube33 = a / 3\n        val cube34 = a / 3\n        val\
    \ cube35 = a / 3\n        val cube36 = a / 3\n        val cube37 = a / 3\n   \
    \     val cube38 = a / 3\n        val cube39 = a / 3\n        val cube40 = a /\
    \ 3\n        val cube41 = a / 3\n        val cube42 = a / 3\n        val cube43\
    \ = a / 3\n        val cube44 = a / 3\n        val cube45 = a / 3\n        val\
    \ cube46 = a / 3\n        val cube47 = a / 3\n        val cube48 = a / 3\n   \
    \     val cube49 = a / 3\n        val cube50 = a / 3\n        val cube51 = a /\
    \ 3\n        val cube52 = a / 3\n        val cube53 = a / 3\n        val cube54\
    \ = a / 3\n        val cube55 = a / 3\n        val cube56 = a / 3\n        val\
    \ cube57 = a / 3\n        val cube58 = a / 3\n        val ", "        val cube\
    \ = a.toInt\n        val cubes = cube.pow(3).toInt\n        cubes % a == 0", " \
    \       val cube = a.toInt\n        val cubes = mutable.ArrayBuffer.empty[Long]\n\
    \        cubes += a\n        cubes += a*a\n        cubes += a*a*a\n        cubes\
    \ += a*a*a*a\n        cubes += a*a*a*a*a\n        cubes += a*a*a*a*a*a\n     \
    \   cubes += a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes\
    \ += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*", "  \
    \      val cube = a.toInt\n        val cubes = cube.toInt\n        val cubecube\
    \ = cubes * cubes\n        val cubecubecube = cubecube * cubecube\n        val\
    \ cubecubecubecube = cubecubecube * cubecubecube\n        val cubecubecubecubecube\
    \ = cubecubecubecube * cubecubecubecube\n        val cubecubecubecubecubecube\
    \ = cubecubecubecubecube * cubecubecubecubecube\n        val cubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecube * cubecubecubecubecubecubecube\n        val\
    \ cubecubecubecubecubecubecubecubecube = cubecubecubecubecubecubecubecubecubecube\
    \ * cubecubecubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecubecubecube * cubecubecubecubecubecubecubecube\n\
    \        val cubecubecubecubecubecubecubecubecube = cubecubecubecubecubecubecubecubecubecube\
    \ * cubecubecubecubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecubecubecubecube * cubecubecubecubecubecubecubecubecube\n\
    \        val cubecubecubecubecubecubecubecubecubecube = cubecubecubecubecubecubecubecubecubecubecubecube\
    \ * cubecubecubecubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecubecubecubecubecube * cubecubecubecubecubecubecubecubecube\n\
    \        val cubecubecubecubecubecubecubecubecubecube = cubecubecubecubecubecubecubecubecubecubecubecubecube\
    \ * cubecubecubecubecubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecubecubecubecubecubecube * cubecubecubecubecubecubecubecubecube\n\
    \        val cubecubecubecubecubecubecubecubecubecube = cubecubecubecubecubecubecubecubecubecubecubecube\
    \ * cubecubecubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecubecubecubecubecube * cubecubecubecubecube", "  \
    \      val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a % 3\n        if (cube == 0 || cube == 2) return true\n        else return\
    \ false", "        val cube = a % 3\n        cube == 0 || cube == 1 || cube ==\
    \ 2", "        val cube = a.toInt\n        val cubes = cube.toLong\n        val\
    \ cubes3 = cubes * cubes * cube\n        val cubes5 = cubes * cubes * cubes *\
    \ cube\n        val cubes7 = cubes * cubes * cubes * cubes * cube\n        val\
    \ cubes9 = cubes * cubes * cubes * cubes * cubes * cube\n        val cubes11 =\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n        val cubes13\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n\
    \        val cubes15 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cube\n        val cubes17 = cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cube\n        val cubes19 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cube\n        val cubes21 = cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cube\n        val cubes23 = cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cube\n        val cubes25 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cube\n        val cubes27 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n   \
    \     val cubes29 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes31 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n\
    \        val cubes33 = cubes * cubes * cubes * cubes * cube", "        val cube\
    \ = a % 3\n        if (cube == 0) true else false", "        val cube = a % 3\n\
    \        cube == 0 || cube == 1 || cube == 2", "        val cube = a.toInt\n \
    \       val cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n       \
    \ cubes.contains(cube)", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube * cube\n        cubes % 1 == 0", "        val cube = a.toInt\n      \
    \  cube == cube * cube * cube", "        val cube = a % 3\n        cube == 0 ||\
    \ cube == 1 || cube == 2", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube * cube\n        cubes % 1 == 0", "        val cube = a % 3\n        cube\
    \ == 0 || cube == 1 || cube == 2", "        val cube = a.toInt\n        val cubes\
    \ = cube.toInt\n        val cubes3 = cubes * cubes\n        val cubes5 = cubes\
    \ * cubes * cubes\n        val cubes7 = cubes * cubes * cubes * cubes\n      \
    \  val cubes9 = cubes * cubes * cubes * cubes * cubes\n        val cubes11 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes\n        val cubes13 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes\n        val cubes15 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes17 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val\
    \ cubes19 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes21 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes23\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes\n        val cubes25 = cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes27 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes29\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes31 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes33 = cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes35\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n  \
    \      val cubes37 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * ", "        val cube = a.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toInt\n        cube == cube * cube * cube", " \
    \       val cube = a.toInt\n        cube == cube * cube * cube", "        val\
    \ cube = a % 3\n        if (cube == 0) true else false", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a ^ 3\n        cube\
    \ == a && cube % a == 0", "        val cube = a.toInt\n        val cubes = cube.toInt\n\
    \        cubes % cubes == 0", "        val cube = a.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toString.toLong * a.toString.toLong *\
    \ a.toString.toLong\n        cube == a.toString.toLong", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += cube\n        cubes\
    \ += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(a)",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube ==\
    \ a.toString.toLong", "        val cube = a.toInt\n        val cubes = cube.toLong\n\
    \        val cubesRemainder = cubes % cube\n        cubesRemainder == 0", "  \
    \      val cube = a.toInt\n        val cubes = cube.toLong * cube * cube\n   \
    \     cubes % 1 == 0", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesset = mutable.Set[Long]()\n        cubesset += cube\n      \
    \  cubesset += cube*cube\n        cubesset += cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube\n     \
    \   cubesset += cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        cubesRemainder\
    \ == 0", "        val cube = a % 3\n        if (cube == 0) true\n        else\
    \ false", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        val cubesSet = mutable.HashSet(cubes)\n        val cubesSetSize = cubesSet.size()\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cubesSet.size\n        val cubesSetSize = cubesSet.size\n\
    \        val cubesSetSize = cube", "        val cube = a.toInt\n        val cubes\
    \ = cube.toLong * cube.toLong * cube.toLong\n        cubes % 1 == 0", "      \
    \  val cube = a ^ 3\n        val square = a ^ 2\n        val cubeAndSquare = cube\
    \ + square\n        cubeAndSquare == a", "        val cube = a.toInt\n       \
    \ val cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        cubesRemainder\
    \ == 0", "        val cube = a.toString.toInt\n        val cubes = cube.product\n\
    \        cubes % 1 == 0", "        val cube = a % 3\n        cube == 0 || cube\
    \ == 2 || cube == 1", "        val cube = a.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toString.toInt\n        val cubes = mutable.ListBuffer[Long]()\n\
    \        cubes += a\n        cubes += a*a\n        cubes += a*a*a\n        cubes\
    \ += a*a*a*a\n        cubes += a*a*a*a*a\n        cubes += a*a*a*a*a*a\n     \
    \   cubes += a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes +=\
    \ a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a\n\
    \        cubes += a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toString.toInt\n \
    \       cube == cube * cube * cube", "        val cube = a.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a.toInt\n        cube == cube *\
    \ cube * cube", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong * a.toString.toLong * a.toString.toLong", " \
    \       val cube = a / 3\n        cube == a && cube == a * a && cube == a * a\
    \ * a", "        val cube = a % 3\n        if (cube == 0)\n            return\
    \ true\n        else\n            return false", "        val cube = a.toInt\n\
    \        val cubes = mutable.ListBuffer[Long]()\n        cubes += cube\n     \
    \   cubes += cube * cube\n        cubes += cube * cube * cube\n        cubes.contains(cube)",
  "        val cube = a.toInt\n        val cubes = cube.toLong\n        val cubesRemainder\
    \ = cubes % 3\n        cubesRemainder == 0", "        val cube = a % 3\n     \
    \   cube == 0 || cube == 3 || cube == 6", "        val cube = a / 3\n        cube\
    \ == a && cube == cube && cube == cube && cube == cube && cube == cube && cube\
    \ == cube", "        val cube = a.toInt\n        val cubes = cube.toLong\n   \
    \     val cubesRemainder = cubes % cube\n        cubesRemainder == 0", "     \
    \   val cube = a.toInt\n        val cubes = cube.toLong\n        val cubesRemainder\
    \ = cubes % 3\n        cubesRemainder == 0", "        val cube = a % 3\n     \
    \   if (cube == 0) true\n        else false", "        val cube = a.toString.toInt\n\
    \        cube == (a * a * a)", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a % 3\n        cube == 0 || cube == 3 || cube == 6", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n        cubes\
    \ % a == 0", "        val cube = a.toInt\n        val cubes = cube.toLong\n  \
    \      val cubesRemainder = cubes % 3\n        cubesRemainder == 0", "       \
    \ val cube = a.toInt\n        val cubes = cube.toLong\n        val cubes3 = cubes\
    \ * cubes * cube\n        val cubes5 = cubes * cubes * cubes * cube\n        val\
    \ cubes7 = cubes * cubes * cubes * cubes * cube\n        val cubes9 = cubes *\
    \ cubes * cubes * cubes * cubes * cube\n        val cubes11 = cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes\n        val cubes13 = cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes15 = cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes17\
    \ = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes19 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes\n        val cubes21 = cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n    \
    \    val cubes23 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes\n        val cubes25 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes27 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes29 =\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes\n        val cubes31 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes\n        val cubes33 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes\n        val cubes35 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes\n        val cubes37 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * ",
  "        val cube = a / 3\n        cube == a && cube == a * a && cube == a * a *\
    \ a", "        val cube = a.toInt\n        val cubes = cube.toLong * cube.toLong\
    \ * cube.toLong\n        cubes % 1 == 0", "        val cube = a % 3\n        cube\
    \ == 0 || cube == 1 || cube == 2", "        val cube = a.toInt\n        val cubes\
    \ = cube.toLong * cube * cube\n        cubes % 1 == 0", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        cube\
    \ == cube * cube * cube", "        val cube = a / 3\n        cube == a && cube\
    \ == a * a && cube == a * a * a", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)",
  "        val cube = a % 3\n        cube == 0 || cube == 3 || cube == 6", "     \
    \   val cube = a % 3\n        if (cube == 0) true\n        else false", "    \
    \    val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n     \
    \   val cubesset = mutable.Set[Long]()\n        cubesset += cube\n        cubesset\
    \ += cube*cube\n        cubesset += cube*cube*cube\n        cubesset += cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += ", "        val cube = a % 3\n        cube == 0 || cube ==\
    \ 1 || cube == 2", "        val cube = a % 3\n        cube == 0 || cube == 3 ||\
    \ cube == 6", "        val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n\
    \        cube == a.toString.toLong", "        val cube = a % 3\n        if (cube\
    \ == 0) true\n        else false", "        val cube = a.toString.toInt\n    \
    \    cube == cube * cube * cube", "        val cube = a.toInt\n        val cubes\
    \ = cube.pow(3).toInt\n        cubes % a == 0", "        val cube = a.toString.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toInt\n        cubes % 3 == 0", "        val cube = a % 3\n   \
    \     if (cube == 0) true\n        else false", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n   \
    \     cubesRemainder == 0", "        val cube = a.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toInt\n        val cubes = cube.toLong\n\
    \        val cubesRemainder = cubes % 3\n        cubesRemainder == 0", "     \
    \   val cube = a.toString.toInt\n        cube == cube * cube * cube", "      \
    \  val cube = a % 3\n        cube == 0 || cube == 1 || cube == 2", "        val\
    \ cube = a.toInt\n        val cubes = cube.toLong\n        val cubesRemainder\
    \ = cubes % 3\n        cubesRemainder == 0", "        val cube = a.toInt\n   \
    \     val cubes = mutable.ArrayBuffer.empty[Long]\n        cubes += a\n      \
    \  cubes += a * a\n        cubes += a * a * a\n        cubes += a * a * a * a\n\
    \        cubes += a * a * a * a * a\n        cubes += a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a\n        cubes += a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a\
    \ * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a\
    \ * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a\n  \
    \      cubes += a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes +=\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes\
    \ += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n     \
    \   cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a * a\n\
    \        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a\n        cubes += a * a * a * a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a\n        cubes += a * a * a * a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a * a *\
    \ a * a * a * a * a * a * a * a * a * a * a * a * a\n        cubes += a * a *\
    \ a * a * a * a * a * a", "        val cube = a.toString.toInt\n        cube ==\
    \ cube * cube * cube", "        val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n\
    \        cubes % a == 0", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val cube =\
    \ a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube == a.toString.toLong",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n        val cubesSet\
    \ = mutable.HashSet(cubes)\n        cubesSet.contains(cube)", "        val cube\
    \ = a.toInt\n        val cubes = cube.toLong\n        val cubes3 = cubes*cubes*cubes\n\
    \        val cubes5 = cubes*cubes*cubes*cubes*cubes\n        val cubes7 = cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes9 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes11 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes13 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes15 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes17 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes19 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes21 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes23 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes25 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes27 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes29 = cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes*cubes\n\
    \        val cubes31 = cubes*cubes*cubes*cube", "        val cube = a.toInt\n\
    \        val cubes = mutable.ArrayBuffer(cube)\n        val cubesset = mutable.Set[Long]()\n\
    \        cubesset += cube\n        cubesset += cube*cube\n        cubesset +=\
    \ cube*cube*cube\n        cubesset += cube*cube*cube*cube\n        cubesset +=\
    \ cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset\
    \ += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube*cube\n\
    \        cubesset += cube*cube*cube*cube*cube*cube*", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n   \
    \     cubesRemainder == 0", "        val cube = a.toInt\n        val cubes = cube.toInt\n\
    \        val cubes3 = cubes * cubes * cube\n        val cubes5 = cubes * cubes\
    \ * cubes * cube\n        val cubes7 = cubes * cubes * cubes * cubes * cube\n\
    \        val cubes9 = cubes * cubes * cubes * cubes * cubes * cube\n        val\
    \ cubes11 = cubes * cubes * cubes * cubes * cubes * cubes * cube\n        val\
    \ cubes13 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n   \
    \     val cubes15 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cube\n        val cubes17 = cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes19 = cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n   \
    \     val cubes21 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cube\n        val cubes23 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cube\n        val cubes25 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n\
    \        val cubes27 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n     \
    \   val cubes29 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n   \
    \     val cubes31 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cube\n\
    \        val cubes33 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cube\n        val cubes35 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cube\n        val cubes37 = cubes * cubes * cube",
  "        val cube = a.toString.toInt\n        cube == cube * cube * cube", "   \
    \     val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n    \
    \    cubes += cube\n        cubes.contains(cube)", "        val cube = a.toInt\n\
    \        val cubes = cube.toLong\n        val cubesRemainder = cubes % cube\n\
    \        cubesRemainder == 0", "        val cube = a.toInt\n        cube == cube\
    \ * cube * cube", "        val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n\
    \        cubes == a", "        val cube = a.toInt\n        val cubes = cube.toInt\n\
    \        val cubecube = cubes * cubes\n        val cubecubecube = cubecube.toInt\n\
    \        val cubecubecubecube = cubecubecube * cubecube\n        val cubecubecubecubecube\
    \ = cubecubecubecube * cubecubecube\n        val cubecubecubecubecubecube = cubecubecubecubecube\
    \ * cubecubecubecube\n        val cubecubecubecubecubecubecube = cubecubecubecubecube\
    \ * cubecubecubecubecube\n        val cubecubecubecubecubecubecube = cubecubecubecubecube\
    \ * cubecubecubecubecube\n        val cubecubecubecubecubecubecube = cubecubecubecubecube\
    \ * cubecubecubecubecube\n        val cubecubecubecubecubecubecubecube = cubecubecubecubecubecube\
    \ * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecubecube\n        val cubecubecubecubecubecubecubecube\
    \ = cubecubecubecubecubecube * cubecubecubecubecube\n        val cubecubecubecubecubecube\
    \ = cubecubecubecubecube * cubecubecube\n        val cubecubecubecube = cubecubecube\
    \ * cube\n        val cubecube = cubecube * cube\n        val cube = cube * cube\n\
    \        val cube = cube * cube\n        val cube = cube * cube\n        val cube\
    \ = cube * cube\n", "        val cube = a.toInt\n        val cubes = cube.toLong\n\
    \        val cubesRemainder = cubes % 3\n        cubesRemainder == 0", "     \
    \   val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toInt\n        cube == cube * cube * cube", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong\n        val cubesRemainder = cubes % 3\n        cubesRemainder\
    \ == 0", "        val cube = a.toInt\n        val cubes = cube.toLong\n      \
    \  val cubesRemainder = cubes % cube\n        if (cubesRemainder == 0) {\n   \
    \         return true\n        } else {\n            return false\n        }",
  "        val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n   \
    \     cubes == a", "        val cube = a.toInt\n        val cubes = cube.toLong\
    \ * cube * cube\n        cubes % 1 == 0", "        val cube = a % 3\n        cube\
    \ == 0 || cube == 1 || cube == 2", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        val cubesCount = cubes.length\n       \
    \ val cubesSum = cubes.sum\n        val cubesSumSquare = cubesSum * cubesSum\n\
    \        val cubesSumCube = cubesSum * cubes\n        val cubesSumCubeSquare =\
    \ cubesSumCube * cubesSum\n        val cubesSumCubeCube = cubesSumCube * cubes\n\
    \        val cubesSumCubeCubeSquare = cubesSumCubeSquare * cubesSum\n        val\
    \ cubesSumCubeCubeCube = cubesSumCubeCube * cubes\n        val cubesSumCubeCubeCubeSquare\
    \ = cubesSumCubeCubeSquare * cubesSum\n        val cubesSumCubeCubeCubeCube =\
    \ cubesSumCubeCubeCube * cubes\n        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n       \
    \ val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n       \
    \ val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n        val cubesSumCubeCubeCubeSquare\
    \ = cubesSumCubeCubeSquare * cubesSum\n        val cubesSumCubeCubeCubeCube =\
    \ cubesSumCubeCubeCube * cubes\n        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare\
    \ * cubesSum\n        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n\
    \        val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n\
    \        val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n       \
    \ val cubesSumCubeCubeCubeSquare = cubesSumCubeCubeSquare * cubesSum\n       \
    \ val cubesSumCubeCubeCubeCube = cubesSumCubeCubeCube * cubes\n        val cubesSumCubeCubeCubeSquare\
    \ = cubesSumCubeCubeSquare * cubesSum\n        val cubesSumCubeCubeCubeCube =\
    \ cubesSumCubeCubeCu", "        val cube = a.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a % 3\n        cube == 0 || cube == 1 || cube ==\
    \ 2", "        val cube = a.toInt\n        cube == cube * cube * cube", "    \
    \    val cube = a.toInt\n        cube == cube * cube * cube", "        val cube\
    \ = a.toInt\n        cube == cube * cube * cube", "        val cube = a.toInt\n\
    \        val cubes = cube.pow(3).toInt\n        cubes % a == 0", "        val\
    \ cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n        cube\
    \ == a.toString.toLong", "        val cube = a.toInt\n        val cubes = mutable.ArrayBuffer(cube)\n\
    \        cubes += cube\n        cubes.contains(cube)", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube * cube\n        cubes % 1 == 0", "        val cube\
    \ = a % 3\n        cube == 0 || cube == 1 || cube == 2", "        val cube = a.toInt\n\
    \        cube == cube * cube * cube", "        val cube = a.toInt\n        val\
    \ cubes = cube.toLong * cube * cube\n        cubes % 1 == 0", "        val cube\
    \ = a.toInt\n        val cubes = cube.toLong * cube * cube\n        cubes % 1\
    \ == 0", "        val cube = a.toInt\n        val cubes = cube.pow(3).toInt\n\
    \        cubes % a == 0", "        val cube = a.toString.toLong * a.toString.toLong\
    \ * a.toString.toLong\n        cube == a.toString.toLong", "        val cube =\
    \ a.toInt\n        val cubes = cube.toLong * cube.toLong * cube.toLong\n     \
    \   cubes % 1 == 0", "        val cube = a.toInt\n        cube == cube * cube\
    \ * cube", "        val cube = a.toInt\n        cube == cube * cube * cube", " \
    \       val cube = a.toInt\n        cube == cube * cube * cube", "        val\
    \ cube = a.toInt\n        val cubes = cube.toInt\n        val cubes3 = cubes *\
    \ cubes\n        val cubes5 = cubes * cubes * cubes\n        val cubes7 = cubes\
    \ * cubes * cubes * cubes\n        val cubes9 = cubes * cubes * cubes * cubes\
    \ * cubes\n        val cubes11 = cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes13 = cubes * cubes * cubes * cubes * cubes * cubes * cubes\n\
    \        val cubes15 = cubes * cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes\n        val cubes17 = cubes * cubes * cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes\n        val cubes19 = cubes * cubes * cubes * cubes *\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val cubes21 =\
    \ cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes23 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\n        val\
    \ cubes25 = cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes\n        val cubes27 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes\n        val cubes29 = cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes31 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes\n        val cubes33 = cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes\n        val cubes35 = cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes\n        val cubes37 = cubes * cubes\
    \ * cubes * cubes * cubes * cubes * cubes * cubes * cubes * cubes * ", "     \
    \   val cube = a.toString.toLong * a.toString.toLong * a.toString.toLong\n   \
    \     cube == a.toString.toLong", "        val cube = a % 3\n        if (cube\
    \ == 0) true\n        else false", "        val cube = a.toInt\n        val cubes\
    \ = mutable.ArrayBuffer(cube)\n        cubes += cube\n        cubes.contains(cube)"]
stop_tokens:
- "\n    }\n"
